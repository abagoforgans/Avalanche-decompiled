contract main {




// =====================  Runtime code  =====================


#
#  - safeTransferFrom(address arg1, address arg2, uint256 arg3, bytes arg4)
#
array of struct stor0;
array of struct stor1;
mapping of address ownerOf;
mapping of uint256 balanceOf;
mapping of address approved;
mapping of uint8 stor5;
mapping of uint256 tokenOfOwnerByIndex;
mapping of uint256 stor7;
array of uint256 tokenByIndex;
mapping of uint256 stor9;
uint256 stor10;
address owner;
uint8 paused; offset 160
uint8 revealed; offset 168
uint8 sub_a0ba1bbf; offset 176
uint8 sub_4f8a1db5; offset 184
uint128 stor12; offset 184
uint128 stor12; offset 176
uint128 stor12; offset 160
address stor12;
array of struct stor13;
array of struct stor14;
array of uint256 stor15;
uint256 cost;
uint256 maxSupply;
uint256 reservedSupply;
uint256 sub_2f98ea73;
uint256 sub_2dfa9d00;
uint256 royalties;
uint256 sub_e02f3993;
uint256 sub_ded8a564;
address stor24;
address stor25;
address stor26;
address stor27;
array of struct sub_84917f4a;
uint256 stor29;
array of uint256 stor6454973039698199198119942482240540643982028891330163610098731264865829167633;
array of uint256 stor6454973039698199198119942482240540643982028891330163610098731264865829167634;
array of address stor6454973039698199198119942482240540643982028891330163610098731264865829167635;
array of uint256 stor6454973039698199198119942482240540643982028891330163610098731264865829167636;

function getApproved(uint256 arg1) {
    require calldata.size - 4 >= 32
    if not ownerOf[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
    return approved[arg1]
}

function cost() {
    return cost
}

function totalSupply() {
    return tokenByIndex.length
}

function sub_2dfa9d00(?) {
    return sub_2dfa9d00
}

function tokenOfOwnerByIndex(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    if arg2 >= balanceOf[address(arg1)]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Enumerable: owner index out of bounds'
    return tokenOfOwnerByIndex[address(arg1)][arg2]
}

function sub_2f98ea73(?) {
    return sub_2f98ea73
}

function reservedSupply() {
    return reservedSupply
}

function tokenByIndex(uint256 arg1) {
    require calldata.size - 4 >= 32
    if arg1 >= tokenByIndex.length:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Enumerable: global index out of bounds'
    return tokenByIndex[arg1]
}

function sub_4f8a1db5(?) {
    return bool(sub_4f8a1db5)
}

function revealed() {
    return bool(revealed)
}

function paused() {
    return bool(paused)
}

function ownerOf(uint256 arg1) {
    require calldata.size - 4 >= 32
    if not ownerOf[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    return ownerOf[arg1]
}

function balanceOf(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    return balanceOf[address(arg1)]
}

function sub_84917f4a(?) {
    require calldata.size - 4 >= 32
    idx = 0
    while idx < sub_84917f4a.length:
        mem[0] = 28
        if sub_84917f4a[idx].field_0 == arg1:
            if idx >= sub_84917f4a.length:
                revert with 0, 50
            return sub_84917f4a[idx].field_0, sub_84917f4a[idx].field_256, sub_84917f4a[idx].field_512, sub_84917f4a[idx].field_768
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    revert with 0, 'ERC721 Marketplace: Token is not listed'
}

function owner() {
    return owner
}

function sub_a0ba1bbf(?) {
    return bool(sub_a0ba1bbf)
}

function maxSupply() {
    return maxSupply
}

function sub_ded8a564(?) {
    return sub_ded8a564
}

function sub_e02f3993(?) {
    return sub_e02f3993
}

function isApprovedForAll(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return bool(stor5[address(arg1)][address(arg2)])
}

function royalties() {
    return royalties
}

function setCost(uint256 arg1) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    cost = arg1
}

function sub_1beb585b(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_ded8a564 = arg1
}

function sub_4e9be749(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_2f98ea73 = arg1
}

function sub_56fcf95b(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_e02f3993 = arg1
}

function sub_8e6fe1a3(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_2dfa9d00 = arg1
}

function flipPausedState() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    Mask(96, 0, stor12.field_160) = Mask(96, 0, not paused)
}

function sub_0798e5c9(?) {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    Mask(72, 0, stor12.field_184) = Mask(72, 0, not sub_4f8a1db5)
}

function sub_a17bd783(?) {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    Mask(80, 0, stor12.field_176) = Mask(80, 0, not sub_a0ba1bbf)
}

function setRoyalties(uint256 arg1) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    royalties = arg1
}

function setMaxSupply(uint256 arg1) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    maxSupply = arg1
}

function setReservedSupply(uint256 arg1) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    reservedSupply = arg1
}

function sub_4501b558(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor26 = address(arg1)
}

function sub_dd18ff50(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor27 = address(arg1)
    address(stor12.field_0) = address(arg1)
}

function sub_7ef6f656(?) {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor25 = address(arg1)
    stor24 = address(arg2)
}

function isTokenListed(uint256 arg1) {
    require calldata.size - 4 >= 32
    idx = 0
    while idx < sub_84917f4a.length:
        mem[0] = 28
        if sub_84917f4a[idx].field_0 == arg1:
            return 1, idx
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    return 0
}

function setApprovalForAll(address arg1, bool arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if msg.sender == arg1:
        revert with 0, 'ERC721: approve to caller'
    stor5[address(msg.sender)][address(arg1)] = uint8(arg2)
    emit ApprovalForAll(arg2, msg.sender, arg1);
}

function transferOwnership(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    owner = arg1
    emit OwnershipTransferred(owner, arg1);
}

function royaltyInfo(uint256 arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    if royalties > !sub_e02f3993:
        revert with 0, 17
    if royalties + sub_e02f3993 > !sub_ded8a564:
        revert with 0, 17
    if arg2 and royalties + sub_e02f3993 + sub_ded8a564 > -1 / arg2:
        revert with 0, 17
    return address(this.address), (royalties * arg2) + (sub_e02f3993 * arg2) + (sub_ded8a564 * arg2) / 10000
}

function sub_e65f9cf4(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call address(stor12.field_0).0xa9059cbb with:
         gas gas_remaining wei
        args msg.sender, arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function supportsInterface(bytes4 arg1) {
    require calldata.size - 4 >= 32
    require arg1 == Mask(32, 224, arg1)
    if 0x2a55205a00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    if 0x780e9d6300000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    if 0x80ac58cd00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    if 0x5b5e139f00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    return (Mask(32, 224, arg1) == 0x1ffc9a700000000000000000000000000000000000000000000000000000000)
}

function emergencyWithdraw() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call owner with:
       value eth.balance(this.address) wei
         gas gas_remaining wei
    if not return_data.size:
        if not ext_call.success:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        42,
                        0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261,
                        'sfer funds' << 176
    else:
        if not ext_call.success:
            revert with 0, 32, 42, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds' << 176
    ('bool', 'ext_call.success')
}

function approve(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not ownerOf[arg2]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if arg1 == ownerOf[arg2]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approval to current owner'
    if ownerOf[arg2] != msg.sender:
        if not stor5[stor2[arg2]][address(msg.sender)]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'ERC721: approve caller is not owner nor approved for all'
    approved[arg2] = arg1
    if not ownerOf[arg2]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    emit Approval(ownerOf[arg2], arg1, arg2);
}

function getListings() {
    mem[64] = (32 * sub_84917f4a.length) + 128
    mem[96] = sub_84917f4a.length
    s = 128
    idx = 0
    while idx < sub_84917f4a.length:
        mem[0] = 28
        _13 = mem[64]
        mem[64] = mem[64] + 128
        mem[_13] = sub_84917f4a[idx].field_0
        mem[_13 + 32] = sub_84917f4a[idx].field_256
        mem[_13 + 64] = sub_84917f4a[idx].field_512
        mem[_13 + 96] = sub_84917f4a[idx].field_768
        mem[s] = _13
        s = s + 32
        idx = idx + 1
        continue 
    _14 = mem[64]
    mem[mem[64]] = 32
    _15 = mem[96]
    mem[mem[64] + 32] = mem[96]
    idx = 0
    s = mem[64] + 64
    t = 128
    while idx < _15:
        _22 = mem[t]
        mem[s] = mem[mem[t]]
        mem[s + 32] = mem[_22 + 32]
        mem[s + 64] = mem[_22 + 76 len 20]
        mem[s + 96] = mem[_22 + 96]
        idx = idx + 1
        s = s + 128
        t = t + 32
        continue 
    return memory
      from mem[64]
       len _14 + (128 * _15) + -mem[64] + 64
}

function sub_aff72141(?) {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require calldata.size > arg1 + 35
    if arg1.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg1.length)) + 97 < 96 or ceil32(ceil32(arg1.length)) + 97 > test266151307():
        revert with 0, 65
    require arg1 + arg1.length + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if bool(stor15.length):
        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
            revert with 0, 34
        if arg1.length:
            stor15[].field_0 = Array(len=arg1.length, data=arg1[all])
        else:
            stor15.length = 0
            idx = 0
            while (uint255(stor15.length) * 0.5) + 31 / 32 > idx:
                stor15[idx].field_0 = 0
                idx = idx + 1
                continue 
    else:
        if bool(stor15.length) == stor15.length.field_1 < 32:
            revert with 0, 34
        if arg1.length:
            stor15[].field_0 = Array(len=arg1.length, data=arg1[all])
        else:
            stor15.length = 0
            idx = 0
            while stor15.length.field_1 + 31 / 32 > idx:
                stor15[idx].field_0 = 0
                idx = idx + 1
                continue 
}

function setBaseURI(string arg1) {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require calldata.size > arg1 + 35
    if arg1.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg1.length)) + 97 < 96 or ceil32(ceil32(arg1.length)) + 97 > test266151307():
        revert with 0, 65
    require arg1 + arg1.length + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if bool(stor14.length):
        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
            revert with 0, 34
        if arg1.length:
            stor14[].field_0 = Array(len=arg1.length, data=arg1[all])
        else:
            stor14.length = 0
            idx = 0
            while (uint255(stor14.length) * 0.5) + 31 / 32 > idx:
                stor14[idx].field_0 = 0
                idx = idx + 1
                continue 
    else:
        if bool(stor14.length) == stor14.length.field_1 < 32:
            revert with 0, 34
        if arg1.length:
            stor14[].field_0 = Array(len=arg1.length, data=arg1[all])
        else:
            stor14.length = 0
            idx = 0
            while stor14.length.field_1 + 31 / 32 > idx:
                stor14[idx].field_0 = 0
                idx = idx + 1
                continue 
}

function setUnrevealedURI(string arg1) {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require calldata.size > arg1 + 35
    if arg1.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg1.length)) + 97 < 96 or ceil32(ceil32(arg1.length)) + 97 > test266151307():
        revert with 0, 65
    require arg1 + arg1.length + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if bool(stor13.length):
        if bool(stor13.length) == uint255(stor13.length) * 0.5 < 32:
            revert with 0, 34
        if arg1.length:
            stor13[].field_0 = Array(len=arg1.length, data=arg1[all])
        else:
            stor13.length = 0
            idx = 0
            while (uint255(stor13.length) * 0.5) + 31 / 32 > idx:
                stor13[idx].field_0 = 0
                idx = idx + 1
                continue 
    else:
        if bool(stor13.length) == stor13.length.field_1 < 32:
            revert with 0, 34
        if arg1.length:
            stor13[].field_0 = Array(len=arg1.length, data=arg1[all])
        else:
            stor13.length = 0
            idx = 0
            while stor13.length.field_1 + 31 / 32 > idx:
                stor13[idx].field_0 = 0
                idx = idx + 1
                continue 
}

function reveal(string arg1) {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require calldata.size > arg1 + 35
    if arg1.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg1.length)) + 97 < 96 or ceil32(ceil32(arg1.length)) + 97 > test266151307():
        revert with 0, 65
    require arg1 + arg1.length + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    revealed = 1
    if bool(stor14.length):
        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
            revert with 0, 34
        if arg1.length:
            stor14[].field_0 = Array(len=arg1.length, data=arg1[all])
        else:
            stor14.length = 0
            idx = 0
            while (uint255(stor14.length) * 0.5) + 31 / 32 > idx:
                stor14[idx].field_0 = 0
                idx = idx + 1
                continue 
    else:
        if bool(stor14.length) == stor14.length.field_1 < 32:
            revert with 0, 34
        if arg1.length:
            stor14[].field_0 = Array(len=arg1.length, data=arg1[all])
        else:
            stor14.length = 0
            idx = 0
            while stor14.length.field_1 + 31 / 32 > idx:
                stor14[idx].field_0 = 0
                idx = idx + 1
                continue 
}

function createListing(uint256 arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    if stor10 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor10 = 2
    if not sub_a0ba1bbf:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'ERC721 Marketplace: Listings are currently disabled'
    if arg2 <= 0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721 Marketplace: Invalid listing price'
    if not ownerOf[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg1] != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721 Marketplace: Caller is not the owner'
    idx = 0
    while idx < sub_84917f4a.length:
        mem[0] = 28
        if sub_84917f4a[idx].field_0 == arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721 Marketplace: Token is already listed'
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    sub_84917f4a.length++
    storE456[stor28.length] = arg1
    storE456[stor28.length] = arg2
    storE456[stor28.length] = msg.sender
    storE456[stor28.length] = block.timestamp
    emit 0xda5118e1: arg2, arg1, msg.sender
    stor10 = 1
}

function sub_aec6e273(?) {
    require calldata.size - 4 >= 32
    if stor10 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor10 = 2
    idx = 0
    while idx < sub_84917f4a.length:
        mem[0] = 28
        if sub_84917f4a[idx].field_0 != arg1:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        if idx >= sub_84917f4a.length:
            revert with 0, 50
        if sub_84917f4a[idx].field_512 != msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721 Marketplace: Caller is not the owner'
        if sub_84917f4a.length < 1:
            revert with 0, 17
        if sub_84917f4a.length - 1 >= sub_84917f4a.length:
            revert with 0, 50
        if idx >= sub_84917f4a.length:
            revert with 0, 50
        sub_84917f4a[idx].field_0 = sub_84917f4a[sub_84917f4a.length - 1].field_0
        sub_84917f4a[idx].field_256 = sub_84917f4a[sub_84917f4a.length - 1].field_256
        sub_84917f4a[idx].field_512 = sub_84917f4a[sub_84917f4a.length - 1].field_512
        sub_84917f4a[idx].field_768 = sub_84917f4a[sub_84917f4a.length - 1].field_768
        if not sub_84917f4a.length:
            revert with 0, 49
        sub_84917f4a[sub_84917f4a.length - 1].field_0 = 0
        sub_84917f4a[sub_84917f4a.length - 1].field_256 = 0
        sub_84917f4a[sub_84917f4a.length - 1].field_512 = 0
        sub_84917f4a[sub_84917f4a.length - 1].field_768 = 0
        sub_84917f4a.length--
        emit 0xd61f1a8b: arg1
        stor10 = 1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721 Marketplace: Token is not listed'
}

function sub_a5760553(?) {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    staticcall address(stor12.field_0).0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
        revert with 0, 17
    if 100 * ext_call.return_data[0] / 100000 > 0xc4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b0:
        revert with 0, 17
    call address(stor12.field_0).0xa9059cbb with:
         gas gas_remaining wei
        args stor25, 333 * 100 * ext_call.return_data[0] / 100000
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if 100 * ext_call.return_data[0] / 100000 > 0xc4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b0:
        revert with 0, 17
    call address(stor12.field_0).0xa9059cbb with:
         gas gas_remaining wei
        args stor24, 333 * 100 * ext_call.return_data[0] / 100000
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if 100 * ext_call.return_data[0] / 100000 > 0xc4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b0:
        revert with 0, 17
    call address(stor12.field_0).0xa9059cbb with:
         gas gas_remaining wei
        args owner, 333 * 100 * ext_call.return_data[0] / 100000
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function withdraw() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if eth.balance(this.address) > 0x1999999999999999999999999999999999999999999999999999999999999999:
        revert with 0, 17
    if 10 * eth.balance(this.address) / 100 > 0x2492492492492492492492492492492492492492492492492492492492492492:
        revert with 0, 17
    call stor25 with:
       value 7 * 10 * eth.balance(this.address) / 100 wei
         gas gas_remaining wei
    if not return_data.size:
        if not ext_call.success:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        63,
                        0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261,
                        'sfer funds to community wallet!'
        call owner with:
           value eth.balance(this.address) wei
             gas gas_remaining wei
        if not return_data.size:
            if not ext_call.success:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            63,
                            0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261,
                            'sfer funds to the owner wallet!'
        else:
            if not ext_call.success:
                revert with 0, 32, 63, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to the owner wallet!'
    else:
        if not ext_call.success:
            revert with 0, 32, 63, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to community wallet!'
        call owner with:
           value eth.balance(this.address) wei
             gas gas_remaining wei
        if not ext_call.success:
            revert with 0, 32, 63, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to the owner wallet!'
    ('bool', 'ext_call.success')
}

function transferFrom(address arg1, address arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    if not ownerOf[arg3]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: operator query for nonexistent token'
    if not ownerOf[arg3]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg3] != msg.sender:
        if not ownerOf[arg3]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
        if approved[arg3] != msg.sender:
            if not stor5[stor2[arg3]][address(msg.sender)]:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: transfer caller is not owner nor approved'
    if not ownerOf[arg3]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg3] != arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: transfer from incorrect owner'
    if not arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: transfer to the zero address'
    idx = 0
    while idx < sub_84917f4a.length:
        mem[0] = 28
        if sub_84917f4a[idx].field_0 == arg3:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'ERC721 Marketplace: Unable to transfer a listed token'
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    if not arg1:
        stor9[arg3] = tokenByIndex.length
        tokenByIndex.length++
        tokenByIndex[tokenByIndex.length] = arg3
    else:
        if arg1 != arg2:
            if not arg1:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
            if balanceOf[address(arg1)] < 1:
                revert with 0, 17
            if balanceOf[address(arg1)] - 1 != stor7[arg3]:
                tokenOfOwnerByIndex[address(arg1)][stor7[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor3[address(arg1)] - 1]
                stor7[stor6[address(arg1)][stor3[address(arg1)] - 1]] = stor7[arg3]
            stor7[arg3] = 0
            tokenOfOwnerByIndex[address(arg1)][stor3[address(arg1)] - 1] = 0
    if arg2:
        if arg2 != arg1:
            if not arg2:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
            tokenOfOwnerByIndex[address(arg2)][stor3[address(arg2)]] = arg3
            stor7[arg3] = balanceOf[address(arg2)]
    else:
        if tokenByIndex.length < 1:
            revert with 0, 17
        if tokenByIndex.length - 1 >= tokenByIndex.length:
            revert with 0, 50
        if stor9[arg3] >= tokenByIndex.length:
            revert with 0, 50
        tokenByIndex[stor9[arg3]] = tokenByIndex[tokenByIndex.length]
        stor9[stor8[stor8.length]] = stor9[arg3]
        stor9[arg3] = 0
        if not tokenByIndex.length:
            revert with 0, 49
        tokenByIndex[tokenByIndex.length] = 0
        tokenByIndex.length--
    approved[arg3] = 0
    if not ownerOf[arg3]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    emit Approval(ownerOf[arg3], 0, arg3);
    if balanceOf[address(arg1)] < 1:
        revert with 0, 17
    balanceOf[address(arg1)]--
    if balanceOf[address(arg2)] > -2:
        revert with 0, 17
    balanceOf[address(arg2)]++
    ownerOf[arg3] = arg2
    emit Transfer(arg1, arg2, arg3);
}

function name() {
    if bool(stor0.length):
        if bool(stor0.length) == uint255(stor0.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor0.length):
            if bool(stor0.length) == uint255(stor0.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor0.length):
                if 31 < uint255(stor0.length) * 0.5:
                    mem[128] = uint256(stor0.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor0.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor0[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor0.length), data=mem[128 len ceil32(uint255(stor0.length) * 0.5)])
                mem[128] = 256 * stor0.length.field_8
        else:
            if bool(stor0.length) == stor0.length.field_1 < 32:
                revert with 0, 34
            if stor0.length.field_1:
                if 31 < stor0.length.field_1:
                    mem[128] = uint256(stor0.field_0)
                    idx = 128
                    s = 0
                    while stor0.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor0[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor0.length), data=mem[128 len ceil32(uint255(stor0.length) * 0.5)])
                mem[128] = 256 * stor0.length.field_8
        mem[ceil32(uint255(stor0.length) * 0.5) + 192 len ceil32(uint255(stor0.length) * 0.5)] = mem[128 len ceil32(uint255(stor0.length) * 0.5)]
        if ceil32(uint255(stor0.length) * 0.5) > uint255(stor0.length) * 0.5:
            mem[(uint255(stor0.length) * 0.5) + ceil32(uint255(stor0.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor0.length), data=mem[128 len ceil32(uint255(stor0.length) * 0.5)], mem[(2 * ceil32(uint255(stor0.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor0.length) * 0.5)]), 
    if bool(stor0.length) == stor0.length.field_1 < 32:
        revert with 0, 34
    if bool(stor0.length):
        if bool(stor0.length) == uint255(stor0.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor0.length):
            if 31 < uint255(stor0.length) * 0.5:
                mem[128] = uint256(stor0.field_0)
                idx = 128
                s = 0
                while (uint255(stor0.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor0[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor0.length % 128, data=mem[128 len ceil32(stor0.length.field_1)])
            mem[128] = 256 * stor0.length.field_8
    else:
        if bool(stor0.length) == stor0.length.field_1 < 32:
            revert with 0, 34
        if stor0.length.field_1:
            if 31 < stor0.length.field_1:
                mem[128] = uint256(stor0.field_0)
                idx = 128
                s = 0
                while stor0.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor0[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor0.length % 128, data=mem[128 len ceil32(stor0.length.field_1)])
            mem[128] = 256 * stor0.length.field_8
    mem[ceil32(stor0.length.field_1) + 192 len ceil32(stor0.length.field_1)] = mem[128 len ceil32(stor0.length.field_1)]
    if ceil32(stor0.length.field_1) > stor0.length.field_1:
        mem[stor0.length.field_1 + ceil32(stor0.length.field_1) + 192] = 0
    return Array(len=stor0.length % 128, data=mem[128 len ceil32(stor0.length.field_1)], mem[(2 * ceil32(stor0.length.field_1)) + 192 len 2 * ceil32(stor0.length.field_1)]), 
}

function symbol() {
    if bool(stor1.length):
        if bool(stor1.length) == uint255(stor1.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor1.length):
            if bool(stor1.length) == uint255(stor1.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor1.length):
                if 31 < uint255(stor1.length) * 0.5:
                    mem[128] = uint256(stor1.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor1.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor1[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor1.length), data=mem[128 len ceil32(uint255(stor1.length) * 0.5)])
                mem[128] = 256 * stor1.length.field_8
        else:
            if bool(stor1.length) == stor1.length.field_1 < 32:
                revert with 0, 34
            if stor1.length.field_1:
                if 31 < stor1.length.field_1:
                    mem[128] = uint256(stor1.field_0)
                    idx = 128
                    s = 0
                    while stor1.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor1[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor1.length), data=mem[128 len ceil32(uint255(stor1.length) * 0.5)])
                mem[128] = 256 * stor1.length.field_8
        mem[ceil32(uint255(stor1.length) * 0.5) + 192 len ceil32(uint255(stor1.length) * 0.5)] = mem[128 len ceil32(uint255(stor1.length) * 0.5)]
        if ceil32(uint255(stor1.length) * 0.5) > uint255(stor1.length) * 0.5:
            mem[(uint255(stor1.length) * 0.5) + ceil32(uint255(stor1.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor1.length), data=mem[128 len ceil32(uint255(stor1.length) * 0.5)], mem[(2 * ceil32(uint255(stor1.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor1.length) * 0.5)]), 
    if bool(stor1.length) == stor1.length.field_1 < 32:
        revert with 0, 34
    if bool(stor1.length):
        if bool(stor1.length) == uint255(stor1.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor1.length):
            if 31 < uint255(stor1.length) * 0.5:
                mem[128] = uint256(stor1.field_0)
                idx = 128
                s = 0
                while (uint255(stor1.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor1[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor1.length % 128, data=mem[128 len ceil32(stor1.length.field_1)])
            mem[128] = 256 * stor1.length.field_8
    else:
        if bool(stor1.length) == stor1.length.field_1 < 32:
            revert with 0, 34
        if stor1.length.field_1:
            if 31 < stor1.length.field_1:
                mem[128] = uint256(stor1.field_0)
                idx = 128
                s = 0
                while stor1.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor1[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor1.length % 128, data=mem[128 len ceil32(stor1.length.field_1)])
            mem[128] = 256 * stor1.length.field_8
    mem[ceil32(stor1.length.field_1) + 192 len ceil32(stor1.length.field_1)] = mem[128 len ceil32(stor1.length.field_1)]
    if ceil32(stor1.length.field_1) > stor1.length.field_1:
        mem[stor1.length.field_1 + ceil32(stor1.length.field_1) + 192] = 0
    return Array(len=stor1.length % 128, data=mem[128 len ceil32(stor1.length.field_1)], mem[(2 * ceil32(stor1.length.field_1)) + 192 len 2 * ceil32(stor1.length.field_1)]), 
}

function safeTransferFrom(address arg1, address arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: operator query for nonexistent token'
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg3] != msg.sender:
        if not ownerOf[arg3]:
            revert with 0, 'ERC721: approved query for nonexistent token'
        if approved[arg3] != msg.sender:
            if not stor5[stor2[arg3]][address(msg.sender)]:
                revert with 0, 'ERC721: transfer caller is not owner nor approved'
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg3] != arg1:
        revert with 0, 'ERC721: transfer from incorrect owner'
    if not arg2:
        revert with 0, 'ERC721: transfer to the zero address'
    idx = 0
    while idx < sub_84917f4a.length:
        mem[0] = 28
        if sub_84917f4a[idx].field_0 == arg3:
            revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    if not arg1:
        stor9[arg3] = tokenByIndex.length
        tokenByIndex.length++
        tokenByIndex[tokenByIndex.length] = arg3
    else:
        if arg1 != arg2:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if balanceOf[address(arg1)] < 1:
                revert with 0, 17
            if balanceOf[address(arg1)] - 1 != stor7[arg3]:
                tokenOfOwnerByIndex[address(arg1)][stor7[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor3[address(arg1)] - 1]
                stor7[stor6[address(arg1)][stor3[address(arg1)] - 1]] = stor7[arg3]
            stor7[arg3] = 0
            tokenOfOwnerByIndex[address(arg1)][stor3[address(arg1)] - 1] = 0
    if arg2:
        if arg2 != arg1:
            if not arg2:
                revert with 0, 'ERC721: balance query for the zero address'
            tokenOfOwnerByIndex[address(arg2)][stor3[address(arg2)]] = arg3
            stor7[arg3] = balanceOf[address(arg2)]
    else:
        if tokenByIndex.length < 1:
            revert with 0, 17
        if tokenByIndex.length - 1 >= tokenByIndex.length:
            revert with 0, 50
        if stor9[arg3] >= tokenByIndex.length:
            revert with 0, 50
        tokenByIndex[stor9[arg3]] = tokenByIndex[tokenByIndex.length]
        stor9[stor8[stor8.length]] = stor9[arg3]
        stor9[arg3] = 0
        if not tokenByIndex.length:
            revert with 0, 49
        tokenByIndex[tokenByIndex.length] = 0
        tokenByIndex.length--
    approved[arg3] = 0
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    emit Approval(ownerOf[arg3], 0, arg3);
    if balanceOf[address(arg1)] < 1:
        revert with 0, 17
    balanceOf[address(arg1)]--
    if balanceOf[address(arg2)] > -2:
        revert with 0, 17
    balanceOf[address(arg2)]++
    ownerOf[arg3] = arg2
    emit Transfer(arg1, arg2, arg3);
    if ext_code.size(arg2):
        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
             gas gas_remaining wei
            args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
        if not ext_call.success:
            if not return_data.size:
                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            if not return_data.size:
                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
}

function sub_3912fc85(?) payable {
    mem[64] = 96
    require calldata.size - 4 >= 32
    if stor10 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor10 = 2
    idx = 0
    while idx < sub_84917f4a.length:
        mem[0] = 28
        if sub_84917f4a[idx].field_0 != arg1:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        if idx >= sub_84917f4a.length:
            revert with 0, 50
        mem[128] = sub_84917f4a[idx].field_256
        mem[160] = sub_84917f4a[idx].field_512
        mem[192] = sub_84917f4a[idx].field_768
        if sub_84917f4a[idx].field_512 == msg.sender:
            revert with 0, 'ERC721 Marketplace: Buyer and seller must be be different addresses'
        if msg.value < sub_84917f4a[idx].field_256:
            revert with 0, 'ERC721 Marketplace: Insufficient funds'
        if msg.value and royalties > -1 / msg.value:
            revert with 0, 17
        if msg.value and sub_ded8a564 > -1 / msg.value:
            revert with 0, 17
        if msg.value and sub_e02f3993 > -1 / msg.value:
            revert with 0, 17
        if sub_84917f4a.length < 1:
            revert with 0, 17
        if sub_84917f4a.length - 1 >= sub_84917f4a.length:
            revert with 0, 50
        if idx >= sub_84917f4a.length:
            revert with 0, 50
        sub_84917f4a[idx].field_0 = sub_84917f4a[sub_84917f4a.length - 1].field_0
        sub_84917f4a[idx].field_256 = sub_84917f4a[sub_84917f4a.length - 1].field_256
        sub_84917f4a[idx].field_512 = sub_84917f4a[sub_84917f4a.length - 1].field_512
        sub_84917f4a[idx].field_768 = sub_84917f4a[sub_84917f4a.length - 1].field_768
        if not sub_84917f4a.length:
            revert with 0, 49
        sub_84917f4a[sub_84917f4a.length - 1].field_0 = 0
        sub_84917f4a[sub_84917f4a.length - 1].field_256 = 0
        sub_84917f4a[sub_84917f4a.length - 1].field_512 = 0
        sub_84917f4a[sub_84917f4a.length - 1].field_768 = 0
        sub_84917f4a.length--
        emit 0x3d5eb834: msg.value, arg1, sub_84917f4a[idx].field_512, msg.sender
        mem[224] = 0
        if not ownerOf[arg1]:
            revert with 0, 'ERC721: owner query for nonexistent token'
        if ownerOf[arg1] != sub_84917f4a[idx].field_512:
            revert with 0, 'ERC721: transfer from incorrect owner'
        if not msg.sender:
            revert with 0, 'ERC721: transfer to the zero address'
        s = 0
        while s < sub_84917f4a.length:
            mem[0] = 28
            if sub_84917f4a[s].field_0 == arg1:
                revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
            if s == -1:
                revert with 0, 17
            s = s + 1
            continue 
        if not sub_84917f4a[idx].field_512:
            stor9[arg1] = tokenByIndex.length
            tokenByIndex.length++
            tokenByIndex[tokenByIndex.length] = arg1
        else:
            if sub_84917f4a[idx].field_512 != msg.sender:
                if not sub_84917f4a[idx].field_512:
                    revert with 0, 'ERC721: balance query for the zero address'
                if balanceOf[stor28[idx].field_512] < 1:
                    revert with 0, 17
                if balanceOf[stor28[idx].field_512] - 1 != stor7[arg1]:
                    tokenOfOwnerByIndex[stor28[idx].field_512][stor7[arg1]] = tokenOfOwnerByIndex[stor28[idx].field_512][stor3[stor28[idx].field_512] - 1]
                    stor7[stor6[stor28[idx].field_512][stor3[stor28[idx].field_512] - 1]] = stor7[arg1]
                stor7[arg1] = 0
                tokenOfOwnerByIndex[stor28[idx].field_512][stor3[stor28[idx].field_512] - 1] = 0
        if msg.sender:
            if sub_84917f4a[idx].field_512 != msg.sender:
                if not msg.sender:
                    revert with 0, 'ERC721: balance query for the zero address'
                tokenOfOwnerByIndex[address(msg.sender)][stor3[address(msg.sender)]] = arg1
                stor7[arg1] = balanceOf[address(msg.sender)]
        else:
            if tokenByIndex.length < 1:
                revert with 0, 17
            if tokenByIndex.length - 1 >= tokenByIndex.length:
                revert with 0, 50
            if stor9[arg1] >= tokenByIndex.length:
                revert with 0, 50
            tokenByIndex[stor9[arg1]] = tokenByIndex[tokenByIndex.length]
            stor9[stor8[stor8.length]] = stor9[arg1]
            stor9[arg1] = 0
            if not tokenByIndex.length:
                revert with 0, 49
            tokenByIndex[tokenByIndex.length] = 0
            tokenByIndex.length--
        approved[arg1] = 0
        if not ownerOf[arg1]:
            revert with 0, 'ERC721: owner query for nonexistent token'
        emit Approval(ownerOf[arg1], 0, arg1);
        if balanceOf[stor28[idx].field_512] < 1:
            revert with 0, 17
        balanceOf[stor28[idx].field_512]--
        if balanceOf[address(msg.sender)] > -2:
            revert with 0, 17
        balanceOf[address(msg.sender)]++
        ownerOf[arg1] = msg.sender
        emit Transfer(sub_84917f4a[idx].field_512, msg.sender, arg1);
        if ext_code.size(msg.sender):
            mem[256] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
            mem[260] = msg.sender
            mem[292] = sub_84917f4a[idx].field_512
            mem[324] = arg1
            mem[356] = 128
            mem[388] = 0
            s = 0
            while s < 0:
                mem[s + 420] = mem[s + 256]
                s = s + 32
                continue 
            call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                 gas gas_remaining wei
                args msg.sender, sub_84917f4a[idx].field_512, arg1, 128, 0
            mem[256] = ext_call.return_data[0]
            if not ext_call.success:
                if not return_data.size:
                    if not sub_84917f4a[idx].field_0:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    revert with memory
                      from 128
                       len sub_84917f4a[idx].field_0
                if not return_data.size:
                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
            if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        if msg.value * royalties / 10000 > !(msg.value * sub_e02f3993 / 10000):
            revert with 0, 17
        if (msg.value * royalties / 10000) + (msg.value * sub_e02f3993 / 10000) > !(msg.value * sub_ded8a564 / 10000):
            revert with 0, 17
        if msg.value < (msg.value * royalties / 10000) + (msg.value * sub_e02f3993 / 10000) + (msg.value * sub_ded8a564 / 10000):
            revert with 0, 17
        call sub_84917f4a[idx].field_512 with:
           value msg.value - (msg.value * royalties / 10000) - (msg.value * sub_e02f3993 / 10000) - (msg.value * sub_ded8a564 / 10000) wei
             gas gas_remaining wei
        if not ext_call.success:
            revert with 0, 32, 42, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds' << 176
        call stor25 with:
           value msg.value * sub_e02f3993 / 10000 wei
             gas gas_remaining wei
        if not ext_call.success:
            revert with 0, 32, 63, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to community address'
        call stor24 with:
           value msg.value * sub_ded8a564 / 10000 wei
             gas gas_remaining wei
        if not ext_call.success:
            revert with 0, 32, 60, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to artist address'
        call owner with:
           value msg.value * royalties / 10000 wei
             gas gas_remaining wei
        if not ext_call.success:
            revert with 0, 32, 59, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to owner address'
        stor10 = 1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721 Marketplace: Token is not listed'
}

function sub_4bbedc29(?) payable {
    mem[64] = 96
    require not msg.value
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if sub_2f98ea73 > arg1:
        revert with 0, 'Token already airdropped!'
    if arg1 > 4444:
        revert with 0, 'Last token must be 4444 or less.'
    idx = sub_2f98ea73
    while idx <= arg1:
        stor29++
        mem[mem[64] + 4] = idx
        staticcall stor26.0x6352211e with:
                gas gas_remaining wei
               args idx
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _137 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _138 = mem[_137]
        require mem[_137] == mem[_137 + 12 len 20]
        _139 = mem[64]
        mem[64] = mem[64] + 32
        mem[_139] = 0
        if not address(_138):
            revert with 0, 'ERC721: mint to the zero address'
        if ownerOf[stor29]:
            revert with 0, 'ERC721: token already minted'
        s = 0
        while s < sub_84917f4a.length:
            mem[0] = 28
            if sub_84917f4a[s].field_0 == stor29:
                revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
            if s == -1:
                revert with 0, 17
            s = s + 1
            continue 
        stor9[stor29] = tokenByIndex.length
        tokenByIndex.length++
        tokenByIndex[tokenByIndex.length] = stor29
        if address(_138):
            if not address(_138):
                if balanceOf[address(_138)] > -2:
                    revert with 0, 17
                balanceOf[address(_138)]++
                mem[0] = stor29
                mem[32] = 2
                ownerOf[stor29] = address(_138)
                emit Transfer(0, address(_138), stor29);
                if ext_code.size(address(_138)):
                    _283 = mem[64]
                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = msg.sender
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = stor29
                    mem[mem[64] + 100] = 128
                    _285 = mem[_139]
                    mem[mem[64] + 132] = mem[_139]
                    s = 0
                    while s < _285:
                        mem[s + mem[64] + 164] = mem[s + _139 + 32]
                        s = s + 32
                        continue 
                    if ceil32(_285) <= _285:
                        call address(_138).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(_285) + _283 + -mem[64] + 160]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _390 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_390] == Mask(32, 224, mem[_390])
                        if Mask(32, 224, mem[_390]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        mem[_285 + _283 + 164] = 0
                        call address(_138).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(_285) + _283 + -mem[64] + 160]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _391 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_391] == Mask(32, 224, mem[_391])
                        if Mask(32, 224, mem[_391]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if not address(_138):
                    revert with 0, 'ERC721: balance query for the zero address'
                tokenOfOwnerByIndex[address(_138)][stor3[address(_138)]] = stor29
                stor7[stor29] = balanceOf[address(_138)]
                if balanceOf[address(_138)] > -2:
                    revert with 0, 17
                balanceOf[address(_138)]++
                mem[0] = stor29
                mem[32] = 2
                ownerOf[stor29] = address(_138)
                emit Transfer(0, address(_138), stor29);
                if ext_code.size(address(_138)):
                    _291 = mem[64]
                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = msg.sender
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = stor29
                    mem[mem[64] + 100] = 128
                    _292 = mem[_139]
                    mem[mem[64] + 132] = mem[_139]
                    s = 0
                    while s < _292:
                        mem[s + mem[64] + 164] = mem[s + _139 + 32]
                        s = s + 32
                        continue 
                    if ceil32(_292) <= _292:
                        call address(_138).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(_292) + _291 + -mem[64] + 160]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _392 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_392] == Mask(32, 224, mem[_392])
                        if Mask(32, 224, mem[_392]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        mem[_292 + _291 + 164] = 0
                        call address(_138).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(_292) + _291 + -mem[64] + 160]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _393 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_393] == Mask(32, 224, mem[_393])
                        if Mask(32, 224, mem[_393]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        else:
            if tokenByIndex.length < 1:
                revert with 0, 17
            if tokenByIndex.length - 1 >= tokenByIndex.length:
                revert with 0, 50
            if stor9[stor29] >= tokenByIndex.length:
                revert with 0, 50
            tokenByIndex[stor9[stor29]] = tokenByIndex[tokenByIndex.length]
            stor9[stor8[stor8.length]] = stor9[stor29]
            stor9[stor29] = 0
            if not tokenByIndex.length:
                revert with 0, 49
            tokenByIndex[tokenByIndex.length] = 0
            tokenByIndex.length--
            if balanceOf[address(_138)] > -2:
                revert with 0, 17
            balanceOf[address(_138)]++
            mem[0] = stor29
            mem[32] = 2
            ownerOf[stor29] = address(_138)
            emit Transfer(0, address(_138), stor29);
            if ext_code.size(address(_138)):
                _293 = mem[64]
                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = msg.sender
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = stor29
                mem[mem[64] + 100] = 128
                _296 = mem[_139]
                mem[mem[64] + 132] = mem[_139]
                s = 0
                while s < _296:
                    mem[s + mem[64] + 164] = mem[s + _139 + 32]
                    s = s + 32
                    continue 
                if ceil32(_296) <= _296:
                    call address(_138).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(_296) + _293 + -mem[64] + 160]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        if not return_data.size:
                            if not mem[96]:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with memory
                              from 128
                               len mem[96]
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    _394 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_394] == Mask(32, 224, mem[_394])
                    if Mask(32, 224, mem[_394]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    mem[_296 + _293 + 164] = 0
                    call address(_138).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(_296) + _293 + -mem[64] + 160]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        if not return_data.size:
                            if not mem[96]:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with memory
                              from 128
                               len mem[96]
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    _395 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_395] == Mask(32, 224, mem[_395])
                    if Mask(32, 224, mem[_395]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        if reservedSupply < 1:
            revert with 0, 17
        reservedSupply--
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    if 1 > !arg1:
        revert with 0, 17
    sub_2f98ea73 = arg1 + 1
}

function mint(uint256 arg1) payable {
    mem[64] = 96
    require calldata.size - 4 >= 32
    if stor10 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor10 = 2
    if not arg1:
        revert with 0, 'Invalid mint amount'
    if arg1 > sub_2dfa9d00:
        revert with 0, 'Invalid mint amount'
    if stor29 > !arg1:
        revert with 0, 17
    if stor29 + arg1 > maxSupply:
        revert with 0, 'Max token supply exceeded'
    if maxSupply < reservedSupply:
        revert with 0, 17
    if stor29 + arg1 > maxSupply - reservedSupply:
        revert with 0, 'Remaining tokens are reserved'
    if paused:
        revert with 0, 'Minting is paused'
    if cost and arg1 > -1 / cost:
        revert with 0, 17
    if cost * arg1 != msg.value:
        revert with 0, 'Insufficient funds'
    idx = 0
    while idx < arg1:
        stor29++
        _169 = mem[64]
        mem[64] = mem[64] + 32
        mem[_169] = 0
        if not msg.sender:
            revert with 0, 'ERC721: mint to the zero address'
        if ownerOf[stor29]:
            revert with 0, 'ERC721: token already minted'
        s = 0
        while s < sub_84917f4a.length:
            mem[0] = 28
            if sub_84917f4a[s].field_0 == stor29:
                revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
            if s == -1:
                revert with 0, 17
            s = s + 1
            continue 
        stor9[stor29] = tokenByIndex.length
        tokenByIndex.length++
        tokenByIndex[tokenByIndex.length] = stor29
        if msg.sender:
            if not msg.sender:
                if balanceOf[address(msg.sender)] > -2:
                    revert with 0, 17
                balanceOf[address(msg.sender)]++
                mem[0] = stor29
                mem[32] = 2
                ownerOf[stor29] = msg.sender
                emit Transfer(0, msg.sender, stor29);
                if ext_code.size(msg.sender):
                    _343 = mem[64]
                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = msg.sender
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = stor29
                    mem[mem[64] + 100] = 128
                    _345 = mem[_169]
                    mem[mem[64] + 132] = mem[_169]
                    s = 0
                    while s < _345:
                        mem[s + mem[64] + 164] = mem[s + _169 + 32]
                        s = s + 32
                        continue 
                    if ceil32(_345) <= _345:
                        call msg.sender.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(_345) + _343 + -mem[64] + 160]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _450 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_450] == Mask(32, 224, mem[_450])
                        if Mask(32, 224, mem[_450]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        mem[_345 + _343 + 164] = 0
                        call msg.sender.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(_345) + _343 + -mem[64] + 160]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _451 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_451] == Mask(32, 224, mem[_451])
                        if Mask(32, 224, mem[_451]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if not msg.sender:
                    revert with 0, 'ERC721: balance query for the zero address'
                tokenOfOwnerByIndex[address(msg.sender)][stor3[address(msg.sender)]] = stor29
                stor7[stor29] = balanceOf[address(msg.sender)]
                if balanceOf[address(msg.sender)] > -2:
                    revert with 0, 17
                balanceOf[address(msg.sender)]++
                mem[0] = stor29
                mem[32] = 2
                ownerOf[stor29] = msg.sender
                emit Transfer(0, msg.sender, stor29);
                if ext_code.size(msg.sender):
                    _351 = mem[64]
                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = msg.sender
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = stor29
                    mem[mem[64] + 100] = 128
                    _352 = mem[_169]
                    mem[mem[64] + 132] = mem[_169]
                    s = 0
                    while s < _352:
                        mem[s + mem[64] + 164] = mem[s + _169 + 32]
                        s = s + 32
                        continue 
                    if ceil32(_352) <= _352:
                        call msg.sender.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(_352) + _351 + -mem[64] + 160]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _452 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_452] == Mask(32, 224, mem[_452])
                        if Mask(32, 224, mem[_452]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        mem[_352 + _351 + 164] = 0
                        call msg.sender.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(_352) + _351 + -mem[64] + 160]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _453 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_453] == Mask(32, 224, mem[_453])
                        if Mask(32, 224, mem[_453]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        else:
            if tokenByIndex.length < 1:
                revert with 0, 17
            if tokenByIndex.length - 1 >= tokenByIndex.length:
                revert with 0, 50
            if stor9[stor29] >= tokenByIndex.length:
                revert with 0, 50
            tokenByIndex[stor9[stor29]] = tokenByIndex[tokenByIndex.length]
            stor9[stor8[stor8.length]] = stor9[stor29]
            stor9[stor29] = 0
            if not tokenByIndex.length:
                revert with 0, 49
            tokenByIndex[tokenByIndex.length] = 0
            tokenByIndex.length--
            if balanceOf[address(msg.sender)] > -2:
                revert with 0, 17
            balanceOf[address(msg.sender)]++
            mem[0] = stor29
            mem[32] = 2
            ownerOf[stor29] = msg.sender
            emit Transfer(0, msg.sender, stor29);
            if ext_code.size(msg.sender):
                _353 = mem[64]
                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = msg.sender
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = stor29
                mem[mem[64] + 100] = 128
                _356 = mem[_169]
                mem[mem[64] + 132] = mem[_169]
                s = 0
                while s < _356:
                    mem[s + mem[64] + 164] = mem[s + _169 + 32]
                    s = s + 32
                    continue 
                if ceil32(_356) <= _356:
                    call msg.sender.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(_356) + _353 + -mem[64] + 160]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        if not return_data.size:
                            if not mem[96]:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with memory
                              from 128
                               len mem[96]
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    _454 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_454] == Mask(32, 224, mem[_454])
                    if Mask(32, 224, mem[_454]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    mem[_356 + _353 + 164] = 0
                    call msg.sender.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(_356) + _353 + -mem[64] + 160]
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        if not return_data.size:
                            if not mem[96]:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with memory
                              from 128
                               len mem[96]
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    _455 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_455] == Mask(32, 224, mem[_455])
                    if Mask(32, 224, mem[_455]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    if cost * arg1 > 0x1999999999999999999999999999999999999999999999999999999999999999:
        revert with 0, 17
    if 10 * cost * arg1 / 100 > 0x2492492492492492492492492492492492492492492492492492492492492492:
        revert with 0, 17
    call stor25 with:
       value 7 * 10 * cost * arg1 / 100 wei
         gas gas_remaining wei
    if not ext_call.success:
        revert with 0, 32, 63, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to community wallet!'
    if 10 * cost * arg1 / 100 > 0x5555555555555555555555555555555555555555555555555555555555555555:
        revert with 0, 17
    call owner with:
       value 3 * 10 * cost * arg1 / 100 wei
         gas gas_remaining wei
    if not ext_call.success:
        revert with 0, 32, 59, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to owner wallet!'
    stor10 = 1
}

function sub_f9daade4(?) payable {
    mem[64] = 96
    require not msg.value
    require calldata.size - 4 >= 64
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if ('cd', 36).length != ('cd', 4).length:
        revert with 0, 1
    if not ('cd', 4).length:
        revert with 0, 1
    if not ('cd', 36).length:
        revert with 0, 1
    idx = 0
    s = 0
    while idx < ('cd', 36).length:
        require cd[((32 * idx) + cd[36] + 36)] == uint8(cd[((32 * idx) + cd[36] + 36)])
        if s > !uint8(cd[((32 * idx) + cd[36] + 36)]):
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s + uint8(cd[((32 * idx) + cd[36] + 36)])
        continue 
    if stor29 > !(s * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length):
        revert with 0, 17
    if stor29 + (s * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length) > maxSupply:
        revert with 0, 'Max token supply exceeded'
    idx = 0
    while idx < ('cd', 4).length:
        if idx >= ('cd', 36).length:
            revert with 0, 50
        require cd[((32 * idx) + cd[36] + 36)] == uint8(cd[((32 * idx) + cd[36] + 36)])
        s = 0
        while s < uint8(cd[((32 * idx) + cd[36] + 36)]):
            stor29++
            if idx >= ('cd', 4).length:
                revert with 0, 50
            require cd[((32 * idx) + cd[4] + 36)] == address(cd[((32 * idx) + cd[4] + 36)])
            _379 = mem[64]
            mem[64] = mem[64] + 32
            mem[_379] = 0
            if not address(cd[((32 * idx) + cd[4] + 36)]):
                revert with 0, 'ERC721: mint to the zero address'
            if ownerOf[stor29]:
                revert with 0, 'ERC721: token already minted'
            t = 0
            while t < sub_84917f4a.length:
                mem[0] = 28
                if sub_84917f4a[t].field_0 == stor29:
                    revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
                if t == -1:
                    revert with 0, 17
                t = t + 1
                continue 
            stor9[stor29] = tokenByIndex.length
            tokenByIndex.length++
            tokenByIndex[tokenByIndex.length] = stor29
            if address(cd[((32 * idx) + cd[4] + 36)]):
                if not address(cd[((32 * idx) + cd[4] + 36)]):
                    if balanceOf[address(cd[((32 * idx) + cd[4] + 36)])] > -2:
                        revert with 0, 17
                    balanceOf[address(cd[((32 * idx) + cd[4] + 36)])]++
                    mem[0] = stor29
                    mem[32] = 2
                    ownerOf[stor29] = address(cd[((32 * idx) + cd[4] + 36)])
                    emit Transfer(0, address(cd[((32 * idx) + cd[4] + 36)]), stor29);
                    if ext_code.size(address(cd[((32 * idx) + cd[4] + 36)])):
                        _523 = mem[64]
                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = stor29
                        mem[mem[64] + 100] = 128
                        _525 = mem[_379]
                        mem[mem[64] + 132] = mem[_379]
                        t = 0
                        while t < _525:
                            mem[t + mem[64] + 164] = mem[t + _379 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_525) <= _525:
                            call address(cd[((32 * idx) + cd[4] + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(_525) + _523 + -mem[64] + 160]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                if not return_data.size:
                                    if not mem[96]:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with memory
                                      from 128
                                       len mem[96]
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            _630 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_630] == Mask(32, 224, mem[_630])
                            if Mask(32, 224, mem[_630]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[_525 + _523 + 164] = 0
                            call address(cd[((32 * idx) + cd[4] + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(_525) + _523 + -mem[64] + 160]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                if not return_data.size:
                                    if not mem[96]:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with memory
                                      from 128
                                       len mem[96]
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            _631 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_631] == Mask(32, 224, mem[_631])
                            if Mask(32, 224, mem[_631]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if not address(cd[((32 * idx) + cd[4] + 36)]):
                        revert with 0, 'ERC721: balance query for the zero address'
                    tokenOfOwnerByIndex[address(cd[((32 * idx) + cd[4] + 36)])][stor3[address(cd[((32 * idx) + cd[4] + 36)])]] = stor29
                    stor7[stor29] = balanceOf[address(cd[((32 * idx) + cd[4] + 36)])]
                    if balanceOf[address(cd[((32 * idx) + cd[4] + 36)])] > -2:
                        revert with 0, 17
                    balanceOf[address(cd[((32 * idx) + cd[4] + 36)])]++
                    mem[0] = stor29
                    mem[32] = 2
                    ownerOf[stor29] = address(cd[((32 * idx) + cd[4] + 36)])
                    emit Transfer(0, address(cd[((32 * idx) + cd[4] + 36)]), stor29);
                    if ext_code.size(address(cd[((32 * idx) + cd[4] + 36)])):
                        _531 = mem[64]
                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = msg.sender
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = stor29
                        mem[mem[64] + 100] = 128
                        _532 = mem[_379]
                        mem[mem[64] + 132] = mem[_379]
                        t = 0
                        while t < _532:
                            mem[t + mem[64] + 164] = mem[t + _379 + 32]
                            t = t + 32
                            continue 
                        if ceil32(_532) <= _532:
                            call address(cd[((32 * idx) + cd[4] + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(_532) + _531 + -mem[64] + 160]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                if not return_data.size:
                                    if not mem[96]:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with memory
                                      from 128
                                       len mem[96]
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            _632 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_632] == Mask(32, 224, mem[_632])
                            if Mask(32, 224, mem[_632]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[_532 + _531 + 164] = 0
                            call address(cd[((32 * idx) + cd[4] + 36)]).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(_532) + _531 + -mem[64] + 160]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                if not return_data.size:
                                    if not mem[96]:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with memory
                                      from 128
                                       len mem[96]
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            _633 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_633] == Mask(32, 224, mem[_633])
                            if Mask(32, 224, mem[_633]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if tokenByIndex.length < 1:
                    revert with 0, 17
                if tokenByIndex.length - 1 >= tokenByIndex.length:
                    revert with 0, 50
                if stor9[stor29] >= tokenByIndex.length:
                    revert with 0, 50
                tokenByIndex[stor9[stor29]] = tokenByIndex[tokenByIndex.length]
                stor9[stor8[stor8.length]] = stor9[stor29]
                stor9[stor29] = 0
                if not tokenByIndex.length:
                    revert with 0, 49
                tokenByIndex[tokenByIndex.length] = 0
                tokenByIndex.length--
                if balanceOf[address(cd[((32 * idx) + cd[4] + 36)])] > -2:
                    revert with 0, 17
                balanceOf[address(cd[((32 * idx) + cd[4] + 36)])]++
                mem[0] = stor29
                mem[32] = 2
                ownerOf[stor29] = address(cd[((32 * idx) + cd[4] + 36)])
                emit Transfer(0, address(cd[((32 * idx) + cd[4] + 36)]), stor29);
                if ext_code.size(address(cd[((32 * idx) + cd[4] + 36)])):
                    _533 = mem[64]
                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = msg.sender
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = stor29
                    mem[mem[64] + 100] = 128
                    _536 = mem[_379]
                    mem[mem[64] + 132] = mem[_379]
                    t = 0
                    while t < _536:
                        mem[t + mem[64] + 164] = mem[t + _379 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_536) <= _536:
                        call address(cd[((32 * idx) + cd[4] + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(_536) + _533 + -mem[64] + 160]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _634 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_634] == Mask(32, 224, mem[_634])
                        if Mask(32, 224, mem[_634]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        mem[_536 + _533 + 164] = 0
                        call address(cd[((32 * idx) + cd[4] + 36)]).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(_536) + _533 + -mem[64] + 160]
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            if not return_data.size:
                                if not mem[96]:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with memory
                                  from 128
                                   len mem[96]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        _635 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_635] == Mask(32, 224, mem[_635])
                        if Mask(32, 224, mem[_635]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            if s == -1:
                revert with 0, 17
            s = s + 1
            continue 
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
}

function tokenURI(uint256 arg1) {
    require calldata.size - 4 >= 32
    mem[0] = arg1
    mem[32] = 2
    if not ownerOf[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Metadata: URI query for nonexistent token'
    if not revealed:
        if bool(stor13.length):
            if bool(stor13.length) == uint255(stor13.length) * 0.5 < 32:
                revert with 0, 34
            if bool(stor13.length):
                if bool(stor13.length) == uint255(stor13.length) * 0.5 < 32:
                    revert with 0, 34
                if Mask(256, -1, stor13.length):
                    if 31 < uint255(stor13.length) * 0.5:
                        mem[128] = uint256(stor13.field_0)
                        idx = 128
                        s = 0
                        while (uint255(stor13.length) * 0.5) + 96 > idx:
                            mem[idx + 32] = stor13[s].field_256
                            idx = idx + 32
                            s = s + 1
                            continue 
                        return Array(len=2 * Mask(256, -1, stor13.length), data=mem[128 len ceil32(uint255(stor13.length) * 0.5)])
                    mem[128] = 256 * stor13.length.field_8
            else:
                if bool(stor13.length) == stor13.length.field_1 < 32:
                    revert with 0, 34
                if stor13.length.field_1:
                    if 31 < stor13.length.field_1:
                        mem[128] = uint256(stor13.field_0)
                        idx = 128
                        s = 0
                        while stor13.length.field_1 + 96 > idx:
                            mem[idx + 32] = stor13[s].field_256
                            idx = idx + 32
                            s = s + 1
                            continue 
                        return Array(len=2 * Mask(256, -1, stor13.length), data=mem[128 len ceil32(uint255(stor13.length) * 0.5)])
                    mem[128] = 256 * stor13.length.field_8
            mem[ceil32(uint255(stor13.length) * 0.5) + 192 len ceil32(uint255(stor13.length) * 0.5)] = mem[128 len ceil32(uint255(stor13.length) * 0.5)]
            if ceil32(uint255(stor13.length) * 0.5) > uint255(stor13.length) * 0.5:
                mem[(uint255(stor13.length) * 0.5) + ceil32(uint255(stor13.length) * 0.5) + 192] = 0
            return Array(len=2 * Mask(256, -1, stor13.length), data=mem[128 len ceil32(uint255(stor13.length) * 0.5)], mem[(2 * ceil32(uint255(stor13.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor13.length) * 0.5)]), 
        if bool(stor13.length) == stor13.length.field_1 < 32:
            revert with 0, 34
        if bool(stor13.length):
            if bool(stor13.length) == uint255(stor13.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor13.length):
                if 31 < uint255(stor13.length) * 0.5:
                    mem[128] = uint256(stor13.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor13.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor13[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=stor13.length % 128, data=mem[128 len ceil32(stor13.length.field_1)])
                mem[128] = 256 * stor13.length.field_8
        else:
            if bool(stor13.length) == stor13.length.field_1 < 32:
                revert with 0, 34
            if stor13.length.field_1:
                if 31 < stor13.length.field_1:
                    mem[128] = uint256(stor13.field_0)
                    idx = 128
                    s = 0
                    while stor13.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor13[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=stor13.length % 128, data=mem[128 len ceil32(stor13.length.field_1)])
                mem[128] = 256 * stor13.length.field_8
        mem[ceil32(stor13.length.field_1) + 192 len ceil32(stor13.length.field_1)] = mem[128 len ceil32(stor13.length.field_1)]
        if ceil32(stor13.length.field_1) > stor13.length.field_1:
            mem[stor13.length.field_1 + ceil32(stor13.length.field_1) + 192] = 0
        return Array(len=stor13.length % 128, data=mem[128 len ceil32(stor13.length.field_1)], mem[(2 * ceil32(stor13.length.field_1)) + 192 len 2 * ceil32(stor13.length.field_1)]), 
    if bool(stor14.length):
        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
            revert with 0, 34
        mem[96] = uint255(stor14.length) * 0.5
        if bool(stor14.length):
            if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                revert with 0, 34
            if not Mask(256, -1, stor14.length):
                if uint255(stor14.length) * 0.5 <= 0:
                    return ''
                if not arg1:
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + 128] = 1
                    mem[ceil32(uint255(stor14.length) * 0.5) + 160] = 0x3000000000000000000000000000000000000000000000000000000000000000
                    mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(uint255(stor14.length) * 0.5)] = mem[128 len ceil32(uint255(stor14.length) * 0.5)]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 224] = 0x3000000000000000000000000000000000000000000000000000000000000000
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = 0
                    if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                        if bool(stor15.length):
                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                revert with 0, 34
                            if not bool(stor15.length):
                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = 0
                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                            if bool(stor15.length) != 1:
                                mem[64] = 0
                                _7300 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                                if ceil32(_7300) > _7300:
                                    mem[_7300 + 64] = 0
                                return memory
                                  from mem[64]
                                   len ceil32(_7300) + -mem[64] + 64
                            mem[0] = 15
                            idx = 0
                            s = 0
                            while idx < uint255(stor15.length) * 0.5:
                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 224] = stor15[s].field_0
                                idx = idx + 32
                                s = s + 1
                                continue 
                            _12534 = mem[64]
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                            _12994 = mem[_12534]
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[_12534]
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(_12994)] = mem[_12534 + 32 len ceil32(_12994)]
                            if ceil32(_12994) > _12994:
                                mem[_12994 + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257 len ceil32(_12994) + 32], 
                        if bool(stor15.length) == stor15.length.field_1 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _7435 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                            if ceil32(_7435) > _7435:
                                mem[_7435 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_7435) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        s = 0
                        while idx < stor15.length.field_1:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 224] = stor15[s].field_0
                            idx = idx + 32
                            s = s + 1
                            continue 
                        _12535 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                        _12995 = mem[_12535]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[_12535]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(_12995)] = mem[_12535 + 32 len ceil32(_12995)]
                        if ceil32(_12995) > _12995:
                            mem[_12995 + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(_12995) + 32], 
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _7306 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                            if ceil32(_7306) > _7306:
                                mem[_7306 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_7306) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        s = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 224] = stor15[s].field_0
                            idx = idx + 32
                            s = s + 1
                            continue 
                        _12538 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                        _12998 = mem[_12538]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[_12538]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(_12998)] = mem[_12538 + 32 len ceil32(_12998)]
                        if ceil32(_12998) > _12998:
                            mem[_12998 + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257 len ceil32(_12998) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _7439 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        if ceil32(_7439) > _7439:
                            mem[_7439 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_7439) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    s = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 224] = stor15[s].field_0
                        idx = idx + 32
                        s = s + 1
                        continue 
                    _12539 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                    _12999 = mem[_12539]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[_12539]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(_12999)] = mem[_12539 + 32 len ceil32(_12999)]
                    if ceil32(_12999) > _12999:
                        mem[_12999 + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(_12999) + 32], 
                s = 0
                idx = arg1
                while idx:
                    if s == -1:
                        revert with 0, 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 0, 65
                mem[ceil32(uint255(stor14.length) * 0.5) + 128] = s
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160
                if not s:
                    t = s
                    idx = arg1
                    while idx:
                        if t < 1:
                            revert with 0, 17
                        if 48 > !(idx % 10):
                            revert with 0, 17
                        if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                            revert with 0, 50
                        mem[t + ceil32(uint255(stor14.length) * 0.5) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(uint255(stor14.length) * 0.5)] = mem[128 len ceil32(uint255(stor14.length) * 0.5)]
                    if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                        _12528 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                            if bool(stor15.length):
                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                    revert with 0, 34
                                if not bool(stor15.length):
                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                                    _18768 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18768)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18768)]
                                    if ceil32(_18768) > _18768:
                                        mem[_18768 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18768) + 32], 
                                if bool(stor15.length) != 1:
                                    mem[64] = 0
                                    _18993 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                                    if ceil32(_18993) > _18993:
                                        mem[_18993 + 64] = 0
                                    return memory
                                      from mem[64]
                                       len ceil32(_18993) + -mem[64] + 64
                                mem[0] = 15
                                idx = 0
                                t = 0
                                while idx < uint255(stor15.length) * 0.5:
                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                                    idx = idx + 32
                                    t = t + 1
                                    continue 
                                _22144 = mem[64]
                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + (uint255(stor15.length) * 0.5) + 192
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + (uint255(stor15.length) * 0.5) + 192] = 32
                                _22976 = mem[_22144]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + (uint255(stor15.length) * 0.5) + 224] = mem[_22144]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_22976)] = mem[_22144 + 32 len ceil32(_22976)]
                                if ceil32(_22976) > _22976:
                                    mem[_22976 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + (uint255(stor15.length) * 0.5) + 256] = 0
                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_22976) + 32], 
                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                revert with 0, 34
                            if not bool(stor15.length):
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                                _18994 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_18994)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18994)]
                                if ceil32(_18994) > _18994:
                                    mem[_18994 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_18994) + 32], 
                            if bool(stor15.length) != 1:
                                mem[64] = 0
                                _19249 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                                if ceil32(_19249) > _19249:
                                    mem[_19249 + 64] = 0
                                return memory
                                  from mem[64]
                                   len ceil32(_19249) + -mem[64] + 64
                            mem[0] = 15
                            idx = 0
                            t = 0
                            while idx < stor15.length.field_1:
                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                                idx = idx + 32
                                t = t + 1
                                continue 
                            _22145 = mem[64]
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + stor15.length.field_1 + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + stor15.length.field_1 + 192] = 32
                            _22977 = mem[_22145]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + stor15.length.field_1 + 224] = mem[_22145]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + stor15.length.field_1 + 256 len ceil32(_22977)] = mem[_22145 + 32 len ceil32(_22977)]
                            if ceil32(_22977) > _22977:
                                mem[_22977 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + stor15.length.field_1 + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + stor15.length.field_1 + 224 len ceil32(_22977) + 32], 
                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
                        if bool(stor15.length):
                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                revert with 0, 34
                            if not bool(stor15.length):
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                                _18771 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18771)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18771)]
                                if ceil32(_18771) > _18771:
                                    mem[_18771 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18771) + 32], 
                            if bool(stor15.length) != 1:
                                mem[64] = 0
                                _18996 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                                if ceil32(_18996) > _18996:
                                    mem[_18996 + 64] = 0
                                return memory
                                  from mem[64]
                                   len ceil32(_18996) + -mem[64] + 64
                            mem[0] = 15
                            idx = 0
                            t = 0
                            while idx < uint255(stor15.length) * 0.5:
                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                                idx = idx + 32
                                t = t + 1
                                continue 
                            _22146 = mem[64]
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + (uint255(stor15.length) * 0.5) + 192] = 32
                            _22978 = mem[_22146]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + (uint255(stor15.length) * 0.5) + 224] = mem[_22146]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_22978)] = mem[_22146 + 32 len ceil32(_22978)]
                            if ceil32(_22978) > _22978:
                                mem[_22978 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_22978) + 32], 
                        if bool(stor15.length) == stor15.length.field_1 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                            _18997 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_18997)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18997)]
                            if ceil32(_18997) > _18997:
                                mem[_18997 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_18997) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19251 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19251) > _19251:
                                mem[_19251 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19251) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < stor15.length.field_1:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22147 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + stor15.length.field_1 + 192] = 32
                        _22979 = mem[_22147]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + stor15.length.field_1 + 224] = mem[_22147]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + stor15.length.field_1 + 256 len ceil32(_22979)] = mem[_22147 + 32 len ceil32(_22979)]
                        if ceil32(_22979) > _22979:
                            mem[_22979 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12528 + stor15.length.field_1 + 224 len ceil32(_22979) + 32], 
                    mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] = 0
                    _12529 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                        if bool(stor15.length):
                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                revert with 0, 34
                            if not bool(stor15.length):
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                                _18774 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18774)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18774)]
                                if ceil32(_18774) > _18774:
                                    mem[_18774 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18774) + 32], 
                            if bool(stor15.length) != 1:
                                mem[64] = 0
                                _18999 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                                if ceil32(_18999) > _18999:
                                    mem[_18999 + 64] = 0
                                return memory
                                  from mem[64]
                                   len ceil32(_18999) + -mem[64] + 64
                            mem[0] = 15
                            idx = 0
                            t = 0
                            while idx < uint255(stor15.length) * 0.5:
                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                                idx = idx + 32
                                t = t + 1
                                continue 
                            _22148 = mem[64]
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + (uint255(stor15.length) * 0.5) + 192] = 32
                            _22980 = mem[_22148]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + (uint255(stor15.length) * 0.5) + 224] = mem[_22148]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_22980)] = mem[_22148 + 32 len ceil32(_22980)]
                            if ceil32(_22980) > _22980:
                                mem[_22980 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_22980) + 32], 
                        if bool(stor15.length) == stor15.length.field_1 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                            _19000 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19000)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19000)]
                            if ceil32(_19000) > _19000:
                                mem[_19000 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19000) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19253 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19253) > _19253:
                                mem[_19253 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19253) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < stor15.length.field_1:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22149 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + stor15.length.field_1 + 192] = 32
                        _22981 = mem[_22149]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + stor15.length.field_1 + 224] = mem[_22149]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + stor15.length.field_1 + 256 len ceil32(_22981)] = mem[_22149 + 32 len ceil32(_22981)]
                        if ceil32(_22981) > _22981:
                            mem[_22981 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + stor15.length.field_1 + 224 len ceil32(_22981) + 32], 
                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18777 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18777)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18777)]
                            if ceil32(_18777) > _18777:
                                mem[_18777 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18777) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19002 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19002) > _19002:
                                mem[_19002 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19002) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22150 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _22982 = mem[_22150]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + (uint255(stor15.length) * 0.5) + 224] = mem[_22150]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_22982)] = mem[_22150 + 32 len ceil32(_22982)]
                        if ceil32(_22982) > _22982:
                            mem[_22982 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_22982) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                        _19003 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19003)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19003)]
                        if ceil32(_19003) > _19003:
                            mem[_19003 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19003) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19255 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19255) > _19255:
                            mem[_19255 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19255) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22151 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + stor15.length.field_1 + 192] = 32
                    _22983 = mem[_22151]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + stor15.length.field_1 + 224] = mem[_22151]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + stor15.length.field_1 + 256 len ceil32(_22983)] = mem[_22151 + 32 len ceil32(_22983)]
                    if ceil32(_22983) > _22983:
                        mem[_22983 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12529 + stor15.length.field_1 + 224 len ceil32(_22983) + 32], 
                mem[ceil32(uint255(stor14.length) * 0.5) + 160 len s] = call.data[calldata.size len s]
                t = s
                idx = arg1
                while idx:
                    if t < 1:
                        revert with 0, 17
                    if 48 > !(idx % 10):
                        revert with 0, 17
                    if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                        revert with 0, 50
                    mem[t + ceil32(uint255(stor14.length) * 0.5) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(uint255(stor14.length) * 0.5)] = mem[128 len ceil32(uint255(stor14.length) * 0.5)]
                if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                    _12530 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                        if bool(stor15.length):
                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                revert with 0, 34
                            if not bool(stor15.length):
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                                _18780 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18780)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18780)]
                                if ceil32(_18780) > _18780:
                                    mem[_18780 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18780) + 32], 
                            if bool(stor15.length) != 1:
                                mem[64] = 0
                                _19005 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                                if ceil32(_19005) > _19005:
                                    mem[_19005 + 64] = 0
                                return memory
                                  from mem[64]
                                   len ceil32(_19005) + -mem[64] + 64
                            mem[0] = 15
                            idx = 0
                            t = 0
                            while idx < uint255(stor15.length) * 0.5:
                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                                idx = idx + 32
                                t = t + 1
                                continue 
                            _22152 = mem[64]
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + (uint255(stor15.length) * 0.5) + 192] = 32
                            _22984 = mem[_22152]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + (uint255(stor15.length) * 0.5) + 224] = mem[_22152]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_22984)] = mem[_22152 + 32 len ceil32(_22984)]
                            if ceil32(_22984) > _22984:
                                mem[_22984 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_22984) + 32], 
                        if bool(stor15.length) == stor15.length.field_1 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                            _19006 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19006)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19006)]
                            if ceil32(_19006) > _19006:
                                mem[_19006 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19006) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19257 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19257) > _19257:
                                mem[_19257 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19257) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < stor15.length.field_1:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22153 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + stor15.length.field_1 + 192] = 32
                        _22985 = mem[_22153]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + stor15.length.field_1 + 224] = mem[_22153]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + stor15.length.field_1 + 256 len ceil32(_22985)] = mem[_22153 + 32 len ceil32(_22985)]
                        if ceil32(_22985) > _22985:
                            mem[_22985 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + stor15.length.field_1 + 224 len ceil32(_22985) + 32], 
                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18783 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18783)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18783)]
                            if ceil32(_18783) > _18783:
                                mem[_18783 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18783) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19008 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19008) > _19008:
                                mem[_19008 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19008) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22154 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _22986 = mem[_22154]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + (uint255(stor15.length) * 0.5) + 224] = mem[_22154]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_22986)] = mem[_22154 + 32 len ceil32(_22986)]
                        if ceil32(_22986) > _22986:
                            mem[_22986 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_22986) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                        _19009 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19009)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19009)]
                        if ceil32(_19009) > _19009:
                            mem[_19009 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19009) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19259 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19259) > _19259:
                            mem[_19259 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19259) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22155 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + stor15.length.field_1 + 192] = 32
                    _22987 = mem[_22155]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + stor15.length.field_1 + 224] = mem[_22155]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + stor15.length.field_1 + 256 len ceil32(_22987)] = mem[_22155 + 32 len ceil32(_22987)]
                    if ceil32(_22987) > _22987:
                        mem[_22987 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12530 + stor15.length.field_1 + 224 len ceil32(_22987) + 32], 
                mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] = 0
                _12531 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18786 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18786)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18786)]
                            if ceil32(_18786) > _18786:
                                mem[_18786 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18786) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19011 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19011) > _19011:
                                mem[_19011 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19011) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22156 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _22988 = mem[_22156]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + (uint255(stor15.length) * 0.5) + 224] = mem[_22156]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_22988)] = mem[_22156 + 32 len ceil32(_22988)]
                        if ceil32(_22988) > _22988:
                            mem[_22988 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_22988) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                        _19012 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19012)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19012)]
                        if ceil32(_19012) > _19012:
                            mem[_19012 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19012) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19261 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19261) > _19261:
                            mem[_19261 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19261) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22157 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + stor15.length.field_1 + 192] = 32
                    _22989 = mem[_22157]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + stor15.length.field_1 + 224] = mem[_22157]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + stor15.length.field_1 + 256 len ceil32(_22989)] = mem[_22157 + 32 len ceil32(_22989)]
                    if ceil32(_22989) > _22989:
                        mem[_22989 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + stor15.length.field_1 + 224 len ceil32(_22989) + 32], 
                mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18789 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18789)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18789)]
                        if ceil32(_18789) > _18789:
                            mem[_18789 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18789) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19014 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19014) > _19014:
                            mem[_19014 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19014) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22158 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _22990 = mem[_22158]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + (uint255(stor15.length) * 0.5) + 224] = mem[_22158]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_22990)] = mem[_22158 + 32 len ceil32(_22990)]
                    if ceil32(_22990) > _22990:
                        mem[_22990 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_22990) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                    _19015 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19015)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19015)]
                    if ceil32(_19015) > _19015:
                        mem[_19015 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19015) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19263 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_19263) > _19263:
                        mem[_19263 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19263) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22159 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + stor15.length.field_1 + 192] = 32
                _22991 = mem[_22159]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + stor15.length.field_1 + 224] = mem[_22159]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + stor15.length.field_1 + 256 len ceil32(_22991)] = mem[_22159 + 32 len ceil32(_22991)]
                if ceil32(_22991) > _22991:
                    mem[_22991 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12531 + stor15.length.field_1 + 224 len ceil32(_22991) + 32], 
            if 31 >= uint255(stor14.length) * 0.5:
                mem[128] = 256 * stor14.length.field_8
                if uint255(stor14.length) * 0.5 <= 0:
                    return ''
                if not arg1:
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + 128] = 1
                    mem[ceil32(uint255(stor14.length) * 0.5) + 160] = 0x3000000000000000000000000000000000000000000000000000000000000000
                    mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(uint255(stor14.length) * 0.5)] = mem[128 len ceil32(uint255(stor14.length) * 0.5)]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 224] = 0x3000000000000000000000000000000000000000000000000000000000000000
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = 0
                    if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                        if bool(stor15.length):
                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                revert with 0, 34
                            if not bool(stor15.length):
                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = 0
                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                            if bool(stor15.length) != 1:
                                mem[64] = 0
                                _7322 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                                if ceil32(_7322) > _7322:
                                    mem[_7322 + 64] = 0
                                return memory
                                  from mem[64]
                                   len ceil32(_7322) + -mem[64] + 64
                            mem[0] = 15
                            idx = 0
                            s = 0
                            while idx < uint255(stor15.length) * 0.5:
                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 224] = stor15[s].field_0
                                idx = idx + 32
                                s = s + 1
                                continue 
                            _12548 = mem[64]
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                            _13006 = mem[_12548]
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[_12548]
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(_13006)] = mem[_12548 + 32 len ceil32(_13006)]
                            if ceil32(_13006) > _13006:
                                mem[_13006 + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257 len ceil32(_13006) + 32], 
                        if bool(stor15.length) == stor15.length.field_1 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _7452 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                            if ceil32(_7452) > _7452:
                                mem[_7452 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_7452) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        s = 0
                        while idx < stor15.length.field_1:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 224] = stor15[s].field_0
                            idx = idx + 32
                            s = s + 1
                            continue 
                        _12549 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                        _13007 = mem[_12549]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[_12549]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(_13007)] = mem[_12549 + 32 len ceil32(_13007)]
                        if ceil32(_13007) > _13007:
                            mem[_13007 + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(_13007) + 32], 
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _7328 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                            if ceil32(_7328) > _7328:
                                mem[_7328 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_7328) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        s = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 224] = stor15[s].field_0
                            idx = idx + 32
                            s = s + 1
                            continue 
                        _12552 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                        _13010 = mem[_12552]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[_12552]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(_13010)] = mem[_12552 + 32 len ceil32(_13010)]
                        if ceil32(_13010) > _13010:
                            mem[_13010 + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257 len ceil32(_13010) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _7456 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        if ceil32(_7456) > _7456:
                            mem[_7456 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_7456) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    s = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 224] = stor15[s].field_0
                        idx = idx + 32
                        s = s + 1
                        continue 
                    _12553 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                    _13011 = mem[_12553]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[_12553]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(_13011)] = mem[_12553 + 32 len ceil32(_13011)]
                    if ceil32(_13011) > _13011:
                        mem[_13011 + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(_13011) + 32], 
                s = 0
                idx = arg1
                while idx:
                    if s == -1:
                        revert with 0, 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 0, 65
                mem[ceil32(uint255(stor14.length) * 0.5) + 128] = s
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160
                if not s:
                    t = s
                    idx = arg1
                    while idx:
                        if t < 1:
                            revert with 0, 17
                        if 48 > !(idx % 10):
                            revert with 0, 17
                        if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                            revert with 0, 50
                        mem[t + ceil32(uint255(stor14.length) * 0.5) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(uint255(stor14.length) * 0.5)] = mem[128 len ceil32(uint255(stor14.length) * 0.5)]
                    if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                        _12542 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                            if bool(stor15.length):
                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                    revert with 0, 34
                                if not bool(stor15.length):
                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                                    _18800 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18800)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18800)]
                                    if ceil32(_18800) > _18800:
                                        mem[_18800 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18800) + 32], 
                                if bool(stor15.length) != 1:
                                    mem[64] = 0
                                    _19033 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                                    if ceil32(_19033) > _19033:
                                        mem[_19033 + 64] = 0
                                    return memory
                                      from mem[64]
                                       len ceil32(_19033) + -mem[64] + 64
                                mem[0] = 15
                                idx = 0
                                t = 0
                                while idx < uint255(stor15.length) * 0.5:
                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                                    idx = idx + 32
                                    t = t + 1
                                    continue 
                                _22160 = mem[64]
                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + (uint255(stor15.length) * 0.5) + 192
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + (uint255(stor15.length) * 0.5) + 192] = 32
                                _23000 = mem[_22160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + (uint255(stor15.length) * 0.5) + 224] = mem[_22160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23000)] = mem[_22160 + 32 len ceil32(_23000)]
                                if ceil32(_23000) > _23000:
                                    mem[_23000 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + (uint255(stor15.length) * 0.5) + 256] = 0
                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23000) + 32], 
                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                revert with 0, 34
                            if not bool(stor15.length):
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                                _19034 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19034)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19034)]
                                if ceil32(_19034) > _19034:
                                    mem[_19034 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19034) + 32], 
                            if bool(stor15.length) != 1:
                                mem[64] = 0
                                _19297 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                                if ceil32(_19297) > _19297:
                                    mem[_19297 + 64] = 0
                                return memory
                                  from mem[64]
                                   len ceil32(_19297) + -mem[64] + 64
                            mem[0] = 15
                            idx = 0
                            t = 0
                            while idx < stor15.length.field_1:
                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                                idx = idx + 32
                                t = t + 1
                                continue 
                            _22161 = mem[64]
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + stor15.length.field_1 + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + stor15.length.field_1 + 192] = 32
                            _23001 = mem[_22161]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + stor15.length.field_1 + 224] = mem[_22161]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + stor15.length.field_1 + 256 len ceil32(_23001)] = mem[_22161 + 32 len ceil32(_23001)]
                            if ceil32(_23001) > _23001:
                                mem[_23001 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + stor15.length.field_1 + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + stor15.length.field_1 + 224 len ceil32(_23001) + 32], 
                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
                        if bool(stor15.length):
                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                revert with 0, 34
                            if not bool(stor15.length):
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                                _18803 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18803)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18803)]
                                if ceil32(_18803) > _18803:
                                    mem[_18803 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18803) + 32], 
                            if bool(stor15.length) != 1:
                                mem[64] = 0
                                _19036 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                                if ceil32(_19036) > _19036:
                                    mem[_19036 + 64] = 0
                                return memory
                                  from mem[64]
                                   len ceil32(_19036) + -mem[64] + 64
                            mem[0] = 15
                            idx = 0
                            t = 0
                            while idx < uint255(stor15.length) * 0.5:
                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                                idx = idx + 32
                                t = t + 1
                                continue 
                            _22162 = mem[64]
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + (uint255(stor15.length) * 0.5) + 192] = 32
                            _23002 = mem[_22162]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + (uint255(stor15.length) * 0.5) + 224] = mem[_22162]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23002)] = mem[_22162 + 32 len ceil32(_23002)]
                            if ceil32(_23002) > _23002:
                                mem[_23002 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23002) + 32], 
                        if bool(stor15.length) == stor15.length.field_1 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                            _19037 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19037)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19037)]
                            if ceil32(_19037) > _19037:
                                mem[_19037 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19037) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19299 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19299) > _19299:
                                mem[_19299 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19299) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < stor15.length.field_1:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22163 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + stor15.length.field_1 + 192] = 32
                        _23003 = mem[_22163]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + stor15.length.field_1 + 224] = mem[_22163]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + stor15.length.field_1 + 256 len ceil32(_23003)] = mem[_22163 + 32 len ceil32(_23003)]
                        if ceil32(_23003) > _23003:
                            mem[_23003 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12542 + stor15.length.field_1 + 224 len ceil32(_23003) + 32], 
                    mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] = 0
                    _12543 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                        if bool(stor15.length):
                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                revert with 0, 34
                            if not bool(stor15.length):
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                                _18806 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18806)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18806)]
                                if ceil32(_18806) > _18806:
                                    mem[_18806 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18806) + 32], 
                            if bool(stor15.length) != 1:
                                mem[64] = 0
                                _19039 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                                if ceil32(_19039) > _19039:
                                    mem[_19039 + 64] = 0
                                return memory
                                  from mem[64]
                                   len ceil32(_19039) + -mem[64] + 64
                            mem[0] = 15
                            idx = 0
                            t = 0
                            while idx < uint255(stor15.length) * 0.5:
                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                                idx = idx + 32
                                t = t + 1
                                continue 
                            _22164 = mem[64]
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + (uint255(stor15.length) * 0.5) + 192] = 32
                            _23004 = mem[_22164]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + (uint255(stor15.length) * 0.5) + 224] = mem[_22164]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23004)] = mem[_22164 + 32 len ceil32(_23004)]
                            if ceil32(_23004) > _23004:
                                mem[_23004 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23004) + 32], 
                        if bool(stor15.length) == stor15.length.field_1 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                            _19040 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19040)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19040)]
                            if ceil32(_19040) > _19040:
                                mem[_19040 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19040) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19301 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19301) > _19301:
                                mem[_19301 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19301) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < stor15.length.field_1:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22165 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + stor15.length.field_1 + 192] = 32
                        _23005 = mem[_22165]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + stor15.length.field_1 + 224] = mem[_22165]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + stor15.length.field_1 + 256 len ceil32(_23005)] = mem[_22165 + 32 len ceil32(_23005)]
                        if ceil32(_23005) > _23005:
                            mem[_23005 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + stor15.length.field_1 + 224 len ceil32(_23005) + 32], 
                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18809 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18809)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18809)]
                            if ceil32(_18809) > _18809:
                                mem[_18809 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18809) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19042 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19042) > _19042:
                                mem[_19042 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19042) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22166 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23006 = mem[_22166]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + (uint255(stor15.length) * 0.5) + 224] = mem[_22166]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23006)] = mem[_22166 + 32 len ceil32(_23006)]
                        if ceil32(_23006) > _23006:
                            mem[_23006 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23006) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                        _19043 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19043)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19043)]
                        if ceil32(_19043) > _19043:
                            mem[_19043 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19043) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19303 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19303) > _19303:
                            mem[_19303 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19303) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22167 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + stor15.length.field_1 + 192] = 32
                    _23007 = mem[_22167]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + stor15.length.field_1 + 224] = mem[_22167]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + stor15.length.field_1 + 256 len ceil32(_23007)] = mem[_22167 + 32 len ceil32(_23007)]
                    if ceil32(_23007) > _23007:
                        mem[_23007 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12543 + stor15.length.field_1 + 224 len ceil32(_23007) + 32], 
                mem[ceil32(uint255(stor14.length) * 0.5) + 160 len s] = call.data[calldata.size len s]
                t = s
                idx = arg1
                while idx:
                    if t < 1:
                        revert with 0, 17
                    if 48 > !(idx % 10):
                        revert with 0, 17
                    if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                        revert with 0, 50
                    mem[t + ceil32(uint255(stor14.length) * 0.5) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(uint255(stor14.length) * 0.5)] = mem[128 len ceil32(uint255(stor14.length) * 0.5)]
                if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                    _12544 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                        if bool(stor15.length):
                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                revert with 0, 34
                            if not bool(stor15.length):
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                                _18812 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18812)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18812)]
                                if ceil32(_18812) > _18812:
                                    mem[_18812 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18812) + 32], 
                            if bool(stor15.length) != 1:
                                mem[64] = 0
                                _19045 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                                if ceil32(_19045) > _19045:
                                    mem[_19045 + 64] = 0
                                return memory
                                  from mem[64]
                                   len ceil32(_19045) + -mem[64] + 64
                            mem[0] = 15
                            idx = 0
                            t = 0
                            while idx < uint255(stor15.length) * 0.5:
                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                                idx = idx + 32
                                t = t + 1
                                continue 
                            _22168 = mem[64]
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + (uint255(stor15.length) * 0.5) + 192] = 32
                            _23008 = mem[_22168]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + (uint255(stor15.length) * 0.5) + 224] = mem[_22168]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23008)] = mem[_22168 + 32 len ceil32(_23008)]
                            if ceil32(_23008) > _23008:
                                mem[_23008 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23008) + 32], 
                        if bool(stor15.length) == stor15.length.field_1 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                            _19046 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19046)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19046)]
                            if ceil32(_19046) > _19046:
                                mem[_19046 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19046) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19305 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19305) > _19305:
                                mem[_19305 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19305) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < stor15.length.field_1:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22169 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + stor15.length.field_1 + 192] = 32
                        _23009 = mem[_22169]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + stor15.length.field_1 + 224] = mem[_22169]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + stor15.length.field_1 + 256 len ceil32(_23009)] = mem[_22169 + 32 len ceil32(_23009)]
                        if ceil32(_23009) > _23009:
                            mem[_23009 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + stor15.length.field_1 + 224 len ceil32(_23009) + 32], 
                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18815 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18815)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18815)]
                            if ceil32(_18815) > _18815:
                                mem[_18815 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18815) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19048 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19048) > _19048:
                                mem[_19048 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19048) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22170 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23010 = mem[_22170]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + (uint255(stor15.length) * 0.5) + 224] = mem[_22170]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23010)] = mem[_22170 + 32 len ceil32(_23010)]
                        if ceil32(_23010) > _23010:
                            mem[_23010 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23010) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                        _19049 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19049)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19049)]
                        if ceil32(_19049) > _19049:
                            mem[_19049 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19049) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19307 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19307) > _19307:
                            mem[_19307 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19307) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22171 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + stor15.length.field_1 + 192] = 32
                    _23011 = mem[_22171]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + stor15.length.field_1 + 224] = mem[_22171]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + stor15.length.field_1 + 256 len ceil32(_23011)] = mem[_22171 + 32 len ceil32(_23011)]
                    if ceil32(_23011) > _23011:
                        mem[_23011 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12544 + stor15.length.field_1 + 224 len ceil32(_23011) + 32], 
                mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] = 0
                _12545 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18818 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18818)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18818)]
                            if ceil32(_18818) > _18818:
                                mem[_18818 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18818) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19051 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19051) > _19051:
                                mem[_19051 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19051) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22172 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23012 = mem[_22172]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + (uint255(stor15.length) * 0.5) + 224] = mem[_22172]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23012)] = mem[_22172 + 32 len ceil32(_23012)]
                        if ceil32(_23012) > _23012:
                            mem[_23012 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23012) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                        _19052 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19052)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19052)]
                        if ceil32(_19052) > _19052:
                            mem[_19052 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19052) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19309 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19309) > _19309:
                            mem[_19309 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19309) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22173 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + stor15.length.field_1 + 192] = 32
                    _23013 = mem[_22173]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + stor15.length.field_1 + 224] = mem[_22173]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + stor15.length.field_1 + 256 len ceil32(_23013)] = mem[_22173 + 32 len ceil32(_23013)]
                    if ceil32(_23013) > _23013:
                        mem[_23013 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + stor15.length.field_1 + 224 len ceil32(_23013) + 32], 
                mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18821 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18821)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18821)]
                        if ceil32(_18821) > _18821:
                            mem[_18821 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18821) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19054 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19054) > _19054:
                            mem[_19054 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19054) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22174 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23014 = mem[_22174]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + (uint255(stor15.length) * 0.5) + 224] = mem[_22174]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23014)] = mem[_22174 + 32 len ceil32(_23014)]
                    if ceil32(_23014) > _23014:
                        mem[_23014 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23014) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                    _19055 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19055)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19055)]
                    if ceil32(_19055) > _19055:
                        mem[_19055 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19055) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19311 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_19311) > _19311:
                        mem[_19311 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19311) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22175 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + stor15.length.field_1 + 192] = 32
                _23015 = mem[_22175]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + stor15.length.field_1 + 224] = mem[_22175]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + stor15.length.field_1 + 256 len ceil32(_23015)] = mem[_22175 + 32 len ceil32(_23015)]
                if ceil32(_23015) > _23015:
                    mem[_23015 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12545 + stor15.length.field_1 + 224 len ceil32(_23015) + 32], 
            mem[0] = 14
            mem[128] = uint256(stor14.field_0)
            idx = 128
            s = 0
            while (uint255(stor14.length) * 0.5) + 96 > idx:
                mem[idx + 32] = stor14[s].field_256
                idx = idx + 32
                s = s + 1
                continue 
            if uint255(stor14.length) * 0.5 <= 0:
                return ''
            if not arg1:
                mem[ceil32(uint255(stor14.length) * 0.5) + 128] = 1
                mem[ceil32(uint255(stor14.length) * 0.5) + 160] = 0x3000000000000000000000000000000000000000000000000000000000000000
                mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(uint255(stor14.length) * 0.5)] = mem[128 len ceil32(uint255(stor14.length) * 0.5)]
                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 224] = 0x3000000000000000000000000000000000000000000000000000000000000000
                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = 0
                if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                    if not bool(stor15.length):
                        if bool(stor15.length) == stor15.length.field_1 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                        if bool(stor15.length) == 1:
                            idx = 0
                            s = 0
                            while idx < stor15.length.field_1:
                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = stor15[s].field_0
                                idx = idx + 32
                                s = s + 1
                                continue 
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                        mem[64] = 0
                        _13643 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        var56001 = ceil32(_13643)
                        if ceil32(_13643) > _13643:
                            mem[_13643 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_13643) + -mem[64] + 64
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                    else:
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _13452 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                            if ceil32(_13452) > _13452:
                                mem[_13452 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_13452) + -mem[64] + 64
                        idx = 0
                        s = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = stor15[s].field_0
                            idx = idx + 32
                            s = s + 1
                            continue 
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        var58001 = ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])
                else:
                    if not bool(stor15.length):
                        if bool(stor15.length) == stor15.length.field_1 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                        if bool(stor15.length) == 1:
                            idx = 0
                            s = 0
                            while idx < stor15.length.field_1:
                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = stor15[s].field_0
                                idx = idx + 32
                                s = s + 1
                                continue 
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                        mem[64] = 0
                        _13647 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        var56001 = ceil32(_13647)
                        if ceil32(_13647) > _13647:
                            mem[_13647 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_13647) + -mem[64] + 64
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                    else:
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _13458 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                            if ceil32(_13458) > _13458:
                                mem[_13458 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_13458) + -mem[64] + 64
                        idx = 0
                        s = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = stor15[s].field_0
                            idx = idx + 32
                            s = s + 1
                            continue 
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        var58001 = ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])
                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
            s = 0
            idx = arg1
            while idx:
                if s == -1:
                    revert with 0, 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 0, 65
            mem[ceil32(uint255(stor14.length) * 0.5) + 128] = s
            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160
            if not s:
                t = s
                idx = arg1
                while idx:
                    if t < 1:
                        revert with 0, 17
                    if 48 > !(idx % 10):
                        revert with 0, 17
                    if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                        revert with 0, 50
                    mem[t + ceil32(uint255(stor14.length) * 0.5) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(uint255(stor14.length) * 0.5)] = mem[128 len ceil32(uint255(stor14.length) * 0.5)]
                if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                        if bool(stor15.length):
                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                revert with 0, 34
                            if not bool(stor15.length):
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                                _23552 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23552)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23552)]
                                if ceil32(_23552) > _23552:
                                    mem[_23552 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23552) + 32], 
                            if bool(stor15.length) != 1:
                                mem[64] = 0
                                _23649 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                                if ceil32(_23649) > _23649:
                                    mem[_23649 + 64] = 0
                                return memory
                                  from mem[64]
                                   len ceil32(_23649) + -mem[64] + 64
                            mem[0] = 15
                            idx = 0
                            t = 0
                            while idx < uint255(stor15.length) * 0.5:
                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                                idx = idx + 32
                                t = t + 1
                                continue 
                            _24960 = mem[64]
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _25600 = mem[_24960]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[_24960]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25600)] = mem[_24960 + 32 len ceil32(_25600)]
                            if ceil32(_25600) > _25600:
                                mem[_25600 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25600) + 32], 
                        if bool(stor15.length) == stor15.length.field_1 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                            _23650 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_23650)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23650)]
                            if ceil32(_23650) > _23650:
                                mem[_23650 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_23650) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _23777 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_23777) > _23777:
                                mem[_23777 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_23777) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < stor15.length.field_1:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _24961 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                        _25601 = mem[_24961]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[_24961]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_25601)] = mem[_24961 + 32 len ceil32(_25601)]
                        if ceil32(_25601) > _25601:
                            mem[_25601 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_25601) + 32], 
                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _23555 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23555)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23555)]
                            if ceil32(_23555) > _23555:
                                mem[_23555 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23555) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _23652 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_23652) > _23652:
                                mem[_23652 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_23652) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _24962 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _25602 = mem[_24962]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[_24962]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25602)] = mem[_24962 + 32 len ceil32(_25602)]
                        if ceil32(_25602) > _25602:
                            mem[_25602 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25602) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                        _23653 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_23653)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23653)]
                        if ceil32(_23653) > _23653:
                            mem[_23653 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_23653) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _23779 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_23779) > _23779:
                            mem[_23779 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_23779) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _24963 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                    _25603 = mem[_24963]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[_24963]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_25603)] = mem[_24963 + 32 len ceil32(_25603)]
                    if ceil32(_25603) > _25603:
                        mem[_25603 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_25603) + 32], 
                mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] = 0
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _23558 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23558)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23558)]
                            if ceil32(_23558) > _23558:
                                mem[_23558 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23558) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _23655 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_23655) > _23655:
                                mem[_23655 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_23655) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _24964 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _25604 = mem[_24964]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[_24964]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25604)] = mem[_24964 + 32 len ceil32(_25604)]
                        if ceil32(_25604) > _25604:
                            mem[_25604 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25604) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                        _23656 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_23656)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23656)]
                        if ceil32(_23656) > _23656:
                            mem[_23656 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_23656) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _23781 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_23781) > _23781:
                            mem[_23781 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_23781) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _24965 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                    _25605 = mem[_24965]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[_24965]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_25605)] = mem[_24965 + 32 len ceil32(_25605)]
                    if ceil32(_25605) > _25605:
                        mem[_25605 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_25605) + 32], 
                mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23561 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23561)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23561)]
                        if ceil32(_23561) > _23561:
                            mem[_23561 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23561) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _23658 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_23658) > _23658:
                            mem[_23658 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_23658) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _24966 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _25606 = mem[_24966]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[_24966]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25606)] = mem[_24966 + 32 len ceil32(_25606)]
                    if ceil32(_25606) > _25606:
                        mem[_25606 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25606) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                    _23659 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_23659)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23659)]
                    if ceil32(_23659) > _23659:
                        mem[_23659 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_23659) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23783 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_23783) > _23783:
                        mem[_23783 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23783) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _24967 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                _25607 = mem[_24967]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[_24967]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_25607)] = mem[_24967 + 32 len ceil32(_25607)]
                if ceil32(_25607) > _25607:
                    mem[_25607 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_25607) + 32], 
            mem[ceil32(uint255(stor14.length) * 0.5) + 160 len s] = call.data[calldata.size len s]
            t = s
            idx = arg1
            while idx:
                if t < 1:
                    revert with 0, 17
                if 48 > !(idx % 10):
                    revert with 0, 17
                if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                    revert with 0, 50
                mem[t + ceil32(uint255(stor14.length) * 0.5) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(uint255(stor14.length) * 0.5)] = mem[128 len ceil32(uint255(stor14.length) * 0.5)]
            if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
                var48001 = ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])
                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _23564 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23564)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23564)]
                            if ceil32(_23564) > _23564:
                                mem[_23564 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23564) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _23661 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_23661) > _23661:
                                mem[_23661 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_23661) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _24968 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _25608 = mem[_24968]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[_24968]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25608)] = mem[_24968 + 32 len ceil32(_25608)]
                        if ceil32(_25608) > _25608:
                            mem[_25608 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25608) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                        _23662 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_23662)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23662)]
                        if ceil32(_23662) > _23662:
                            mem[_23662 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_23662) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _23785 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_23785) > _23785:
                            mem[_23785 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_23785) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _24969 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                    _25609 = mem[_24969]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[_24969]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_25609)] = mem[_24969 + 32 len ceil32(_25609)]
                    if ceil32(_25609) > _25609:
                        mem[_25609 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_25609) + 32], 
                mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23567 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23567)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23567)]
                        if ceil32(_23567) > _23567:
                            mem[_23567 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23567) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _23664 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_23664) > _23664:
                            mem[_23664 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_23664) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _24970 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _25610 = mem[_24970]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[_24970]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25610)] = mem[_24970 + 32 len ceil32(_25610)]
                    if ceil32(_25610) > _25610:
                        mem[_25610 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25610) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                    _23665 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_23665)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23665)]
                    if ceil32(_23665) > _23665:
                        mem[_23665 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_23665) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23787 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_23787) > _23787:
                        mem[_23787 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23787) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _24971 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                _25611 = mem[_24971]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[_24971]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_25611)] = mem[_24971 + 32 len ceil32(_25611)]
                if ceil32(_25611) > _25611:
                    mem[_25611 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_25611) + 32], 
            mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] = 0
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
            var48001 = ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])
            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23570 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23570)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23570)]
                        if ceil32(_23570) > _23570:
                            mem[_23570 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23570) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _23667 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_23667) > _23667:
                            mem[_23667 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_23667) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _24972 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _25612 = mem[_24972]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[_24972]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25612)] = mem[_24972 + 32 len ceil32(_25612)]
                    if ceil32(_25612) > _25612:
                        mem[_25612 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25612) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                    _23668 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_23668)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23668)]
                    if ceil32(_23668) > _23668:
                        mem[_23668 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_23668) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23789 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_23789) > _23789:
                        mem[_23789 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23789) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _24973 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                _25613 = mem[_24973]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[_24973]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_25613)] = mem[_24973 + 32 len ceil32(_25613)]
                if ceil32(_25613) > _25613:
                    mem[_25613 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_25613) + 32], 
            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23573 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23573)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23573)]
                    if ceil32(_23573) > _23573:
                        mem[_23573 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23573) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23670 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_23670) > _23670:
                        mem[_23670 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23670) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _24974 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                _25614 = mem[_24974]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[_24974]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25614)] = mem[_24974 + 32 len ceil32(_25614)]
                if ceil32(_25614) > _25614:
                    mem[_25614 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25614) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                _23671 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_23671)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23671)]
                if ceil32(_23671) > _23671:
                    mem[_23671 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_23671) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _23791 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                if ceil32(_23791) > _23791:
                    mem[_23791 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_23791) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _24975 = mem[64]
            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
            _25615 = mem[_24975]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[_24975]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_25615)] = mem[_24975 + 32 len ceil32(_25615)]
            if ceil32(_25615) > _25615:
                mem[_25615 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_25615) + 32], 
        if bool(stor14.length) == stor14.length.field_1 < 32:
            revert with 0, 34
        if not stor14.length.field_1:
            if uint255(stor14.length) * 0.5 <= 0:
                return ''
            if not arg1:
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + 128] = 1
                mem[ceil32(uint255(stor14.length) * 0.5) + 160] = 0x3000000000000000000000000000000000000000000000000000000000000000
                mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(uint255(stor14.length) * 0.5)] = mem[128 len ceil32(uint255(stor14.length) * 0.5)]
                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 224] = 0x3000000000000000000000000000000000000000000000000000000000000000
                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = 0
                if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _7334 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                            if ceil32(_7334) > _7334:
                                mem[_7334 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_7334) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        s = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 224] = stor15[s].field_0
                            idx = idx + 32
                            s = s + 1
                            continue 
                        _12560 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                        _13014 = mem[_12560]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[_12560]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(_13014)] = mem[_12560 + 32 len ceil32(_13014)]
                        if ceil32(_13014) > _13014:
                            mem[_13014 + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257 len ceil32(_13014) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _7460 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        if ceil32(_7460) > _7460:
                            mem[_7460 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_7460) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    s = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 224] = stor15[s].field_0
                        idx = idx + 32
                        s = s + 1
                        continue 
                    _12561 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                    _13015 = mem[_12561]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[_12561]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(_13015)] = mem[_12561 + 32 len ceil32(_13015)]
                    if ceil32(_13015) > _13015:
                        mem[_13015 + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(_13015) + 32], 
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _7340 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        if ceil32(_7340) > _7340:
                            mem[_7340 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_7340) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    s = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 224] = stor15[s].field_0
                        idx = idx + 32
                        s = s + 1
                        continue 
                    _12564 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                    _13018 = mem[_12564]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[_12564]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(_13018)] = mem[_12564 + 32 len ceil32(_13018)]
                    if ceil32(_13018) > _13018:
                        mem[_13018 + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257 len ceil32(_13018) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _7464 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                    if ceil32(_7464) > _7464:
                        mem[_7464 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_7464) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                s = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 224] = stor15[s].field_0
                    idx = idx + 32
                    s = s + 1
                    continue 
                _12565 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225
                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                _13019 = mem[_12565]
                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[_12565]
                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(_13019)] = mem[_12565 + 32 len ceil32(_13019)]
                if ceil32(_13019) > _13019:
                    mem[_13019 + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(_13019) + 32], 
            s = 0
            idx = arg1
            while idx:
                if s == -1:
                    revert with 0, 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 0, 65
            mem[ceil32(uint255(stor14.length) * 0.5) + 128] = s
            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160
            if not s:
                t = s
                idx = arg1
                while idx:
                    if t < 1:
                        revert with 0, 17
                    if 48 > !(idx % 10):
                        revert with 0, 17
                    if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                        revert with 0, 50
                    mem[t + ceil32(uint255(stor14.length) * 0.5) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(uint255(stor14.length) * 0.5)] = mem[128 len ceil32(uint255(stor14.length) * 0.5)]
                if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                    _12554 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                        if bool(stor15.length):
                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                revert with 0, 34
                            if not bool(stor15.length):
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                                _18824 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18824)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18824)]
                                if ceil32(_18824) > _18824:
                                    mem[_18824 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18824) + 32], 
                            if bool(stor15.length) != 1:
                                mem[64] = 0
                                _19057 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                                if ceil32(_19057) > _19057:
                                    mem[_19057 + 64] = 0
                                return memory
                                  from mem[64]
                                   len ceil32(_19057) + -mem[64] + 64
                            mem[0] = 15
                            idx = 0
                            t = 0
                            while idx < uint255(stor15.length) * 0.5:
                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                                idx = idx + 32
                                t = t + 1
                                continue 
                            _22176 = mem[64]
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + (uint255(stor15.length) * 0.5) + 192] = 32
                            _23016 = mem[_22176]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + (uint255(stor15.length) * 0.5) + 224] = mem[_22176]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23016)] = mem[_22176 + 32 len ceil32(_23016)]
                            if ceil32(_23016) > _23016:
                                mem[_23016 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23016) + 32], 
                        if bool(stor15.length) == stor15.length.field_1 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                            _19058 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19058)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19058)]
                            if ceil32(_19058) > _19058:
                                mem[_19058 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19058) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19313 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19313) > _19313:
                                mem[_19313 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19313) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < stor15.length.field_1:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22177 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + stor15.length.field_1 + 192] = 32
                        _23017 = mem[_22177]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + stor15.length.field_1 + 224] = mem[_22177]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + stor15.length.field_1 + 256 len ceil32(_23017)] = mem[_22177 + 32 len ceil32(_23017)]
                        if ceil32(_23017) > _23017:
                            mem[_23017 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + stor15.length.field_1 + 224 len ceil32(_23017) + 32], 
                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18827 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18827)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18827)]
                            if ceil32(_18827) > _18827:
                                mem[_18827 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18827) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19060 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19060) > _19060:
                                mem[_19060 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19060) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22178 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23018 = mem[_22178]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + (uint255(stor15.length) * 0.5) + 224] = mem[_22178]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23018)] = mem[_22178 + 32 len ceil32(_23018)]
                        if ceil32(_23018) > _23018:
                            mem[_23018 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23018) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                        _19061 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19061)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19061)]
                        if ceil32(_19061) > _19061:
                            mem[_19061 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19061) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19315 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19315) > _19315:
                            mem[_19315 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19315) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22179 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + stor15.length.field_1 + 192] = 32
                    _23019 = mem[_22179]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + stor15.length.field_1 + 224] = mem[_22179]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + stor15.length.field_1 + 256 len ceil32(_23019)] = mem[_22179 + 32 len ceil32(_23019)]
                    if ceil32(_23019) > _23019:
                        mem[_23019 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12554 + stor15.length.field_1 + 224 len ceil32(_23019) + 32], 
                mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] = 0
                _12555 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18830 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18830)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18830)]
                            if ceil32(_18830) > _18830:
                                mem[_18830 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18830) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19063 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19063) > _19063:
                                mem[_19063 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19063) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22180 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23020 = mem[_22180]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + (uint255(stor15.length) * 0.5) + 224] = mem[_22180]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23020)] = mem[_22180 + 32 len ceil32(_23020)]
                        if ceil32(_23020) > _23020:
                            mem[_23020 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23020) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                        _19064 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19064)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19064)]
                        if ceil32(_19064) > _19064:
                            mem[_19064 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19064) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19317 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19317) > _19317:
                            mem[_19317 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19317) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22181 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + stor15.length.field_1 + 192] = 32
                    _23021 = mem[_22181]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + stor15.length.field_1 + 224] = mem[_22181]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + stor15.length.field_1 + 256 len ceil32(_23021)] = mem[_22181 + 32 len ceil32(_23021)]
                    if ceil32(_23021) > _23021:
                        mem[_23021 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + stor15.length.field_1 + 224 len ceil32(_23021) + 32], 
                mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18833 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18833)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18833)]
                        if ceil32(_18833) > _18833:
                            mem[_18833 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18833) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19066 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19066) > _19066:
                            mem[_19066 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19066) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22182 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23022 = mem[_22182]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + (uint255(stor15.length) * 0.5) + 224] = mem[_22182]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23022)] = mem[_22182 + 32 len ceil32(_23022)]
                    if ceil32(_23022) > _23022:
                        mem[_23022 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23022) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                    _19067 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19067)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19067)]
                    if ceil32(_19067) > _19067:
                        mem[_19067 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19067) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19319 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_19319) > _19319:
                        mem[_19319 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19319) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22183 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + stor15.length.field_1 + 192] = 32
                _23023 = mem[_22183]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + stor15.length.field_1 + 224] = mem[_22183]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + stor15.length.field_1 + 256 len ceil32(_23023)] = mem[_22183 + 32 len ceil32(_23023)]
                if ceil32(_23023) > _23023:
                    mem[_23023 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12555 + stor15.length.field_1 + 224 len ceil32(_23023) + 32], 
            mem[ceil32(uint255(stor14.length) * 0.5) + 160 len s] = call.data[calldata.size len s]
            t = s
            idx = arg1
            while idx:
                if t < 1:
                    revert with 0, 17
                if 48 > !(idx % 10):
                    revert with 0, 17
                if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                    revert with 0, 50
                mem[t + ceil32(uint255(stor14.length) * 0.5) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(uint255(stor14.length) * 0.5)] = mem[128 len ceil32(uint255(stor14.length) * 0.5)]
            if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                _12556 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18836 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18836)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18836)]
                            if ceil32(_18836) > _18836:
                                mem[_18836 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18836) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19069 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19069) > _19069:
                                mem[_19069 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19069) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22184 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23024 = mem[_22184]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + (uint255(stor15.length) * 0.5) + 224] = mem[_22184]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23024)] = mem[_22184 + 32 len ceil32(_23024)]
                        if ceil32(_23024) > _23024:
                            mem[_23024 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23024) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                        _19070 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19070)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19070)]
                        if ceil32(_19070) > _19070:
                            mem[_19070 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19070) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19321 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19321) > _19321:
                            mem[_19321 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19321) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22185 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + stor15.length.field_1 + 192] = 32
                    _23025 = mem[_22185]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + stor15.length.field_1 + 224] = mem[_22185]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + stor15.length.field_1 + 256 len ceil32(_23025)] = mem[_22185 + 32 len ceil32(_23025)]
                    if ceil32(_23025) > _23025:
                        mem[_23025 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + stor15.length.field_1 + 224 len ceil32(_23025) + 32], 
                mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18839 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18839)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18839)]
                        if ceil32(_18839) > _18839:
                            mem[_18839 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18839) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19072 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19072) > _19072:
                            mem[_19072 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19072) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22186 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23026 = mem[_22186]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + (uint255(stor15.length) * 0.5) + 224] = mem[_22186]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23026)] = mem[_22186 + 32 len ceil32(_23026)]
                    if ceil32(_23026) > _23026:
                        mem[_23026 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23026) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                    _19073 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19073)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19073)]
                    if ceil32(_19073) > _19073:
                        mem[_19073 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19073) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19323 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_19323) > _19323:
                        mem[_19323 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19323) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22187 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + stor15.length.field_1 + 192] = 32
                _23027 = mem[_22187]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + stor15.length.field_1 + 224] = mem[_22187]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + stor15.length.field_1 + 256 len ceil32(_23027)] = mem[_22187 + 32 len ceil32(_23027)]
                if ceil32(_23027) > _23027:
                    mem[_23027 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12556 + stor15.length.field_1 + 224 len ceil32(_23027) + 32], 
            mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] = 0
            _12557 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18842 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18842)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18842)]
                        if ceil32(_18842) > _18842:
                            mem[_18842 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18842) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19075 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19075) > _19075:
                            mem[_19075 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19075) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22188 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23028 = mem[_22188]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + (uint255(stor15.length) * 0.5) + 224] = mem[_22188]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23028)] = mem[_22188 + 32 len ceil32(_23028)]
                    if ceil32(_23028) > _23028:
                        mem[_23028 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23028) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                    _19076 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19076)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19076)]
                    if ceil32(_19076) > _19076:
                        mem[_19076 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19076) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19325 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_19325) > _19325:
                        mem[_19325 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19325) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22189 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + stor15.length.field_1 + 192] = 32
                _23029 = mem[_22189]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + stor15.length.field_1 + 224] = mem[_22189]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + stor15.length.field_1 + 256 len ceil32(_23029)] = mem[_22189 + 32 len ceil32(_23029)]
                if ceil32(_23029) > _23029:
                    mem[_23029 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + stor15.length.field_1 + 224 len ceil32(_23029) + 32], 
            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _18845 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18845)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18845)]
                    if ceil32(_18845) > _18845:
                        mem[_18845 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18845) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19078 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_19078) > _19078:
                        mem[_19078 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19078) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22190 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + (uint255(stor15.length) * 0.5) + 192] = 32
                _23030 = mem[_22190]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + (uint255(stor15.length) * 0.5) + 224] = mem[_22190]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23030)] = mem[_22190 + 32 len ceil32(_23030)]
                if ceil32(_23030) > _23030:
                    mem[_23030 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23030) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                _19079 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19079)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19079)]
                if ceil32(_19079) > _19079:
                    mem[_19079 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19079) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _19327 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                if ceil32(_19327) > _19327:
                    mem[_19327 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_19327) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _22191 = mem[64]
            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + stor15.length.field_1 + 192
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + stor15.length.field_1 + 192] = 32
            _23031 = mem[_22191]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + stor15.length.field_1 + 224] = mem[_22191]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + stor15.length.field_1 + 256 len ceil32(_23031)] = mem[_22191 + 32 len ceil32(_23031)]
            if ceil32(_23031) > _23031:
                mem[_23031 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12557 + stor15.length.field_1 + 224 len ceil32(_23031) + 32], 
        if 31 >= stor14.length.field_1:
            mem[128] = 256 * stor14.length.field_8
            if uint255(stor14.length) * 0.5 <= 0:
                return ''
            if not arg1:
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + 128] = 1
                mem[ceil32(uint255(stor14.length) * 0.5) + 160] = 0x3000000000000000000000000000000000000000000000000000000000000000
                mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(uint255(stor14.length) * 0.5)] = mem[128 len ceil32(uint255(stor14.length) * 0.5)]
                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 224] = 0x3000000000000000000000000000000000000000000000000000000000000000
                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = 0
                if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _7356 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                            if ceil32(_7356) > _7356:
                                mem[_7356 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_7356) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        s = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 224] = stor15[s].field_0
                            idx = idx + 32
                            s = s + 1
                            continue 
                        _12574 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                        _13026 = mem[_12574]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[_12574]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(_13026)] = mem[_12574 + 32 len ceil32(_13026)]
                        if ceil32(_13026) > _13026:
                            mem[_13026 + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257 len ceil32(_13026) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _7477 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        if ceil32(_7477) > _7477:
                            mem[_7477 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_7477) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    s = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 224] = stor15[s].field_0
                        idx = idx + 32
                        s = s + 1
                        continue 
                    _12575 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                    _13027 = mem[_12575]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[_12575]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(_13027)] = mem[_12575 + 32 len ceil32(_13027)]
                    if ceil32(_13027) > _13027:
                        mem[_13027 + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(_13027) + 32], 
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _7362 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        if ceil32(_7362) > _7362:
                            mem[_7362 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_7362) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    s = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 224] = stor15[s].field_0
                        idx = idx + 32
                        s = s + 1
                        continue 
                    _12578 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                    _13030 = mem[_12578]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[_12578]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(_13030)] = mem[_12578 + 32 len ceil32(_13030)]
                    if ceil32(_13030) > _13030:
                        mem[_13030 + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257 len ceil32(_13030) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _7481 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                    if ceil32(_7481) > _7481:
                        mem[_7481 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_7481) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                s = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 224] = stor15[s].field_0
                    idx = idx + 32
                    s = s + 1
                    continue 
                _12579 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225
                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                _13031 = mem[_12579]
                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[_12579]
                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(_13031)] = mem[_12579 + 32 len ceil32(_13031)]
                if ceil32(_13031) > _13031:
                    mem[_13031 + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(_13031) + 32], 
            s = 0
            idx = arg1
            while idx:
                if s == -1:
                    revert with 0, 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 0, 65
            mem[ceil32(uint255(stor14.length) * 0.5) + 128] = s
            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160
            if not s:
                t = s
                idx = arg1
                while idx:
                    if t < 1:
                        revert with 0, 17
                    if 48 > !(idx % 10):
                        revert with 0, 17
                    if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                        revert with 0, 50
                    mem[t + ceil32(uint255(stor14.length) * 0.5) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(uint255(stor14.length) * 0.5)] = mem[128 len ceil32(uint255(stor14.length) * 0.5)]
                if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                    _12568 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                        if bool(stor15.length):
                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                revert with 0, 34
                            if not bool(stor15.length):
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                                _18856 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18856)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18856)]
                                if ceil32(_18856) > _18856:
                                    mem[_18856 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18856) + 32], 
                            if bool(stor15.length) != 1:
                                mem[64] = 0
                                _19097 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                                if ceil32(_19097) > _19097:
                                    mem[_19097 + 64] = 0
                                return memory
                                  from mem[64]
                                   len ceil32(_19097) + -mem[64] + 64
                            mem[0] = 15
                            idx = 0
                            t = 0
                            while idx < uint255(stor15.length) * 0.5:
                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                                idx = idx + 32
                                t = t + 1
                                continue 
                            _22192 = mem[64]
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + (uint255(stor15.length) * 0.5) + 192] = 32
                            _23040 = mem[_22192]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + (uint255(stor15.length) * 0.5) + 224] = mem[_22192]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23040)] = mem[_22192 + 32 len ceil32(_23040)]
                            if ceil32(_23040) > _23040:
                                mem[_23040 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23040) + 32], 
                        if bool(stor15.length) == stor15.length.field_1 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                            _19098 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19098)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19098)]
                            if ceil32(_19098) > _19098:
                                mem[_19098 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19098) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19361 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19361) > _19361:
                                mem[_19361 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19361) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < stor15.length.field_1:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22193 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + stor15.length.field_1 + 192] = 32
                        _23041 = mem[_22193]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + stor15.length.field_1 + 224] = mem[_22193]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + stor15.length.field_1 + 256 len ceil32(_23041)] = mem[_22193 + 32 len ceil32(_23041)]
                        if ceil32(_23041) > _23041:
                            mem[_23041 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + stor15.length.field_1 + 224 len ceil32(_23041) + 32], 
                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18859 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18859)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18859)]
                            if ceil32(_18859) > _18859:
                                mem[_18859 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18859) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19100 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19100) > _19100:
                                mem[_19100 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19100) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22194 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23042 = mem[_22194]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + (uint255(stor15.length) * 0.5) + 224] = mem[_22194]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23042)] = mem[_22194 + 32 len ceil32(_23042)]
                        if ceil32(_23042) > _23042:
                            mem[_23042 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23042) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                        _19101 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19101)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19101)]
                        if ceil32(_19101) > _19101:
                            mem[_19101 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19101) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19363 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19363) > _19363:
                            mem[_19363 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19363) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22195 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + stor15.length.field_1 + 192] = 32
                    _23043 = mem[_22195]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + stor15.length.field_1 + 224] = mem[_22195]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + stor15.length.field_1 + 256 len ceil32(_23043)] = mem[_22195 + 32 len ceil32(_23043)]
                    if ceil32(_23043) > _23043:
                        mem[_23043 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12568 + stor15.length.field_1 + 224 len ceil32(_23043) + 32], 
                mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] = 0
                _12569 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18862 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18862)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18862)]
                            if ceil32(_18862) > _18862:
                                mem[_18862 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18862) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19103 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19103) > _19103:
                                mem[_19103 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19103) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22196 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23044 = mem[_22196]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + (uint255(stor15.length) * 0.5) + 224] = mem[_22196]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23044)] = mem[_22196 + 32 len ceil32(_23044)]
                        if ceil32(_23044) > _23044:
                            mem[_23044 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23044) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                        _19104 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19104)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19104)]
                        if ceil32(_19104) > _19104:
                            mem[_19104 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19104) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19365 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19365) > _19365:
                            mem[_19365 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19365) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22197 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + stor15.length.field_1 + 192] = 32
                    _23045 = mem[_22197]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + stor15.length.field_1 + 224] = mem[_22197]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + stor15.length.field_1 + 256 len ceil32(_23045)] = mem[_22197 + 32 len ceil32(_23045)]
                    if ceil32(_23045) > _23045:
                        mem[_23045 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + stor15.length.field_1 + 224 len ceil32(_23045) + 32], 
                mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18865 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18865)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18865)]
                        if ceil32(_18865) > _18865:
                            mem[_18865 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18865) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19106 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19106) > _19106:
                            mem[_19106 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19106) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22198 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23046 = mem[_22198]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + (uint255(stor15.length) * 0.5) + 224] = mem[_22198]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23046)] = mem[_22198 + 32 len ceil32(_23046)]
                    if ceil32(_23046) > _23046:
                        mem[_23046 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23046) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                    _19107 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19107)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19107)]
                    if ceil32(_19107) > _19107:
                        mem[_19107 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19107) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19367 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_19367) > _19367:
                        mem[_19367 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19367) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22199 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + stor15.length.field_1 + 192] = 32
                _23047 = mem[_22199]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + stor15.length.field_1 + 224] = mem[_22199]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + stor15.length.field_1 + 256 len ceil32(_23047)] = mem[_22199 + 32 len ceil32(_23047)]
                if ceil32(_23047) > _23047:
                    mem[_23047 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12569 + stor15.length.field_1 + 224 len ceil32(_23047) + 32], 
            mem[ceil32(uint255(stor14.length) * 0.5) + 160 len s] = call.data[calldata.size len s]
            t = s
            idx = arg1
            while idx:
                if t < 1:
                    revert with 0, 17
                if 48 > !(idx % 10):
                    revert with 0, 17
                if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                    revert with 0, 50
                mem[t + ceil32(uint255(stor14.length) * 0.5) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(uint255(stor14.length) * 0.5)] = mem[128 len ceil32(uint255(stor14.length) * 0.5)]
            if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                _12570 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18868 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18868)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18868)]
                            if ceil32(_18868) > _18868:
                                mem[_18868 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18868) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19109 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_19109) > _19109:
                                mem[_19109 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19109) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22200 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23048 = mem[_22200]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + (uint255(stor15.length) * 0.5) + 224] = mem[_22200]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23048)] = mem[_22200 + 32 len ceil32(_23048)]
                        if ceil32(_23048) > _23048:
                            mem[_23048 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23048) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                        _19110 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19110)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19110)]
                        if ceil32(_19110) > _19110:
                            mem[_19110 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19110) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19369 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19369) > _19369:
                            mem[_19369 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19369) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22201 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + stor15.length.field_1 + 192] = 32
                    _23049 = mem[_22201]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + stor15.length.field_1 + 224] = mem[_22201]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + stor15.length.field_1 + 256 len ceil32(_23049)] = mem[_22201 + 32 len ceil32(_23049)]
                    if ceil32(_23049) > _23049:
                        mem[_23049 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + stor15.length.field_1 + 224 len ceil32(_23049) + 32], 
                mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18871 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18871)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18871)]
                        if ceil32(_18871) > _18871:
                            mem[_18871 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18871) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19112 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19112) > _19112:
                            mem[_19112 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19112) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22202 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23050 = mem[_22202]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + (uint255(stor15.length) * 0.5) + 224] = mem[_22202]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23050)] = mem[_22202 + 32 len ceil32(_23050)]
                    if ceil32(_23050) > _23050:
                        mem[_23050 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23050) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                    _19113 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19113)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19113)]
                    if ceil32(_19113) > _19113:
                        mem[_19113 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19113) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19371 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_19371) > _19371:
                        mem[_19371 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19371) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22203 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + stor15.length.field_1 + 192] = 32
                _23051 = mem[_22203]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + stor15.length.field_1 + 224] = mem[_22203]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + stor15.length.field_1 + 256 len ceil32(_23051)] = mem[_22203 + 32 len ceil32(_23051)]
                if ceil32(_23051) > _23051:
                    mem[_23051 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12570 + stor15.length.field_1 + 224 len ceil32(_23051) + 32], 
            mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] = 0
            _12571 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18874 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18874)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18874)]
                        if ceil32(_18874) > _18874:
                            mem[_18874 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18874) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19115 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_19115) > _19115:
                            mem[_19115 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19115) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22204 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23052 = mem[_22204]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + (uint255(stor15.length) * 0.5) + 224] = mem[_22204]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23052)] = mem[_22204 + 32 len ceil32(_23052)]
                    if ceil32(_23052) > _23052:
                        mem[_23052 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23052) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                    _19116 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19116)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19116)]
                    if ceil32(_19116) > _19116:
                        mem[_19116 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19116) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19373 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_19373) > _19373:
                        mem[_19373 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19373) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22205 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + stor15.length.field_1 + 192] = 32
                _23053 = mem[_22205]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + stor15.length.field_1 + 224] = mem[_22205]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + stor15.length.field_1 + 256 len ceil32(_23053)] = mem[_22205 + 32 len ceil32(_23053)]
                if ceil32(_23053) > _23053:
                    mem[_23053 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + stor15.length.field_1 + 224 len ceil32(_23053) + 32], 
            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _18877 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18877)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_18877)]
                    if ceil32(_18877) > _18877:
                        mem[_18877 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18877) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19118 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_19118) > _19118:
                        mem[_19118 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19118) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22206 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + (uint255(stor15.length) * 0.5) + 192] = 32
                _23054 = mem[_22206]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + (uint255(stor15.length) * 0.5) + 224] = mem[_22206]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23054)] = mem[_22206 + 32 len ceil32(_23054)]
                if ceil32(_23054) > _23054:
                    mem[_23054 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23054) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                _19119 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_19119)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_19119)]
                if ceil32(_19119) > _19119:
                    mem[_19119 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_19119) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _19375 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                if ceil32(_19375) > _19375:
                    mem[_19375 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_19375) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _22207 = mem[64]
            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + stor15.length.field_1 + 192
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + stor15.length.field_1 + 192] = 32
            _23055 = mem[_22207]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + stor15.length.field_1 + 224] = mem[_22207]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + stor15.length.field_1 + 256 len ceil32(_23055)] = mem[_22207 + 32 len ceil32(_23055)]
            if ceil32(_23055) > _23055:
                mem[_23055 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _12571 + stor15.length.field_1 + 224 len ceil32(_23055) + 32], 
        mem[0] = 14
        mem[128] = uint256(stor14.field_0)
        idx = 128
        s = 0
        while stor14.length.field_1 + 96 > idx:
            mem[idx + 32] = stor14[s].field_256
            idx = idx + 32
            s = s + 1
            continue 
        if uint255(stor14.length) * 0.5 <= 0:
            return ''
        if not arg1:
            mem[ceil32(uint255(stor14.length) * 0.5) + 128] = 1
            mem[ceil32(uint255(stor14.length) * 0.5) + 160] = 0x3000000000000000000000000000000000000000000000000000000000000000
            mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(uint255(stor14.length) * 0.5)] = mem[128 len ceil32(uint255(stor14.length) * 0.5)]
            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 224] = 0x3000000000000000000000000000000000000000000000000000000000000000
            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = 0
            if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                if not bool(stor15.length):
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                    if bool(stor15.length) == 1:
                        idx = 0
                        s = 0
                        while idx < stor15.length.field_1:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = stor15[s].field_0
                            idx = idx + 32
                            s = s + 1
                            continue 
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                    mem[64] = 0
                    _13715 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                    var57001 = ceil32(_13715)
                    if ceil32(_13715) > _13715:
                        mem[_13715 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_13715) + -mem[64] + 64
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                else:
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _13496 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        if ceil32(_13496) > _13496:
                            mem[_13496 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_13496) + -mem[64] + 64
                    idx = 0
                    s = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = stor15[s].field_0
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                    var59001 = ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])
            else:
                if not bool(stor15.length):
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                    if bool(stor15.length) == 1:
                        idx = 0
                        s = 0
                        while idx < stor15.length.field_1:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = stor15[s].field_0
                            idx = idx + 32
                            s = s + 1
                            continue 
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 225] = 32
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
                    mem[64] = 0
                    _13719 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                    var57001 = ceil32(_13719)
                    if ceil32(_13719) > _13719:
                        mem[_13719 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_13719) + -mem[64] + 64
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = Mask(248, 8, stor15.length)
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                else:
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _13502 = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                        if ceil32(_13502) > _13502:
                            mem[_13502 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_13502) + -mem[64] + 64
                    idx = 0
                    s = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 225] = stor15[s].field_0
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 225] = 32
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(uint255(stor14.length) * 0.5) + 192]
                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]
                    var59001 = ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])
            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 192]:
                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192])]), 
            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 192] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = 0
            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 192]) + 32], 
        s = 0
        idx = arg1
        while idx:
            if s == -1:
                revert with 0, 17
            s = s + 1
            idx = idx / 10
            continue 
        if s > test266151307():
            revert with 0, 65
        mem[ceil32(uint255(stor14.length) * 0.5) + 128] = s
        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160
        if not s:
            t = s
            idx = arg1
            while idx:
                if t < 1:
                    revert with 0, 17
                if 48 > !(idx % 10):
                    revert with 0, 17
                if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                    revert with 0, 50
                mem[t + ceil32(uint255(stor14.length) * 0.5) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(uint255(stor14.length) * 0.5)] = mem[128 len ceil32(uint255(stor14.length) * 0.5)]
            if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                _17724 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _23576 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23576)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23576)]
                            if ceil32(_23576) > _23576:
                                mem[_23576 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23576) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _23673 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                            if ceil32(_23673) > _23673:
                                mem[_23673 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_23673) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _24976 = mem[64]
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _25616 = mem[_24976]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + (uint255(stor15.length) * 0.5) + 224] = mem[_24976]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25616)] = mem[_24976 + 32 len ceil32(_25616)]
                        if ceil32(_25616) > _25616:
                            mem[_25616 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25616) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                        _23674 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_23674)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23674)]
                        if ceil32(_23674) > _23674:
                            mem[_23674 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_23674) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _23857 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_23857) > _23857:
                            mem[_23857 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_23857) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _24977 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + stor15.length.field_1 + 192] = 32
                    _25617 = mem[_24977]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + stor15.length.field_1 + 224] = mem[_24977]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + stor15.length.field_1 + 256 len ceil32(_25617)] = mem[_24977 + 32 len ceil32(_25617)]
                    if ceil32(_25617) > _25617:
                        mem[_25617 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + stor15.length.field_1 + 224 len ceil32(_25617) + 32], 
                mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23579 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23579)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23579)]
                        if ceil32(_23579) > _23579:
                            mem[_23579 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23579) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _23676 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_23676) > _23676:
                            mem[_23676 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_23676) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _24978 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _25618 = mem[_24978]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + (uint255(stor15.length) * 0.5) + 224] = mem[_24978]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25618)] = mem[_24978 + 32 len ceil32(_25618)]
                    if ceil32(_25618) > _25618:
                        mem[_25618 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25618) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                    _23677 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_23677)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23677)]
                    if ceil32(_23677) > _23677:
                        mem[_23677 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_23677) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23859 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_23859) > _23859:
                        mem[_23859 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23859) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _24979 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + stor15.length.field_1 + 192] = 32
                _25619 = mem[_24979]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + stor15.length.field_1 + 224] = mem[_24979]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + stor15.length.field_1 + 256 len ceil32(_25619)] = mem[_24979 + 32 len ceil32(_25619)]
                if ceil32(_25619) > _25619:
                    mem[_25619 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17724 + stor15.length.field_1 + 224 len ceil32(_25619) + 32], 
            mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] = 0
            _17725 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23582 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23582)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23582)]
                        if ceil32(_23582) > _23582:
                            mem[_23582 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23582) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _23679 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_23679) > _23679:
                            mem[_23679 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_23679) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _24980 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _25620 = mem[_24980]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + (uint255(stor15.length) * 0.5) + 224] = mem[_24980]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25620)] = mem[_24980 + 32 len ceil32(_25620)]
                    if ceil32(_25620) > _25620:
                        mem[_25620 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25620) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                    _23680 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_23680)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23680)]
                    if ceil32(_23680) > _23680:
                        mem[_23680 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_23680) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23861 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_23861) > _23861:
                        mem[_23861 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23861) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _24981 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + stor15.length.field_1 + 192] = 32
                _25621 = mem[_24981]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + stor15.length.field_1 + 224] = mem[_24981]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + stor15.length.field_1 + 256 len ceil32(_25621)] = mem[_24981 + 32 len ceil32(_25621)]
                if ceil32(_25621) > _25621:
                    mem[_25621 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + stor15.length.field_1 + 224 len ceil32(_25621) + 32], 
            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23585 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23585)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23585)]
                    if ceil32(_23585) > _23585:
                        mem[_23585 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23585) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23682 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_23682) > _23682:
                        mem[_23682 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23682) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _24982 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + (uint255(stor15.length) * 0.5) + 192] = 32
                _25622 = mem[_24982]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + (uint255(stor15.length) * 0.5) + 224] = mem[_24982]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25622)] = mem[_24982 + 32 len ceil32(_25622)]
                if ceil32(_25622) > _25622:
                    mem[_25622 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25622) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                _23683 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_23683)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23683)]
                if ceil32(_23683) > _23683:
                    mem[_23683 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_23683) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _23863 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                if ceil32(_23863) > _23863:
                    mem[_23863 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_23863) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _24983 = mem[64]
            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + stor15.length.field_1 + 192
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + stor15.length.field_1 + 192] = 32
            _25623 = mem[_24983]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + stor15.length.field_1 + 224] = mem[_24983]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + stor15.length.field_1 + 256 len ceil32(_25623)] = mem[_24983 + 32 len ceil32(_25623)]
            if ceil32(_25623) > _25623:
                mem[_25623 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17725 + stor15.length.field_1 + 224 len ceil32(_25623) + 32], 
        mem[ceil32(uint255(stor14.length) * 0.5) + 160 len s] = call.data[calldata.size len s]
        t = s
        idx = arg1
        while idx:
            if t < 1:
                revert with 0, 17
            if 48 > !(idx % 10):
                revert with 0, 17
            if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                revert with 0, 50
            mem[t + ceil32(uint255(stor14.length) * 0.5) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(uint255(stor14.length) * 0.5)] = mem[128 len ceil32(uint255(stor14.length) * 0.5)]
        if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
            _17726 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
            var49001 = ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])
            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23588 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23588)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23588)]
                        if ceil32(_23588) > _23588:
                            mem[_23588 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23588) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _23685 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                        if ceil32(_23685) > _23685:
                            mem[_23685 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_23685) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _24984 = mem[64]
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _25624 = mem[_24984]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + (uint255(stor15.length) * 0.5) + 224] = mem[_24984]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25624)] = mem[_24984 + 32 len ceil32(_25624)]
                    if ceil32(_25624) > _25624:
                        mem[_25624 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25624) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                    _23686 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_23686)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23686)]
                    if ceil32(_23686) > _23686:
                        mem[_23686 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_23686) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23865 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_23865) > _23865:
                        mem[_23865 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23865) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _24985 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + stor15.length.field_1 + 192] = 32
                _25625 = mem[_24985]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + stor15.length.field_1 + 224] = mem[_24985]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + stor15.length.field_1 + 256 len ceil32(_25625)] = mem[_24985 + 32 len ceil32(_25625)]
                if ceil32(_25625) > _25625:
                    mem[_25625 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + stor15.length.field_1 + 224 len ceil32(_25625) + 32], 
            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23591 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23591)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23591)]
                    if ceil32(_23591) > _23591:
                        mem[_23591 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23591) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23688 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_23688) > _23688:
                        mem[_23688 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23688) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _24986 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + (uint255(stor15.length) * 0.5) + 192] = 32
                _25626 = mem[_24986]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + (uint255(stor15.length) * 0.5) + 224] = mem[_24986]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25626)] = mem[_24986 + 32 len ceil32(_25626)]
                if ceil32(_25626) > _25626:
                    mem[_25626 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25626) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                _23689 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_23689)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23689)]
                if ceil32(_23689) > _23689:
                    mem[_23689 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_23689) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _23867 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                if ceil32(_23867) > _23867:
                    mem[_23867 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_23867) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _24987 = mem[64]
            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + stor15.length.field_1 + 192
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + stor15.length.field_1 + 192] = 32
            _25627 = mem[_24987]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + stor15.length.field_1 + 224] = mem[_24987]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + stor15.length.field_1 + 256 len ceil32(_25627)] = mem[_24987 + 32 len ceil32(_25627)]
            if ceil32(_25627) > _25627:
                mem[_25627 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17726 + stor15.length.field_1 + 224 len ceil32(_25627) + 32], 
        mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] = 0
        _17727 = mem[ceil32(uint255(stor14.length) * 0.5) + 128]
        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])] = mem[ceil32(uint255(stor14.length) * 0.5) + 160 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])]
        var49001 = ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128])
        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 128]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 128]:
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23594 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23594)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23594)]
                    if ceil32(_23594) > _23594:
                        mem[_23594 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23594) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23691 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                    if ceil32(_23691) > _23691:
                        mem[_23691 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23691) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _24988 = mem[64]
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + (uint255(stor15.length) * 0.5) + 192] = 32
                _25628 = mem[_24988]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + (uint255(stor15.length) * 0.5) + 224] = mem[_24988]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25628)] = mem[_24988 + 32 len ceil32(_25628)]
                if ceil32(_25628) > _25628:
                    mem[_25628 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25628) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
                _23692 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_23692)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23692)]
                if ceil32(_23692) > _23692:
                    mem[_23692 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_23692) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _23869 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                if ceil32(_23869) > _23869:
                    mem[_23869 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_23869) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _24989 = mem[64]
            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + stor15.length.field_1 + 192
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + stor15.length.field_1 + 192] = 32
            _25629 = mem[_24989]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + stor15.length.field_1 + 224] = mem[_24989]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + stor15.length.field_1 + 256 len ceil32(_25629)] = mem[_24989 + 32 len ceil32(_25629)]
            if ceil32(_25629) > _25629:
                mem[_25629 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + stor15.length.field_1 + 224 len ceil32(_25629) + 32], 
        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 128] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 192] = 0
        if bool(stor15.length):
            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                _23597 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23597)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23597)]
                if ceil32(_23597) > _23597:
                    mem[_23597 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23597) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _23694 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
                if ceil32(_23694) > _23694:
                    mem[_23694 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_23694) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < uint255(stor15.length) * 0.5:
                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _24990 = mem[64]
            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + (uint255(stor15.length) * 0.5) + 192
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + (uint255(stor15.length) * 0.5) + 192] = 32
            _25630 = mem[_24990]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + (uint255(stor15.length) * 0.5) + 224] = mem[_24990]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25630)] = mem[_24990 + 32 len ceil32(_25630)]
            if ceil32(_25630) > _25630:
                mem[_25630 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + (uint255(stor15.length) * 0.5) + 256] = 0
            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25630) + 32], 
        if bool(stor15.length) == stor15.length.field_1 < 32:
            revert with 0, 34
        if not bool(stor15.length):
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = Mask(248, 8, stor15.length)
            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 192] = 32
            _23695 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256 len ceil32(_23695)] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(_23695)]
            if ceil32(_23695) > _23695:
                mem[_23695 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + stor15.length.field_1 + 224 len ceil32(_23695) + 32], 
        if bool(stor15.length) != 1:
            mem[64] = 0
            _23871 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160]
            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 160])]
            if ceil32(_23871) > _23871:
                mem[_23871 + 64] = 0
            return memory
              from mem[64]
               len ceil32(_23871) + -mem[64] + 64
        mem[0] = 15
        idx = 0
        t = 0
        while idx < stor15.length.field_1:
            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 128] + 192] = stor15[t].field_0
            idx = idx + 32
            t = t + 1
            continue 
        _24991 = mem[64]
        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + stor15.length.field_1 + 192
        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + stor15.length.field_1 + 192] = 32
        _25631 = mem[_24991]
        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + stor15.length.field_1 + 224] = mem[_24991]
        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + stor15.length.field_1 + 256 len ceil32(_25631)] = mem[_24991 + 32 len ceil32(_25631)]
        if ceil32(_25631) > _25631:
            mem[_25631 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + stor15.length.field_1 + 256] = 0
        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + _17727 + stor15.length.field_1 + 224 len ceil32(_25631) + 32], 
    if bool(stor14.length) == stor14.length.field_1 < 32:
        revert with 0, 34
    mem[96] = stor14.length.field_1
    if bool(stor14.length):
        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
            revert with 0, 34
        if not Mask(256, -1, stor14.length):
            if stor14.length.field_1 <= 0:
                return ''
            if not arg1:
                mem[64] = ceil32(stor14.length.field_1) + 192
                mem[ceil32(stor14.length.field_1) + 128] = 1
                mem[ceil32(stor14.length.field_1) + 160] = 0x3000000000000000000000000000000000000000000000000000000000000000
                mem[ceil32(stor14.length.field_1) + 224 len ceil32(stor14.length.field_1)] = mem[128 len ceil32(stor14.length.field_1)]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 224] = 0x3000000000000000000000000000000000000000000000000000000000000000
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = 0
                if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(stor14.length.field_1) + 192]
                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                            if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                                return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                            mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = 0
                            return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _7368 = mem[ceil32(stor14.length.field_1) + 192]
                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                            if ceil32(_7368) > _7368:
                                mem[_7368 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_7368) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        s = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 224] = stor15[s].field_0
                            idx = idx + 32
                            s = s + 1
                            continue 
                        _12586 = mem[64]
                        mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                        _13034 = mem[_12586]
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[_12586]
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(_13034)] = mem[_12586 + 32 len ceil32(_13034)]
                        if ceil32(_13034) > _13034:
                            mem[_13034 + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257 len ceil32(_13034) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[ceil32(stor14.length.field_1) + 192]
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                        if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                            return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                        mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _7485 = mem[ceil32(stor14.length.field_1) + 192]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                        if ceil32(_7485) > _7485:
                            mem[_7485 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_7485) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    s = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 224] = stor15[s].field_0
                        idx = idx + 32
                        s = s + 1
                        continue 
                    _12587 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                    _13035 = mem[_12587]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[_12587]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(_13035)] = mem[_12587 + 32 len ceil32(_13035)]
                    if ceil32(_13035) > _13035:
                        mem[_13035 + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(_13035) + 32]
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(stor14.length.field_1) + 192]
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                        if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                            return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                        mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _7374 = mem[ceil32(stor14.length.field_1) + 192]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                        if ceil32(_7374) > _7374:
                            mem[_7374 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_7374) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    s = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 224] = stor15[s].field_0
                        idx = idx + 32
                        s = s + 1
                        continue 
                    _12590 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                    _13038 = mem[_12590]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[_12590]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(_13038)] = mem[_12590 + 32 len ceil32(_13038)]
                    if ceil32(_13038) > _13038:
                        mem[_13038 + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257 len ceil32(_13038) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[ceil32(stor14.length.field_1) + 192]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                        return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                    mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _7489 = mem[ceil32(stor14.length.field_1) + 192]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    if ceil32(_7489) > _7489:
                        mem[_7489 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_7489) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                s = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 224] = stor15[s].field_0
                    idx = idx + 32
                    s = s + 1
                    continue 
                _12591 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                _13039 = mem[_12591]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[_12591]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(_13039)] = mem[_12591 + 32 len ceil32(_13039)]
                if ceil32(_13039) > _13039:
                    mem[_13039 + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(_13039) + 32]
            s = 0
            idx = arg1
            while idx:
                if s == -1:
                    revert with 0, 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 0, 65
            mem[ceil32(stor14.length.field_1) + 128] = s
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + 160
            if not s:
                t = s
                idx = arg1
                while idx:
                    if t < 1:
                        revert with 0, 17
                    if 48 > !(idx % 10):
                        revert with 0, 17
                    if t - 1 >= mem[ceil32(stor14.length.field_1) + 128]:
                        revert with 0, 50
                    mem[t + ceil32(stor14.length.field_1) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(stor14.length.field_1)] = mem[128 len ceil32(stor14.length.field_1)]
                if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                    _12580 = mem[ceil32(stor14.length.field_1) + 128]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
                    if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
                        if bool(stor15.length):
                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                revert with 0, 34
                            if not bool(stor15.length):
                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                                _18880 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18880)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18880)]
                                if ceil32(_18880) > _18880:
                                    mem[_18880 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18880) + 32], 
                            if bool(stor15.length) != 1:
                                mem[64] = 0
                                _19121 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                                if ceil32(_19121) > _19121:
                                    mem[_19121 + 64] = 0
                                return memory
                                  from mem[64]
                                   len ceil32(_19121) + -mem[64] + 64
                            mem[0] = 15
                            idx = 0
                            t = 0
                            while idx < uint255(stor15.length) * 0.5:
                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                                idx = idx + 32
                                t = t + 1
                                continue 
                            _22208 = mem[64]
                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + (uint255(stor15.length) * 0.5) + 192] = 32
                            _23056 = mem[_22208]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + (uint255(stor15.length) * 0.5) + 224] = mem[_22208]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23056)] = mem[_22208 + 32 len ceil32(_23056)]
                            if ceil32(_23056) > _23056:
                                mem[_23056 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23056) + 32], 
                        if bool(stor15.length) == stor15.length.field_1 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                            _19122 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19122)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19122)]
                            if ceil32(_19122) > _19122:
                                mem[_19122 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19122) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19377 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                            if ceil32(_19377) > _19377:
                                mem[_19377 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19377) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < stor15.length.field_1:
                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22209 = mem[64]
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + stor15.length.field_1 + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + stor15.length.field_1 + 192] = 32
                        _23057 = mem[_22209]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + stor15.length.field_1 + 224] = mem[_22209]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + stor15.length.field_1 + 256 len ceil32(_23057)] = mem[_22209 + 32 len ceil32(_23057)]
                        if ceil32(_23057) > _23057:
                            mem[_23057 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + stor15.length.field_1 + 224 len ceil32(_23057) + 32], 
                    mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18883 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18883)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18883)]
                            if ceil32(_18883) > _18883:
                                mem[_18883 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18883) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19124 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                            if ceil32(_19124) > _19124:
                                mem[_19124 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19124) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22210 = mem[64]
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23058 = mem[_22210]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + (uint255(stor15.length) * 0.5) + 224] = mem[_22210]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23058)] = mem[_22210 + 32 len ceil32(_23058)]
                        if ceil32(_23058) > _23058:
                            mem[_23058 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23058) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                        _19125 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19125)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19125)]
                        if ceil32(_19125) > _19125:
                            mem[_19125 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19125) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19379 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19379) > _19379:
                            mem[_19379 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19379) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22211 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + stor15.length.field_1 + 192] = 32
                    _23059 = mem[_22211]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + stor15.length.field_1 + 224] = mem[_22211]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + stor15.length.field_1 + 256 len ceil32(_23059)] = mem[_22211 + 32 len ceil32(_23059)]
                    if ceil32(_23059) > _23059:
                        mem[_23059 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12580 + stor15.length.field_1 + 224 len ceil32(_23059) + 32], 
                mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 192] = 0
                _12581 = mem[ceil32(stor14.length.field_1) + 128]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
                if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18886 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18886)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18886)]
                            if ceil32(_18886) > _18886:
                                mem[_18886 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18886) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19127 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                            if ceil32(_19127) > _19127:
                                mem[_19127 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19127) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22212 = mem[64]
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23060 = mem[_22212]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + (uint255(stor15.length) * 0.5) + 224] = mem[_22212]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23060)] = mem[_22212 + 32 len ceil32(_23060)]
                        if ceil32(_23060) > _23060:
                            mem[_23060 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23060) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                        _19128 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19128)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19128)]
                        if ceil32(_19128) > _19128:
                            mem[_19128 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19128) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19381 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19381) > _19381:
                            mem[_19381 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19381) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22213 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + stor15.length.field_1 + 192] = 32
                    _23061 = mem[_22213]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + stor15.length.field_1 + 224] = mem[_22213]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + stor15.length.field_1 + 256 len ceil32(_23061)] = mem[_22213 + 32 len ceil32(_23061)]
                    if ceil32(_23061) > _23061:
                        mem[_23061 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + stor15.length.field_1 + 224 len ceil32(_23061) + 32], 
                mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18889 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18889)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18889)]
                        if ceil32(_18889) > _18889:
                            mem[_18889 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18889) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19130 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19130) > _19130:
                            mem[_19130 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19130) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22214 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23062 = mem[_22214]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + (uint255(stor15.length) * 0.5) + 224] = mem[_22214]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23062)] = mem[_22214 + 32 len ceil32(_23062)]
                    if ceil32(_23062) > _23062:
                        mem[_23062 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23062) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                    _19131 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19131)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19131)]
                    if ceil32(_19131) > _19131:
                        mem[_19131 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19131) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19383 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19383) > _19383:
                        mem[_19383 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19383) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22215 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + stor15.length.field_1 + 192] = 32
                _23063 = mem[_22215]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + stor15.length.field_1 + 224] = mem[_22215]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + stor15.length.field_1 + 256 len ceil32(_23063)] = mem[_22215 + 32 len ceil32(_23063)]
                if ceil32(_23063) > _23063:
                    mem[_23063 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12581 + stor15.length.field_1 + 224 len ceil32(_23063) + 32], 
            mem[ceil32(stor14.length.field_1) + 160 len s] = call.data[calldata.size len s]
            t = s
            idx = arg1
            while idx:
                if t < 1:
                    revert with 0, 17
                if 48 > !(idx % 10):
                    revert with 0, 17
                if t - 1 >= mem[ceil32(stor14.length.field_1) + 128]:
                    revert with 0, 50
                mem[t + ceil32(stor14.length.field_1) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(stor14.length.field_1)] = mem[128 len ceil32(stor14.length.field_1)]
            if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                _12582 = mem[ceil32(stor14.length.field_1) + 128]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
                if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18892 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18892)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18892)]
                            if ceil32(_18892) > _18892:
                                mem[_18892 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18892) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19133 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                            if ceil32(_19133) > _19133:
                                mem[_19133 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19133) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22216 = mem[64]
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23064 = mem[_22216]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + (uint255(stor15.length) * 0.5) + 224] = mem[_22216]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23064)] = mem[_22216 + 32 len ceil32(_23064)]
                        if ceil32(_23064) > _23064:
                            mem[_23064 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23064) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                        _19134 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19134)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19134)]
                        if ceil32(_19134) > _19134:
                            mem[_19134 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19134) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19385 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19385) > _19385:
                            mem[_19385 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19385) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22217 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + stor15.length.field_1 + 192] = 32
                    _23065 = mem[_22217]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + stor15.length.field_1 + 224] = mem[_22217]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + stor15.length.field_1 + 256 len ceil32(_23065)] = mem[_22217 + 32 len ceil32(_23065)]
                    if ceil32(_23065) > _23065:
                        mem[_23065 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + stor15.length.field_1 + 224 len ceil32(_23065) + 32], 
                mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18895 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18895)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18895)]
                        if ceil32(_18895) > _18895:
                            mem[_18895 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18895) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19136 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19136) > _19136:
                            mem[_19136 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19136) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22218 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23066 = mem[_22218]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + (uint255(stor15.length) * 0.5) + 224] = mem[_22218]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23066)] = mem[_22218 + 32 len ceil32(_23066)]
                    if ceil32(_23066) > _23066:
                        mem[_23066 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23066) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                    _19137 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19137)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19137)]
                    if ceil32(_19137) > _19137:
                        mem[_19137 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19137) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19387 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19387) > _19387:
                        mem[_19387 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19387) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22219 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + stor15.length.field_1 + 192] = 32
                _23067 = mem[_22219]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + stor15.length.field_1 + 224] = mem[_22219]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + stor15.length.field_1 + 256 len ceil32(_23067)] = mem[_22219 + 32 len ceil32(_23067)]
                if ceil32(_23067) > _23067:
                    mem[_23067 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12582 + stor15.length.field_1 + 224 len ceil32(_23067) + 32], 
            mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 192] = 0
            _12583 = mem[ceil32(stor14.length.field_1) + 128]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
            if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18898 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18898)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18898)]
                        if ceil32(_18898) > _18898:
                            mem[_18898 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18898) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19139 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19139) > _19139:
                            mem[_19139 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19139) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22220 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23068 = mem[_22220]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + (uint255(stor15.length) * 0.5) + 224] = mem[_22220]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23068)] = mem[_22220 + 32 len ceil32(_23068)]
                    if ceil32(_23068) > _23068:
                        mem[_23068 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23068) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                    _19140 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19140)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19140)]
                    if ceil32(_19140) > _19140:
                        mem[_19140 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19140) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19389 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19389) > _19389:
                        mem[_19389 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19389) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22221 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + stor15.length.field_1 + 192] = 32
                _23069 = mem[_22221]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + stor15.length.field_1 + 224] = mem[_22221]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + stor15.length.field_1 + 256 len ceil32(_23069)] = mem[_22221 + 32 len ceil32(_23069)]
                if ceil32(_23069) > _23069:
                    mem[_23069 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + stor15.length.field_1 + 224 len ceil32(_23069) + 32], 
            mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _18901 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18901)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18901)]
                    if ceil32(_18901) > _18901:
                        mem[_18901 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18901) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19142 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19142) > _19142:
                        mem[_19142 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19142) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22222 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + (uint255(stor15.length) * 0.5) + 192] = 32
                _23070 = mem[_22222]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + (uint255(stor15.length) * 0.5) + 224] = mem[_22222]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23070)] = mem[_22222 + 32 len ceil32(_23070)]
                if ceil32(_23070) > _23070:
                    mem[_23070 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23070) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                _19143 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19143)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19143)]
                if ceil32(_19143) > _19143:
                    mem[_19143 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19143) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _19391 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_19391) > _19391:
                    mem[_19391 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_19391) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _22223 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + stor15.length.field_1 + 192] = 32
            _23071 = mem[_22223]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + stor15.length.field_1 + 224] = mem[_22223]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + stor15.length.field_1 + 256 len ceil32(_23071)] = mem[_22223 + 32 len ceil32(_23071)]
            if ceil32(_23071) > _23071:
                mem[_23071 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12583 + stor15.length.field_1 + 224 len ceil32(_23071) + 32], 
        if 31 >= uint255(stor14.length) * 0.5:
            mem[128] = 256 * stor14.length.field_8
            if stor14.length.field_1 <= 0:
                return ''
            if not arg1:
                mem[64] = ceil32(stor14.length.field_1) + 192
                mem[ceil32(stor14.length.field_1) + 128] = 1
                mem[ceil32(stor14.length.field_1) + 160] = 0x3000000000000000000000000000000000000000000000000000000000000000
                mem[ceil32(stor14.length.field_1) + 224 len ceil32(stor14.length.field_1)] = mem[128 len ceil32(stor14.length.field_1)]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 224] = 0x3000000000000000000000000000000000000000000000000000000000000000
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = 0
                if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(stor14.length.field_1) + 192]
                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                            if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                                return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                            mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = 0
                            return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _7390 = mem[ceil32(stor14.length.field_1) + 192]
                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                            if ceil32(_7390) > _7390:
                                mem[_7390 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_7390) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        s = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 224] = stor15[s].field_0
                            idx = idx + 32
                            s = s + 1
                            continue 
                        _12600 = mem[64]
                        mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                        _13046 = mem[_12600]
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[_12600]
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(_13046)] = mem[_12600 + 32 len ceil32(_13046)]
                        if ceil32(_13046) > _13046:
                            mem[_13046 + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257 len ceil32(_13046) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[ceil32(stor14.length.field_1) + 192]
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                        if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                            return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                        mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _7502 = mem[ceil32(stor14.length.field_1) + 192]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                        if ceil32(_7502) > _7502:
                            mem[_7502 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_7502) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    s = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 224] = stor15[s].field_0
                        idx = idx + 32
                        s = s + 1
                        continue 
                    _12601 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                    _13047 = mem[_12601]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[_12601]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(_13047)] = mem[_12601 + 32 len ceil32(_13047)]
                    if ceil32(_13047) > _13047:
                        mem[_13047 + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(_13047) + 32]
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(stor14.length.field_1) + 192]
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                        if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                            return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                        mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _7396 = mem[ceil32(stor14.length.field_1) + 192]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                        if ceil32(_7396) > _7396:
                            mem[_7396 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_7396) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    s = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 224] = stor15[s].field_0
                        idx = idx + 32
                        s = s + 1
                        continue 
                    _12604 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                    _13050 = mem[_12604]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[_12604]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(_13050)] = mem[_12604 + 32 len ceil32(_13050)]
                    if ceil32(_13050) > _13050:
                        mem[_13050 + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257 len ceil32(_13050) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[ceil32(stor14.length.field_1) + 192]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                        return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                    mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _7506 = mem[ceil32(stor14.length.field_1) + 192]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    if ceil32(_7506) > _7506:
                        mem[_7506 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_7506) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                s = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 224] = stor15[s].field_0
                    idx = idx + 32
                    s = s + 1
                    continue 
                _12605 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                _13051 = mem[_12605]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[_12605]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(_13051)] = mem[_12605 + 32 len ceil32(_13051)]
                if ceil32(_13051) > _13051:
                    mem[_13051 + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(_13051) + 32]
            s = 0
            idx = arg1
            while idx:
                if s == -1:
                    revert with 0, 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 0, 65
            mem[ceil32(stor14.length.field_1) + 128] = s
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + 160
            if not s:
                t = s
                idx = arg1
                while idx:
                    if t < 1:
                        revert with 0, 17
                    if 48 > !(idx % 10):
                        revert with 0, 17
                    if t - 1 >= mem[ceil32(stor14.length.field_1) + 128]:
                        revert with 0, 50
                    mem[t + ceil32(stor14.length.field_1) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(stor14.length.field_1)] = mem[128 len ceil32(stor14.length.field_1)]
                if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                    _12594 = mem[ceil32(stor14.length.field_1) + 128]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
                    if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
                        if bool(stor15.length):
                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                revert with 0, 34
                            if not bool(stor15.length):
                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                                _18912 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18912)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18912)]
                                if ceil32(_18912) > _18912:
                                    mem[_18912 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18912) + 32], 
                            if bool(stor15.length) != 1:
                                mem[64] = 0
                                _19161 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                                if ceil32(_19161) > _19161:
                                    mem[_19161 + 64] = 0
                                return memory
                                  from mem[64]
                                   len ceil32(_19161) + -mem[64] + 64
                            mem[0] = 15
                            idx = 0
                            t = 0
                            while idx < uint255(stor15.length) * 0.5:
                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                                idx = idx + 32
                                t = t + 1
                                continue 
                            _22224 = mem[64]
                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + (uint255(stor15.length) * 0.5) + 192] = 32
                            _23080 = mem[_22224]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + (uint255(stor15.length) * 0.5) + 224] = mem[_22224]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23080)] = mem[_22224 + 32 len ceil32(_23080)]
                            if ceil32(_23080) > _23080:
                                mem[_23080 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23080) + 32], 
                        if bool(stor15.length) == stor15.length.field_1 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                            _19162 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19162)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19162)]
                            if ceil32(_19162) > _19162:
                                mem[_19162 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19162) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19425 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                            if ceil32(_19425) > _19425:
                                mem[_19425 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19425) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < stor15.length.field_1:
                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22225 = mem[64]
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + stor15.length.field_1 + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + stor15.length.field_1 + 192] = 32
                        _23081 = mem[_22225]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + stor15.length.field_1 + 224] = mem[_22225]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + stor15.length.field_1 + 256 len ceil32(_23081)] = mem[_22225 + 32 len ceil32(_23081)]
                        if ceil32(_23081) > _23081:
                            mem[_23081 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + stor15.length.field_1 + 224 len ceil32(_23081) + 32], 
                    mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18915 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18915)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18915)]
                            if ceil32(_18915) > _18915:
                                mem[_18915 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18915) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19164 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                            if ceil32(_19164) > _19164:
                                mem[_19164 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19164) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22226 = mem[64]
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23082 = mem[_22226]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + (uint255(stor15.length) * 0.5) + 224] = mem[_22226]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23082)] = mem[_22226 + 32 len ceil32(_23082)]
                        if ceil32(_23082) > _23082:
                            mem[_23082 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23082) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                        _19165 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19165)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19165)]
                        if ceil32(_19165) > _19165:
                            mem[_19165 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19165) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19427 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19427) > _19427:
                            mem[_19427 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19427) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22227 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + stor15.length.field_1 + 192] = 32
                    _23083 = mem[_22227]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + stor15.length.field_1 + 224] = mem[_22227]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + stor15.length.field_1 + 256 len ceil32(_23083)] = mem[_22227 + 32 len ceil32(_23083)]
                    if ceil32(_23083) > _23083:
                        mem[_23083 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12594 + stor15.length.field_1 + 224 len ceil32(_23083) + 32], 
                mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 192] = 0
                _12595 = mem[ceil32(stor14.length.field_1) + 128]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
                if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18918 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18918)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18918)]
                            if ceil32(_18918) > _18918:
                                mem[_18918 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18918) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19167 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                            if ceil32(_19167) > _19167:
                                mem[_19167 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19167) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22228 = mem[64]
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23084 = mem[_22228]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + (uint255(stor15.length) * 0.5) + 224] = mem[_22228]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23084)] = mem[_22228 + 32 len ceil32(_23084)]
                        if ceil32(_23084) > _23084:
                            mem[_23084 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23084) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                        _19168 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19168)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19168)]
                        if ceil32(_19168) > _19168:
                            mem[_19168 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19168) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19429 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19429) > _19429:
                            mem[_19429 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19429) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22229 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + stor15.length.field_1 + 192] = 32
                    _23085 = mem[_22229]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + stor15.length.field_1 + 224] = mem[_22229]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + stor15.length.field_1 + 256 len ceil32(_23085)] = mem[_22229 + 32 len ceil32(_23085)]
                    if ceil32(_23085) > _23085:
                        mem[_23085 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + stor15.length.field_1 + 224 len ceil32(_23085) + 32], 
                mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18921 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18921)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18921)]
                        if ceil32(_18921) > _18921:
                            mem[_18921 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18921) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19170 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19170) > _19170:
                            mem[_19170 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19170) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22230 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23086 = mem[_22230]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + (uint255(stor15.length) * 0.5) + 224] = mem[_22230]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23086)] = mem[_22230 + 32 len ceil32(_23086)]
                    if ceil32(_23086) > _23086:
                        mem[_23086 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23086) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                    _19171 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19171)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19171)]
                    if ceil32(_19171) > _19171:
                        mem[_19171 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19171) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19431 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19431) > _19431:
                        mem[_19431 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19431) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22231 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + stor15.length.field_1 + 192] = 32
                _23087 = mem[_22231]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + stor15.length.field_1 + 224] = mem[_22231]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + stor15.length.field_1 + 256 len ceil32(_23087)] = mem[_22231 + 32 len ceil32(_23087)]
                if ceil32(_23087) > _23087:
                    mem[_23087 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12595 + stor15.length.field_1 + 224 len ceil32(_23087) + 32], 
            mem[ceil32(stor14.length.field_1) + 160 len s] = call.data[calldata.size len s]
            t = s
            idx = arg1
            while idx:
                if t < 1:
                    revert with 0, 17
                if 48 > !(idx % 10):
                    revert with 0, 17
                if t - 1 >= mem[ceil32(stor14.length.field_1) + 128]:
                    revert with 0, 50
                mem[t + ceil32(stor14.length.field_1) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(stor14.length.field_1)] = mem[128 len ceil32(stor14.length.field_1)]
            if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                _12596 = mem[ceil32(stor14.length.field_1) + 128]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
                if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18924 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18924)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18924)]
                            if ceil32(_18924) > _18924:
                                mem[_18924 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18924) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19173 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                            if ceil32(_19173) > _19173:
                                mem[_19173 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19173) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22232 = mem[64]
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23088 = mem[_22232]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + (uint255(stor15.length) * 0.5) + 224] = mem[_22232]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23088)] = mem[_22232 + 32 len ceil32(_23088)]
                        if ceil32(_23088) > _23088:
                            mem[_23088 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23088) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                        _19174 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19174)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19174)]
                        if ceil32(_19174) > _19174:
                            mem[_19174 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19174) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19433 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19433) > _19433:
                            mem[_19433 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19433) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22233 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + stor15.length.field_1 + 192] = 32
                    _23089 = mem[_22233]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + stor15.length.field_1 + 224] = mem[_22233]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + stor15.length.field_1 + 256 len ceil32(_23089)] = mem[_22233 + 32 len ceil32(_23089)]
                    if ceil32(_23089) > _23089:
                        mem[_23089 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + stor15.length.field_1 + 224 len ceil32(_23089) + 32], 
                mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18927 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18927)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18927)]
                        if ceil32(_18927) > _18927:
                            mem[_18927 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18927) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19176 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19176) > _19176:
                            mem[_19176 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19176) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22234 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23090 = mem[_22234]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + (uint255(stor15.length) * 0.5) + 224] = mem[_22234]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23090)] = mem[_22234 + 32 len ceil32(_23090)]
                    if ceil32(_23090) > _23090:
                        mem[_23090 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23090) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                    _19177 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19177)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19177)]
                    if ceil32(_19177) > _19177:
                        mem[_19177 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19177) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19435 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19435) > _19435:
                        mem[_19435 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19435) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22235 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + stor15.length.field_1 + 192] = 32
                _23091 = mem[_22235]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + stor15.length.field_1 + 224] = mem[_22235]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + stor15.length.field_1 + 256 len ceil32(_23091)] = mem[_22235 + 32 len ceil32(_23091)]
                if ceil32(_23091) > _23091:
                    mem[_23091 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12596 + stor15.length.field_1 + 224 len ceil32(_23091) + 32], 
            mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 192] = 0
            _12597 = mem[ceil32(stor14.length.field_1) + 128]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
            if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18930 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18930)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18930)]
                        if ceil32(_18930) > _18930:
                            mem[_18930 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18930) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19179 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19179) > _19179:
                            mem[_19179 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19179) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22236 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23092 = mem[_22236]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + (uint255(stor15.length) * 0.5) + 224] = mem[_22236]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23092)] = mem[_22236 + 32 len ceil32(_23092)]
                    if ceil32(_23092) > _23092:
                        mem[_23092 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23092) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                    _19180 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19180)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19180)]
                    if ceil32(_19180) > _19180:
                        mem[_19180 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19180) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19437 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19437) > _19437:
                        mem[_19437 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19437) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22237 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + stor15.length.field_1 + 192] = 32
                _23093 = mem[_22237]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + stor15.length.field_1 + 224] = mem[_22237]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + stor15.length.field_1 + 256 len ceil32(_23093)] = mem[_22237 + 32 len ceil32(_23093)]
                if ceil32(_23093) > _23093:
                    mem[_23093 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + stor15.length.field_1 + 224 len ceil32(_23093) + 32], 
            mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _18933 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18933)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18933)]
                    if ceil32(_18933) > _18933:
                        mem[_18933 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18933) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19182 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19182) > _19182:
                        mem[_19182 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19182) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22238 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + (uint255(stor15.length) * 0.5) + 192] = 32
                _23094 = mem[_22238]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + (uint255(stor15.length) * 0.5) + 224] = mem[_22238]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23094)] = mem[_22238 + 32 len ceil32(_23094)]
                if ceil32(_23094) > _23094:
                    mem[_23094 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23094) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                _19183 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19183)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19183)]
                if ceil32(_19183) > _19183:
                    mem[_19183 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19183) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _19439 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_19439) > _19439:
                    mem[_19439 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_19439) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _22239 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + stor15.length.field_1 + 192] = 32
            _23095 = mem[_22239]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + stor15.length.field_1 + 224] = mem[_22239]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + stor15.length.field_1 + 256 len ceil32(_23095)] = mem[_22239 + 32 len ceil32(_23095)]
            if ceil32(_23095) > _23095:
                mem[_23095 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12597 + stor15.length.field_1 + 224 len ceil32(_23095) + 32], 
        mem[0] = 14
        mem[128] = uint256(stor14.field_0)
        idx = 128
        s = 0
        while (uint255(stor14.length) * 0.5) + 96 > idx:
            mem[idx + 32] = stor14[s].field_256
            idx = idx + 32
            s = s + 1
            continue 
        if stor14.length.field_1 <= 0:
            return ''
        if not arg1:
            mem[ceil32(stor14.length.field_1) + 128] = 1
            mem[ceil32(stor14.length.field_1) + 160] = 0x3000000000000000000000000000000000000000000000000000000000000000
            mem[ceil32(stor14.length.field_1) + 224 len ceil32(stor14.length.field_1)] = mem[128 len ceil32(stor14.length.field_1)]
            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 224] = 0x3000000000000000000000000000000000000000000000000000000000000000
            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = 0
            if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                if not bool(stor15.length):
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[ceil32(stor14.length.field_1) + 192]
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                        if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                            return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                        mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                    if bool(stor15.length) == 1:
                        idx = 0
                        s = 0
                        while idx < stor15.length.field_1:
                            mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = stor15[s].field_0
                            idx = idx + 32
                            s = s + 1
                            continue 
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[ceil32(stor14.length.field_1) + 192]
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                        if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                            return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                        mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                    mem[64] = 0
                    _13787 = mem[ceil32(stor14.length.field_1) + 192]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    var57001 = ceil32(_13787)
                    if ceil32(_13787) > _13787:
                        mem[_13787 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_13787) + -mem[64] + 64
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(stor14.length.field_1) + 192]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                else:
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _13540 = mem[ceil32(stor14.length.field_1) + 192]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                        if ceil32(_13540) > _13540:
                            mem[_13540 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_13540) + -mem[64] + 64
                    idx = 0
                    s = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = stor15[s].field_0
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(stor14.length.field_1) + 192]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    var59001 = ceil32(mem[ceil32(stor14.length.field_1) + 192])
            else:
                if not bool(stor15.length):
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[ceil32(stor14.length.field_1) + 192]
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                        if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                            return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                        mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                    if bool(stor15.length) == 1:
                        idx = 0
                        s = 0
                        while idx < stor15.length.field_1:
                            mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = stor15[s].field_0
                            idx = idx + 32
                            s = s + 1
                            continue 
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[ceil32(stor14.length.field_1) + 192]
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                        if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                            return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                        mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                    mem[64] = 0
                    _13791 = mem[ceil32(stor14.length.field_1) + 192]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    var57001 = ceil32(_13791)
                    if ceil32(_13791) > _13791:
                        mem[_13791 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_13791) + -mem[64] + 64
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(stor14.length.field_1) + 192]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                else:
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _13546 = mem[ceil32(stor14.length.field_1) + 192]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                        if ceil32(_13546) > _13546:
                            mem[_13546 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_13546) + -mem[64] + 64
                    idx = 0
                    s = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = stor15[s].field_0
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(stor14.length.field_1) + 192]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    var59001 = ceil32(mem[ceil32(stor14.length.field_1) + 192])
            if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
            mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = 0
            return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
        s = 0
        idx = arg1
        while idx:
            if s == -1:
                revert with 0, 17
            s = s + 1
            idx = idx / 10
            continue 
        if s > test266151307():
            revert with 0, 65
        mem[ceil32(stor14.length.field_1) + 128] = s
        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + 160
        if not s:
            t = s
            idx = arg1
            while idx:
                if t < 1:
                    revert with 0, 17
                if 48 > !(idx % 10):
                    revert with 0, 17
                if t - 1 >= mem[ceil32(stor14.length.field_1) + 128]:
                    revert with 0, 50
                mem[t + ceil32(stor14.length.field_1) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(stor14.length.field_1)] = mem[128 len ceil32(stor14.length.field_1)]
            if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                _17736 = mem[ceil32(stor14.length.field_1) + 128]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
                if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _23600 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23600)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23600)]
                            if ceil32(_23600) > _23600:
                                mem[_23600 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23600) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _23697 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                            if ceil32(_23697) > _23697:
                                mem[_23697 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_23697) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _24992 = mem[64]
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _25632 = mem[_24992]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + (uint255(stor15.length) * 0.5) + 224] = mem[_24992]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25632)] = mem[_24992 + 32 len ceil32(_25632)]
                        if ceil32(_25632) > _25632:
                            mem[_25632 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25632) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                        _23698 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_23698)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23698)]
                        if ceil32(_23698) > _23698:
                            mem[_23698 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_23698) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _23937 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_23937) > _23937:
                            mem[_23937 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_23937) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _24993 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + stor15.length.field_1 + 192] = 32
                    _25633 = mem[_24993]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + stor15.length.field_1 + 224] = mem[_24993]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + stor15.length.field_1 + 256 len ceil32(_25633)] = mem[_24993 + 32 len ceil32(_25633)]
                    if ceil32(_25633) > _25633:
                        mem[_25633 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + stor15.length.field_1 + 224 len ceil32(_25633) + 32], 
                mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23603 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23603)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23603)]
                        if ceil32(_23603) > _23603:
                            mem[_23603 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23603) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _23700 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_23700) > _23700:
                            mem[_23700 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_23700) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _24994 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _25634 = mem[_24994]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + (uint255(stor15.length) * 0.5) + 224] = mem[_24994]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25634)] = mem[_24994 + 32 len ceil32(_25634)]
                    if ceil32(_25634) > _25634:
                        mem[_25634 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25634) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                    _23701 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_23701)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23701)]
                    if ceil32(_23701) > _23701:
                        mem[_23701 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_23701) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23939 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_23939) > _23939:
                        mem[_23939 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23939) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _24995 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + stor15.length.field_1 + 192] = 32
                _25635 = mem[_24995]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + stor15.length.field_1 + 224] = mem[_24995]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + stor15.length.field_1 + 256 len ceil32(_25635)] = mem[_24995 + 32 len ceil32(_25635)]
                if ceil32(_25635) > _25635:
                    mem[_25635 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17736 + stor15.length.field_1 + 224 len ceil32(_25635) + 32], 
            mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 192] = 0
            _17737 = mem[ceil32(stor14.length.field_1) + 128]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
            if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23606 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23606)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23606)]
                        if ceil32(_23606) > _23606:
                            mem[_23606 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23606) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _23703 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_23703) > _23703:
                            mem[_23703 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_23703) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _24996 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _25636 = mem[_24996]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + (uint255(stor15.length) * 0.5) + 224] = mem[_24996]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25636)] = mem[_24996 + 32 len ceil32(_25636)]
                    if ceil32(_25636) > _25636:
                        mem[_25636 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25636) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                    _23704 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_23704)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23704)]
                    if ceil32(_23704) > _23704:
                        mem[_23704 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_23704) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23941 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_23941) > _23941:
                        mem[_23941 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23941) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _24997 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + stor15.length.field_1 + 192] = 32
                _25637 = mem[_24997]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + stor15.length.field_1 + 224] = mem[_24997]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + stor15.length.field_1 + 256 len ceil32(_25637)] = mem[_24997 + 32 len ceil32(_25637)]
                if ceil32(_25637) > _25637:
                    mem[_25637 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + stor15.length.field_1 + 224 len ceil32(_25637) + 32], 
            mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23609 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23609)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23609)]
                    if ceil32(_23609) > _23609:
                        mem[_23609 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23609) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23706 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_23706) > _23706:
                        mem[_23706 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23706) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _24998 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + (uint255(stor15.length) * 0.5) + 192] = 32
                _25638 = mem[_24998]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + (uint255(stor15.length) * 0.5) + 224] = mem[_24998]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25638)] = mem[_24998 + 32 len ceil32(_25638)]
                if ceil32(_25638) > _25638:
                    mem[_25638 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25638) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                _23707 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_23707)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23707)]
                if ceil32(_23707) > _23707:
                    mem[_23707 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_23707) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _23943 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_23943) > _23943:
                    mem[_23943 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_23943) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _24999 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + stor15.length.field_1 + 192] = 32
            _25639 = mem[_24999]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + stor15.length.field_1 + 224] = mem[_24999]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + stor15.length.field_1 + 256 len ceil32(_25639)] = mem[_24999 + 32 len ceil32(_25639)]
            if ceil32(_25639) > _25639:
                mem[_25639 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17737 + stor15.length.field_1 + 224 len ceil32(_25639) + 32], 
        mem[ceil32(stor14.length.field_1) + 160 len s] = call.data[calldata.size len s]
        t = s
        idx = arg1
        while idx:
            if t < 1:
                revert with 0, 17
            if 48 > !(idx % 10):
                revert with 0, 17
            if t - 1 >= mem[ceil32(stor14.length.field_1) + 128]:
                revert with 0, 50
            mem[t + ceil32(stor14.length.field_1) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(stor14.length.field_1)] = mem[128 len ceil32(stor14.length.field_1)]
        if ceil32(stor14.length.field_1) <= stor14.length.field_1:
            _17738 = mem[ceil32(stor14.length.field_1) + 128]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
            var49001 = ceil32(mem[ceil32(stor14.length.field_1) + 128])
            if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23612 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23612)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23612)]
                        if ceil32(_23612) > _23612:
                            mem[_23612 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23612) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _23709 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_23709) > _23709:
                            mem[_23709 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_23709) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _25000 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _25640 = mem[_25000]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + (uint255(stor15.length) * 0.5) + 224] = mem[_25000]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25640)] = mem[_25000 + 32 len ceil32(_25640)]
                    if ceil32(_25640) > _25640:
                        mem[_25640 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25640) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                    _23710 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_23710)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23710)]
                    if ceil32(_23710) > _23710:
                        mem[_23710 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_23710) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23945 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_23945) > _23945:
                        mem[_23945 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23945) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _25001 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + stor15.length.field_1 + 192] = 32
                _25641 = mem[_25001]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + stor15.length.field_1 + 224] = mem[_25001]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + stor15.length.field_1 + 256 len ceil32(_25641)] = mem[_25001 + 32 len ceil32(_25641)]
                if ceil32(_25641) > _25641:
                    mem[_25641 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + stor15.length.field_1 + 224 len ceil32(_25641) + 32], 
            mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23615 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23615)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23615)]
                    if ceil32(_23615) > _23615:
                        mem[_23615 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23615) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23712 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_23712) > _23712:
                        mem[_23712 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23712) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _25002 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + (uint255(stor15.length) * 0.5) + 192] = 32
                _25642 = mem[_25002]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + (uint255(stor15.length) * 0.5) + 224] = mem[_25002]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25642)] = mem[_25002 + 32 len ceil32(_25642)]
                if ceil32(_25642) > _25642:
                    mem[_25642 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25642) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                _23713 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_23713)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23713)]
                if ceil32(_23713) > _23713:
                    mem[_23713 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_23713) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _23947 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_23947) > _23947:
                    mem[_23947 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_23947) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _25003 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + stor15.length.field_1 + 192] = 32
            _25643 = mem[_25003]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + stor15.length.field_1 + 224] = mem[_25003]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + stor15.length.field_1 + 256 len ceil32(_25643)] = mem[_25003 + 32 len ceil32(_25643)]
            if ceil32(_25643) > _25643:
                mem[_25643 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17738 + stor15.length.field_1 + 224 len ceil32(_25643) + 32], 
        mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 192] = 0
        _17739 = mem[ceil32(stor14.length.field_1) + 128]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
        var49001 = ceil32(mem[ceil32(stor14.length.field_1) + 128])
        if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23618 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23618)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23618)]
                    if ceil32(_23618) > _23618:
                        mem[_23618 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23618) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23715 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_23715) > _23715:
                        mem[_23715 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23715) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _25004 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + (uint255(stor15.length) * 0.5) + 192] = 32
                _25644 = mem[_25004]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + (uint255(stor15.length) * 0.5) + 224] = mem[_25004]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25644)] = mem[_25004 + 32 len ceil32(_25644)]
                if ceil32(_25644) > _25644:
                    mem[_25644 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25644) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                _23716 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_23716)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23716)]
                if ceil32(_23716) > _23716:
                    mem[_23716 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_23716) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _23949 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_23949) > _23949:
                    mem[_23949 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_23949) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _25005 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + stor15.length.field_1 + 192] = 32
            _25645 = mem[_25005]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + stor15.length.field_1 + 224] = mem[_25005]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + stor15.length.field_1 + 256 len ceil32(_25645)] = mem[_25005 + 32 len ceil32(_25645)]
            if ceil32(_25645) > _25645:
                mem[_25645 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + stor15.length.field_1 + 224 len ceil32(_25645) + 32], 
        mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
        if bool(stor15.length):
            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                _23621 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23621)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23621)]
                if ceil32(_23621) > _23621:
                    mem[_23621 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23621) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _23718 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_23718) > _23718:
                    mem[_23718 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_23718) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < uint255(stor15.length) * 0.5:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _25006 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + (uint255(stor15.length) * 0.5) + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + (uint255(stor15.length) * 0.5) + 192] = 32
            _25646 = mem[_25006]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + (uint255(stor15.length) * 0.5) + 224] = mem[_25006]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25646)] = mem[_25006 + 32 len ceil32(_25646)]
            if ceil32(_25646) > _25646:
                mem[_25646 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + (uint255(stor15.length) * 0.5) + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25646) + 32], 
        if bool(stor15.length) == stor15.length.field_1 < 32:
            revert with 0, 34
        if not bool(stor15.length):
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
            _23719 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_23719)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23719)]
            if ceil32(_23719) > _23719:
                mem[_23719 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_23719) + 32], 
        if bool(stor15.length) != 1:
            mem[64] = 0
            _23951 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
            if ceil32(_23951) > _23951:
                mem[_23951 + 64] = 0
            return memory
              from mem[64]
               len ceil32(_23951) + -mem[64] + 64
        mem[0] = 15
        idx = 0
        t = 0
        while idx < stor15.length.field_1:
            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
            idx = idx + 32
            t = t + 1
            continue 
        _25007 = mem[64]
        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + stor15.length.field_1 + 192
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + stor15.length.field_1 + 192] = 32
        _25647 = mem[_25007]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + stor15.length.field_1 + 224] = mem[_25007]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + stor15.length.field_1 + 256 len ceil32(_25647)] = mem[_25007 + 32 len ceil32(_25647)]
        if ceil32(_25647) > _25647:
            mem[_25647 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + stor15.length.field_1 + 256] = 0
        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17739 + stor15.length.field_1 + 224 len ceil32(_25647) + 32], 
    if bool(stor14.length) == stor14.length.field_1 < 32:
        revert with 0, 34
    if not stor14.length.field_1:
        if stor14.length.field_1 <= 0:
            return ''
        if not arg1:
            mem[64] = ceil32(stor14.length.field_1) + 192
            mem[ceil32(stor14.length.field_1) + 128] = 1
            mem[ceil32(stor14.length.field_1) + 160] = 0x3000000000000000000000000000000000000000000000000000000000000000
            mem[ceil32(stor14.length.field_1) + 224 len ceil32(stor14.length.field_1)] = mem[128 len ceil32(stor14.length.field_1)]
            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 224] = 0x3000000000000000000000000000000000000000000000000000000000000000
            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = 0
            if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(stor14.length.field_1) + 192]
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                        if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                            return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                        mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _7402 = mem[ceil32(stor14.length.field_1) + 192]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                        if ceil32(_7402) > _7402:
                            mem[_7402 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_7402) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    s = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 224] = stor15[s].field_0
                        idx = idx + 32
                        s = s + 1
                        continue 
                    _12612 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                    _13054 = mem[_12612]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[_12612]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(_13054)] = mem[_12612 + 32 len ceil32(_13054)]
                    if ceil32(_13054) > _13054:
                        mem[_13054 + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257 len ceil32(_13054) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[ceil32(stor14.length.field_1) + 192]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                        return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                    mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _7510 = mem[ceil32(stor14.length.field_1) + 192]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    if ceil32(_7510) > _7510:
                        mem[_7510 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_7510) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                s = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 224] = stor15[s].field_0
                    idx = idx + 32
                    s = s + 1
                    continue 
                _12613 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                _13055 = mem[_12613]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[_12613]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(_13055)] = mem[_12613 + 32 len ceil32(_13055)]
                if ceil32(_13055) > _13055:
                    mem[_13055 + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(_13055) + 32]
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(stor14.length.field_1) + 192]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                        return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                    mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _7408 = mem[ceil32(stor14.length.field_1) + 192]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    if ceil32(_7408) > _7408:
                        mem[_7408 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_7408) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                s = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 224] = stor15[s].field_0
                    idx = idx + 32
                    s = s + 1
                    continue 
                _12616 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                _13058 = mem[_12616]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[_12616]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(_13058)] = mem[_12616 + 32 len ceil32(_13058)]
                if ceil32(_13058) > _13058:
                    mem[_13058 + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = 0
                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257 len ceil32(_13058) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[ceil32(stor14.length.field_1) + 192]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                    return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _7514 = mem[ceil32(stor14.length.field_1) + 192]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                if ceil32(_7514) > _7514:
                    mem[_7514 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_7514) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            s = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 224] = stor15[s].field_0
                idx = idx + 32
                s = s + 1
                continue 
            _12617 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225
            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
            _13059 = mem[_12617]
            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[_12617]
            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(_13059)] = mem[_12617 + 32 len ceil32(_13059)]
            if ceil32(_13059) > _13059:
                mem[_13059 + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
            return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(_13059) + 32]
        s = 0
        idx = arg1
        while idx:
            if s == -1:
                revert with 0, 17
            s = s + 1
            idx = idx / 10
            continue 
        if s > test266151307():
            revert with 0, 65
        mem[ceil32(stor14.length.field_1) + 128] = s
        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + 160
        if not s:
            t = s
            idx = arg1
            while idx:
                if t < 1:
                    revert with 0, 17
                if 48 > !(idx % 10):
                    revert with 0, 17
                if t - 1 >= mem[ceil32(stor14.length.field_1) + 128]:
                    revert with 0, 50
                mem[t + ceil32(stor14.length.field_1) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(stor14.length.field_1)] = mem[128 len ceil32(stor14.length.field_1)]
            if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                _12606 = mem[ceil32(stor14.length.field_1) + 128]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
                if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18936 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18936)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18936)]
                            if ceil32(_18936) > _18936:
                                mem[_18936 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18936) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19185 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                            if ceil32(_19185) > _19185:
                                mem[_19185 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19185) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22240 = mem[64]
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23096 = mem[_22240]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + (uint255(stor15.length) * 0.5) + 224] = mem[_22240]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23096)] = mem[_22240 + 32 len ceil32(_23096)]
                        if ceil32(_23096) > _23096:
                            mem[_23096 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23096) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                        _19186 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19186)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19186)]
                        if ceil32(_19186) > _19186:
                            mem[_19186 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19186) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19441 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19441) > _19441:
                            mem[_19441 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19441) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22241 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + stor15.length.field_1 + 192] = 32
                    _23097 = mem[_22241]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + stor15.length.field_1 + 224] = mem[_22241]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + stor15.length.field_1 + 256 len ceil32(_23097)] = mem[_22241 + 32 len ceil32(_23097)]
                    if ceil32(_23097) > _23097:
                        mem[_23097 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + stor15.length.field_1 + 224 len ceil32(_23097) + 32], 
                mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18939 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18939)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18939)]
                        if ceil32(_18939) > _18939:
                            mem[_18939 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18939) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19188 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19188) > _19188:
                            mem[_19188 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19188) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22242 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23098 = mem[_22242]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + (uint255(stor15.length) * 0.5) + 224] = mem[_22242]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23098)] = mem[_22242 + 32 len ceil32(_23098)]
                    if ceil32(_23098) > _23098:
                        mem[_23098 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23098) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                    _19189 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19189)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19189)]
                    if ceil32(_19189) > _19189:
                        mem[_19189 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19189) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19443 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19443) > _19443:
                        mem[_19443 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19443) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22243 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + stor15.length.field_1 + 192] = 32
                _23099 = mem[_22243]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + stor15.length.field_1 + 224] = mem[_22243]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + stor15.length.field_1 + 256 len ceil32(_23099)] = mem[_22243 + 32 len ceil32(_23099)]
                if ceil32(_23099) > _23099:
                    mem[_23099 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12606 + stor15.length.field_1 + 224 len ceil32(_23099) + 32], 
            mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 192] = 0
            _12607 = mem[ceil32(stor14.length.field_1) + 128]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
            if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18942 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18942)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18942)]
                        if ceil32(_18942) > _18942:
                            mem[_18942 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18942) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19191 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19191) > _19191:
                            mem[_19191 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19191) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22244 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23100 = mem[_22244]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + (uint255(stor15.length) * 0.5) + 224] = mem[_22244]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23100)] = mem[_22244 + 32 len ceil32(_23100)]
                    if ceil32(_23100) > _23100:
                        mem[_23100 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23100) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                    _19192 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19192)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19192)]
                    if ceil32(_19192) > _19192:
                        mem[_19192 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19192) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19445 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19445) > _19445:
                        mem[_19445 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19445) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22245 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + stor15.length.field_1 + 192] = 32
                _23101 = mem[_22245]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + stor15.length.field_1 + 224] = mem[_22245]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + stor15.length.field_1 + 256 len ceil32(_23101)] = mem[_22245 + 32 len ceil32(_23101)]
                if ceil32(_23101) > _23101:
                    mem[_23101 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + stor15.length.field_1 + 224 len ceil32(_23101) + 32], 
            mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _18945 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18945)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18945)]
                    if ceil32(_18945) > _18945:
                        mem[_18945 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18945) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19194 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19194) > _19194:
                        mem[_19194 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19194) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22246 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + (uint255(stor15.length) * 0.5) + 192] = 32
                _23102 = mem[_22246]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + (uint255(stor15.length) * 0.5) + 224] = mem[_22246]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23102)] = mem[_22246 + 32 len ceil32(_23102)]
                if ceil32(_23102) > _23102:
                    mem[_23102 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23102) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                _19195 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19195)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19195)]
                if ceil32(_19195) > _19195:
                    mem[_19195 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19195) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _19447 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_19447) > _19447:
                    mem[_19447 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_19447) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _22247 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + stor15.length.field_1 + 192] = 32
            _23103 = mem[_22247]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + stor15.length.field_1 + 224] = mem[_22247]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + stor15.length.field_1 + 256 len ceil32(_23103)] = mem[_22247 + 32 len ceil32(_23103)]
            if ceil32(_23103) > _23103:
                mem[_23103 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12607 + stor15.length.field_1 + 224 len ceil32(_23103) + 32], 
        mem[ceil32(stor14.length.field_1) + 160 len s] = call.data[calldata.size len s]
        t = s
        idx = arg1
        while idx:
            if t < 1:
                revert with 0, 17
            if 48 > !(idx % 10):
                revert with 0, 17
            if t - 1 >= mem[ceil32(stor14.length.field_1) + 128]:
                revert with 0, 50
            mem[t + ceil32(stor14.length.field_1) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(stor14.length.field_1)] = mem[128 len ceil32(stor14.length.field_1)]
        if ceil32(stor14.length.field_1) <= stor14.length.field_1:
            _12608 = mem[ceil32(stor14.length.field_1) + 128]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
            if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18948 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18948)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18948)]
                        if ceil32(_18948) > _18948:
                            mem[_18948 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18948) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19197 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19197) > _19197:
                            mem[_19197 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19197) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22248 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23104 = mem[_22248]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + (uint255(stor15.length) * 0.5) + 224] = mem[_22248]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23104)] = mem[_22248 + 32 len ceil32(_23104)]
                    if ceil32(_23104) > _23104:
                        mem[_23104 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23104) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                    _19198 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19198)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19198)]
                    if ceil32(_19198) > _19198:
                        mem[_19198 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19198) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19449 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19449) > _19449:
                        mem[_19449 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19449) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22249 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + stor15.length.field_1 + 192] = 32
                _23105 = mem[_22249]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + stor15.length.field_1 + 224] = mem[_22249]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + stor15.length.field_1 + 256 len ceil32(_23105)] = mem[_22249 + 32 len ceil32(_23105)]
                if ceil32(_23105) > _23105:
                    mem[_23105 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + stor15.length.field_1 + 224 len ceil32(_23105) + 32], 
            mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _18951 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18951)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18951)]
                    if ceil32(_18951) > _18951:
                        mem[_18951 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18951) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19200 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19200) > _19200:
                        mem[_19200 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19200) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22250 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + (uint255(stor15.length) * 0.5) + 192] = 32
                _23106 = mem[_22250]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + (uint255(stor15.length) * 0.5) + 224] = mem[_22250]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23106)] = mem[_22250 + 32 len ceil32(_23106)]
                if ceil32(_23106) > _23106:
                    mem[_23106 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23106) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                _19201 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19201)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19201)]
                if ceil32(_19201) > _19201:
                    mem[_19201 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19201) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _19451 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_19451) > _19451:
                    mem[_19451 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_19451) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _22251 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + stor15.length.field_1 + 192] = 32
            _23107 = mem[_22251]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + stor15.length.field_1 + 224] = mem[_22251]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + stor15.length.field_1 + 256 len ceil32(_23107)] = mem[_22251 + 32 len ceil32(_23107)]
            if ceil32(_23107) > _23107:
                mem[_23107 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12608 + stor15.length.field_1 + 224 len ceil32(_23107) + 32], 
        mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 192] = 0
        _12609 = mem[ceil32(stor14.length.field_1) + 128]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
        if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _18954 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18954)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18954)]
                    if ceil32(_18954) > _18954:
                        mem[_18954 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18954) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19203 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19203) > _19203:
                        mem[_19203 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19203) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22252 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + (uint255(stor15.length) * 0.5) + 192] = 32
                _23108 = mem[_22252]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + (uint255(stor15.length) * 0.5) + 224] = mem[_22252]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23108)] = mem[_22252 + 32 len ceil32(_23108)]
                if ceil32(_23108) > _23108:
                    mem[_23108 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23108) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                _19204 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19204)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19204)]
                if ceil32(_19204) > _19204:
                    mem[_19204 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19204) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _19453 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_19453) > _19453:
                    mem[_19453 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_19453) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _22253 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + stor15.length.field_1 + 192] = 32
            _23109 = mem[_22253]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + stor15.length.field_1 + 224] = mem[_22253]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + stor15.length.field_1 + 256 len ceil32(_23109)] = mem[_22253 + 32 len ceil32(_23109)]
            if ceil32(_23109) > _23109:
                mem[_23109 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + stor15.length.field_1 + 224 len ceil32(_23109) + 32], 
        mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
        if bool(stor15.length):
            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                _18957 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18957)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18957)]
                if ceil32(_18957) > _18957:
                    mem[_18957 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18957) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _19206 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_19206) > _19206:
                    mem[_19206 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_19206) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < uint255(stor15.length) * 0.5:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _22254 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + (uint255(stor15.length) * 0.5) + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + (uint255(stor15.length) * 0.5) + 192] = 32
            _23110 = mem[_22254]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + (uint255(stor15.length) * 0.5) + 224] = mem[_22254]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23110)] = mem[_22254 + 32 len ceil32(_23110)]
            if ceil32(_23110) > _23110:
                mem[_23110 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + (uint255(stor15.length) * 0.5) + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23110) + 32], 
        if bool(stor15.length) == stor15.length.field_1 < 32:
            revert with 0, 34
        if not bool(stor15.length):
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
            _19207 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19207)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19207)]
            if ceil32(_19207) > _19207:
                mem[_19207 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19207) + 32], 
        if bool(stor15.length) != 1:
            mem[64] = 0
            _19455 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
            if ceil32(_19455) > _19455:
                mem[_19455 + 64] = 0
            return memory
              from mem[64]
               len ceil32(_19455) + -mem[64] + 64
        mem[0] = 15
        idx = 0
        t = 0
        while idx < stor15.length.field_1:
            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
            idx = idx + 32
            t = t + 1
            continue 
        _22255 = mem[64]
        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + stor15.length.field_1 + 192
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + stor15.length.field_1 + 192] = 32
        _23111 = mem[_22255]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + stor15.length.field_1 + 224] = mem[_22255]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + stor15.length.field_1 + 256 len ceil32(_23111)] = mem[_22255 + 32 len ceil32(_23111)]
        if ceil32(_23111) > _23111:
            mem[_23111 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + stor15.length.field_1 + 256] = 0
        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12609 + stor15.length.field_1 + 224 len ceil32(_23111) + 32], 
    if 31 >= stor14.length.field_1:
        mem[128] = 256 * stor14.length.field_8
        if stor14.length.field_1 <= 0:
            return ''
        if not arg1:
            mem[64] = ceil32(stor14.length.field_1) + 192
            mem[ceil32(stor14.length.field_1) + 128] = 1
            mem[ceil32(stor14.length.field_1) + 160] = 0x3000000000000000000000000000000000000000000000000000000000000000
            mem[ceil32(stor14.length.field_1) + 224 len ceil32(stor14.length.field_1)] = mem[128 len ceil32(stor14.length.field_1)]
            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 224] = 0x3000000000000000000000000000000000000000000000000000000000000000
            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = 0
            if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(stor14.length.field_1) + 192]
                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                        if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                            return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                        mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _7424 = mem[ceil32(stor14.length.field_1) + 192]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                        if ceil32(_7424) > _7424:
                            mem[_7424 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_7424) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    s = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 224] = stor15[s].field_0
                        idx = idx + 32
                        s = s + 1
                        continue 
                    _12626 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                    _13066 = mem[_12626]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[_12626]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(_13066)] = mem[_12626 + 32 len ceil32(_13066)]
                    if ceil32(_13066) > _13066:
                        mem[_13066 + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257 len ceil32(_13066) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[ceil32(stor14.length.field_1) + 192]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                        return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                    mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _7527 = mem[ceil32(stor14.length.field_1) + 192]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    if ceil32(_7527) > _7527:
                        mem[_7527 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_7527) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                s = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 224] = stor15[s].field_0
                    idx = idx + 32
                    s = s + 1
                    continue 
                _12627 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                _13067 = mem[_12627]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[_12627]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(_13067)] = mem[_12627 + 32 len ceil32(_13067)]
                if ceil32(_13067) > _13067:
                    mem[_13067 + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(_13067) + 32]
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(stor14.length.field_1) + 192]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                        return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                    mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _7430 = mem[ceil32(stor14.length.field_1) + 192]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    if ceil32(_7430) > _7430:
                        mem[_7430 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_7430) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                s = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 224] = stor15[s].field_0
                    idx = idx + 32
                    s = s + 1
                    continue 
                _12630 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                _13070 = mem[_12630]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[_12630]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(_13070)] = mem[_12630 + 32 len ceil32(_13070)]
                if ceil32(_13070) > _13070:
                    mem[_13070 + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = 0
                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257 len ceil32(_13070) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[ceil32(stor14.length.field_1) + 192]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                    return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _7531 = mem[ceil32(stor14.length.field_1) + 192]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                if ceil32(_7531) > _7531:
                    mem[_7531 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_7531) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            s = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 224] = stor15[s].field_0
                idx = idx + 32
                s = s + 1
                continue 
            _12631 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225
            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
            _13071 = mem[_12631]
            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[_12631]
            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(_13071)] = mem[_12631 + 32 len ceil32(_13071)]
            if ceil32(_13071) > _13071:
                mem[_13071 + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
            return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(_13071) + 32]
        s = 0
        idx = arg1
        while idx:
            if s == -1:
                revert with 0, 17
            s = s + 1
            idx = idx / 10
            continue 
        if s > test266151307():
            revert with 0, 65
        mem[ceil32(stor14.length.field_1) + 128] = s
        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + 160
        if not s:
            t = s
            idx = arg1
            while idx:
                if t < 1:
                    revert with 0, 17
                if 48 > !(idx % 10):
                    revert with 0, 17
                if t - 1 >= mem[ceil32(stor14.length.field_1) + 128]:
                    revert with 0, 50
                mem[t + ceil32(stor14.length.field_1) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(stor14.length.field_1)] = mem[128 len ceil32(stor14.length.field_1)]
            if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                _12620 = mem[ceil32(stor14.length.field_1) + 128]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
                if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
                    if bool(stor15.length):
                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                            revert with 0, 34
                        if not bool(stor15.length):
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                            _18968 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18968)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18968)]
                            if ceil32(_18968) > _18968:
                                mem[_18968 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18968) + 32], 
                        if bool(stor15.length) != 1:
                            mem[64] = 0
                            _19225 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                            if ceil32(_19225) > _19225:
                                mem[_19225 + 64] = 0
                            return memory
                              from mem[64]
                               len ceil32(_19225) + -mem[64] + 64
                        mem[0] = 15
                        idx = 0
                        t = 0
                        while idx < uint255(stor15.length) * 0.5:
                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                            idx = idx + 32
                            t = t + 1
                            continue 
                        _22256 = mem[64]
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23120 = mem[_22256]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + (uint255(stor15.length) * 0.5) + 224] = mem[_22256]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23120)] = mem[_22256 + 32 len ceil32(_23120)]
                        if ceil32(_23120) > _23120:
                            mem[_23120 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23120) + 32], 
                    if bool(stor15.length) == stor15.length.field_1 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                        _19226 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19226)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19226)]
                        if ceil32(_19226) > _19226:
                            mem[_19226 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19226) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19489 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19489) > _19489:
                            mem[_19489 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19489) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22257 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + stor15.length.field_1 + 192] = 32
                    _23121 = mem[_22257]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + stor15.length.field_1 + 224] = mem[_22257]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + stor15.length.field_1 + 256 len ceil32(_23121)] = mem[_22257 + 32 len ceil32(_23121)]
                    if ceil32(_23121) > _23121:
                        mem[_23121 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + stor15.length.field_1 + 224 len ceil32(_23121) + 32], 
                mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18971 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18971)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18971)]
                        if ceil32(_18971) > _18971:
                            mem[_18971 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18971) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19228 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19228) > _19228:
                            mem[_19228 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19228) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22258 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23122 = mem[_22258]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + (uint255(stor15.length) * 0.5) + 224] = mem[_22258]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23122)] = mem[_22258 + 32 len ceil32(_23122)]
                    if ceil32(_23122) > _23122:
                        mem[_23122 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23122) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                    _19229 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19229)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19229)]
                    if ceil32(_19229) > _19229:
                        mem[_19229 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19229) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19491 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19491) > _19491:
                        mem[_19491 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19491) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22259 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + stor15.length.field_1 + 192] = 32
                _23123 = mem[_22259]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + stor15.length.field_1 + 224] = mem[_22259]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + stor15.length.field_1 + 256 len ceil32(_23123)] = mem[_22259 + 32 len ceil32(_23123)]
                if ceil32(_23123) > _23123:
                    mem[_23123 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12620 + stor15.length.field_1 + 224 len ceil32(_23123) + 32], 
            mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 192] = 0
            _12621 = mem[ceil32(stor14.length.field_1) + 128]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
            if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18974 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18974)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18974)]
                        if ceil32(_18974) > _18974:
                            mem[_18974 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18974) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19231 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19231) > _19231:
                            mem[_19231 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19231) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22260 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23124 = mem[_22260]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + (uint255(stor15.length) * 0.5) + 224] = mem[_22260]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23124)] = mem[_22260 + 32 len ceil32(_23124)]
                    if ceil32(_23124) > _23124:
                        mem[_23124 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23124) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                    _19232 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19232)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19232)]
                    if ceil32(_19232) > _19232:
                        mem[_19232 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19232) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19493 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19493) > _19493:
                        mem[_19493 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19493) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22261 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + stor15.length.field_1 + 192] = 32
                _23125 = mem[_22261]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + stor15.length.field_1 + 224] = mem[_22261]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + stor15.length.field_1 + 256 len ceil32(_23125)] = mem[_22261 + 32 len ceil32(_23125)]
                if ceil32(_23125) > _23125:
                    mem[_23125 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + stor15.length.field_1 + 224 len ceil32(_23125) + 32], 
            mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _18977 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18977)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18977)]
                    if ceil32(_18977) > _18977:
                        mem[_18977 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18977) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19234 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19234) > _19234:
                        mem[_19234 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19234) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22262 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + (uint255(stor15.length) * 0.5) + 192] = 32
                _23126 = mem[_22262]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + (uint255(stor15.length) * 0.5) + 224] = mem[_22262]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23126)] = mem[_22262 + 32 len ceil32(_23126)]
                if ceil32(_23126) > _23126:
                    mem[_23126 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23126) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                _19235 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19235)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19235)]
                if ceil32(_19235) > _19235:
                    mem[_19235 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19235) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _19495 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_19495) > _19495:
                    mem[_19495 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_19495) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _22263 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + stor15.length.field_1 + 192] = 32
            _23127 = mem[_22263]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + stor15.length.field_1 + 224] = mem[_22263]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + stor15.length.field_1 + 256 len ceil32(_23127)] = mem[_22263 + 32 len ceil32(_23127)]
            if ceil32(_23127) > _23127:
                mem[_23127 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12621 + stor15.length.field_1 + 224 len ceil32(_23127) + 32], 
        mem[ceil32(stor14.length.field_1) + 160 len s] = call.data[calldata.size len s]
        t = s
        idx = arg1
        while idx:
            if t < 1:
                revert with 0, 17
            if 48 > !(idx % 10):
                revert with 0, 17
            if t - 1 >= mem[ceil32(stor14.length.field_1) + 128]:
                revert with 0, 50
            mem[t + ceil32(stor14.length.field_1) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(stor14.length.field_1)] = mem[128 len ceil32(stor14.length.field_1)]
        if ceil32(stor14.length.field_1) <= stor14.length.field_1:
            _12622 = mem[ceil32(stor14.length.field_1) + 128]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
            if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _18980 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18980)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18980)]
                        if ceil32(_18980) > _18980:
                            mem[_18980 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18980) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _19237 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_19237) > _19237:
                            mem[_19237 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_19237) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _22264 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23128 = mem[_22264]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + (uint255(stor15.length) * 0.5) + 224] = mem[_22264]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23128)] = mem[_22264 + 32 len ceil32(_23128)]
                    if ceil32(_23128) > _23128:
                        mem[_23128 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23128) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                    _19238 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19238)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19238)]
                    if ceil32(_19238) > _19238:
                        mem[_19238 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19238) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19497 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19497) > _19497:
                        mem[_19497 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19497) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22265 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + stor15.length.field_1 + 192] = 32
                _23129 = mem[_22265]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + stor15.length.field_1 + 224] = mem[_22265]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + stor15.length.field_1 + 256 len ceil32(_23129)] = mem[_22265 + 32 len ceil32(_23129)]
                if ceil32(_23129) > _23129:
                    mem[_23129 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + stor15.length.field_1 + 224 len ceil32(_23129) + 32], 
            mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _18983 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18983)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18983)]
                    if ceil32(_18983) > _18983:
                        mem[_18983 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18983) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19240 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19240) > _19240:
                        mem[_19240 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19240) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22266 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + (uint255(stor15.length) * 0.5) + 192] = 32
                _23130 = mem[_22266]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + (uint255(stor15.length) * 0.5) + 224] = mem[_22266]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23130)] = mem[_22266 + 32 len ceil32(_23130)]
                if ceil32(_23130) > _23130:
                    mem[_23130 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23130) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                _19241 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19241)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19241)]
                if ceil32(_19241) > _19241:
                    mem[_19241 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19241) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _19499 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_19499) > _19499:
                    mem[_19499 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_19499) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _22267 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + stor15.length.field_1 + 192] = 32
            _23131 = mem[_22267]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + stor15.length.field_1 + 224] = mem[_22267]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + stor15.length.field_1 + 256 len ceil32(_23131)] = mem[_22267 + 32 len ceil32(_23131)]
            if ceil32(_23131) > _23131:
                mem[_23131 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12622 + stor15.length.field_1 + 224 len ceil32(_23131) + 32], 
        mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 192] = 0
        _12623 = mem[ceil32(stor14.length.field_1) + 128]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
        if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _18986 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18986)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18986)]
                    if ceil32(_18986) > _18986:
                        mem[_18986 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18986) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _19243 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_19243) > _19243:
                        mem[_19243 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_19243) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _22268 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + (uint255(stor15.length) * 0.5) + 192] = 32
                _23132 = mem[_22268]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + (uint255(stor15.length) * 0.5) + 224] = mem[_22268]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23132)] = mem[_22268 + 32 len ceil32(_23132)]
                if ceil32(_23132) > _23132:
                    mem[_23132 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23132) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                _19244 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19244)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19244)]
                if ceil32(_19244) > _19244:
                    mem[_19244 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19244) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _19501 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_19501) > _19501:
                    mem[_19501 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_19501) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _22269 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + stor15.length.field_1 + 192] = 32
            _23133 = mem[_22269]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + stor15.length.field_1 + 224] = mem[_22269]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + stor15.length.field_1 + 256 len ceil32(_23133)] = mem[_22269 + 32 len ceil32(_23133)]
            if ceil32(_23133) > _23133:
                mem[_23133 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + stor15.length.field_1 + 224 len ceil32(_23133) + 32], 
        mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
        if bool(stor15.length):
            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                _18989 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_18989)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_18989)]
                if ceil32(_18989) > _18989:
                    mem[_18989 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_18989) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _19246 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_19246) > _19246:
                    mem[_19246 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_19246) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < uint255(stor15.length) * 0.5:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _22270 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + (uint255(stor15.length) * 0.5) + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + (uint255(stor15.length) * 0.5) + 192] = 32
            _23134 = mem[_22270]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + (uint255(stor15.length) * 0.5) + 224] = mem[_22270]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23134)] = mem[_22270 + 32 len ceil32(_23134)]
            if ceil32(_23134) > _23134:
                mem[_23134 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + (uint255(stor15.length) * 0.5) + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23134) + 32], 
        if bool(stor15.length) == stor15.length.field_1 < 32:
            revert with 0, 34
        if not bool(stor15.length):
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
            _19247 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_19247)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_19247)]
            if ceil32(_19247) > _19247:
                mem[_19247 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_19247) + 32], 
        if bool(stor15.length) != 1:
            mem[64] = 0
            _19503 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
            if ceil32(_19503) > _19503:
                mem[_19503 + 64] = 0
            return memory
              from mem[64]
               len ceil32(_19503) + -mem[64] + 64
        mem[0] = 15
        idx = 0
        t = 0
        while idx < stor15.length.field_1:
            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
            idx = idx + 32
            t = t + 1
            continue 
        _22271 = mem[64]
        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + stor15.length.field_1 + 192
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + stor15.length.field_1 + 192] = 32
        _23135 = mem[_22271]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + stor15.length.field_1 + 224] = mem[_22271]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + stor15.length.field_1 + 256 len ceil32(_23135)] = mem[_22271 + 32 len ceil32(_23135)]
        if ceil32(_23135) > _23135:
            mem[_23135 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + stor15.length.field_1 + 256] = 0
        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _12623 + stor15.length.field_1 + 224 len ceil32(_23135) + 32], 
    mem[0] = 14
    mem[128] = uint256(stor14.field_0)
    idx = 128
    s = 0
    while stor14.length.field_1 + 96 > idx:
        mem[idx + 32] = stor14[s].field_256
        idx = idx + 32
        s = s + 1
        continue 
    if stor14.length.field_1 <= 0:
        return ''
    if not arg1:
        mem[ceil32(stor14.length.field_1) + 128] = 1
        mem[ceil32(stor14.length.field_1) + 160] = 0x3000000000000000000000000000000000000000000000000000000000000000
        mem[ceil32(stor14.length.field_1) + 224 len ceil32(stor14.length.field_1)] = mem[128 len ceil32(stor14.length.field_1)]
        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 224] = 0x3000000000000000000000000000000000000000000000000000000000000000
        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = 0
        if ceil32(stor14.length.field_1) <= stor14.length.field_1:
            if not bool(stor15.length):
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[ceil32(stor14.length.field_1) + 192]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                        return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                    mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                if bool(stor15.length) == 1:
                    idx = 0
                    s = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = stor15[s].field_0
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[ceil32(stor14.length.field_1) + 192]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                        return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                    mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                mem[64] = 0
                _13859 = mem[ceil32(stor14.length.field_1) + 192]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                var58001 = ceil32(_13859)
                if ceil32(_13859) > _13859:
                    mem[_13859 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_13859) + -mem[64] + 64
            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(stor14.length.field_1) + 192]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
            else:
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _13584 = mem[ceil32(stor14.length.field_1) + 192]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    if ceil32(_13584) > _13584:
                        mem[_13584 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_13584) + -mem[64] + 64
                idx = 0
                s = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = stor15[s].field_0
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(stor14.length.field_1) + 192]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                var60001 = ceil32(mem[ceil32(stor14.length.field_1) + 192])
        else:
            if not bool(stor15.length):
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[ceil32(stor14.length.field_1) + 192]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                        return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                    mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                if bool(stor15.length) == 1:
                    idx = 0
                    s = 0
                    while idx < stor15.length.field_1:
                        mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = stor15[s].field_0
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 225] = 32
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = mem[ceil32(stor14.length.field_1) + 192]
                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
                        return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
                    mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
                mem[64] = 0
                _13863 = mem[ceil32(stor14.length.field_1) + 192]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                var58001 = ceil32(_13863)
                if ceil32(_13863) > _13863:
                    mem[_13863 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_13863) + -mem[64] + 64
            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = Mask(248, 8, stor15.length)
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(stor14.length.field_1) + 192]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
            else:
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _13590 = mem[ceil32(stor14.length.field_1) + 192]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                    if ceil32(_13590) > _13590:
                        mem[_13590 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_13590) + -mem[64] + 64
                idx = 0
                s = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + 225] = stor15[s].field_0
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 225] = 32
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = mem[ceil32(stor14.length.field_1) + 192]
                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])] = mem[ceil32(stor14.length.field_1) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]
                var60001 = ceil32(mem[ceil32(stor14.length.field_1) + 192])
        if ceil32(mem[ceil32(stor14.length.field_1) + 192]) <= mem[ceil32(stor14.length.field_1) + 192]:
            return Array(len=mem[ceil32(stor14.length.field_1) + 192], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 192])]), 
        mem[mem[ceil32(stor14.length.field_1) + 192] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = 0
        return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257 len ceil32(mem[ceil32(stor14.length.field_1) + 192]) + 32], 
    s = 0
    idx = arg1
    while idx:
        if s == -1:
            revert with 0, 17
        s = s + 1
        idx = idx / 10
        continue 
    if s > test266151307():
        revert with 0, 65
    mem[ceil32(stor14.length.field_1) + 128] = s
    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + 160
    if not s:
        t = s
        idx = arg1
        while idx:
            if t < 1:
                revert with 0, 17
            if 48 > !(idx % 10):
                revert with 0, 17
            if t - 1 >= mem[ceil32(stor14.length.field_1) + 128]:
                revert with 0, 50
            mem[t + ceil32(stor14.length.field_1) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(stor14.length.field_1)] = mem[128 len ceil32(stor14.length.field_1)]
        if ceil32(stor14.length.field_1) <= stor14.length.field_1:
            _17748 = mem[ceil32(stor14.length.field_1) + 128]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
            if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
                if bool(stor15.length):
                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                        revert with 0, 34
                    if not bool(stor15.length):
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                        _23624 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23624)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23624)]
                        if ceil32(_23624) > _23624:
                            mem[_23624 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23624) + 32], 
                    if bool(stor15.length) != 1:
                        mem[64] = 0
                        _23721 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                        if ceil32(_23721) > _23721:
                            mem[_23721 + 64] = 0
                        return memory
                          from mem[64]
                           len ceil32(_23721) + -mem[64] + 64
                    mem[0] = 15
                    idx = 0
                    t = 0
                    while idx < uint255(stor15.length) * 0.5:
                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                        idx = idx + 32
                        t = t + 1
                        continue 
                    _25008 = mem[64]
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + (uint255(stor15.length) * 0.5) + 192] = 32
                    _25648 = mem[_25008]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + (uint255(stor15.length) * 0.5) + 224] = mem[_25008]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25648)] = mem[_25008 + 32 len ceil32(_25648)]
                    if ceil32(_25648) > _25648:
                        mem[_25648 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25648) + 32], 
                if bool(stor15.length) == stor15.length.field_1 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                    _23722 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_23722)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23722)]
                    if ceil32(_23722) > _23722:
                        mem[_23722 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_23722) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _24017 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_24017) > _24017:
                        mem[_24017 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_24017) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < stor15.length.field_1:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _25009 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + stor15.length.field_1 + 192] = 32
                _25649 = mem[_25009]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + stor15.length.field_1 + 224] = mem[_25009]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + stor15.length.field_1 + 256 len ceil32(_25649)] = mem[_25009 + 32 len ceil32(_25649)]
                if ceil32(_25649) > _25649:
                    mem[_25649 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + stor15.length.field_1 + 224 len ceil32(_25649) + 32], 
            mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23627 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23627)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23627)]
                    if ceil32(_23627) > _23627:
                        mem[_23627 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23627) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23724 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_23724) > _23724:
                        mem[_23724 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23724) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _25010 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + (uint255(stor15.length) * 0.5) + 192] = 32
                _25650 = mem[_25010]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + (uint255(stor15.length) * 0.5) + 224] = mem[_25010]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25650)] = mem[_25010 + 32 len ceil32(_25650)]
                if ceil32(_25650) > _25650:
                    mem[_25650 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25650) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                _23725 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_23725)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23725)]
                if ceil32(_23725) > _23725:
                    mem[_23725 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_23725) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _24019 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_24019) > _24019:
                    mem[_24019 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_24019) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _25011 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + stor15.length.field_1 + 192] = 32
            _25651 = mem[_25011]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + stor15.length.field_1 + 224] = mem[_25011]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + stor15.length.field_1 + 256 len ceil32(_25651)] = mem[_25011 + 32 len ceil32(_25651)]
            if ceil32(_25651) > _25651:
                mem[_25651 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17748 + stor15.length.field_1 + 224 len ceil32(_25651) + 32], 
        mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 192] = 0
        _17749 = mem[ceil32(stor14.length.field_1) + 128]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
        if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23630 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23630)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23630)]
                    if ceil32(_23630) > _23630:
                        mem[_23630 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23630) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23727 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_23727) > _23727:
                        mem[_23727 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23727) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _25012 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + (uint255(stor15.length) * 0.5) + 192] = 32
                _25652 = mem[_25012]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + (uint255(stor15.length) * 0.5) + 224] = mem[_25012]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25652)] = mem[_25012 + 32 len ceil32(_25652)]
                if ceil32(_25652) > _25652:
                    mem[_25652 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25652) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                _23728 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_23728)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23728)]
                if ceil32(_23728) > _23728:
                    mem[_23728 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_23728) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _24021 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_24021) > _24021:
                    mem[_24021 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_24021) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _25013 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + stor15.length.field_1 + 192] = 32
            _25653 = mem[_25013]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + stor15.length.field_1 + 224] = mem[_25013]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + stor15.length.field_1 + 256 len ceil32(_25653)] = mem[_25013 + 32 len ceil32(_25653)]
            if ceil32(_25653) > _25653:
                mem[_25653 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + stor15.length.field_1 + 224 len ceil32(_25653) + 32], 
        mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
        if bool(stor15.length):
            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                _23633 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23633)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23633)]
                if ceil32(_23633) > _23633:
                    mem[_23633 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23633) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _23730 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_23730) > _23730:
                    mem[_23730 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_23730) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < uint255(stor15.length) * 0.5:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _25014 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + (uint255(stor15.length) * 0.5) + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + (uint255(stor15.length) * 0.5) + 192] = 32
            _25654 = mem[_25014]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + (uint255(stor15.length) * 0.5) + 224] = mem[_25014]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25654)] = mem[_25014 + 32 len ceil32(_25654)]
            if ceil32(_25654) > _25654:
                mem[_25654 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + (uint255(stor15.length) * 0.5) + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25654) + 32], 
        if bool(stor15.length) == stor15.length.field_1 < 32:
            revert with 0, 34
        if not bool(stor15.length):
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
            _23731 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_23731)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23731)]
            if ceil32(_23731) > _23731:
                mem[_23731 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_23731) + 32], 
        if bool(stor15.length) != 1:
            mem[64] = 0
            _24023 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
            if ceil32(_24023) > _24023:
                mem[_24023 + 64] = 0
            return memory
              from mem[64]
               len ceil32(_24023) + -mem[64] + 64
        mem[0] = 15
        idx = 0
        t = 0
        while idx < stor15.length.field_1:
            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
            idx = idx + 32
            t = t + 1
            continue 
        _25015 = mem[64]
        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + stor15.length.field_1 + 192
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + stor15.length.field_1 + 192] = 32
        _25655 = mem[_25015]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + stor15.length.field_1 + 224] = mem[_25015]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + stor15.length.field_1 + 256 len ceil32(_25655)] = mem[_25015 + 32 len ceil32(_25655)]
        if ceil32(_25655) > _25655:
            mem[_25655 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + stor15.length.field_1 + 256] = 0
        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17749 + stor15.length.field_1 + 224 len ceil32(_25655) + 32], 
    mem[ceil32(stor14.length.field_1) + 160 len s] = call.data[calldata.size len s]
    t = s
    idx = arg1
    while idx:
        if t < 1:
            revert with 0, 17
        if 48 > !(idx % 10):
            revert with 0, 17
        if t - 1 >= mem[ceil32(stor14.length.field_1) + 128]:
            revert with 0, 50
        mem[t + ceil32(stor14.length.field_1) + 159 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
        t = t - 1
        idx = idx / 10
        continue 
    mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(stor14.length.field_1)] = mem[128 len ceil32(stor14.length.field_1)]
    if ceil32(stor14.length.field_1) <= stor14.length.field_1:
        _17750 = mem[ceil32(stor14.length.field_1) + 128]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
        var50001 = ceil32(mem[ceil32(stor14.length.field_1) + 128])
        if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
            if bool(stor15.length):
                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                    revert with 0, 34
                if not bool(stor15.length):
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                    _23636 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23636)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23636)]
                    if ceil32(_23636) > _23636:
                        mem[_23636 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23636) + 32], 
                if bool(stor15.length) != 1:
                    mem[64] = 0
                    _23733 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                    if ceil32(_23733) > _23733:
                        mem[_23733 + 64] = 0
                    return memory
                      from mem[64]
                       len ceil32(_23733) + -mem[64] + 64
                mem[0] = 15
                idx = 0
                t = 0
                while idx < uint255(stor15.length) * 0.5:
                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                    idx = idx + 32
                    t = t + 1
                    continue 
                _25016 = mem[64]
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + (uint255(stor15.length) * 0.5) + 192] = 32
                _25656 = mem[_25016]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + (uint255(stor15.length) * 0.5) + 224] = mem[_25016]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25656)] = mem[_25016 + 32 len ceil32(_25656)]
                if ceil32(_25656) > _25656:
                    mem[_25656 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25656) + 32], 
            if bool(stor15.length) == stor15.length.field_1 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
                _23734 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_23734)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23734)]
                if ceil32(_23734) > _23734:
                    mem[_23734 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_23734) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _24025 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_24025) > _24025:
                    mem[_24025 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_24025) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < stor15.length.field_1:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _25017 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + stor15.length.field_1 + 192] = 32
            _25657 = mem[_25017]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + stor15.length.field_1 + 224] = mem[_25017]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + stor15.length.field_1 + 256 len ceil32(_25657)] = mem[_25017 + 32 len ceil32(_25657)]
            if ceil32(_25657) > _25657:
                mem[_25657 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + stor15.length.field_1 + 224 len ceil32(_25657) + 32], 
        mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
        if bool(stor15.length):
            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                _23639 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23639)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23639)]
                if ceil32(_23639) > _23639:
                    mem[_23639 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23639) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _23736 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_23736) > _23736:
                    mem[_23736 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_23736) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < uint255(stor15.length) * 0.5:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _25018 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + (uint255(stor15.length) * 0.5) + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + (uint255(stor15.length) * 0.5) + 192] = 32
            _25658 = mem[_25018]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + (uint255(stor15.length) * 0.5) + 224] = mem[_25018]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25658)] = mem[_25018 + 32 len ceil32(_25658)]
            if ceil32(_25658) > _25658:
                mem[_25658 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + (uint255(stor15.length) * 0.5) + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25658) + 32], 
        if bool(stor15.length) == stor15.length.field_1 < 32:
            revert with 0, 34
        if not bool(stor15.length):
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
            _23737 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_23737)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23737)]
            if ceil32(_23737) > _23737:
                mem[_23737 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_23737) + 32], 
        if bool(stor15.length) != 1:
            mem[64] = 0
            _24027 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
            if ceil32(_24027) > _24027:
                mem[_24027 + 64] = 0
            return memory
              from mem[64]
               len ceil32(_24027) + -mem[64] + 64
        mem[0] = 15
        idx = 0
        t = 0
        while idx < stor15.length.field_1:
            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
            idx = idx + 32
            t = t + 1
            continue 
        _25019 = mem[64]
        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + stor15.length.field_1 + 192
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + stor15.length.field_1 + 192] = 32
        _25659 = mem[_25019]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + stor15.length.field_1 + 224] = mem[_25019]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + stor15.length.field_1 + 256 len ceil32(_25659)] = mem[_25019 + 32 len ceil32(_25659)]
        if ceil32(_25659) > _25659:
            mem[_25659 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + stor15.length.field_1 + 256] = 0
        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17750 + stor15.length.field_1 + 224 len ceil32(_25659) + 32], 
    mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 192] = 0
    _17751 = mem[ceil32(stor14.length.field_1) + 128]
    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 128])] = mem[ceil32(stor14.length.field_1) + 160 len ceil32(mem[ceil32(stor14.length.field_1) + 128])]
    var50001 = ceil32(mem[ceil32(stor14.length.field_1) + 128])
    if ceil32(mem[ceil32(stor14.length.field_1) + 128]) <= mem[ceil32(stor14.length.field_1) + 128]:
        if bool(stor15.length):
            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                revert with 0, 34
            if not bool(stor15.length):
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
                _23642 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23642)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23642)]
                if ceil32(_23642) > _23642:
                    mem[_23642 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23642) + 32], 
            if bool(stor15.length) != 1:
                mem[64] = 0
                _23739 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
                if ceil32(_23739) > _23739:
                    mem[_23739 + 64] = 0
                return memory
                  from mem[64]
                   len ceil32(_23739) + -mem[64] + 64
            mem[0] = 15
            idx = 0
            t = 0
            while idx < uint255(stor15.length) * 0.5:
                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
                idx = idx + 32
                t = t + 1
                continue 
            _25020 = mem[64]
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + (uint255(stor15.length) * 0.5) + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + (uint255(stor15.length) * 0.5) + 192] = 32
            _25660 = mem[_25020]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + (uint255(stor15.length) * 0.5) + 224] = mem[_25020]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25660)] = mem[_25020 + 32 len ceil32(_25660)]
            if ceil32(_25660) > _25660:
                mem[_25660 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + (uint255(stor15.length) * 0.5) + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25660) + 32], 
        if bool(stor15.length) == stor15.length.field_1 < 32:
            revert with 0, 34
        if not bool(stor15.length):
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
            _23740 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_23740)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23740)]
            if ceil32(_23740) > _23740:
                mem[_23740 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_23740) + 32], 
        if bool(stor15.length) != 1:
            mem[64] = 0
            _24029 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
            if ceil32(_24029) > _24029:
                mem[_24029 + 64] = 0
            return memory
              from mem[64]
               len ceil32(_24029) + -mem[64] + 64
        mem[0] = 15
        idx = 0
        t = 0
        while idx < stor15.length.field_1:
            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
            idx = idx + 32
            t = t + 1
            continue 
        _25021 = mem[64]
        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + stor15.length.field_1 + 192
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + stor15.length.field_1 + 192] = 32
        _25661 = mem[_25021]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + stor15.length.field_1 + 224] = mem[_25021]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + stor15.length.field_1 + 256 len ceil32(_25661)] = mem[_25021 + 32 len ceil32(_25661)]
        if ceil32(_25661) > _25661:
            mem[_25661 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + stor15.length.field_1 + 256] = 0
        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + stor15.length.field_1 + 224 len ceil32(_25661) + 32], 
    mem[mem[ceil32(stor14.length.field_1) + 128] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 192] = 0
    if bool(stor15.length):
        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
            revert with 0, 34
        if not bool(stor15.length):
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 192] = 32
            _23645 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_23645)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23645)]
            if ceil32(_23645) > _23645:
                mem[_23645 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 256] = 0
            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + (uint255(stor15.length) * 0.5) + 224 len ceil32(_23645) + 32], 
        if bool(stor15.length) != 1:
            mem[64] = 0
            _23742 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
            if ceil32(_23742) > _23742:
                mem[_23742 + 64] = 0
            return memory
              from mem[64]
               len ceil32(_23742) + -mem[64] + 64
        mem[0] = 15
        idx = 0
        t = 0
        while idx < uint255(stor15.length) * 0.5:
            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
            idx = idx + 32
            t = t + 1
            continue 
        _25022 = mem[64]
        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + (uint255(stor15.length) * 0.5) + 192
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + (uint255(stor15.length) * 0.5) + 192] = 32
        _25662 = mem[_25022]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + (uint255(stor15.length) * 0.5) + 224] = mem[_25022]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_25662)] = mem[_25022 + 32 len ceil32(_25662)]
        if ceil32(_25662) > _25662:
            mem[_25662 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + (uint255(stor15.length) * 0.5) + 256] = 0
        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + (uint255(stor15.length) * 0.5) + 224 len ceil32(_25662) + 32], 
    if bool(stor15.length) == stor15.length.field_1 < 32:
        revert with 0, 34
    if not bool(stor15.length):
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = Mask(248, 8, stor15.length)
        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 192] = 32
        _23743 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256 len ceil32(_23743)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(_23743)]
        if ceil32(_23743) > _23743:
            mem[_23743 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 256] = 0
        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + stor15.length.field_1 + 224 len ceil32(_23743) + 32], 
    if bool(stor15.length) != 1:
        mem[64] = 0
        _24031 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 160]
        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 160])]
        if ceil32(_24031) > _24031:
            mem[_24031 + 64] = 0
        return memory
          from mem[64]
           len ceil32(_24031) + -mem[64] + 64
    mem[0] = 15
    idx = 0
    t = 0
    while idx < stor15.length.field_1:
        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 128] + 192] = stor15[t].field_0
        idx = idx + 32
        t = t + 1
        continue 
    _25023 = mem[64]
    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + stor15.length.field_1 + 192
    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + stor15.length.field_1 + 192] = 32
    _25663 = mem[_25023]
    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + stor15.length.field_1 + 224] = mem[_25023]
    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + stor15.length.field_1 + 256 len ceil32(_25663)] = mem[_25023 + 32 len ceil32(_25663)]
    if ceil32(_25663) > _25663:
        mem[_25663 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + stor15.length.field_1 + 256] = 0
    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _17751 + stor15.length.field_1 + 224 len ceil32(_25663) + 32], 
}

function _fallback() payable {
    mem[64] = 128
    if calldata.size < 4:
        require not calldata.size
        if msg.value > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
            revert with 0, 17
        if 100 * msg.value / 100000 > 0xc4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b0:
            revert with 0, 17
        call stor25 with:
           value 333 * 100 * msg.value / 100000 wei
             gas gas_remaining wei
        if not ext_call.success:
            revert with 0, 32, 63, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to community wallet!'
        if 100 * msg.value / 100000 > 0xc4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b0:
            revert with 0, 17
        call stor24 with:
           value 333 * 100 * msg.value / 100000 wei
             gas gas_remaining wei
        if not ext_call.success:
            revert with 0, 32, 60, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to artist wallet!'
        if 100 * msg.value / 100000 > 0xc4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b0:
            revert with 0, 17
        call owner with:
           value 333 * 100 * msg.value / 100000 wei
             gas gas_remaining wei
        if not ext_call.success:
            revert with 0, 32, 59, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to owner wallet!'
    else:
        if unknown_0x6f8b44b0(?????) > uint32(call.func_hash) >> 224:
            if unknown_0x3912fc85(?????) > uint32(call.func_hash) >> 224:
                if unknown_0x1beb585b(?????) > uint32(call.func_hash) >> 224:
                    if getApproved(uint256 arg1) <= uint32(call.func_hash) >> 224:
                        if getApproved(uint256 arg1) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            if not ownerOf[cd[4]]:
                                revert with 0, 'ERC721: approved query for nonexistent token'
                            return approved[cd[4]]
                        if uint32(call.func_hash) >> 224 != approve(address arg1, uint256 arg2):
                            if unknown_0x13faede6(?????) == uint32(call.func_hash) >> 224:
                                require not msg.value
                                return cost
                            require unknown_0x18160ddd(?????) == uint32(call.func_hash) >> 224
                            require not msg.value
                            return tokenByIndex.length
                        require not msg.value
                        require calldata.size - 4 >= 64
                        require cd[4] == address(cd[4])
                        if not ownerOf[cd[36]]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        if address(cd[4]) == ownerOf[cd[36]]:
                            revert with 0, 'ERC721: approval to current owner'
                        if ownerOf[cd[36]] != msg.sender:
                            if not stor5[stor2[cd[36]]][address(msg.sender)]:
                                revert with 0, 'ERC721: approve caller is not owner nor approved for all'
                        approved[cd[36]] = address(cd[4])
                        if not ownerOf[cd[36]]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        emit Approval(ownerOf[cd[36]], address(cd[4]), cd[36]);
                    if supportsInterface(bytes4 arg1) == uint32(call.func_hash) >> 224:
                        require not msg.value
                        require calldata.size - 4 >= 32
                        require cd[4] == Mask(32, 224, cd[4])
                        if 0x2a55205a00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, cd[4]):
                            return True
                        if 0x780e9d6300000000000000000000000000000000000000000000000000000000 == Mask(32, 224, cd[4]):
                            return True
                        if 0x80ac58cd00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, cd[4]):
                            return True
                        if 0x5b5e139f00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, cd[4]):
                            return True
                        return (Mask(32, 224, cd[4]) == 0x1ffc9a700000000000000000000000000000000000000000000000000000000)
                    if uint32(call.func_hash) >> 224 != name():
                        require unknown_0x0798e5c9(?????) == uint32(call.func_hash) >> 224
                        require not msg.value
                        if owner != msg.sender:
                            revert with 0, 'Ownable: caller is not the owner'
                        Mask(72, 0, stor12.field_184) = Mask(72, 0, not sub_4f8a1db5)
                    require not msg.value
                    if bool(stor0.length):
                        if bool(stor0.length) == uint255(stor0.length) * 0.5 < 32:
                            revert with 0, 34
                        if bool(stor0.length):
                            if bool(stor0.length) == uint255(stor0.length) * 0.5 < 32:
                                revert with 0, 34
                            if Mask(256, -1, stor0.length):
                                if 31 < uint255(stor0.length) * 0.5:
                                    mem[160] = uint256(stor0.field_0)
                                    idx = 160
                                    s = 0
                                    while (uint255(stor0.length) * 0.5) + 128 > idx:
                                        mem[idx + 32] = stor0[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    return Array(len=2 * Mask(256, -1, stor0.length), data=mem[160 len ceil32(uint255(stor0.length) * 0.5)])
                                mem[160] = 256 * stor0.length.field_8
                        else:
                            if bool(stor0.length) == stor0.length.field_1 < 32:
                                revert with 0, 34
                            if stor0.length.field_1:
                                if 31 < stor0.length.field_1:
                                    mem[160] = uint256(stor0.field_0)
                                    idx = 160
                                    s = 0
                                    while stor0.length.field_1 + 128 > idx:
                                        mem[idx + 32] = stor0[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    return Array(len=2 * Mask(256, -1, stor0.length), data=mem[160 len ceil32(uint255(stor0.length) * 0.5)])
                                mem[160] = 256 * stor0.length.field_8
                        mem[ceil32(uint255(stor0.length) * 0.5) + 224 len ceil32(uint255(stor0.length) * 0.5)] = mem[160 len ceil32(uint255(stor0.length) * 0.5)]
                        if ceil32(uint255(stor0.length) * 0.5) > uint255(stor0.length) * 0.5:
                            mem[(uint255(stor0.length) * 0.5) + ceil32(uint255(stor0.length) * 0.5) + 224] = 0
                        return Array(len=2 * Mask(256, -1, stor0.length), data=mem[160 len ceil32(uint255(stor0.length) * 0.5)], mem[(2 * ceil32(uint255(stor0.length) * 0.5)) + 224 len 2 * ceil32(uint255(stor0.length) * 0.5)]), 
                    if bool(stor0.length) == stor0.length.field_1 < 32:
                        revert with 0, 34
                    if bool(stor0.length):
                        if bool(stor0.length) == uint255(stor0.length) * 0.5 < 32:
                            revert with 0, 34
                        if Mask(256, -1, stor0.length):
                            if 31 < uint255(stor0.length) * 0.5:
                                mem[160] = uint256(stor0.field_0)
                                idx = 160
                                s = 0
                                while (uint255(stor0.length) * 0.5) + 128 > idx:
                                    mem[idx + 32] = stor0[s].field_256
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                return Array(len=stor0.length % 128, data=mem[160 len ceil32(stor0.length.field_1)])
                            mem[160] = 256 * stor0.length.field_8
                    else:
                        if bool(stor0.length) == stor0.length.field_1 < 32:
                            revert with 0, 34
                        if stor0.length.field_1:
                            if 31 < stor0.length.field_1:
                                mem[160] = uint256(stor0.field_0)
                                idx = 160
                                s = 0
                                while stor0.length.field_1 + 128 > idx:
                                    mem[idx + 32] = stor0[s].field_256
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                return Array(len=stor0.length % 128, data=mem[160 len ceil32(stor0.length.field_1)])
                            mem[160] = 256 * stor0.length.field_8
                    mem[ceil32(stor0.length.field_1) + 224 len ceil32(stor0.length.field_1)] = mem[160 len ceil32(stor0.length.field_1)]
                    if ceil32(stor0.length.field_1) > stor0.length.field_1:
                        mem[stor0.length.field_1 + ceil32(stor0.length.field_1) + 224] = 0
                    return Array(len=stor0.length % 128, data=mem[160 len ceil32(stor0.length.field_1)], mem[(2 * ceil32(stor0.length.field_1)) + 224 len 2 * ceil32(stor0.length.field_1)]), 
                if unknown_0x2b80183f(?????) <= uint32(call.func_hash) >> 224:
                    if unknown_0x2b80183f(?????) == uint32(call.func_hash) >> 224:
                        require not msg.value
                        require calldata.size - 4 >= 32
                        if owner != msg.sender:
                            revert with 0, 'Ownable: caller is not the owner'
                        royalties = cd[4]
                    if unknown_0x2dfa9d00(?????) == uint32(call.func_hash) >> 224:
                        require not msg.value
                        return sub_2dfa9d00
                    if uint32(call.func_hash) >> 224 != unknown_0x2f745c59(?????):
                        require unknown_0x2f98ea73(?????) == uint32(call.func_hash) >> 224
                        require not msg.value
                        return sub_2f98ea73
                    require not msg.value
                    require calldata.size - 4 >= 64
                    require cd[4] == address(cd[4])
                    if not address(cd[4]):
                        revert with 0, 'ERC721: balance query for the zero address'
                    if cd[36] >= balanceOf[address(cd[4])]:
                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                    return tokenOfOwnerByIndex[address(cd[4])][cd[36]]
                if unknown_0x1beb585b(?????) == uint32(call.func_hash) >> 224:
                    require not msg.value
                    require calldata.size - 4 >= 32
                    if owner != msg.sender:
                        revert with 0, 'Ownable: caller is not the owner'
                    sub_ded8a564 = cd[4]
                else:
                    if unknown_0x1e13f86b(?????) == uint32(call.func_hash) >> 224:
                        require not msg.value
                        require calldata.size - 4 >= 32
                        if owner != msg.sender:
                            revert with 0, 'Ownable: caller is not the owner'
                        reservedSupply = cd[4]
                    else:
                        if uint32(call.func_hash) >> 224 != unknown_0x23b872dd(?????):
                            require unknown_0x2a55205a(?????) == uint32(call.func_hash) >> 224
                            require not msg.value
                            require calldata.size - 4 >= 64
                            if royalties > !sub_e02f3993:
                                revert with 0, 17
                            if royalties + sub_e02f3993 > !sub_ded8a564:
                                revert with 0, 17
                            if cd[36] and royalties + sub_e02f3993 + sub_ded8a564 > -1 / cd[36]:
                                revert with 0, 17
                            return address(this.address), (royalties * cd[36]) + (sub_e02f3993 * cd[36]) + (sub_ded8a564 * cd[36]) / 10000
                        require not msg.value
                        require calldata.size - 4 >= 96
                        require cd[4] == address(cd[4])
                        require cd[36] == address(cd[36])
                        if not ownerOf[cd[68]]:
                            revert with 0, 'ERC721: operator query for nonexistent token'
                        if not ownerOf[cd[68]]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        if ownerOf[cd[68]] != msg.sender:
                            if not ownerOf[cd[68]]:
                                revert with 0, 'ERC721: approved query for nonexistent token'
                            if approved[cd[68]] != msg.sender:
                                if not stor5[stor2[cd[68]]][address(msg.sender)]:
                                    revert with 0, 'ERC721: transfer caller is not owner nor approved'
                        if not ownerOf[cd[68]]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        if ownerOf[cd[68]] != address(cd[4]):
                            revert with 0, 'ERC721: transfer from incorrect owner'
                        if not address(cd[36]):
                            revert with 0, 'ERC721: transfer to the zero address'
                        idx = 0
                        while idx < sub_84917f4a.length:
                            mem[0] = 28
                            if sub_84917f4a[idx].field_0 == cd[68]:
                                revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        if not address(cd[4]):
                            stor9[cd[68]] = tokenByIndex.length
                            tokenByIndex.length++
                            tokenByIndex[tokenByIndex.length] = cd[68]
                        else:
                            if address(cd[4]) != address(cd[36]):
                                if not address(cd[4]):
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(cd[4])] < 1:
                                    revert with 0, 17
                                if balanceOf[address(cd[4])] - 1 != stor7[cd[68]]:
                                    tokenOfOwnerByIndex[address(cd[4])][stor7[cd[68]]] = tokenOfOwnerByIndex[address(cd[4])][stor3[address(cd[4])] - 1]
                                    stor7[stor6[address(cd[4])][stor3[address(cd[4])] - 1]] = stor7[cd[68]]
                                stor7[cd[68]] = 0
                                tokenOfOwnerByIndex[address(cd[4])][stor3[address(cd[4])] - 1] = 0
                        if address(cd[36]):
                            if address(cd[36]) != address(cd[4]):
                                if not address(cd[36]):
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(cd[36])][stor3[address(cd[36])]] = cd[68]
                                stor7[cd[68]] = balanceOf[address(cd[36])]
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor9[cd[68]] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor9[cd[68]]] = tokenByIndex[tokenByIndex.length]
                            stor9[stor8[stor8.length]] = stor9[cd[68]]
                            stor9[cd[68]] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                        approved[cd[68]] = 0
                        if not ownerOf[cd[68]]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        emit Approval(ownerOf[cd[68]], 0, cd[68]);
                        if balanceOf[address(cd[4])] < 1:
                            revert with 0, 17
                        balanceOf[address(cd[4])]--
                        if balanceOf[address(cd[36])] > -2:
                            revert with 0, 17
                        balanceOf[address(cd[36])]++
                        ownerOf[cd[68]] = address(cd[36])
                        emit Transfer(address(cd[4]), address(cd[36]), cd[68]);
            else:
                if unknown_0x4e9be749(?????) <= uint32(call.func_hash) >> 224:
                    if unknown_0x55f804b3(?????) > uint32(call.func_hash) >> 224:
                        if unknown_0x4e9be749(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            sub_2f98ea73 = cd[4]
                        if unknown_0x4f6ccce7(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            if cd[4] >= tokenByIndex.length:
                                revert with 0, 'ERC721Enumerable: global index out of bounds'
                            return tokenByIndex[cd[4]]
                        if unknown_0x4f8a1db5(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            return bool(sub_4f8a1db5)
                        require unknown_0x51830227(?????) == uint32(call.func_hash) >> 224
                        require not msg.value
                        return bool(revealed)
                    if uint32(call.func_hash) >> 224 != unknown_0x55f804b3(?????):
                        if unknown_0x56fcf95b(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            sub_e02f3993 = cd[4]
                        if unknown_0x5c975abb(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            return bool(paused)
                        require unknown_0x6352211e(?????) == uint32(call.func_hash) >> 224
                        require not msg.value
                        require calldata.size - 4 >= 32
                        if not ownerOf[cd[4]]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        return ownerOf[cd[4]]
                    require not msg.value
                    require calldata.size - 4 >= 32
                    require cd[4] <= test266151307()
                    require calldata.size > cd[4] + 35
                    if ('cd', 4).length > test266151307():
                        revert with 0, 65
                    if ceil32(ceil32(('cd', 4).length)) + 129 < 128 or ceil32(ceil32(('cd', 4).length)) + 129 > test266151307():
                        revert with 0, 65
                    require cd[4] + ('cd', 4).length + 36 <= calldata.size
                    if owner != msg.sender:
                        revert with 0, 'Ownable: caller is not the owner'
                    if bool(stor14.length):
                        if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                            revert with 0, 34
                        if ('cd', 4).length:
                            stor14[].field_0 = Array(len=('cd', 4).length, data=call.data[cd[4] + 36 len ('cd', 4).length])
                        else:
                            stor14.length = 0
                            idx = 0
                            while (uint255(stor14.length) * 0.5) + 31 / 32 > idx:
                                stor14[idx].field_0 = 0
                                idx = idx + 1
                                continue 
                    else:
                        if bool(stor14.length) == stor14.length.field_1 < 32:
                            revert with 0, 34
                        if ('cd', 4).length:
                            stor14[].field_0 = Array(len=('cd', 4).length, data=call.data[cd[4] + 36 len ('cd', 4).length])
                        else:
                            stor14.length = 0
                            idx = 0
                            while stor14.length.field_1 + 31 / 32 > idx:
                                stor14[idx].field_0 = 0
                                idx = idx + 1
                                continue 
                else:
                    if unknown_0x44d19d2b(?????) <= uint32(call.func_hash) >> 224:
                        if unknown_0x44d19d2b(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            return reservedSupply
                        if unknown_0x4501b558(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            require cd[4] == address(cd[4])
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            stor26 = address(cd[4])
                        else:
                            if unknown_0x4bbedc29(?????) == uint32(call.func_hash) >> 224:
                                require not msg.value
                                require calldata.size - 4 >= 32
                                if owner != msg.sender:
                                    revert with 0, 'Ownable: caller is not the owner'
                                if sub_2f98ea73 > cd[4]:
                                    revert with 0, 'Token already airdropped!'
                                if cd[4] > 4444:
                                    revert with 0, 'Last token must be 4444 or less.'
                                idx = sub_2f98ea73
                                while idx <= cd[4]:
                                    stor29++
                                    mem[mem[64] + 4] = idx
                                    staticcall stor26.0x6352211e with:
                                            gas gas_remaining wei
                                           args idx
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _13455 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _13567 = mem[_13455]
                                    require mem[_13455] == mem[_13455 + 12 len 20]
                                    _13748 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_13748] = 0
                                    if not address(_13567):
                                        revert with 0, 'ERC721: mint to the zero address'
                                    if ownerOf[stor29]:
                                        revert with 0, 'ERC721: token already minted'
                                    s = 0
                                    while s < sub_84917f4a.length:
                                        mem[0] = 28
                                        if sub_84917f4a[s].field_0 == stor29:
                                            revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
                                        if s == -1:
                                            revert with 0, 17
                                        s = s + 1
                                        continue 
                                    stor9[stor29] = tokenByIndex.length
                                    tokenByIndex.length++
                                    tokenByIndex[tokenByIndex.length] = stor29
                                    if address(_13567):
                                        if not address(_13567):
                                            if balanceOf[address(_13567)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(_13567)]++
                                            mem[0] = stor29
                                            mem[32] = 2
                                            ownerOf[stor29] = address(_13567)
                                            emit Transfer(0, address(_13567), stor29);
                                            if ext_code.size(address(_13567)):
                                                _31818 = mem[64]
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = 0
                                                mem[mem[64] + 68] = stor29
                                                mem[mem[64] + 100] = 128
                                                _32330 = mem[_13748]
                                                mem[mem[64] + 132] = mem[_13748]
                                                s = 0
                                                while s < _32330:
                                                    mem[s + mem[64] + 164] = mem[s + _13748 + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_32330) <= _32330:
                                                    call address(_13567).mem[mem[64] len 4] with:
                                                         gas gas_remaining wei
                                                        args mem[mem[64] + 4 len ceil32(_32330) + _31818 + -mem[64] + 160]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _43815 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_43815] == Mask(32, 224, mem[_43815])
                                                    if Mask(32, 224, mem[_43815]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[_32330 + _31818 + 164] = 0
                                                    call address(_13567).mem[mem[64] len 4] with:
                                                         gas gas_remaining wei
                                                        args mem[mem[64] + 4 len ceil32(_32330) + _31818 + -mem[64] + 160]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _43816 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_43816] == Mask(32, 224, mem[_43816])
                                                    if Mask(32, 224, mem[_43816]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not address(_13567):
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(_13567)][stor3[address(_13567)]] = stor29
                                            stor7[stor29] = balanceOf[address(_13567)]
                                            if balanceOf[address(_13567)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(_13567)]++
                                            mem[0] = stor29
                                            mem[32] = 2
                                            ownerOf[stor29] = address(_13567)
                                            emit Transfer(0, address(_13567), stor29);
                                            if ext_code.size(address(_13567)):
                                                _33322 = mem[64]
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = 0
                                                mem[mem[64] + 68] = stor29
                                                mem[mem[64] + 100] = 128
                                                _34001 = mem[_13748]
                                                mem[mem[64] + 132] = mem[_13748]
                                                s = 0
                                                while s < _34001:
                                                    mem[s + mem[64] + 164] = mem[s + _13748 + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_34001) <= _34001:
                                                    call address(_13567).mem[mem[64] len 4] with:
                                                         gas gas_remaining wei
                                                        args mem[mem[64] + 4 len ceil32(_34001) + _33322 + -mem[64] + 160]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _43817 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_43817] == Mask(32, 224, mem[_43817])
                                                    if Mask(32, 224, mem[_43817]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[_34001 + _33322 + 164] = 0
                                                    call address(_13567).mem[mem[64] len 4] with:
                                                         gas gas_remaining wei
                                                        args mem[mem[64] + 4 len ceil32(_34001) + _33322 + -mem[64] + 160]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _43818 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_43818] == Mask(32, 224, mem[_43818])
                                                    if Mask(32, 224, mem[_43818]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor9[stor29] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor9[stor29]] = tokenByIndex[tokenByIndex.length]
                                        stor9[stor8[stor8.length]] = stor9[stor29]
                                        stor9[stor29] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        if balanceOf[address(_13567)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(_13567)]++
                                        mem[0] = stor29
                                        mem[32] = 2
                                        ownerOf[stor29] = address(_13567)
                                        emit Transfer(0, address(_13567), stor29);
                                        if ext_code.size(address(_13567)):
                                            _34002 = mem[64]
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = 0
                                            mem[mem[64] + 68] = stor29
                                            mem[mem[64] + 100] = 128
                                            _34529 = mem[_13748]
                                            mem[mem[64] + 132] = mem[_13748]
                                            s = 0
                                            while s < _34529:
                                                mem[s + mem[64] + 164] = mem[s + _13748 + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(_34529) <= _34529:
                                                call address(_13567).mem[mem[64] len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4 len ceil32(_34529) + _34002 + -mem[64] + 160]
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _43819 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_43819] == Mask(32, 224, mem[_43819])
                                                if Mask(32, 224, mem[_43819]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[_34529 + _34002 + 164] = 0
                                                call address(_13567).mem[mem[64] len 4] with:
                                                     gas gas_remaining wei
                                                    args mem[mem[64] + 4 len ceil32(_34529) + _34002 + -mem[64] + 160]
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _43820 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_43820] == Mask(32, 224, mem[_43820])
                                                if Mask(32, 224, mem[_43820]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    if reservedSupply < 1:
                                        revert with 0, 17
                                    reservedSupply--
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                if 1 > !cd[4]:
                                    revert with 0, 17
                                sub_2f98ea73 = cd[4] + 1
                            else:
                                require unknown_0x4c261247(?????) == uint32(call.func_hash) >> 224
                                require not msg.value
                                require calldata.size - 4 >= 32
                                require cd[4] <= test266151307()
                                require calldata.size > cd[4] + 35
                                if ('cd', 4).length > test266151307():
                                    revert with 0, 65
                                if ceil32(ceil32(('cd', 4).length)) + 129 < 128 or ceil32(ceil32(('cd', 4).length)) + 129 > test266151307():
                                    revert with 0, 65
                                require cd[4] + ('cd', 4).length + 36 <= calldata.size
                                if owner != msg.sender:
                                    revert with 0, 'Ownable: caller is not the owner'
                                revealed = 1
                                if bool(stor14.length):
                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                        revert with 0, 34
                                    if ('cd', 4).length:
                                        stor14[].field_0 = Array(len=('cd', 4).length, data=call.data[cd[4] + 36 len ('cd', 4).length])
                                    else:
                                        stor14.length = 0
                                        idx = 0
                                        while (uint255(stor14.length) * 0.5) + 31 / 32 > idx:
                                            stor14[idx].field_0 = 0
                                            idx = idx + 1
                                            continue 
                                else:
                                    if bool(stor14.length) == stor14.length.field_1 < 32:
                                        revert with 0, 34
                                    if ('cd', 4).length:
                                        stor14[].field_0 = Array(len=('cd', 4).length, data=call.data[cd[4] + 36 len ('cd', 4).length])
                                    else:
                                        stor14.length = 0
                                        idx = 0
                                        while stor14.length.field_1 + 31 / 32 > idx:
                                            stor14[idx].field_0 = 0
                                            idx = idx + 1
                                            continue 
                    else:
                        if unknown_0x3912fc85(?????) == uint32(call.func_hash) >> 224:
                            require calldata.size - 4 >= 32
                            if stor10 == 2:
                                revert with 0, 'ReentrancyGuard: reentrant call'
                            stor10 = 2
                            idx = 0
                            while idx < sub_84917f4a.length:
                                mem[0] = 28
                                if sub_84917f4a[idx].field_0 != cd[4]:
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                if idx >= sub_84917f4a.length:
                                    revert with 0, 50
                                mem[128] = sub_84917f4a[idx].field_0
                                mem[160] = sub_84917f4a[idx].field_256
                                mem[192] = sub_84917f4a[idx].field_512
                                mem[224] = sub_84917f4a[idx].field_768
                                if sub_84917f4a[idx].field_512 == msg.sender:
                                    revert with 0, 'ERC721 Marketplace: Buyer and seller must be be different addresses'
                                if msg.value < sub_84917f4a[idx].field_256:
                                    revert with 0, 'ERC721 Marketplace: Insufficient funds'
                                if msg.value and royalties > -1 / msg.value:
                                    revert with 0, 17
                                if msg.value and sub_ded8a564 > -1 / msg.value:
                                    revert with 0, 17
                                if msg.value and sub_e02f3993 > -1 / msg.value:
                                    revert with 0, 17
                                if sub_84917f4a.length < 1:
                                    revert with 0, 17
                                if sub_84917f4a.length - 1 >= sub_84917f4a.length:
                                    revert with 0, 50
                                if idx >= sub_84917f4a.length:
                                    revert with 0, 50
                                sub_84917f4a[idx].field_0 = sub_84917f4a[sub_84917f4a.length - 1].field_0
                                sub_84917f4a[idx].field_256 = sub_84917f4a[sub_84917f4a.length - 1].field_256
                                sub_84917f4a[idx].field_512 = sub_84917f4a[sub_84917f4a.length - 1].field_512
                                sub_84917f4a[idx].field_768 = sub_84917f4a[sub_84917f4a.length - 1].field_768
                                if not sub_84917f4a.length:
                                    revert with 0, 49
                                sub_84917f4a[sub_84917f4a.length - 1].field_0 = 0
                                sub_84917f4a[sub_84917f4a.length - 1].field_256 = 0
                                sub_84917f4a[sub_84917f4a.length - 1].field_512 = 0
                                sub_84917f4a[sub_84917f4a.length - 1].field_768 = 0
                                sub_84917f4a.length--
                                emit 0x3d5eb834: msg.value, cd[4], sub_84917f4a[idx].field_512, msg.sender
                                mem[256] = 0
                                if not ownerOf[cd[4]]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                if ownerOf[cd[4]] != sub_84917f4a[idx].field_512:
                                    revert with 0, 'ERC721: transfer from incorrect owner'
                                if not msg.sender:
                                    revert with 0, 'ERC721: transfer to the zero address'
                                s = 0
                                while s < sub_84917f4a.length:
                                    mem[0] = 28
                                    if sub_84917f4a[s].field_0 == cd[4]:
                                        revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
                                    if s == -1:
                                        revert with 0, 17
                                    s = s + 1
                                    continue 
                                if not sub_84917f4a[idx].field_512:
                                    stor9[cd[4]] = tokenByIndex.length
                                    tokenByIndex.length++
                                    tokenByIndex[tokenByIndex.length] = cd[4]
                                else:
                                    if sub_84917f4a[idx].field_512 != msg.sender:
                                        if not sub_84917f4a[idx].field_512:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[stor28[idx].field_512] < 1:
                                            revert with 0, 17
                                        if balanceOf[stor28[idx].field_512] - 1 != stor7[cd[4]]:
                                            tokenOfOwnerByIndex[stor28[idx].field_512][stor7[cd[4]]] = tokenOfOwnerByIndex[stor28[idx].field_512][stor3[stor28[idx].field_512] - 1]
                                            stor7[stor6[stor28[idx].field_512][stor3[stor28[idx].field_512] - 1]] = stor7[cd[4]]
                                        stor7[cd[4]] = 0
                                        tokenOfOwnerByIndex[stor28[idx].field_512][stor3[stor28[idx].field_512] - 1] = 0
                                if msg.sender:
                                    if sub_84917f4a[idx].field_512 != msg.sender:
                                        if not msg.sender:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(msg.sender)][stor3[address(msg.sender)]] = cd[4]
                                        stor7[cd[4]] = balanceOf[address(msg.sender)]
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor9[cd[4]] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor9[cd[4]]] = tokenByIndex[tokenByIndex.length]
                                    stor9[stor8[stor8.length]] = stor9[cd[4]]
                                    stor9[cd[4]] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                approved[cd[4]] = 0
                                if not ownerOf[cd[4]]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                emit Approval(ownerOf[cd[4]], 0, cd[4]);
                                if balanceOf[stor28[idx].field_512] < 1:
                                    revert with 0, 17
                                balanceOf[stor28[idx].field_512]--
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                ownerOf[cd[4]] = msg.sender
                                emit Transfer(sub_84917f4a[idx].field_512, msg.sender, cd[4]);
                                if ext_code.size(msg.sender):
                                    mem[288] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                    mem[292] = msg.sender
                                    mem[324] = sub_84917f4a[idx].field_512
                                    mem[356] = cd[4]
                                    mem[388] = 128
                                    mem[420] = 0
                                    s = 0
                                    while s < 0:
                                        mem[s + 452] = mem[s + 288]
                                        s = s + 32
                                        continue 
                                    call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, sub_84917f4a[idx].field_512, cd[4], 128, 0
                                    mem[288] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                if msg.value * royalties / 10000 > !(msg.value * sub_e02f3993 / 10000):
                                    revert with 0, 17
                                if (msg.value * royalties / 10000) + (msg.value * sub_e02f3993 / 10000) > !(msg.value * sub_ded8a564 / 10000):
                                    revert with 0, 17
                                if msg.value < (msg.value * royalties / 10000) + (msg.value * sub_e02f3993 / 10000) + (msg.value * sub_ded8a564 / 10000):
                                    revert with 0, 17
                                call sub_84917f4a[idx].field_512 with:
                                   value msg.value - (msg.value * royalties / 10000) - (msg.value * sub_e02f3993 / 10000) - (msg.value * sub_ded8a564 / 10000) wei
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with 0, 32, 42, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds' << 176
                                call stor25 with:
                                   value msg.value * sub_e02f3993 / 10000 wei
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with 0, 32, 63, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to community address'
                                call stor24 with:
                                   value msg.value * sub_ded8a564 / 10000 wei
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with 0, 32, 60, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to artist address'
                                call owner with:
                                   value msg.value * royalties / 10000 wei
                                     gas gas_remaining wei
                                if not ext_call.success:
                                    revert with 0, 32, 59, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to owner address'
                                stor10 = 1
                            revert with 0, 'ERC721 Marketplace: Token is not listed'
                        if unknown_0x3ccfd60b(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            if eth.balance(this.address) > 0x1999999999999999999999999999999999999999999999999999999999999999:
                                revert with 0, 17
                            if 10 * eth.balance(this.address) / 100 > 0x2492492492492492492492492492492492492492492492492492492492492492:
                                revert with 0, 17
                            call stor25 with:
                               value 7 * 10 * eth.balance(this.address) / 100 wei
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with 0, 32, 63, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to community wallet!'
                            call owner with:
                               value eth.balance(this.address) wei
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with 0, 32, 63, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to the owner wallet!'
                        else:
                            if uint32(call.func_hash) >> 224 != unknown_0x42842e0e(?????):
                                require unknown_0x44a0d68a(?????) == uint32(call.func_hash) >> 224
                                require not msg.value
                                require calldata.size - 4 >= 32
                                if owner != msg.sender:
                                    revert with 0, 'Ownable: caller is not the owner'
                                cost = cd[4]
                            else:
                                require not msg.value
                                require calldata.size - 4 >= 96
                                require cd[4] == address(cd[4])
                                require cd[36] == address(cd[36])
                                mem[128] = 0
                                if not ownerOf[cd[68]]:
                                    revert with 0, 'ERC721: operator query for nonexistent token'
                                if not ownerOf[cd[68]]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                if ownerOf[cd[68]] != msg.sender:
                                    if not ownerOf[cd[68]]:
                                        revert with 0, 'ERC721: approved query for nonexistent token'
                                    if approved[cd[68]] != msg.sender:
                                        if not stor5[stor2[cd[68]]][address(msg.sender)]:
                                            revert with 0, 'ERC721: transfer caller is not owner nor approved'
                                if not ownerOf[cd[68]]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                if ownerOf[cd[68]] != address(cd[4]):
                                    revert with 0, 'ERC721: transfer from incorrect owner'
                                if not address(cd[36]):
                                    revert with 0, 'ERC721: transfer to the zero address'
                                idx = 0
                                while idx < sub_84917f4a.length:
                                    mem[0] = 28
                                    if sub_84917f4a[idx].field_0 == cd[68]:
                                        revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                if not address(cd[4]):
                                    stor9[cd[68]] = tokenByIndex.length
                                    tokenByIndex.length++
                                    tokenByIndex[tokenByIndex.length] = cd[68]
                                else:
                                    if address(cd[4]) != address(cd[36]):
                                        if not address(cd[4]):
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(cd[4])] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(cd[4])] - 1 != stor7[cd[68]]:
                                            tokenOfOwnerByIndex[address(cd[4])][stor7[cd[68]]] = tokenOfOwnerByIndex[address(cd[4])][stor3[address(cd[4])] - 1]
                                            stor7[stor6[address(cd[4])][stor3[address(cd[4])] - 1]] = stor7[cd[68]]
                                        stor7[cd[68]] = 0
                                        tokenOfOwnerByIndex[address(cd[4])][stor3[address(cd[4])] - 1] = 0
                                if address(cd[36]):
                                    if address(cd[36]) != address(cd[4]):
                                        if not address(cd[36]):
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(cd[36])][stor3[address(cd[36])]] = cd[68]
                                        stor7[cd[68]] = balanceOf[address(cd[36])]
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor9[cd[68]] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor9[cd[68]]] = tokenByIndex[tokenByIndex.length]
                                    stor9[stor8[stor8.length]] = stor9[cd[68]]
                                    stor9[cd[68]] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                approved[cd[68]] = 0
                                if not ownerOf[cd[68]]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                emit Approval(ownerOf[cd[68]], 0, cd[68]);
                                if balanceOf[address(cd[4])] < 1:
                                    revert with 0, 17
                                balanceOf[address(cd[4])]--
                                if balanceOf[address(cd[36])] > -2:
                                    revert with 0, 17
                                balanceOf[address(cd[36])]++
                                ownerOf[cd[68]] = address(cd[36])
                                emit Transfer(address(cd[4]), address(cd[36]), cd[68]);
                                if ext_code.size(address(cd[36])):
                                    mem[164] = msg.sender
                                    mem[196] = address(cd[4])
                                    mem[228] = cd[68]
                                    mem[260] = 128
                                    mem[292] = 0
                                    mem[324 len 0] = None
                                    call address(cd[36]).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, address(cd[4]), cd[68], 128, 0
                                    mem[160] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not mem[96]:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with memory
                                              from 128
                                               len mem[96]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        else:
            if unknown_0xaec6e273(?????) > uint32(call.func_hash) >> 224:
                if unknown_0x95d89b41(?????) > uint32(call.func_hash) >> 224:
                    if unknown_0x84917f4a(?????) <= uint32(call.func_hash) >> 224:
                        if unknown_0x84917f4a(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            idx = 0
                            while idx < sub_84917f4a.length:
                                mem[0] = 28
                                if sub_84917f4a[idx].field_0 == cd[4]:
                                    if idx >= sub_84917f4a.length:
                                        revert with 0, 50
                                    return sub_84917f4a[idx].field_0, sub_84917f4a[idx].field_256, sub_84917f4a[idx].field_512, sub_84917f4a[idx].field_768
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            revert with 0, 'ERC721 Marketplace: Token is not listed'
                        if unknown_0x8da5cb5b(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            return owner
                        if unknown_0x8e6fe1a3(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            sub_2dfa9d00 = cd[4]
                        else:
                            require unknown_0x93eff851(?????) == uint32(call.func_hash) >> 224
                            require not msg.value
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            Mask(96, 0, stor12.field_160) = Mask(96, 0, not paused)
                    else:
                        if unknown_0x6f8b44b0(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            maxSupply = cd[4]
                        else:
                            if unknown_0x70a08231(?????) == uint32(call.func_hash) >> 224:
                                require not msg.value
                                require calldata.size - 4 >= 32
                                require cd[4] == address(cd[4])
                                if not address(cd[4]):
                                    revert with 0, 'ERC721: balance query for the zero address'
                                return balanceOf[address(cd[4])]
                            require unknown_0x7ef6f656(?????) == uint32(call.func_hash) >> 224
                            require not msg.value
                            require calldata.size - 4 >= 64
                            require cd[4] == address(cd[4])
                            require cd[36] == address(cd[36])
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            stor25 = address(cd[4])
                            stor24 = address(cd[36])
                else:
                    if unknown_0xa17bd783(?????) <= uint32(call.func_hash) >> 224:
                        if unknown_0xa17bd783(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            Mask(80, 0, stor12.field_176) = Mask(80, 0, not sub_a0ba1bbf)
                        else:
                            if unknown_0xa22cb465(?????) == uint32(call.func_hash) >> 224:
                                require not msg.value
                                require calldata.size - 4 >= 64
                                require cd[4] == address(cd[4])
                                require cd[36] == bool(cd[36])
                                if msg.sender == address(cd[4]):
                                    revert with 0, 'ERC721: approve to caller'
                                stor5[address(msg.sender)][address(cd[4])] = uint8(bool(cd[36]))
                                emit ApprovalForAll(bool(cd[36]), msg.sender, address(cd[4]));
                            else:
                                if uint32(call.func_hash) >> 224 != unknown_0xa5760553(?????):
                                    require unknown_0xa79123a9(?????) == uint32(call.func_hash) >> 224
                                    require not msg.value
                                    require calldata.size - 4 >= 64
                                    if stor10 == 2:
                                        revert with 0, 'ReentrancyGuard: reentrant call'
                                    stor10 = 2
                                    if not sub_a0ba1bbf:
                                        revert with 0, 'ERC721 Marketplace: Listings are currently disabled'
                                    if cd[36] <= 0:
                                        revert with 0, 'ERC721 Marketplace: Invalid listing price'
                                    if not ownerOf[cd[4]]:
                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                    if ownerOf[cd[4]] != msg.sender:
                                        revert with 0, 'ERC721 Marketplace: Caller is not the owner'
                                    idx = 0
                                    while idx < sub_84917f4a.length:
                                        mem[0] = 28
                                        if sub_84917f4a[idx].field_0 == cd[4]:
                                            revert with 0, 'ERC721 Marketplace: Token is already listed'
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    sub_84917f4a.length++
                                    storE456[stor28.length] = cd[4]
                                    storE456[stor28.length] = cd[36]
                                    storE456[stor28.length] = msg.sender
                                    storE456[stor28.length] = block.timestamp
                                    emit 0xda5118e1: cd[36], cd[4], msg.sender
                                    stor10 = 1
                                else:
                                    require not msg.value
                                    if owner != msg.sender:
                                        revert with 0, 'Ownable: caller is not the owner'
                                    staticcall address(stor12.field_0).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if ext_call.return_data[0] > 0x28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f5c28f:
                                        revert with 0, 17
                                    if 100 * ext_call.return_data[0] / 100000 > 0xc4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b0:
                                        revert with 0, 17
                                    call address(stor12.field_0).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args stor25, 333 * 100 * ext_call.return_data[0] / 100000
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if 100 * ext_call.return_data[0] / 100000 > 0xc4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b0:
                                        revert with 0, 17
                                    call address(stor12.field_0).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args stor24, 333 * 100 * ext_call.return_data[0] / 100000
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if 100 * ext_call.return_data[0] / 100000 > 0xc4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b00c4ce07b0:
                                        revert with 0, 17
                                    call address(stor12.field_0).0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, 333 * 100 * ext_call.return_data[0] / 100000
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    else:
                        if unknown_0x95d89b41(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            if bool(stor1.length):
                                if bool(stor1.length) == uint255(stor1.length) * 0.5 < 32:
                                    revert with 0, 34
                                if bool(stor1.length):
                                    if bool(stor1.length) == uint255(stor1.length) * 0.5 < 32:
                                        revert with 0, 34
                                    if Mask(256, -1, stor1.length):
                                        if 31 < uint255(stor1.length) * 0.5:
                                            mem[160] = uint256(stor1.field_0)
                                            idx = 160
                                            s = 0
                                            while (uint255(stor1.length) * 0.5) + 128 > idx:
                                                mem[idx + 32] = stor1[s].field_256
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            return Array(len=2 * Mask(256, -1, stor1.length), data=mem[160 len ceil32(uint255(stor1.length) * 0.5)])
                                        mem[160] = 256 * stor1.length.field_8
                                else:
                                    if bool(stor1.length) == stor1.length.field_1 < 32:
                                        revert with 0, 34
                                    if stor1.length.field_1:
                                        if 31 < stor1.length.field_1:
                                            mem[160] = uint256(stor1.field_0)
                                            idx = 160
                                            s = 0
                                            while stor1.length.field_1 + 128 > idx:
                                                mem[idx + 32] = stor1[s].field_256
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            return Array(len=2 * Mask(256, -1, stor1.length), data=mem[160 len ceil32(uint255(stor1.length) * 0.5)])
                                        mem[160] = 256 * stor1.length.field_8
                                mem[ceil32(uint255(stor1.length) * 0.5) + 224 len ceil32(uint255(stor1.length) * 0.5)] = mem[160 len ceil32(uint255(stor1.length) * 0.5)]
                                if ceil32(uint255(stor1.length) * 0.5) > uint255(stor1.length) * 0.5:
                                    mem[(uint255(stor1.length) * 0.5) + ceil32(uint255(stor1.length) * 0.5) + 224] = 0
                                return Array(len=2 * Mask(256, -1, stor1.length), data=mem[160 len ceil32(uint255(stor1.length) * 0.5)], mem[(2 * ceil32(uint255(stor1.length) * 0.5)) + 224 len 2 * ceil32(uint255(stor1.length) * 0.5)]), 
                            if bool(stor1.length) == stor1.length.field_1 < 32:
                                revert with 0, 34
                            if bool(stor1.length):
                                if bool(stor1.length) == uint255(stor1.length) * 0.5 < 32:
                                    revert with 0, 34
                                if Mask(256, -1, stor1.length):
                                    if 31 < uint255(stor1.length) * 0.5:
                                        mem[160] = uint256(stor1.field_0)
                                        idx = 160
                                        s = 0
                                        while (uint255(stor1.length) * 0.5) + 128 > idx:
                                            mem[idx + 32] = stor1[s].field_256
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        return Array(len=stor1.length % 128, data=mem[160 len ceil32(stor1.length.field_1)])
                                    mem[160] = 256 * stor1.length.field_8
                            else:
                                if bool(stor1.length) == stor1.length.field_1 < 32:
                                    revert with 0, 34
                                if stor1.length.field_1:
                                    if 31 < stor1.length.field_1:
                                        mem[160] = uint256(stor1.field_0)
                                        idx = 160
                                        s = 0
                                        while stor1.length.field_1 + 128 > idx:
                                            mem[idx + 32] = stor1[s].field_256
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        return Array(len=stor1.length % 128, data=mem[160 len ceil32(stor1.length.field_1)])
                                    mem[160] = 256 * stor1.length.field_8
                            mem[ceil32(stor1.length.field_1) + 224 len ceil32(stor1.length.field_1)] = mem[160 len ceil32(stor1.length.field_1)]
                            if ceil32(stor1.length.field_1) > stor1.length.field_1:
                                mem[stor1.length.field_1 + ceil32(stor1.length.field_1) + 224] = 0
                            return Array(len=stor1.length % 128, data=mem[160 len ceil32(stor1.length.field_1)], mem[(2 * ceil32(stor1.length.field_1)) + 224 len 2 * ceil32(stor1.length.field_1)]), 
                        if unknown_0x9b83cddc(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            idx = 0
                            while idx < sub_84917f4a.length:
                                mem[0] = 28
                                if sub_84917f4a[idx].field_0 == cd[4]:
                                    return 1, idx
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            return 0
                        if uint32(call.func_hash) >> 224 != unknown_0xa0712d68(?????):
                            require unknown_0xa0ba1bbf(?????) == uint32(call.func_hash) >> 224
                            require not msg.value
                            return bool(sub_a0ba1bbf)
                        require calldata.size - 4 >= 32
                        if stor10 == 2:
                            revert with 0, 'ReentrancyGuard: reentrant call'
                        stor10 = 2
                        if not cd[4]:
                            revert with 0, 'Invalid mint amount'
                        if cd[4] > sub_2dfa9d00:
                            revert with 0, 'Invalid mint amount'
                        if stor29 > !cd[4]:
                            revert with 0, 17
                        if stor29 + cd[4] > maxSupply:
                            revert with 0, 'Max token supply exceeded'
                        if maxSupply < reservedSupply:
                            revert with 0, 17
                        if stor29 + cd[4] > maxSupply - reservedSupply:
                            revert with 0, 'Remaining tokens are reserved'
                        if paused:
                            revert with 0, 'Minting is paused'
                        if cost and cd[4] > -1 / cost:
                            revert with 0, 17
                        if cost * cd[4] != msg.value:
                            revert with 0, 'Insufficient funds'
                        idx = 0
                        while idx < cd[4]:
                            stor29++
                            _13456 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_13456] = 0
                            if not msg.sender:
                                revert with 0, 'ERC721: mint to the zero address'
                            if ownerOf[stor29]:
                                revert with 0, 'ERC721: token already minted'
                            s = 0
                            while s < sub_84917f4a.length:
                                mem[0] = 28
                                if sub_84917f4a[s].field_0 == stor29:
                                    revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
                                if s == -1:
                                    revert with 0, 17
                                s = s + 1
                                continue 
                            stor9[stor29] = tokenByIndex.length
                            tokenByIndex.length++
                            tokenByIndex[tokenByIndex.length] = stor29
                            if msg.sender:
                                if not msg.sender:
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    mem[0] = stor29
                                    mem[32] = 2
                                    ownerOf[stor29] = msg.sender
                                    emit Transfer(0, msg.sender, stor29);
                                    if ext_code.size(msg.sender):
                                        _31819 = mem[64]
                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = stor29
                                        mem[mem[64] + 100] = 128
                                        _32333 = mem[_13456]
                                        mem[mem[64] + 132] = mem[_13456]
                                        s = 0
                                        while s < _32333:
                                            mem[s + mem[64] + 164] = mem[s + _13456 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_32333) <= _32333:
                                            call msg.sender.mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len ceil32(_32333) + _31819 + -mem[64] + 160]
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _43821 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_43821] == Mask(32, 224, mem[_43821])
                                            if Mask(32, 224, mem[_43821]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            mem[_32333 + _31819 + 164] = 0
                                            call msg.sender.mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len ceil32(_32333) + _31819 + -mem[64] + 160]
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _43822 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_43822] == Mask(32, 224, mem[_43822])
                                            if Mask(32, 224, mem[_43822]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if not msg.sender:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    tokenOfOwnerByIndex[address(msg.sender)][stor3[address(msg.sender)]] = stor29
                                    stor7[stor29] = balanceOf[address(msg.sender)]
                                    if balanceOf[address(msg.sender)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)]++
                                    mem[0] = stor29
                                    mem[32] = 2
                                    ownerOf[stor29] = msg.sender
                                    emit Transfer(0, msg.sender, stor29);
                                    if ext_code.size(msg.sender):
                                        _33324 = mem[64]
                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = stor29
                                        mem[mem[64] + 100] = 128
                                        _34003 = mem[_13456]
                                        mem[mem[64] + 132] = mem[_13456]
                                        s = 0
                                        while s < _34003:
                                            mem[s + mem[64] + 164] = mem[s + _13456 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_34003) <= _34003:
                                            call msg.sender.mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len ceil32(_34003) + _33324 + -mem[64] + 160]
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _43823 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_43823] == Mask(32, 224, mem[_43823])
                                            if Mask(32, 224, mem[_43823]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            mem[_34003 + _33324 + 164] = 0
                                            call msg.sender.mem[mem[64] len 4] with:
                                                 gas gas_remaining wei
                                                args mem[mem[64] + 4 len ceil32(_34003) + _33324 + -mem[64] + 160]
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _43824 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_43824] == Mask(32, 224, mem[_43824])
                                            if Mask(32, 224, mem[_43824]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if tokenByIndex.length < 1:
                                    revert with 0, 17
                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                    revert with 0, 50
                                if stor9[stor29] >= tokenByIndex.length:
                                    revert with 0, 50
                                tokenByIndex[stor9[stor29]] = tokenByIndex[tokenByIndex.length]
                                stor9[stor8[stor8.length]] = stor9[stor29]
                                stor9[stor29] = 0
                                if not tokenByIndex.length:
                                    revert with 0, 49
                                tokenByIndex[tokenByIndex.length] = 0
                                tokenByIndex.length--
                                if balanceOf[address(msg.sender)] > -2:
                                    revert with 0, 17
                                balanceOf[address(msg.sender)]++
                                mem[0] = stor29
                                mem[32] = 2
                                ownerOf[stor29] = msg.sender
                                emit Transfer(0, msg.sender, stor29);
                                if ext_code.size(msg.sender):
                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = msg.sender
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = stor29
                                    mem[mem[64] + 100] = 128
                                    _34532 = mem[_13456]
                                    mem[mem[64] + 132] = mem[_13456]
                                    s = 0
                                    while s < _34532:
                                        mem[s + mem[64] + 164] = mem[s + _13456 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(_34532) <= _34532:
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor29, 128, mem[mem[64] + 132 len ceil32(_34532) + 32]
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _43825 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_43825] == Mask(32, 224, mem[_43825])
                                        if Mask(32, 224, mem[_43825]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        mem[_34532 + mem[64] + 164] = 0
                                        call msg.sender.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args msg.sender, 0, stor29, 128, mem[mem[64] + 132 len ceil32(_34532) + 32]
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            if not return_data.size:
                                                if not mem[96]:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with memory
                                                  from 128
                                                   len mem[96]
                                            if not return_data.size:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _43826 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_43826] == Mask(32, 224, mem[_43826])
                                        if Mask(32, 224, mem[_43826]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            if idx == -1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        if cost * cd[4] > 0x1999999999999999999999999999999999999999999999999999999999999999:
                            revert with 0, 17
                        if 10 * cost * cd[4] / 100 > 0x2492492492492492492492492492492492492492492492492492492492492492:
                            revert with 0, 17
                        call stor25 with:
                           value 7 * 10 * cost * cd[4] / 100 wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with 0, 32, 63, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to community wallet!'
                        if 10 * cost * cd[4] / 100 > 0x5555555555555555555555555555555555555555555555555555555555555555:
                            revert with 0, 17
                        call owner with:
                           value 3 * 10 * cost * cd[4] / 100 wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with 0, 32, 59, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds to owner wallet!'
                        stor10 = 1
            else:
                if unknown_0xe02f3993(?????) <= uint32(call.func_hash) >> 224:
                    if unknown_0xf1b2d6a3(?????) > uint32(call.func_hash) >> 224:
                        if unknown_0xe02f3993(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            return sub_e02f3993
                        if uint32(call.func_hash) >> 224 != unknown_0xe65f9cf4(?????):
                            if uint32(call.func_hash) >> 224 != unknown_0xe985e9c5(?????):
                                require unknown_0xf053dc5c(?????) == uint32(call.func_hash) >> 224
                                require not msg.value
                                return royalties
                            require not msg.value
                            require calldata.size - 4 >= 64
                            require cd[4] == address(cd[4])
                            require cd[36] == address(cd[36])
                            return bool(stor5[address(cd[4])][address(cd[36])])
                        require not msg.value
                        require calldata.size - 4 >= 32
                        if owner != msg.sender:
                            revert with 0, 'Ownable: caller is not the owner'
                        call address(stor12.field_0).0xa9059cbb with:
                             gas gas_remaining wei
                            args msg.sender, cd[4]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    else:
                        if unknown_0xf1b2d6a3(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            mem[64] = (32 * sub_84917f4a.length) + 160
                            mem[128] = sub_84917f4a.length
                            s = 160
                            idx = 0
                            while idx < sub_84917f4a.length:
                                mem[0] = 28
                                _13388 = mem[64]
                                mem[64] = mem[64] + 128
                                mem[_13388] = sub_84917f4a[idx].field_0
                                mem[_13388 + 32] = sub_84917f4a[idx].field_256
                                mem[_13388 + 64] = sub_84917f4a[idx].field_512
                                mem[_13388 + 96] = sub_84917f4a[idx].field_768
                                mem[s] = _13388
                                s = s + 32
                                idx = idx + 1
                                continue 
                            _13414 = mem[64]
                            mem[mem[64]] = 32
                            _13454 = mem[128]
                            mem[mem[64] + 32] = mem[128]
                            idx = 0
                            s = mem[64] + 64
                            t = 160
                            while idx < _13454:
                                _28773 = mem[t]
                                mem[s] = mem[mem[t]]
                                mem[s + 32] = mem[_28773 + 32]
                                mem[s + 64] = mem[_28773 + 76 len 20]
                                mem[s + 96] = mem[_28773 + 96]
                                idx = idx + 1
                                s = s + 128
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _13414 + (128 * _13454) + -mem[64] + 64
                        if unknown_0xf2fde38b(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            require cd[4] == address(cd[4])
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            if not address(cd[4]):
                                revert with 0, 'Ownable: new owner is the zero address'
                            owner = address(cd[4])
                            emit OwnershipTransferred(owner, address(cd[4]));
                        else:
                            if uint32(call.func_hash) >> 224 != unknown_0xf9daade4(?????):
                                require unknown_0xfe2c7fee(?????) == uint32(call.func_hash) >> 224
                                require not msg.value
                                require calldata.size - 4 >= 32
                                require cd[4] <= test266151307()
                                require calldata.size > cd[4] + 35
                                if ('cd', 4).length > test266151307():
                                    revert with 0, 65
                                if ceil32(ceil32(('cd', 4).length)) + 129 < 128 or ceil32(ceil32(('cd', 4).length)) + 129 > test266151307():
                                    revert with 0, 65
                                require cd[4] + ('cd', 4).length + 36 <= calldata.size
                                if owner != msg.sender:
                                    revert with 0, 'Ownable: caller is not the owner'
                                if bool(stor13.length):
                                    if bool(stor13.length) == uint255(stor13.length) * 0.5 < 32:
                                        revert with 0, 34
                                    if ('cd', 4).length:
                                        stor13[].field_0 = Array(len=('cd', 4).length, data=call.data[cd[4] + 36 len ('cd', 4).length])
                                    else:
                                        stor13.length = 0
                                        idx = 0
                                        while (uint255(stor13.length) * 0.5) + 31 / 32 > idx:
                                            stor13[idx].field_0 = 0
                                            idx = idx + 1
                                            continue 
                                else:
                                    if bool(stor13.length) == stor13.length.field_1 < 32:
                                        revert with 0, 34
                                    if ('cd', 4).length:
                                        stor13[].field_0 = Array(len=('cd', 4).length, data=call.data[cd[4] + 36 len ('cd', 4).length])
                                    else:
                                        stor13.length = 0
                                        idx = 0
                                        while stor13.length.field_1 + 31 / 32 > idx:
                                            stor13[idx].field_0 = 0
                                            idx = idx + 1
                                            continue 
                            else:
                                require not msg.value
                                require calldata.size - 4 >= 64
                                require cd[4] <= test266151307()
                                require cd[4] + 35 < calldata.size
                                require ('cd', 4).length <= test266151307()
                                require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
                                require cd[36] <= test266151307()
                                require cd[36] + 35 < calldata.size
                                require ('cd', 36).length <= test266151307()
                                require cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
                                if owner != msg.sender:
                                    revert with 0, 'Ownable: caller is not the owner'
                                if ('cd', 36).length != ('cd', 4).length:
                                    revert with 0, 1
                                if not ('cd', 4).length:
                                    revert with 0, 1
                                if not ('cd', 36).length:
                                    revert with 0, 1
                                idx = 0
                                s = 0
                                while idx < ('cd', 36).length:
                                    require cd[((32 * idx) + cd[36] + 36)] == uint8(cd[((32 * idx) + cd[36] + 36)])
                                    if s > !uint8(cd[((32 * idx) + cd[36] + 36)]):
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + uint8(cd[((32 * idx) + cd[36] + 36)])
                                    continue 
                                if stor29 > !(s * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length):
                                    revert with 0, 17
                                if stor29 + (s * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length * ('cd', 36).length) > maxSupply:
                                    revert with 0, 'Max token supply exceeded'
                                idx = 0
                                while idx < ('cd', 4).length:
                                    if idx >= ('cd', 36).length:
                                        revert with 0, 50
                                    require cd[((32 * idx) + cd[36] + 36)] == uint8(cd[((32 * idx) + cd[36] + 36)])
                                    s = 0
                                    while s < uint8(cd[((32 * idx) + cd[36] + 36)]):
                                        stor29++
                                        if idx >= ('cd', 4).length:
                                            revert with 0, 50
                                        require cd[((32 * idx) + cd[4] + 36)] == address(cd[((32 * idx) + cd[4] + 36)])
                                        _44483 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_44483] = 0
                                        if not address(cd[((32 * idx) + cd[4] + 36)]):
                                            revert with 0, 'ERC721: mint to the zero address'
                                        if ownerOf[stor29]:
                                            revert with 0, 'ERC721: token already minted'
                                        t = 0
                                        while t < sub_84917f4a.length:
                                            mem[0] = 28
                                            if sub_84917f4a[t].field_0 == stor29:
                                                revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
                                            if t == -1:
                                                revert with 0, 17
                                            t = t + 1
                                            continue 
                                        stor9[stor29] = tokenByIndex.length
                                        tokenByIndex.length++
                                        tokenByIndex[tokenByIndex.length] = stor29
                                        if address(cd[((32 * idx) + cd[4] + 36)]):
                                            if not address(cd[((32 * idx) + cd[4] + 36)]):
                                                if balanceOf[address(cd[((32 * idx) + cd[4] + 36)])] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(cd[((32 * idx) + cd[4] + 36)])]++
                                                mem[0] = stor29
                                                mem[32] = 2
                                                ownerOf[stor29] = address(cd[((32 * idx) + cd[4] + 36)])
                                                emit Transfer(0, address(cd[((32 * idx) + cd[4] + 36)]), stor29);
                                                if ext_code.size(address(cd[((32 * idx) + cd[4] + 36)])):
                                                    _55411 = mem[64]
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = 0
                                                    mem[mem[64] + 68] = stor29
                                                    mem[mem[64] + 100] = 128
                                                    _55829 = mem[_44483]
                                                    mem[mem[64] + 132] = mem[_44483]
                                                    t = 0
                                                    while t < _55829:
                                                        mem[t + mem[64] + 164] = mem[t + _44483 + 32]
                                                        t = t + 32
                                                        continue 
                                                    if ceil32(_55829) <= _55829:
                                                        call address(cd[((32 * idx) + cd[4] + 36)]).mem[mem[64] len 4] with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4 len ceil32(_55829) + _55411 + -mem[64] + 160]
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _58350 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_58350] == Mask(32, 224, mem[_58350])
                                                        if Mask(32, 224, mem[_58350]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[_55829 + _55411 + 164] = 0
                                                        call address(cd[((32 * idx) + cd[4] + 36)]).mem[mem[64] len 4] with:
                                                             gas gas_remaining wei
                                                            args mem[mem[64] + 4 len ceil32(_55829) + _55411 + -mem[64] + 160]
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _58351 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_58351] == Mask(32, 224, mem[_58351])
                                                        if Mask(32, 224, mem[_58351]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not address(cd[((32 * idx) + cd[4] + 36)]):
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(cd[((32 * idx) + cd[4] + 36)])][stor3[address(cd[((32 * idx) + cd[4] + 36)])]] = stor29
                                                stor7[stor29] = balanceOf[address(cd[((32 * idx) + cd[4] + 36)])]
                                                if balanceOf[address(cd[((32 * idx) + cd[4] + 36)])] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(cd[((32 * idx) + cd[4] + 36)])]++
                                                mem[0] = stor29
                                                mem[32] = 2
                                                ownerOf[stor29] = address(cd[((32 * idx) + cd[4] + 36)])
                                                emit Transfer(0, address(cd[((32 * idx) + cd[4] + 36)]), stor29);
                                                if ext_code.size(address(cd[((32 * idx) + cd[4] + 36)])):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = 0
                                                    mem[mem[64] + 68] = stor29
                                                    mem[mem[64] + 100] = 128
                                                    _56796 = mem[_44483]
                                                    mem[mem[64] + 132] = mem[_44483]
                                                    t = 0
                                                    while t < _56796:
                                                        mem[t + mem[64] + 164] = mem[t + _44483 + 32]
                                                        t = t + 32
                                                        continue 
                                                    if ceil32(_56796) <= _56796:
                                                        call address(cd[((32 * idx) + cd[4] + 36)]).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, 0, stor29, 128, mem[mem[64] + 132 len ceil32(_56796) + 32]
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _58352 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_58352] == Mask(32, 224, mem[_58352])
                                                        if Mask(32, 224, mem[_58352]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[_56796 + mem[64] + 164] = 0
                                                        call address(cd[((32 * idx) + cd[4] + 36)]).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, 0, stor29, 128, mem[mem[64] + 132 len ceil32(_56796) + 32]
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _58353 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_58353] == Mask(32, 224, mem[_58353])
                                                        if Mask(32, 224, mem[_58353]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor9[stor29] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor9[stor29]] = tokenByIndex[tokenByIndex.length]
                                            stor9[stor8[stor8.length]] = stor9[stor29]
                                            stor9[stor29] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            if balanceOf[address(cd[((32 * idx) + cd[4] + 36)])] > -2:
                                                revert with 0, 17
                                            balanceOf[address(cd[((32 * idx) + cd[4] + 36)])]++
                                            mem[0] = stor29
                                            mem[32] = 2
                                            ownerOf[stor29] = address(cd[((32 * idx) + cd[4] + 36)])
                                            emit Transfer(0, address(cd[((32 * idx) + cd[4] + 36)]), stor29);
                                            if ext_code.size(address(cd[((32 * idx) + cd[4] + 36)])):
                                                _56797 = mem[64]
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = 0
                                                mem[mem[64] + 68] = stor29
                                                mem[mem[64] + 100] = 128
                                                _56992 = mem[_44483]
                                                mem[mem[64] + 132] = mem[_44483]
                                                t = 0
                                                while t < _56992:
                                                    mem[t + mem[64] + 164] = mem[t + _44483 + 32]
                                                    t = t + 32
                                                    continue 
                                                if ceil32(_56992) <= _56992:
                                                    call address(cd[((32 * idx) + cd[4] + 36)]).mem[mem[64] len 4] with:
                                                         gas gas_remaining wei
                                                        args mem[mem[64] + 4 len ceil32(_56992) + _56797 + -mem[64] + 160]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _58354 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_58354] == Mask(32, 224, mem[_58354])
                                                    if Mask(32, 224, mem[_58354]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[_56992 + _56797 + 164] = 0
                                                    call address(cd[((32 * idx) + cd[4] + 36)]).mem[mem[64] len 4] with:
                                                         gas gas_remaining wei
                                                        args mem[mem[64] + 4 len ceil32(_56992) + _56797 + -mem[64] + 160]
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _58355 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_58355] == Mask(32, 224, mem[_58355])
                                                    if Mask(32, 224, mem[_58355]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        if s == -1:
                                            revert with 0, 17
                                        s = s + 1
                                        continue 
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                else:
                    if unknown_0xd5abeb01(?????) <= uint32(call.func_hash) >> 224:
                        if unknown_0xd5abeb01(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            return maxSupply
                        if unknown_0xdb2e21bc(?????) == uint32(call.func_hash) >> 224:
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            call owner with:
                               value eth.balance(this.address) wei
                                 gas gas_remaining wei
                            if not ext_call.success:
                                revert with 0, 32, 42, 0xfe41564158205472616e73616374696f6e3a204661696c656420746f20747261, 'sfer funds' << 176
                        else:
                            if uint32(call.func_hash) >> 224 != unknown_0xdd18ff50(?????):
                                require unknown_0xded8a564(?????) == uint32(call.func_hash) >> 224
                                require not msg.value
                                return sub_ded8a564
                            require not msg.value
                            require calldata.size - 4 >= 32
                            require cd[4] == address(cd[4])
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            stor27 = address(cd[4])
                            address(stor12.field_0) = address(cd[4])
                    else:
                        if unknown_0xaec6e273(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            if stor10 == 2:
                                revert with 0, 'ReentrancyGuard: reentrant call'
                            stor10 = 2
                            idx = 0
                            while idx < sub_84917f4a.length:
                                mem[0] = 28
                                if sub_84917f4a[idx].field_0 != cd[4]:
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                if idx >= sub_84917f4a.length:
                                    revert with 0, 50
                                if sub_84917f4a[idx].field_512 != msg.sender:
                                    revert with 0, 'ERC721 Marketplace: Caller is not the owner'
                                if sub_84917f4a.length < 1:
                                    revert with 0, 17
                                if sub_84917f4a.length - 1 >= sub_84917f4a.length:
                                    revert with 0, 50
                                if idx >= sub_84917f4a.length:
                                    revert with 0, 50
                                sub_84917f4a[idx].field_0 = sub_84917f4a[sub_84917f4a.length - 1].field_0
                                sub_84917f4a[idx].field_256 = sub_84917f4a[sub_84917f4a.length - 1].field_256
                                sub_84917f4a[idx].field_512 = sub_84917f4a[sub_84917f4a.length - 1].field_512
                                sub_84917f4a[idx].field_768 = sub_84917f4a[sub_84917f4a.length - 1].field_768
                                if not sub_84917f4a.length:
                                    revert with 0, 49
                                sub_84917f4a[sub_84917f4a.length - 1].field_0 = 0
                                sub_84917f4a[sub_84917f4a.length - 1].field_256 = 0
                                sub_84917f4a[sub_84917f4a.length - 1].field_512 = 0
                                sub_84917f4a[sub_84917f4a.length - 1].field_768 = 0
                                sub_84917f4a.length--
                                emit 0xd61f1a8b: cd[4]
                                stor10 = 1
                            revert with 0, 'ERC721 Marketplace: Token is not listed'
                        if unknown_0xaff72141(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            require cd[4] <= test266151307()
                            require calldata.size > cd[4] + 35
                            if ('cd', 4).length > test266151307():
                                revert with 0, 65
                            if ceil32(ceil32(('cd', 4).length)) + 129 < 128 or ceil32(ceil32(('cd', 4).length)) + 129 > test266151307():
                                revert with 0, 65
                            require cd[4] + ('cd', 4).length + 36 <= calldata.size
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            if bool(stor15.length):
                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                    revert with 0, 34
                                if ('cd', 4).length:
                                    stor15[].field_0 = Array(len=('cd', 4).length, data=call.data[cd[4] + 36 len ('cd', 4).length])
                                else:
                                    stor15.length = 0
                                    idx = 0
                                    while (uint255(stor15.length) * 0.5) + 31 / 32 > idx:
                                        stor15[idx].field_0 = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                    revert with 0, 34
                                if ('cd', 4).length:
                                    stor15[].field_0 = Array(len=('cd', 4).length, data=call.data[cd[4] + 36 len ('cd', 4).length])
                                else:
                                    stor15.length = 0
                                    idx = 0
                                    while stor15.length.field_1 + 31 / 32 > idx:
                                        stor15[idx].field_0 = 0
                                        idx = idx + 1
                                        continue 
                        else:
                            if uint32(call.func_hash) >> 224 != unknown_0xb88d4fde(?????):
                                require unknown_0xc87b56dd(?????) == uint32(call.func_hash) >> 224
                                require not msg.value
                                require calldata.size - 4 >= 32
                                mem[0] = cd[4]
                                mem[32] = 2
                                if not ownerOf[cd[4]]:
                                    revert with 0, 'ERC721Metadata: URI query for nonexistent token'
                                if not revealed:
                                    if bool(stor13.length):
                                        if bool(stor13.length) == uint255(stor13.length) * 0.5 < 32:
                                            revert with 0, 34
                                        if bool(stor13.length):
                                            if bool(stor13.length) == uint255(stor13.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor13.length):
                                                if 31 < uint255(stor13.length) * 0.5:
                                                    mem[160] = uint256(stor13.field_0)
                                                    idx = 160
                                                    s = 0
                                                    while (uint255(stor13.length) * 0.5) + 128 > idx:
                                                        mem[idx + 32] = stor13[s].field_256
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    return Array(len=2 * Mask(256, -1, stor13.length), data=mem[160 len ceil32(uint255(stor13.length) * 0.5)])
                                                mem[160] = 256 * stor13.length.field_8
                                        else:
                                            if bool(stor13.length) == stor13.length.field_1 < 32:
                                                revert with 0, 34
                                            if stor13.length.field_1:
                                                if 31 < stor13.length.field_1:
                                                    mem[160] = uint256(stor13.field_0)
                                                    idx = 160
                                                    s = 0
                                                    while stor13.length.field_1 + 128 > idx:
                                                        mem[idx + 32] = stor13[s].field_256
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    return Array(len=2 * Mask(256, -1, stor13.length), data=mem[160 len ceil32(uint255(stor13.length) * 0.5)])
                                                mem[160] = 256 * stor13.length.field_8
                                        mem[ceil32(uint255(stor13.length) * 0.5) + 224 len ceil32(uint255(stor13.length) * 0.5)] = mem[160 len ceil32(uint255(stor13.length) * 0.5)]
                                        if ceil32(uint255(stor13.length) * 0.5) > uint255(stor13.length) * 0.5:
                                            mem[(uint255(stor13.length) * 0.5) + ceil32(uint255(stor13.length) * 0.5) + 224] = 0
                                        return Array(len=2 * Mask(256, -1, stor13.length), data=mem[160 len ceil32(uint255(stor13.length) * 0.5)], mem[(2 * ceil32(uint255(stor13.length) * 0.5)) + 224 len 2 * ceil32(uint255(stor13.length) * 0.5)]), 
                                    if bool(stor13.length) == stor13.length.field_1 < 32:
                                        revert with 0, 34
                                    if bool(stor13.length):
                                        if bool(stor13.length) == uint255(stor13.length) * 0.5 < 32:
                                            revert with 0, 34
                                        if Mask(256, -1, stor13.length):
                                            if 31 < uint255(stor13.length) * 0.5:
                                                mem[160] = uint256(stor13.field_0)
                                                idx = 160
                                                s = 0
                                                while (uint255(stor13.length) * 0.5) + 128 > idx:
                                                    mem[idx + 32] = stor13[s].field_256
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                return Array(len=stor13.length % 128, data=mem[160 len ceil32(stor13.length.field_1)])
                                            mem[160] = 256 * stor13.length.field_8
                                    else:
                                        if bool(stor13.length) == stor13.length.field_1 < 32:
                                            revert with 0, 34
                                        if stor13.length.field_1:
                                            if 31 < stor13.length.field_1:
                                                mem[160] = uint256(stor13.field_0)
                                                idx = 160
                                                s = 0
                                                while stor13.length.field_1 + 128 > idx:
                                                    mem[idx + 32] = stor13[s].field_256
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                return Array(len=stor13.length % 128, data=mem[160 len ceil32(stor13.length.field_1)])
                                            mem[160] = 256 * stor13.length.field_8
                                    mem[ceil32(stor13.length.field_1) + 224 len ceil32(stor13.length.field_1)] = mem[160 len ceil32(stor13.length.field_1)]
                                    if ceil32(stor13.length.field_1) > stor13.length.field_1:
                                        mem[stor13.length.field_1 + ceil32(stor13.length.field_1) + 224] = 0
                                    return Array(len=stor13.length % 128, data=mem[160 len ceil32(stor13.length.field_1)], mem[(2 * ceil32(stor13.length.field_1)) + 224 len 2 * ceil32(stor13.length.field_1)]), 
                                if bool(stor14.length):
                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                        revert with 0, 34
                                    mem[128] = uint255(stor14.length) * 0.5
                                    if not bool(stor14.length):
                                        if bool(stor14.length) == stor14.length.field_1 < 32:
                                            revert with 0, 34
                                        if not stor14.length.field_1:
                                            if uint255(stor14.length) * 0.5 <= 0:
                                                return ''
                                            if not cd[4]:
                                                mem[ceil32(uint255(stor14.length) * 0.5) + 160] = 1
                                                mem[ceil32(uint255(stor14.length) * 0.5) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(uint255(stor14.length) * 0.5)] = mem[160 len ceil32(uint255(stor14.length) * 0.5)]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 0
                                                if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                                                    if bool(stor15.length):
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _31247 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                                if ceil32(_31247) > _31247:
                                                                    mem[_31247 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_31247) + -mem[64] + 64
                                                            idx = 0
                                                            s = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                                idx = idx + 32
                                                                s = s + 1
                                                                continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321] = 0
                                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _31398 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                            if ceil32(_31398) > _31398:
                                                                mem[_31398 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_31398) + -mem[64] + 64
                                                        idx = 0
                                                        s = 0
                                                        while idx < stor15.length.field_1:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                else:
                                                    if bool(stor15.length):
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _31253 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                                if ceil32(_31253) > _31253:
                                                                    mem[_31253 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_31253) + -mem[64] + 64
                                                            idx = 0
                                                            s = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                                idx = idx + 32
                                                                s = s + 1
                                                                continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321] = 0
                                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _31402 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                            if ceil32(_31402) > _31402:
                                                                mem[_31402 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_31402) + -mem[64] + 64
                                                        idx = 0
                                                        s = 0
                                                        while idx < stor15.length.field_1:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = 32
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                            s = 0
                                            idx = cd[4]
                                            while idx:
                                                if s == -1:
                                                    revert with 0, 17
                                                s = s + 1
                                                idx = idx / 10
                                                continue 
                                            if s > test266151307():
                                                revert with 0, 65
                                            mem[ceil32(uint255(stor14.length) * 0.5) + 160] = s
                                            if not s:
                                                t = s
                                                idx = cd[4]
                                                while idx:
                                                    if t < 1:
                                                        revert with 0, 17
                                                    if 48 > !(idx % 10):
                                                        revert with 0, 17
                                                    if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                        revert with 0, 50
                                                    mem[t + ceil32(uint255(stor14.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                    t = t - 1
                                                    idx = idx / 10
                                                    continue 
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor14.length) * 0.5)] = mem[160 len ceil32(uint255(stor14.length) * 0.5)]
                                                if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                        if bool(stor15.length):
                                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _54312 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_54312) > _54312:
                                                                        mem[_54312 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_54312) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < uint255(stor15.length) * 0.5:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54573 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54573) > _54573:
                                                                    mem[_54573 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54573) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < stor15.length.field_1:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                    else:
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                                        if bool(stor15.length):
                                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _54315 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_54315) > _54315:
                                                                        mem[_54315 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_54315) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < uint255(stor15.length) * 0.5:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54575 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54575) > _54575:
                                                                    mem[_54575 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54575) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < stor15.length.field_1:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224] = 0
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                        if bool(stor15.length):
                                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _54318 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_54318) > _54318:
                                                                        mem[_54318 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_54318) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < uint255(stor15.length) * 0.5:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54577 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54577) > _54577:
                                                                    mem[_54577 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54577) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < stor15.length.field_1:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                    else:
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                                        if bool(stor15.length):
                                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _54321 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_54321) > _54321:
                                                                        mem[_54321 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_54321) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < uint255(stor15.length) * 0.5:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54579 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54579) > _54579:
                                                                    mem[_54579 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54579) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < stor15.length.field_1:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                            else:
                                                mem[ceil32(uint255(stor14.length) * 0.5) + 192 len s] = call.data[calldata.size len s]
                                                t = s
                                                idx = cd[4]
                                                while idx:
                                                    if t < 1:
                                                        revert with 0, 17
                                                    if 48 > !(idx % 10):
                                                        revert with 0, 17
                                                    if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                        revert with 0, 50
                                                    mem[t + ceil32(uint255(stor14.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                    t = t - 1
                                                    idx = idx / 10
                                                    continue 
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor14.length) * 0.5)] = mem[160 len ceil32(uint255(stor14.length) * 0.5)]
                                                if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                        if bool(stor15.length):
                                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _54324 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_54324) > _54324:
                                                                        mem[_54324 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_54324) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < uint255(stor15.length) * 0.5:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54581 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54581) > _54581:
                                                                    mem[_54581 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54581) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < stor15.length.field_1:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                    else:
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                                        if bool(stor15.length):
                                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _54327 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_54327) > _54327:
                                                                        mem[_54327 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_54327) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < uint255(stor15.length) * 0.5:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54583 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54583) > _54583:
                                                                    mem[_54583 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54583) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < stor15.length.field_1:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224] = 0
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                        if bool(stor15.length):
                                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _54330 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_54330) > _54330:
                                                                        mem[_54330 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_54330) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < uint255(stor15.length) * 0.5:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54585 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54585) > _54585:
                                                                    mem[_54585 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54585) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < stor15.length.field_1:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                    else:
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                                        if bool(stor15.length):
                                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _54333 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_54333) > _54333:
                                                                        mem[_54333 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_54333) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < uint255(stor15.length) * 0.5:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54587 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54587) > _54587:
                                                                    mem[_54587 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54587) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < stor15.length.field_1:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                        else:
                                            if 31 >= stor14.length.field_1:
                                                mem[160] = 256 * stor14.length.field_8
                                                if uint255(stor14.length) * 0.5 <= 0:
                                                    return ''
                                                if not cd[4]:
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + 160] = 1
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(uint255(stor14.length) * 0.5)] = mem[160 len ceil32(uint255(stor14.length) * 0.5)]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 0
                                                    if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                                                        if bool(stor15.length):
                                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _31269 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                                    if ceil32(_31269) > _31269:
                                                                        mem[_31269 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_31269) + -mem[64] + 64
                                                                idx = 0
                                                                s = 0
                                                                while idx < uint255(stor15.length) * 0.5:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                                    idx = idx + 32
                                                                    s = s + 1
                                                                    continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _31415 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                                if ceil32(_31415) > _31415:
                                                                    mem[_31415 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_31415) + -mem[64] + 64
                                                            idx = 0
                                                            s = 0
                                                            while idx < stor15.length.field_1:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                                idx = idx + 32
                                                                s = s + 1
                                                                continue 
                                                    else:
                                                        if bool(stor15.length):
                                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _31275 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                                    if ceil32(_31275) > _31275:
                                                                        mem[_31275 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_31275) + -mem[64] + 64
                                                                idx = 0
                                                                s = 0
                                                                while idx < uint255(stor15.length) * 0.5:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                                    idx = idx + 32
                                                                    s = s + 1
                                                                    continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _31419 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                                if ceil32(_31419) > _31419:
                                                                    mem[_31419 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_31419) + -mem[64] + 64
                                                            idx = 0
                                                            s = 0
                                                            while idx < stor15.length.field_1:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                                idx = idx + 32
                                                                s = s + 1
                                                                continue 
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = 32
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                                s = 0
                                                idx = cd[4]
                                                while idx:
                                                    if s == -1:
                                                        revert with 0, 17
                                                    s = s + 1
                                                    idx = idx / 10
                                                    continue 
                                                if s > test266151307():
                                                    revert with 0, 65
                                                mem[ceil32(uint255(stor14.length) * 0.5) + 160] = s
                                                if not s:
                                                    t = s
                                                    idx = cd[4]
                                                    while idx:
                                                        if t < 1:
                                                            revert with 0, 17
                                                        if 48 > !(idx % 10):
                                                            revert with 0, 17
                                                        if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                            revert with 0, 50
                                                        mem[t + ceil32(uint255(stor14.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                        t = t - 1
                                                        idx = idx / 10
                                                        continue 
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor14.length) * 0.5)] = mem[160 len ceil32(uint255(stor14.length) * 0.5)]
                                                    if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                            if bool(stor15.length):
                                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                    revert with 0, 34
                                                                if not bool(stor15.length):
                                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                                else:
                                                                    if bool(stor15.length) != 1:
                                                                        mem[64] = 0
                                                                        _54352 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                        if ceil32(_54352) > _54352:
                                                                            mem[_54352 + 64] = 0
                                                                        return memory
                                                                          from mem[64]
                                                                           len ceil32(_54352) + -mem[64] + 64
                                                                    idx = 0
                                                                    t = 0
                                                                    while idx < uint255(stor15.length) * 0.5:
                                                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                        idx = idx + 32
                                                                        t = t + 1
                                                                        continue 
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _54621 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_54621) > _54621:
                                                                        mem[_54621 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_54621) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < stor15.length.field_1:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                        else:
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                                            if bool(stor15.length):
                                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                    revert with 0, 34
                                                                if not bool(stor15.length):
                                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                                else:
                                                                    if bool(stor15.length) != 1:
                                                                        mem[64] = 0
                                                                        _54355 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                        if ceil32(_54355) > _54355:
                                                                            mem[_54355 + 64] = 0
                                                                        return memory
                                                                          from mem[64]
                                                                           len ceil32(_54355) + -mem[64] + 64
                                                                    idx = 0
                                                                    t = 0
                                                                    while idx < uint255(stor15.length) * 0.5:
                                                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                        idx = idx + 32
                                                                        t = t + 1
                                                                        continue 
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _54623 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_54623) > _54623:
                                                                        mem[_54623 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_54623) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < stor15.length.field_1:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                    mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224] = 0
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                        if bool(stor15.length):
                                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _54358 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_54358) > _54358:
                                                                        mem[_54358 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_54358) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < uint255(stor15.length) * 0.5:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                                            _54359 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(_54359) + 32], 
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _54625 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_54625) > _54625:
                                                                mem[_54625 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_54625) + -mem[64] + 64
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor15.length.field_1:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                                    if not bool(stor15.length):
                                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54627 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54627) > _54627:
                                                                    mem[_54627 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54627) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < stor15.length.field_1:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _54361 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_54361) > _54361:
                                                            mem[_54361 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_54361) + -mem[64] + 64
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor15.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _58426 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58426) + 32], 
                                                mem[ceil32(uint255(stor14.length) * 0.5) + 192 len s] = call.data[calldata.size len s]
                                                t = s
                                                idx = cd[4]
                                                while idx:
                                                    if t < 1:
                                                        revert with 0, 17
                                                    if 48 > !(idx % 10):
                                                        revert with 0, 17
                                                    if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                        revert with 0, 50
                                                    mem[t + ceil32(uint255(stor14.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                    t = t - 1
                                                    idx = idx / 10
                                                    continue 
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor14.length) * 0.5)] = mem[160 len ceil32(uint255(stor14.length) * 0.5)]
                                                if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                        if bool(stor15.length):
                                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _54364 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_54364) > _54364:
                                                                        mem[_54364 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_54364) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < uint255(stor15.length) * 0.5:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54629 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54629) > _54629:
                                                                    mem[_54629 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54629) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < stor15.length.field_1:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                    else:
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                                        if bool(stor15.length):
                                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _54367 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_54367) > _54367:
                                                                        mem[_54367 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_54367) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < uint255(stor15.length) * 0.5:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54631 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54631) > _54631:
                                                                    mem[_54631 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54631) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < stor15.length.field_1:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                else:
                                                    mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224] = 0
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                        if bool(stor15.length):
                                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                                _54126 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54126) + 32], 
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54370 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54370) > _54370:
                                                                    mem[_54370 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54370) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54633 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54633) > _54633:
                                                                    mem[_54633 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54633) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < stor15.length.field_1:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                    else:
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                                        if bool(stor15.length):
                                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                                _54129 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54129) + 32], 
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54373 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54373) > _54373:
                                                                    mem[_54373 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54373) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54635 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54635) > _54635:
                                                                    mem[_54635 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54635) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < stor15.length.field_1:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                            else:
                                                mem[160] = uint256(stor14.field_0)
                                                idx = 160
                                                s = 0
                                                while stor14.length.field_1 + 128 > idx:
                                                    mem[idx + 32] = stor14[s].field_256
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                if uint255(stor14.length) * 0.5 <= 0:
                                                    return ''
                                                if not cd[4]:
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + 160] = 1
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(uint255(stor14.length) * 0.5)] = mem[160 len ceil32(uint255(stor14.length) * 0.5)]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 0
                                                    if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                                                        if not bool(stor15.length):
                                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = 32
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321] = 0
                                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                                            if bool(stor15.length) == 1:
                                                                idx = 0
                                                                s = 0
                                                                while idx < stor15.length.field_1:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                                    idx = idx + 32
                                                                    s = s + 1
                                                                    continue 
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = 32
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321] = 0
                                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                                            mem[64] = 0
                                                            _44951 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                            var66001 = ceil32(_44951)
                                                            if ceil32(_44951) > _44951:
                                                                mem[_44951 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_44951) + -mem[64] + 64
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _44732 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                                if ceil32(_44732) > _44732:
                                                                    mem[_44732 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_44732) + -mem[64] + 64
                                                            idx = 0
                                                            s = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                                idx = idx + 32
                                                                s = s + 1
                                                                continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                            var68001 = ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])
                                                    else:
                                                        if not bool(stor15.length):
                                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = 32
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321] = 0
                                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                                            if bool(stor15.length) == 1:
                                                                idx = 0
                                                                s = 0
                                                                while idx < stor15.length.field_1:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                                    idx = idx + 32
                                                                    s = s + 1
                                                                    continue 
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = 32
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321] = 0
                                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                                            mem[64] = 0
                                                            _44955 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                            var66001 = ceil32(_44955)
                                                            if ceil32(_44955) > _44955:
                                                                mem[_44955 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_44955) + -mem[64] + 64
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _44738 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                                if ceil32(_44738) > _44738:
                                                                    mem[_44738 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_44738) + -mem[64] + 64
                                                            idx = 0
                                                            s = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                                idx = idx + 32
                                                                s = s + 1
                                                                continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                            var68001 = ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                                s = 0
                                                idx = cd[4]
                                                while idx:
                                                    if s == -1:
                                                        revert with 0, 17
                                                    s = s + 1
                                                    idx = idx / 10
                                                    continue 
                                                if s > test266151307():
                                                    revert with 0, 65
                                                mem[ceil32(uint255(stor14.length) * 0.5) + 160] = s
                                                if not s:
                                                    t = s
                                                    idx = cd[4]
                                                    while idx:
                                                        if t < 1:
                                                            revert with 0, 17
                                                        if 48 > !(idx % 10):
                                                            revert with 0, 17
                                                        if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                            revert with 0, 50
                                                        mem[t + ceil32(uint255(stor14.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                        t = t - 1
                                                        idx = idx / 10
                                                        continue 
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor14.length) * 0.5)] = mem[160 len ceil32(uint255(stor14.length) * 0.5)]
                                                    if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                            if bool(stor15.length):
                                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                    revert with 0, 34
                                                                if not bool(stor15.length):
                                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                                else:
                                                                    if bool(stor15.length) != 1:
                                                                        mem[64] = 0
                                                                        _59113 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                        if ceil32(_59113) > _59113:
                                                                            mem[_59113 + 64] = 0
                                                                        return memory
                                                                          from mem[64]
                                                                           len ceil32(_59113) + -mem[64] + 64
                                                                    idx = 0
                                                                    t = 0
                                                                    while idx < uint255(stor15.length) * 0.5:
                                                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                        idx = idx + 32
                                                                        t = t + 1
                                                                        continue 
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _59297 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_59297) > _59297:
                                                                        mem[_59297 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_59297) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < stor15.length.field_1:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                                        if bool(stor15.length):
                                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _59116 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_59116) > _59116:
                                                                        mem[_59116 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_59116) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < uint255(stor15.length) * 0.5:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _59299 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_59299) > _59299:
                                                                mem[_59299 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_59299) + -mem[64] + 64
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor15.length.field_1:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                                        _61071 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(_61071) + 32], 
                                                    mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224] = 0
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                        if bool(stor15.length):
                                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _59119 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_59119) > _59119:
                                                                    mem[_59119 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_59119) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                            _61072 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61072) + 32], 
                                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                                            _59120 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(_59120) + 32], 
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _59301 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_59301) > _59301:
                                                                mem[_59301 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_59301) + -mem[64] + 64
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor15.length.field_1:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                                        _61073 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(_61073) + 32], 
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                                    if bool(stor15.length):
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _59122 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_59122) > _59122:
                                                                    mem[_59122 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_59122) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _59303 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_59303) > _59303:
                                                                mem[_59303 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_59303) + -mem[64] + 64
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor15.length.field_1:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                else:
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + 192 len s] = call.data[calldata.size len s]
                                                    t = s
                                                    idx = cd[4]
                                                    while idx:
                                                        if t < 1:
                                                            revert with 0, 17
                                                        if 48 > !(idx % 10):
                                                            revert with 0, 17
                                                        if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                            revert with 0, 50
                                                        mem[t + ceil32(uint255(stor14.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                        t = t - 1
                                                        idx = idx / 10
                                                        continue 
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor14.length) * 0.5)] = mem[160 len ceil32(uint255(stor14.length) * 0.5)]
                                                    if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                                        var58001 = ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                            if bool(stor15.length):
                                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                    revert with 0, 34
                                                                if not bool(stor15.length):
                                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                                else:
                                                                    if bool(stor15.length) != 1:
                                                                        mem[64] = 0
                                                                        _59125 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                        if ceil32(_59125) > _59125:
                                                                            mem[_59125 + 64] = 0
                                                                        return memory
                                                                          from mem[64]
                                                                           len ceil32(_59125) + -mem[64] + 64
                                                                    idx = 0
                                                                    t = 0
                                                                    while idx < uint255(stor15.length) * 0.5:
                                                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                        idx = idx + 32
                                                                        t = t + 1
                                                                        continue 
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _59305 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_59305) > _59305:
                                                                        mem[_59305 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_59305) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < stor15.length.field_1:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                        else:
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                                            if bool(stor15.length):
                                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                    revert with 0, 34
                                                                if not bool(stor15.length):
                                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                                else:
                                                                    if bool(stor15.length) != 1:
                                                                        mem[64] = 0
                                                                        _59128 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                        if ceil32(_59128) > _59128:
                                                                            mem[_59128 + 64] = 0
                                                                        return memory
                                                                          from mem[64]
                                                                           len ceil32(_59128) + -mem[64] + 64
                                                                    idx = 0
                                                                    t = 0
                                                                    while idx < uint255(stor15.length) * 0.5:
                                                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                        idx = idx + 32
                                                                        t = t + 1
                                                                        continue 
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _59307 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_59307) > _59307:
                                                                        mem[_59307 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_59307) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < stor15.length.field_1:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                    else:
                                                        mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224] = 0
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                                        var58001 = ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                            if bool(stor15.length):
                                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                    revert with 0, 34
                                                                if not bool(stor15.length):
                                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                                else:
                                                                    if bool(stor15.length) != 1:
                                                                        mem[64] = 0
                                                                        _59131 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                        if ceil32(_59131) > _59131:
                                                                            mem[_59131 + 64] = 0
                                                                        return memory
                                                                          from mem[64]
                                                                           len ceil32(_59131) + -mem[64] + 64
                                                                    idx = 0
                                                                    t = 0
                                                                    while idx < uint255(stor15.length) * 0.5:
                                                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                        idx = idx + 32
                                                                        t = t + 1
                                                                        continue 
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _59309 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_59309) > _59309:
                                                                        mem[_59309 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_59309) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < stor15.length.field_1:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                                        else:
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                                            if bool(stor15.length):
                                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                                    revert with 0, 34
                                                                if not bool(stor15.length):
                                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                                else:
                                                                    if bool(stor15.length) != 1:
                                                                        mem[64] = 0
                                                                        _59134 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                        if ceil32(_59134) > _59134:
                                                                            mem[_59134 + 64] = 0
                                                                        return memory
                                                                          from mem[64]
                                                                           len ceil32(_59134) + -mem[64] + 64
                                                                    idx = 0
                                                                    t = 0
                                                                    while idx < uint255(stor15.length) * 0.5:
                                                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                        idx = idx + 32
                                                                        t = t + 1
                                                                        continue 
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                                revert with 0, 34
                                                            if not bool(stor15.length):
                                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            else:
                                                                if bool(stor15.length) != 1:
                                                                    mem[64] = 0
                                                                    _59311 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                    if ceil32(_59311) > _59311:
                                                                        mem[_59311 + 64] = 0
                                                                    return memory
                                                                      from mem[64]
                                                                       len ceil32(_59311) + -mem[64] + 64
                                                                idx = 0
                                                                t = 0
                                                                while idx < stor15.length.field_1:
                                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                    idx = idx + 32
                                                                    t = t + 1
                                                                    continue 
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                        revert with 0, 34
                                    if not Mask(256, -1, stor14.length):
                                        if uint255(stor14.length) * 0.5 <= 0:
                                            return ''
                                        if not cd[4]:
                                            mem[ceil32(uint255(stor14.length) * 0.5) + 160] = 1
                                            mem[ceil32(uint255(stor14.length) * 0.5) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(uint255(stor14.length) * 0.5)] = mem[160 len ceil32(uint255(stor14.length) * 0.5)]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 0
                                            if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                                                if bool(stor15.length):
                                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _31213 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                            if ceil32(_31213) > _31213:
                                                                mem[_31213 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_31213) + -mem[64] + 64
                                                        idx = 0
                                                        s = 0
                                                        while idx < uint255(stor15.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = 32
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                else:
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _31373 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                        if ceil32(_31373) > _31373:
                                                            mem[_31373 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_31373) + -mem[64] + 64
                                                    idx = 0
                                                    s = 0
                                                    while idx < stor15.length.field_1:
                                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                            else:
                                                if bool(stor15.length):
                                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _31219 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                            if ceil32(_31219) > _31219:
                                                                mem[_31219 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_31219) + -mem[64] + 64
                                                        idx = 0
                                                        s = 0
                                                        while idx < uint255(stor15.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = 32
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                else:
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _31377 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                        if ceil32(_31377) > _31377:
                                                            mem[_31377 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_31377) + -mem[64] + 64
                                                    idx = 0
                                                    s = 0
                                                    while idx < stor15.length.field_1:
                                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = 32
                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321] = 0
                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                        s = 0
                                        idx = cd[4]
                                        while idx:
                                            if s == -1:
                                                revert with 0, 17
                                            s = s + 1
                                            idx = idx / 10
                                            continue 
                                        if s > test266151307():
                                            revert with 0, 65
                                        mem[ceil32(uint255(stor14.length) * 0.5) + 160] = s
                                        if not s:
                                            t = s
                                            idx = cd[4]
                                            while idx:
                                                if t < 1:
                                                    revert with 0, 17
                                                if 48 > !(idx % 10):
                                                    revert with 0, 17
                                                if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                    revert with 0, 50
                                                mem[t + ceil32(uint255(stor14.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                t = t - 1
                                                idx = idx / 10
                                                continue 
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor14.length) * 0.5)] = mem[160 len ceil32(uint255(stor14.length) * 0.5)]
                                            if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                    if bool(stor15.length):
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54248 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54248) > _54248:
                                                                    mem[_54248 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54248) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _54509 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_54509) > _54509:
                                                                mem[_54509 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_54509) + -mem[64] + 64
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor15.length.field_1:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                else:
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                                    if bool(stor15.length):
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54251 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54251) > _54251:
                                                                    mem[_54251 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54251) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _54511 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_54511) > _54511:
                                                                mem[_54511 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_54511) + -mem[64] + 64
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor15.length.field_1:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224] = 0
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                    if bool(stor15.length):
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54254 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54254) > _54254:
                                                                    mem[_54254 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54254) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _54513 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_54513) > _54513:
                                                                mem[_54513 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_54513) + -mem[64] + 64
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor15.length.field_1:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                else:
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                                    if bool(stor15.length):
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54257 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54257) > _54257:
                                                                    mem[_54257 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54257) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _54515 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_54515) > _54515:
                                                                mem[_54515 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_54515) + -mem[64] + 64
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor15.length.field_1:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                        mem[ceil32(uint255(stor14.length) * 0.5) + 192 len s] = call.data[calldata.size len s]
                                        t = s
                                        idx = cd[4]
                                        while idx:
                                            if t < 1:
                                                revert with 0, 17
                                            if 48 > !(idx % 10):
                                                revert with 0, 17
                                            if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                revert with 0, 50
                                            mem[t + ceil32(uint255(stor14.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                            t = t - 1
                                            idx = idx / 10
                                            continue 
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor14.length) * 0.5)] = mem[160 len ceil32(uint255(stor14.length) * 0.5)]
                                        if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                if bool(stor15.length):
                                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _54260 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_54260) > _54260:
                                                                mem[_54260 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_54260) + -mem[64] + 64
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor15.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                else:
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _54517 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_54517) > _54517:
                                                            mem[_54517 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_54517) + -mem[64] + 64
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor15.length.field_1:
                                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                else:
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _54263 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_54263) > _54263:
                                                            mem[_54263 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_54263) + -mem[64] + 64
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor15.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54519 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(_54519) > _54519:
                                                    mem[_54519 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54519) + -mem[64] + 64
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                            _58367 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(_58367) + 32], 
                                        mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224] = 0
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                else:
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _54266 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_54266) > _54266:
                                                            mem[_54266 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_54266) + -mem[64] + 64
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor15.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                            else:
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54521 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_54521) > _54521:
                                                        mem[_54521 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54521) + -mem[64] + 64
                                                idx = 0
                                                t = 0
                                                while idx < stor15.length.field_1:
                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                        if not bool(stor15.length):
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                            else:
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54523 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_54523) > _54523:
                                                        mem[_54523 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54523) + -mem[64] + 64
                                                idx = 0
                                                t = 0
                                                while idx < stor15.length.field_1:
                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _54269 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                            if ceil32(_54269) > _54269:
                                                mem[_54269 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_54269) + -mem[64] + 64
                                        idx = 0
                                        t = 0
                                        while idx < uint255(stor15.length) * 0.5:
                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                        _58370 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58370) + 32], 
                                    if 31 >= uint255(stor14.length) * 0.5:
                                        mem[160] = 256 * stor14.length.field_8
                                        if uint255(stor14.length) * 0.5 <= 0:
                                            return ''
                                        if not cd[4]:
                                            mem[ceil32(uint255(stor14.length) * 0.5) + 160] = 1
                                            mem[ceil32(uint255(stor14.length) * 0.5) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(uint255(stor14.length) * 0.5)] = mem[160 len ceil32(uint255(stor14.length) * 0.5)]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 0
                                            if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                                                if bool(stor15.length):
                                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _31235 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                            if ceil32(_31235) > _31235:
                                                                mem[_31235 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_31235) + -mem[64] + 64
                                                        idx = 0
                                                        s = 0
                                                        while idx < uint255(stor15.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = 32
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                else:
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _31390 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                        if ceil32(_31390) > _31390:
                                                            mem[_31390 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_31390) + -mem[64] + 64
                                                    idx = 0
                                                    s = 0
                                                    while idx < stor15.length.field_1:
                                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                            else:
                                                if bool(stor15.length):
                                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _31241 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                            if ceil32(_31241) > _31241:
                                                                mem[_31241 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_31241) + -mem[64] + 64
                                                        idx = 0
                                                        s = 0
                                                        while idx < uint255(stor15.length) * 0.5:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                            idx = idx + 32
                                                            s = s + 1
                                                            continue 
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = 32
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                else:
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _31394 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                        if ceil32(_31394) > _31394:
                                                            mem[_31394 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_31394) + -mem[64] + 64
                                                    idx = 0
                                                    s = 0
                                                    while idx < stor15.length.field_1:
                                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = 32
                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321] = 0
                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                        s = 0
                                        idx = cd[4]
                                        while idx:
                                            if s == -1:
                                                revert with 0, 17
                                            s = s + 1
                                            idx = idx / 10
                                            continue 
                                        if s > test266151307():
                                            revert with 0, 65
                                        mem[ceil32(uint255(stor14.length) * 0.5) + 160] = s
                                        if not s:
                                            t = s
                                            idx = cd[4]
                                            while idx:
                                                if t < 1:
                                                    revert with 0, 17
                                                if 48 > !(idx % 10):
                                                    revert with 0, 17
                                                if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                    revert with 0, 50
                                                mem[t + ceil32(uint255(stor14.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                t = t - 1
                                                idx = idx / 10
                                                continue 
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor14.length) * 0.5)] = mem[160 len ceil32(uint255(stor14.length) * 0.5)]
                                            if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                    if bool(stor15.length):
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54288 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54288) > _54288:
                                                                    mem[_54288 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54288) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) > mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _54557 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_54557) > _54557:
                                                                mem[_54557 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_54557) + -mem[64] + 64
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor15.length.field_1:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                else:
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                                    if bool(stor15.length):
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54291 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54291) > _54291:
                                                                    mem[_54291 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54291) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) > mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _54559 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_54559) > _54559:
                                                                mem[_54559 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_54559) + -mem[64] + 64
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor15.length.field_1:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224] = 0
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                    if bool(stor15.length):
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54294 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54294) > _54294:
                                                                    mem[_54294 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54294) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) > mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _54561 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_54561) > _54561:
                                                                mem[_54561 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_54561) + -mem[64] + 64
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor15.length.field_1:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                else:
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                                    if bool(stor15.length):
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54297 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54297) > _54297:
                                                                    mem[_54297 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54297) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) > mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _54563 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_54563) > _54563:
                                                                mem[_54563 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_54563) + -mem[64] + 64
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor15.length.field_1:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                        else:
                                            mem[ceil32(uint255(stor14.length) * 0.5) + 192 len s] = call.data[calldata.size len s]
                                            t = s
                                            idx = cd[4]
                                            while idx:
                                                if t < 1:
                                                    revert with 0, 17
                                                if 48 > !(idx % 10):
                                                    revert with 0, 17
                                                if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                    revert with 0, 50
                                                mem[t + ceil32(uint255(stor14.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                t = t - 1
                                                idx = idx / 10
                                                continue 
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor14.length) * 0.5)] = mem[160 len ceil32(uint255(stor14.length) * 0.5)]
                                            if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                    if bool(stor15.length):
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54300 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54300) > _54300:
                                                                    mem[_54300 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54300) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) > mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _54565 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_54565) > _54565:
                                                                mem[_54565 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_54565) + -mem[64] + 64
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor15.length.field_1:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                else:
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                                    if bool(stor15.length):
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54303 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54303) > _54303:
                                                                    mem[_54303 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54303) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) > mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _54567 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_54567) > _54567:
                                                                mem[_54567 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_54567) + -mem[64] + 64
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor15.length.field_1:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224] = 0
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                    if bool(stor15.length):
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54306 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54306) > _54306:
                                                                    mem[_54306 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54306) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) > mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _54569 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_54569) > _54569:
                                                                mem[_54569 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_54569) + -mem[64] + 64
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor15.length.field_1:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                else:
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                                    if bool(stor15.length):
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        else:
                                                            if bool(stor15.length) != 1:
                                                                mem[64] = 0
                                                                _54309 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                                if ceil32(_54309) > _54309:
                                                                    mem[_54309 + 64] = 0
                                                                return memory
                                                                  from mem[64]
                                                                   len ceil32(_54309) + -mem[64] + 64
                                                            idx = 0
                                                            t = 0
                                                            while idx < uint255(stor15.length) * 0.5:
                                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                                idx = idx + 32
                                                                t = t + 1
                                                                continue 
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) > mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    else:
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _54571 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                            if ceil32(_54571) > _54571:
                                                                mem[_54571 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_54571) + -mem[64] + 64
                                                        idx = 0
                                                        t = 0
                                                        while idx < stor15.length.field_1:
                                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) > mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                    mem[0] = 14
                                    mem[160] = uint256(stor14.field_0)
                                    idx = 160
                                    s = 0
                                    while (uint255(stor14.length) * 0.5) + 128 > idx:
                                        mem[idx + 32] = stor14[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if uint255(stor14.length) * 0.5 <= 0:
                                        return ''
                                    if not cd[4]:
                                        mem[ceil32(uint255(stor14.length) * 0.5) + 160] = 1
                                        mem[ceil32(uint255(stor14.length) * 0.5) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                        mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(uint255(stor14.length) * 0.5)] = mem[160 len ceil32(uint255(stor14.length) * 0.5)]
                                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                        mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = 0
                                        if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                                            if not bool(stor15.length):
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = 32
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                                if bool(stor15.length) == 1:
                                                    idx = 0
                                                    s = 0
                                                    while idx < stor15.length.field_1:
                                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = 32
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                                mem[64] = 0
                                                _44879 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                var65001 = ceil32(_44879)
                                                if ceil32(_44879) > _44879:
                                                    mem[_44879 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_44879) + -mem[64] + 64
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = 32
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                            else:
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _44688 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                    if ceil32(_44688) > _44688:
                                                        mem[_44688 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_44688) + -mem[64] + 64
                                                idx = 0
                                                s = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = 32
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                var67001 = ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])
                                        else:
                                            if not bool(stor15.length):
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = 32
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                                if bool(stor15.length) == 1:
                                                    idx = 0
                                                    s = 0
                                                    while idx < stor15.length.field_1:
                                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 257] = 32
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + stor15.length.field_1 + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                                mem[64] = 0
                                                _44883 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                var65001 = ceil32(_44883)
                                                if ceil32(_44883) > _44883:
                                                    mem[_44883 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_44883) + -mem[64] + 64
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = Mask(248, 8, stor15.length)
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = 32
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                            else:
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _44694 = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                    if ceil32(_44694) > _44694:
                                                        mem[_44694 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_44694) + -mem[64] + 64
                                                idx = 0
                                                s = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + 257] = stor15[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 257] = 32
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(uint255(stor14.length) * 0.5) + 224]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])] = mem[ceil32(uint255(stor14.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]
                                                var67001 = ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])
                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 224]:
                                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + 224], data=mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224])]), 
                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 224] + ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 321] = 0
                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + (uint255(stor14.length) * 0.5) + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 224]) + 32], 
                                    s = 0
                                    idx = cd[4]
                                    while idx:
                                        if s == -1:
                                            revert with 0, 17
                                        s = s + 1
                                        idx = idx / 10
                                        continue 
                                    if s > test266151307():
                                        revert with 0, 65
                                    mem[ceil32(uint255(stor14.length) * 0.5) + 160] = s
                                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192
                                    if not s:
                                        t = s
                                        idx = cd[4]
                                        while idx:
                                            if t < 1:
                                                revert with 0, 17
                                            if 48 > !(idx % 10):
                                                revert with 0, 17
                                            if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                revert with 0, 50
                                            mem[t + ceil32(uint255(stor14.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                            t = t - 1
                                            idx = idx / 10
                                            continue 
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor14.length) * 0.5)] = mem[160 len ceil32(uint255(stor14.length) * 0.5)]
                                        if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                                if bool(stor15.length):
                                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _59089 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                        if ceil32(_59089) > _59089:
                                                            mem[_59089 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_59089) + -mem[64] + 64
                                                    mem[0] = 15
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor15.length) * 0.5:
                                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _60412 = mem[64]
                                                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _61052 = mem[_60412]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[_60412]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61052)] = mem[_60412 + 32 len ceil32(_61052)]
                                                    if ceil32(_61052) > _61052:
                                                        mem[_61052 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61052) + 32], 
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _59217 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_59217) > _59217:
                                                        mem[_59217 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_59217) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < stor15.length.field_1:
                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _60413 = mem[64]
                                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                                _61053 = mem[_60413]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[_60413]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(_61053)] = mem[_60413 + 32 len ceil32(_61053)]
                                                if ceil32(_61053) > _61053:
                                                    mem[_61053 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(_61053) + 32], 
                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _59092 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_59092) > _59092:
                                                        mem[_59092 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_59092) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _60414 = mem[64]
                                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _61054 = mem[_60414]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[_60414]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61054)] = mem[_60414 + 32 len ceil32(_61054)]
                                                if ceil32(_61054) > _61054:
                                                    mem[_61054 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61054) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                                _59093 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(_59093) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _59219 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(_59219) > _59219:
                                                    mem[_59219 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_59219) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _60415 = mem[64]
                                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                            _61055 = mem[_60415]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[_60415]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(_61055)] = mem[_60415 + 32 len ceil32(_61055)]
                                            if ceil32(_61055) > _61055:
                                                mem[_61055 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(_61055) + 32], 
                                        mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224] = 0
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _59095 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_59095) > _59095:
                                                        mem[_59095 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_59095) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _60416 = mem[64]
                                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _61056 = mem[_60416]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[_60416]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61056)] = mem[_60416 + 32 len ceil32(_61056)]
                                                if ceil32(_61056) > _61056:
                                                    mem[_61056 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61056) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _59221 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(_59221) > _59221:
                                                    mem[_59221 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_59221) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _60417 = mem[64]
                                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                            _61057 = mem[_60417]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[_60417]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(_61057)] = mem[_60417 + 32 len ceil32(_61057)]
                                            if ceil32(_61057) > _61057:
                                                mem[_61057 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(_61057) + 32], 
                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _58989 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58989) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _59098 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(_59098) > _59098:
                                                    mem[_59098 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_59098) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _60418 = mem[64]
                                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _61058 = mem[_60418]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[_60418]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61058)] = mem[_60418 + 32 len ceil32(_61058)]
                                            if ceil32(_61058) > _61058:
                                                mem[_61058 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61058) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _59223 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                            if ceil32(_59223) > _59223:
                                                mem[_59223 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_59223) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _60419 = mem[64]
                                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                        _61059 = mem[_60419]
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[_60419]
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(_61059)] = mem[_60419 + 32 len ceil32(_61059)]
                                        if ceil32(_61059) > _61059:
                                            mem[_61059 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(_61059) + 32], 
                                    mem[ceil32(uint255(stor14.length) * 0.5) + 192 len s] = call.data[calldata.size len s]
                                    t = s
                                    idx = cd[4]
                                    while idx:
                                        if t < 1:
                                            revert with 0, 17
                                        if 48 > !(idx % 10):
                                            revert with 0, 17
                                        if t - 1 >= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                            revert with 0, 50
                                        mem[t + ceil32(uint255(stor14.length) * 0.5) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                        t = t - 1
                                        idx = idx / 10
                                        continue 
                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(uint255(stor14.length) * 0.5)] = mem[160 len ceil32(uint255(stor14.length) * 0.5)]
                                    if ceil32(uint255(stor14.length) * 0.5) <= uint255(stor14.length) * 0.5:
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                        var57001 = ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])
                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                        return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _59101 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                    if ceil32(_59101) > _59101:
                                                        mem[_59101 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_59101) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _60420 = mem[64]
                                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _61060 = mem[_60420]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[_60420]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61060)] = mem[_60420 + 32 len ceil32(_61060)]
                                                if ceil32(_61060) > _61060:
                                                    mem[_61060 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61060) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _59225 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(_59225) > _59225:
                                                    mem[_59225 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_59225) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _60421 = mem[64]
                                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                            _61061 = mem[_60421]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[_60421]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(_61061)] = mem[_60421 + 32 len ceil32(_61061)]
                                            if ceil32(_61061) > _61061:
                                                mem[_61061 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(_61061) + 32], 
                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _59104 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(_59104) > _59104:
                                                    mem[_59104 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_59104) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _60422 = mem[64]
                                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _61062 = mem[_60422]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[_60422]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61062)] = mem[_60422 + 32 len ceil32(_61062)]
                                            if ceil32(_61062) > _61062:
                                                mem[_61062 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61062) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                            _59105 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(_59105) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _59227 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                            if ceil32(_59227) > _59227:
                                                mem[_59227 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_59227) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _60423 = mem[64]
                                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                        _61063 = mem[_60423]
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[_60423]
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(_61063)] = mem[_60423 + 32 len ceil32(_61063)]
                                        if ceil32(_61063) > _61063:
                                            mem[_61063 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(_61063) + 32], 
                                    mem[(uint255(stor14.length) * 0.5) + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224] = 0
                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])] = mem[ceil32(uint255(stor14.length) * 0.5) + 192 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])]
                                    var57001 = ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160])
                                    if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + 160]) <= mem[ceil32(uint255(stor14.length) * 0.5) + 160]:
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                    return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                                mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _59107 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                                if ceil32(_59107) > _59107:
                                                    mem[_59107 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_59107) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _60424 = mem[64]
                                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _61064 = mem[_60424]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[_60424]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61064)] = mem[_60424 + 32 len ceil32(_61064)]
                                            if ceil32(_61064) > _61064:
                                                mem[_61064 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61064) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _59229 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                            if ceil32(_59229) > _59229:
                                                mem[_59229 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_59229) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _60425 = mem[64]
                                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                        _61065 = mem[_60425]
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[_60425]
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(_61065)] = mem[_60425 + 32 len ceil32(_61065)]
                                        if ceil32(_61065) > _61065:
                                            mem[_61065 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(_61065) + 32], 
                                    mem[mem[ceil32(uint255(stor14.length) * 0.5) + 160] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + 224] = 0
                                    if bool(stor15.length):
                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                            mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                            if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                                return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                            mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _59110 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                            if ceil32(_59110) > _59110:
                                                mem[_59110 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_59110) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < uint255(stor15.length) * 0.5:
                                            mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _60426 = mem[64]
                                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                        _61066 = mem[_60426]
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[_60426]
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61066)] = mem[_60426 + 32 len ceil32(_61066)]
                                        if ceil32(_61066) > _61066:
                                            mem[_61066 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61066) + 32], 
                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                        revert with 0, 34
                                    if not bool(stor15.length):
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = Mask(248, 8, stor15.length)
                                        mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                        mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                        if ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) <= mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]:
                                            return Array(len=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192], data=mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]), 
                                        mem[mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192] + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]) + 32], 
                                    if bool(stor15.length) != 1:
                                        mem[64] = 0
                                        _59231 = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192]
                                        mem[64 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])] = mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 224 len ceil32(mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + 192])]
                                        if ceil32(_59231) > _59231:
                                            mem[_59231 + 64] = 0
                                        return memory
                                          from mem[64]
                                           len ceil32(_59231) + -mem[64] + 64
                                    mem[0] = 15
                                    idx = 0
                                    t = 0
                                    while idx < stor15.length.field_1:
                                        mem[idx + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + 224] = stor15[t].field_0
                                        idx = idx + 32
                                        t = t + 1
                                        continue 
                                    _60427 = mem[64]
                                    mem[64] = ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224
                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 224] = 32
                                    _61067 = mem[_60427]
                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256] = mem[_60427]
                                    mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288 len ceil32(_61067)] = mem[_60427 + 32 len ceil32(_61067)]
                                    if ceil32(_61067) > _61067:
                                        mem[_61067 + ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 288] = 0
                                    return 32, mem[ceil32(uint255(stor14.length) * 0.5) + ceil32(s) + (uint255(stor14.length) * 0.5) + mem[ceil32(uint255(stor14.length) * 0.5) + 160] + stor15.length.field_1 + 256 len ceil32(_61067) + 32], 
                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                    revert with 0, 34
                                mem[128] = stor14.length.field_1
                                if bool(stor14.length):
                                    if bool(stor14.length) == uint255(stor14.length) * 0.5 < 32:
                                        revert with 0, 34
                                    if not Mask(256, -1, stor14.length):
                                        if stor14.length.field_1 <= 0:
                                            return ''
                                        if not cd[4]:
                                            mem[64] = ceil32(stor14.length.field_1) + 224
                                            mem[ceil32(stor14.length.field_1) + 160] = 1
                                            mem[ceil32(stor14.length.field_1) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(stor14.length.field_1) + 256 len ceil32(stor14.length.field_1)] = mem[160 len ceil32(stor14.length.field_1)]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = 0
                                            if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                                                if bool(stor15.length):
                                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                        if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                            return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                        mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321] = 0
                                                        return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _31281 = mem[ceil32(stor14.length.field_1) + 224]
                                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                        if ceil32(_31281) > _31281:
                                                            mem[_31281 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_31281) + -mem[64] + 64
                                                    mem[0] = 15
                                                    idx = 0
                                                    s = 0
                                                    while idx < uint255(stor15.length) * 0.5:
                                                        mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 256] = stor15[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    _43389 = mem[64]
                                                    mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                                    _43909 = mem[_43389]
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[_43389]
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(_43909)] = mem[_43389 + 32 len ceil32(_43909)]
                                                    if ceil32(_43909) > _43909:
                                                        mem[_43909 + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(_43909) + 32], 
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _31423 = mem[ceil32(stor14.length.field_1) + 224]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                    if ceil32(_31423) > _31423:
                                                        mem[_31423 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_31423) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                s = 0
                                                while idx < stor15.length.field_1:
                                                    mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 256] = stor15[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                _43390 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                                _43910 = mem[_43390]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[_43390]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(_43910)] = mem[_43390 + 32 len ceil32(_43910)]
                                                if ceil32(_43910) > _43910:
                                                    mem[_43910 + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(_43910) + 32]
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _31287 = mem[ceil32(stor14.length.field_1) + 224]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                    if ceil32(_31287) > _31287:
                                                        mem[_31287 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_31287) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                s = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 256] = stor15[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                _43393 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                                _43913 = mem[_43393]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[_43393]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(_43913)] = mem[_43393 + 32 len ceil32(_43913)]
                                                if ceil32(_43913) > _43913:
                                                    mem[_43913 + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(_43913) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                    return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _31427 = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                if ceil32(_31427) > _31427:
                                                    mem[_31427 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_31427) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            s = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 256] = stor15[s].field_0
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            _43394 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                            _43914 = mem[_43394]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[_43394]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(_43914)] = mem[_43394 + 32 len ceil32(_43914)]
                                            if ceil32(_43914) > _43914:
                                                mem[_43914 + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(_43914) + 32]
                                        s = 0
                                        idx = cd[4]
                                        while idx:
                                            if s == -1:
                                                revert with 0, 17
                                            s = s + 1
                                            idx = idx / 10
                                            continue 
                                        if s > test266151307():
                                            revert with 0, 65
                                        mem[ceil32(stor14.length.field_1) + 160] = s
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + 192
                                        if not s:
                                            t = s
                                            idx = cd[4]
                                            while idx:
                                                if t < 1:
                                                    revert with 0, 17
                                                if 48 > !(idx % 10):
                                                    revert with 0, 17
                                                if t - 1 >= mem[ceil32(stor14.length.field_1) + 160]:
                                                    revert with 0, 50
                                                mem[t + ceil32(stor14.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                t = t - 1
                                                idx = idx / 10
                                                continue 
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(stor14.length.field_1)] = mem[160 len ceil32(stor14.length.field_1)]
                                            if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                                                _43383 = mem[ceil32(stor14.length.field_1) + 160]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                                if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                                    if bool(stor15.length):
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                            _54132 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54132)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54132)]
                                                            if ceil32(_54132) > _54132:
                                                                mem[_54132 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54132) + 32], 
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _54376 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                            if ceil32(_54376) > _54376:
                                                                mem[_54376 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_54376) + -mem[64] + 64
                                                        mem[0] = 15
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor15.length) * 0.5:
                                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _57576 = mem[64]
                                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + (uint255(stor15.length) * 0.5) + 224
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        _58436 = mem[_57576]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + (uint255(stor15.length) * 0.5) + 256] = mem[_57576]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58436)] = mem[_57576 + 32 len ceil32(_58436)]
                                                        if ceil32(_58436) > _58436:
                                                            mem[_58436 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58436) + 32], 
                                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                        _54377 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54377)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54377)]
                                                        if ceil32(_54377) > _54377:
                                                            mem[_54377 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54377) + 32], 
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _54637 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_54637) > _54637:
                                                            mem[_54637 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_54637) + -mem[64] + 64
                                                    mem[0] = 15
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor15.length.field_1:
                                                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _57577 = mem[64]
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + stor15.length.field_1 + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + stor15.length.field_1 + 224] = 32
                                                    _58437 = mem[_57577]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + stor15.length.field_1 + 256] = mem[_57577]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + stor15.length.field_1 + 288 len ceil32(_58437)] = mem[_57577 + 32 len ceil32(_58437)]
                                                    if ceil32(_58437) > _58437:
                                                        mem[_58437 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + stor15.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + stor15.length.field_1 + 256 len ceil32(_58437) + 32], 
                                                mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                                if bool(stor15.length):
                                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        _54135 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54135)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54135)]
                                                        if ceil32(_54135) > _54135:
                                                            mem[_54135 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54135) + 32], 
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _54379 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_54379) > _54379:
                                                            mem[_54379 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_54379) + -mem[64] + 64
                                                    mem[0] = 15
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor15.length) * 0.5:
                                                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _57578 = mem[64]
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _58438 = mem[_57578]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + (uint255(stor15.length) * 0.5) + 256] = mem[_57578]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58438)] = mem[_57578 + 32 len ceil32(_58438)]
                                                    if ceil32(_58438) > _58438:
                                                        mem[_58438 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58438) + 32], 
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                    _54380 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54380)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54380)]
                                                    if ceil32(_54380) > _54380:
                                                        mem[_54380 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54380) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54639 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54639) > _54639:
                                                        mem[_54639 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54639) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < stor15.length.field_1:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57579 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + stor15.length.field_1 + 224] = 32
                                                _58439 = mem[_57579]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + stor15.length.field_1 + 256] = mem[_57579]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + stor15.length.field_1 + 288 len ceil32(_58439)] = mem[_57579 + 32 len ceil32(_58439)]
                                                if ceil32(_58439) > _58439:
                                                    mem[_58439 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43383 + stor15.length.field_1 + 256 len ceil32(_58439) + 32], 
                                            mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 224] = 0
                                            _43384 = mem[ceil32(stor14.length.field_1) + 160]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                            if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                                if bool(stor15.length):
                                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        _54138 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54138)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54138)]
                                                        if ceil32(_54138) > _54138:
                                                            mem[_54138 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54138) + 32], 
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _54382 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_54382) > _54382:
                                                            mem[_54382 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_54382) + -mem[64] + 64
                                                    mem[0] = 15
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor15.length) * 0.5:
                                                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _57580 = mem[64]
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _58440 = mem[_57580]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + (uint255(stor15.length) * 0.5) + 256] = mem[_57580]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58440)] = mem[_57580 + 32 len ceil32(_58440)]
                                                    if ceil32(_58440) > _58440:
                                                        mem[_58440 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58440) + 32], 
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                    _54383 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54383)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54383)]
                                                    if ceil32(_54383) > _54383:
                                                        mem[_54383 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54383) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54641 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54641) > _54641:
                                                        mem[_54641 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54641) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < stor15.length.field_1:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57581 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + stor15.length.field_1 + 224] = 32
                                                _58441 = mem[_57581]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + stor15.length.field_1 + 256] = mem[_57581]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + stor15.length.field_1 + 288 len ceil32(_58441)] = mem[_57581 + 32 len ceil32(_58441)]
                                                if ceil32(_58441) > _58441:
                                                    mem[_58441 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + stor15.length.field_1 + 256 len ceil32(_58441) + 32], 
                                            mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _54141 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54141)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54141)]
                                                    if ceil32(_54141) > _54141:
                                                        mem[_54141 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54141) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54385 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54385) > _54385:
                                                        mem[_54385 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54385) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57582 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _58442 = mem[_57582]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + (uint255(stor15.length) * 0.5) + 256] = mem[_57582]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58442)] = mem[_57582 + 32 len ceil32(_58442)]
                                                if ceil32(_58442) > _58442:
                                                    mem[_58442 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58442) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                _54386 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54386)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54386)]
                                                if ceil32(_54386) > _54386:
                                                    mem[_54386 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54386) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54643 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54643) > _54643:
                                                    mem[_54643 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54643) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57583 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + stor15.length.field_1 + 224] = 32
                                            _58443 = mem[_57583]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + stor15.length.field_1 + 256] = mem[_57583]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + stor15.length.field_1 + 288 len ceil32(_58443)] = mem[_57583 + 32 len ceil32(_58443)]
                                            if ceil32(_58443) > _58443:
                                                mem[_58443 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43384 + stor15.length.field_1 + 256 len ceil32(_58443) + 32], 
                                        mem[ceil32(stor14.length.field_1) + 192 len s] = call.data[calldata.size len s]
                                        t = s
                                        idx = cd[4]
                                        while idx:
                                            if t < 1:
                                                revert with 0, 17
                                            if 48 > !(idx % 10):
                                                revert with 0, 17
                                            if t - 1 >= mem[ceil32(stor14.length.field_1) + 160]:
                                                revert with 0, 50
                                            mem[t + ceil32(stor14.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                            t = t - 1
                                            idx = idx / 10
                                            continue 
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(stor14.length.field_1)] = mem[160 len ceil32(stor14.length.field_1)]
                                        if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                                            _43385 = mem[ceil32(stor14.length.field_1) + 160]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                            if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                                if bool(stor15.length):
                                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        _54144 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54144)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54144)]
                                                        if ceil32(_54144) > _54144:
                                                            mem[_54144 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54144) + 32], 
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _54388 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_54388) > _54388:
                                                            mem[_54388 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_54388) + -mem[64] + 64
                                                    mem[0] = 15
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor15.length) * 0.5:
                                                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _57584 = mem[64]
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _58444 = mem[_57584]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + (uint255(stor15.length) * 0.5) + 256] = mem[_57584]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58444)] = mem[_57584 + 32 len ceil32(_58444)]
                                                    if ceil32(_58444) > _58444:
                                                        mem[_58444 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58444) + 32], 
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                    _54389 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54389)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54389)]
                                                    if ceil32(_54389) > _54389:
                                                        mem[_54389 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54389) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54645 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54645) > _54645:
                                                        mem[_54645 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54645) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < stor15.length.field_1:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57585 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + stor15.length.field_1 + 224] = 32
                                                _58445 = mem[_57585]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + stor15.length.field_1 + 256] = mem[_57585]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + stor15.length.field_1 + 288 len ceil32(_58445)] = mem[_57585 + 32 len ceil32(_58445)]
                                                if ceil32(_58445) > _58445:
                                                    mem[_58445 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + stor15.length.field_1 + 256 len ceil32(_58445) + 32], 
                                            mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _54147 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54147)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54147)]
                                                    if ceil32(_54147) > _54147:
                                                        mem[_54147 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54147) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54391 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54391) > _54391:
                                                        mem[_54391 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54391) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57586 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _58446 = mem[_57586]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + (uint255(stor15.length) * 0.5) + 256] = mem[_57586]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58446)] = mem[_57586 + 32 len ceil32(_58446)]
                                                if ceil32(_58446) > _58446:
                                                    mem[_58446 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58446) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                _54392 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54392)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54392)]
                                                if ceil32(_54392) > _54392:
                                                    mem[_54392 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54392) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54647 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54647) > _54647:
                                                    mem[_54647 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54647) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57587 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + stor15.length.field_1 + 224] = 32
                                            _58447 = mem[_57587]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + stor15.length.field_1 + 256] = mem[_57587]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + stor15.length.field_1 + 288 len ceil32(_58447)] = mem[_57587 + 32 len ceil32(_58447)]
                                            if ceil32(_58447) > _58447:
                                                mem[_58447 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43385 + stor15.length.field_1 + 256 len ceil32(_58447) + 32], 
                                        mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 224] = 0
                                        _43386 = mem[ceil32(stor14.length.field_1) + 160]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                        if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _54150 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54150)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54150)]
                                                    if ceil32(_54150) > _54150:
                                                        mem[_54150 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54150) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54394 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54394) > _54394:
                                                        mem[_54394 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54394) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57588 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _58448 = mem[_57588]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + (uint255(stor15.length) * 0.5) + 256] = mem[_57588]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58448)] = mem[_57588 + 32 len ceil32(_58448)]
                                                if ceil32(_58448) > _58448:
                                                    mem[_58448 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58448) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                _54395 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54395)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54395)]
                                                if ceil32(_54395) > _54395:
                                                    mem[_54395 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54395) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54649 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54649) > _54649:
                                                    mem[_54649 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54649) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57589 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + stor15.length.field_1 + 224] = 32
                                            _58449 = mem[_57589]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + stor15.length.field_1 + 256] = mem[_57589]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + stor15.length.field_1 + 288 len ceil32(_58449)] = mem[_57589 + 32 len ceil32(_58449)]
                                            if ceil32(_58449) > _58449:
                                                mem[_58449 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + stor15.length.field_1 + 256 len ceil32(_58449) + 32], 
                                        mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _54153 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54153)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54153)]
                                                if ceil32(_54153) > _54153:
                                                    mem[_54153 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54153) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54397 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54397) > _54397:
                                                    mem[_54397 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54397) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57590 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _58450 = mem[_57590]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + (uint255(stor15.length) * 0.5) + 256] = mem[_57590]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58450)] = mem[_57590 + 32 len ceil32(_58450)]
                                            if ceil32(_58450) > _58450:
                                                mem[_58450 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58450) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                            _54398 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54398)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54398)]
                                            if ceil32(_54398) > _54398:
                                                mem[_54398 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54398) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _54651 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_54651) > _54651:
                                                mem[_54651 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_54651) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _57591 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + stor15.length.field_1 + 224] = 32
                                        _58451 = mem[_57591]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + stor15.length.field_1 + 256] = mem[_57591]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + stor15.length.field_1 + 288 len ceil32(_58451)] = mem[_57591 + 32 len ceil32(_58451)]
                                        if ceil32(_58451) > _58451:
                                            mem[_58451 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43386 + stor15.length.field_1 + 256 len ceil32(_58451) + 32], 
                                    if 31 >= uint255(stor14.length) * 0.5:
                                        mem[160] = 256 * stor14.length.field_8
                                        if stor14.length.field_1 <= 0:
                                            return ''
                                        if not cd[4]:
                                            mem[64] = ceil32(stor14.length.field_1) + 224
                                            mem[ceil32(stor14.length.field_1) + 160] = 1
                                            mem[ceil32(stor14.length.field_1) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(stor14.length.field_1) + 256 len ceil32(stor14.length.field_1)] = mem[160 len ceil32(stor14.length.field_1)]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = 0
                                            if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                                                if bool(stor15.length):
                                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                        if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                            return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                        mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321] = 0
                                                        return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _31303 = mem[ceil32(stor14.length.field_1) + 224]
                                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                        if ceil32(_31303) > _31303:
                                                            mem[_31303 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_31303) + -mem[64] + 64
                                                    mem[0] = 15
                                                    idx = 0
                                                    s = 0
                                                    while idx < uint255(stor15.length) * 0.5:
                                                        mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 256] = stor15[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    _43403 = mem[64]
                                                    mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                                    _43921 = mem[_43403]
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[_43403]
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(_43921)] = mem[_43403 + 32 len ceil32(_43921)]
                                                    if ceil32(_43921) > _43921:
                                                        mem[_43921 + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(_43921) + 32], 
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _31440 = mem[ceil32(stor14.length.field_1) + 224]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                    if ceil32(_31440) > _31440:
                                                        mem[_31440 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_31440) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                s = 0
                                                while idx < stor15.length.field_1:
                                                    mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 256] = stor15[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                _43404 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                                _43922 = mem[_43404]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[_43404]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(_43922)] = mem[_43404 + 32 len ceil32(_43922)]
                                                if ceil32(_43922) > _43922:
                                                    mem[_43922 + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(_43922) + 32]
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _31309 = mem[ceil32(stor14.length.field_1) + 224]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                    if ceil32(_31309) > _31309:
                                                        mem[_31309 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_31309) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                s = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 256] = stor15[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                _43407 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                                _43925 = mem[_43407]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[_43407]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(_43925)] = mem[_43407 + 32 len ceil32(_43925)]
                                                if ceil32(_43925) > _43925:
                                                    mem[_43925 + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(_43925) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                    return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _31444 = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                if ceil32(_31444) > _31444:
                                                    mem[_31444 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_31444) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            s = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 256] = stor15[s].field_0
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            _43408 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                            _43926 = mem[_43408]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[_43408]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(_43926)] = mem[_43408 + 32 len ceil32(_43926)]
                                            if ceil32(_43926) > _43926:
                                                mem[_43926 + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(_43926) + 32]
                                        s = 0
                                        idx = cd[4]
                                        while idx:
                                            if s == -1:
                                                revert with 0, 17
                                            s = s + 1
                                            idx = idx / 10
                                            continue 
                                        if s > test266151307():
                                            revert with 0, 65
                                        mem[ceil32(stor14.length.field_1) + 160] = s
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + 192
                                        if not s:
                                            t = s
                                            idx = cd[4]
                                            while idx:
                                                if t < 1:
                                                    revert with 0, 17
                                                if 48 > !(idx % 10):
                                                    revert with 0, 17
                                                if t - 1 >= mem[ceil32(stor14.length.field_1) + 160]:
                                                    revert with 0, 50
                                                mem[t + ceil32(stor14.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                                t = t - 1
                                                idx = idx / 10
                                                continue 
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(stor14.length.field_1)] = mem[160 len ceil32(stor14.length.field_1)]
                                            if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                                                _43397 = mem[ceil32(stor14.length.field_1) + 160]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                                if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                                    if bool(stor15.length):
                                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                            revert with 0, 34
                                                        if not bool(stor15.length):
                                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                            _54164 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54164)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54164)]
                                                            if ceil32(_54164) > _54164:
                                                                mem[_54164 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54164) + 32], 
                                                        if bool(stor15.length) != 1:
                                                            mem[64] = 0
                                                            _54416 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                            if ceil32(_54416) > _54416:
                                                                mem[_54416 + 64] = 0
                                                            return memory
                                                              from mem[64]
                                                               len ceil32(_54416) + -mem[64] + 64
                                                        mem[0] = 15
                                                        idx = 0
                                                        t = 0
                                                        while idx < uint255(stor15.length) * 0.5:
                                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                            idx = idx + 32
                                                            t = t + 1
                                                            continue 
                                                        _57592 = mem[64]
                                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + (uint255(stor15.length) * 0.5) + 224
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        _58460 = mem[_57592]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + (uint255(stor15.length) * 0.5) + 256] = mem[_57592]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58460)] = mem[_57592 + 32 len ceil32(_58460)]
                                                        if ceil32(_58460) > _58460:
                                                            mem[_58460 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58460) + 32], 
                                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                        _54417 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54417)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54417)]
                                                        if ceil32(_54417) > _54417:
                                                            mem[_54417 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54417) + 32], 
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _54685 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_54685) > _54685:
                                                            mem[_54685 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_54685) + -mem[64] + 64
                                                    mem[0] = 15
                                                    idx = 0
                                                    t = 0
                                                    while idx < stor15.length.field_1:
                                                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _57593 = mem[64]
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + stor15.length.field_1 + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + stor15.length.field_1 + 224] = 32
                                                    _58461 = mem[_57593]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + stor15.length.field_1 + 256] = mem[_57593]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + stor15.length.field_1 + 288 len ceil32(_58461)] = mem[_57593 + 32 len ceil32(_58461)]
                                                    if ceil32(_58461) > _58461:
                                                        mem[_58461 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + stor15.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + stor15.length.field_1 + 256 len ceil32(_58461) + 32], 
                                                mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                                if bool(stor15.length):
                                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        _54167 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54167)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54167)]
                                                        if ceil32(_54167) > _54167:
                                                            mem[_54167 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54167) + 32], 
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _54419 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_54419) > _54419:
                                                            mem[_54419 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_54419) + -mem[64] + 64
                                                    mem[0] = 15
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor15.length) * 0.5:
                                                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _57594 = mem[64]
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _58462 = mem[_57594]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + (uint255(stor15.length) * 0.5) + 256] = mem[_57594]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58462)] = mem[_57594 + 32 len ceil32(_58462)]
                                                    if ceil32(_58462) > _58462:
                                                        mem[_58462 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58462) + 32], 
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                    _54420 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54420)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54420)]
                                                    if ceil32(_54420) > _54420:
                                                        mem[_54420 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54420) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54687 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54687) > _54687:
                                                        mem[_54687 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54687) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < stor15.length.field_1:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57595 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + stor15.length.field_1 + 224] = 32
                                                _58463 = mem[_57595]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + stor15.length.field_1 + 256] = mem[_57595]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + stor15.length.field_1 + 288 len ceil32(_58463)] = mem[_57595 + 32 len ceil32(_58463)]
                                                if ceil32(_58463) > _58463:
                                                    mem[_58463 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43397 + stor15.length.field_1 + 256 len ceil32(_58463) + 32], 
                                            mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 224] = 0
                                            _43398 = mem[ceil32(stor14.length.field_1) + 160]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                            if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                                if bool(stor15.length):
                                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        _54170 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54170)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54170)]
                                                        if ceil32(_54170) > _54170:
                                                            mem[_54170 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54170) + 32], 
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _54422 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_54422) > _54422:
                                                            mem[_54422 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_54422) + -mem[64] + 64
                                                    mem[0] = 15
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor15.length) * 0.5:
                                                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _57596 = mem[64]
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _58464 = mem[_57596]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + (uint255(stor15.length) * 0.5) + 256] = mem[_57596]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58464)] = mem[_57596 + 32 len ceil32(_58464)]
                                                    if ceil32(_58464) > _58464:
                                                        mem[_58464 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58464) + 32], 
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                    _54423 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54423)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54423)]
                                                    if ceil32(_54423) > _54423:
                                                        mem[_54423 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54423) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54689 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54689) > _54689:
                                                        mem[_54689 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54689) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < stor15.length.field_1:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57597 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + stor15.length.field_1 + 224] = 32
                                                _58465 = mem[_57597]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + stor15.length.field_1 + 256] = mem[_57597]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + stor15.length.field_1 + 288 len ceil32(_58465)] = mem[_57597 + 32 len ceil32(_58465)]
                                                if ceil32(_58465) > _58465:
                                                    mem[_58465 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + stor15.length.field_1 + 256 len ceil32(_58465) + 32], 
                                            mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _54173 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54173)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54173)]
                                                    if ceil32(_54173) > _54173:
                                                        mem[_54173 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54173) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54425 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54425) > _54425:
                                                        mem[_54425 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54425) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57598 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _58466 = mem[_57598]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + (uint255(stor15.length) * 0.5) + 256] = mem[_57598]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58466)] = mem[_57598 + 32 len ceil32(_58466)]
                                                if ceil32(_58466) > _58466:
                                                    mem[_58466 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58466) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                _54426 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54426)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54426)]
                                                if ceil32(_54426) > _54426:
                                                    mem[_54426 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54426) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54691 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54691) > _54691:
                                                    mem[_54691 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54691) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57599 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + stor15.length.field_1 + 224] = 32
                                            _58467 = mem[_57599]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + stor15.length.field_1 + 256] = mem[_57599]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + stor15.length.field_1 + 288 len ceil32(_58467)] = mem[_57599 + 32 len ceil32(_58467)]
                                            if ceil32(_58467) > _58467:
                                                mem[_58467 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43398 + stor15.length.field_1 + 256 len ceil32(_58467) + 32], 
                                        mem[ceil32(stor14.length.field_1) + 192 len s] = call.data[calldata.size len s]
                                        t = s
                                        idx = cd[4]
                                        while idx:
                                            if t < 1:
                                                revert with 0, 17
                                            if 48 > !(idx % 10):
                                                revert with 0, 17
                                            if t - 1 >= mem[ceil32(stor14.length.field_1) + 160]:
                                                revert with 0, 50
                                            mem[t + ceil32(stor14.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                            t = t - 1
                                            idx = idx / 10
                                            continue 
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(stor14.length.field_1)] = mem[160 len ceil32(stor14.length.field_1)]
                                        if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                                            _43399 = mem[ceil32(stor14.length.field_1) + 160]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                            if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                                if bool(stor15.length):
                                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        _54176 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54176)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54176)]
                                                        if ceil32(_54176) > _54176:
                                                            mem[_54176 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54176) + 32], 
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _54428 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_54428) > _54428:
                                                            mem[_54428 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_54428) + -mem[64] + 64
                                                    mem[0] = 15
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor15.length) * 0.5:
                                                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _57600 = mem[64]
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _58468 = mem[_57600]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + (uint255(stor15.length) * 0.5) + 256] = mem[_57600]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58468)] = mem[_57600 + 32 len ceil32(_58468)]
                                                    if ceil32(_58468) > _58468:
                                                        mem[_58468 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58468) + 32], 
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                    _54429 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54429)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54429)]
                                                    if ceil32(_54429) > _54429:
                                                        mem[_54429 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54429) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54693 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54693) > _54693:
                                                        mem[_54693 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54693) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < stor15.length.field_1:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57601 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + stor15.length.field_1 + 224] = 32
                                                _58469 = mem[_57601]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + stor15.length.field_1 + 256] = mem[_57601]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + stor15.length.field_1 + 288 len ceil32(_58469)] = mem[_57601 + 32 len ceil32(_58469)]
                                                if ceil32(_58469) > _58469:
                                                    mem[_58469 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + stor15.length.field_1 + 256 len ceil32(_58469) + 32], 
                                            mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _54179 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54179)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54179)]
                                                    if ceil32(_54179) > _54179:
                                                        mem[_54179 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54179) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54431 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54431) > _54431:
                                                        mem[_54431 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54431) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57602 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _58470 = mem[_57602]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + (uint255(stor15.length) * 0.5) + 256] = mem[_57602]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58470)] = mem[_57602 + 32 len ceil32(_58470)]
                                                if ceil32(_58470) > _58470:
                                                    mem[_58470 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58470) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                _54432 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54432)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54432)]
                                                if ceil32(_54432) > _54432:
                                                    mem[_54432 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54432) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54695 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54695) > _54695:
                                                    mem[_54695 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54695) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57603 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + stor15.length.field_1 + 224] = 32
                                            _58471 = mem[_57603]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + stor15.length.field_1 + 256] = mem[_57603]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + stor15.length.field_1 + 288 len ceil32(_58471)] = mem[_57603 + 32 len ceil32(_58471)]
                                            if ceil32(_58471) > _58471:
                                                mem[_58471 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43399 + stor15.length.field_1 + 256 len ceil32(_58471) + 32], 
                                        mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 224] = 0
                                        _43400 = mem[ceil32(stor14.length.field_1) + 160]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                        if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _54182 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54182)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54182)]
                                                    if ceil32(_54182) > _54182:
                                                        mem[_54182 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54182) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54434 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54434) > _54434:
                                                        mem[_54434 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54434) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57604 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _58472 = mem[_57604]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + (uint255(stor15.length) * 0.5) + 256] = mem[_57604]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58472)] = mem[_57604 + 32 len ceil32(_58472)]
                                                if ceil32(_58472) > _58472:
                                                    mem[_58472 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58472) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                _54435 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54435)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54435)]
                                                if ceil32(_54435) > _54435:
                                                    mem[_54435 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54435) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54697 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54697) > _54697:
                                                    mem[_54697 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54697) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57605 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + stor15.length.field_1 + 224] = 32
                                            _58473 = mem[_57605]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + stor15.length.field_1 + 256] = mem[_57605]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + stor15.length.field_1 + 288 len ceil32(_58473)] = mem[_57605 + 32 len ceil32(_58473)]
                                            if ceil32(_58473) > _58473:
                                                mem[_58473 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + stor15.length.field_1 + 256 len ceil32(_58473) + 32], 
                                        mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _54185 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54185)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54185)]
                                                if ceil32(_54185) > _54185:
                                                    mem[_54185 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54185) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54437 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54437) > _54437:
                                                    mem[_54437 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54437) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57606 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _58474 = mem[_57606]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + (uint255(stor15.length) * 0.5) + 256] = mem[_57606]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58474)] = mem[_57606 + 32 len ceil32(_58474)]
                                            if ceil32(_58474) > _58474:
                                                mem[_58474 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58474) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                            _54438 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54438)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54438)]
                                            if ceil32(_54438) > _54438:
                                                mem[_54438 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54438) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _54699 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_54699) > _54699:
                                                mem[_54699 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_54699) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _57607 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + stor15.length.field_1 + 224] = 32
                                        _58475 = mem[_57607]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + stor15.length.field_1 + 256] = mem[_57607]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + stor15.length.field_1 + 288 len ceil32(_58475)] = mem[_57607 + 32 len ceil32(_58475)]
                                        if ceil32(_58475) > _58475:
                                            mem[_58475 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43400 + stor15.length.field_1 + 256 len ceil32(_58475) + 32], 
                                    mem[0] = 14
                                    mem[160] = uint256(stor14.field_0)
                                    idx = 160
                                    s = 0
                                    while (uint255(stor14.length) * 0.5) + 128 > idx:
                                        mem[idx + 32] = stor14[s].field_256
                                        idx = idx + 32
                                        s = s + 1
                                        continue 
                                    if stor14.length.field_1 <= 0:
                                        return ''
                                    if not cd[4]:
                                        mem[ceil32(stor14.length.field_1) + 160] = 1
                                        mem[ceil32(stor14.length.field_1) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                        mem[ceil32(stor14.length.field_1) + 256 len ceil32(stor14.length.field_1)] = mem[160 len ceil32(stor14.length.field_1)]
                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = 0
                                        if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                                            if not bool(stor15.length):
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                                if bool(stor15.length) == 1:
                                                    idx = 0
                                                    s = 0
                                                    while idx < stor15.length.field_1:
                                                        mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = stor15[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                                mem[64] = 0
                                                _45023 = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                var66001 = ceil32(_45023)
                                                if ceil32(_45023) > _45023:
                                                    mem[_45023 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_45023) + -mem[64] + 64
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                            else:
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _44776 = mem[ceil32(stor14.length.field_1) + 224]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                    if ceil32(_44776) > _44776:
                                                        mem[_44776 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_44776) + -mem[64] + 64
                                                idx = 0
                                                s = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = stor15[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                var68001 = ceil32(mem[ceil32(stor14.length.field_1) + 224])
                                        else:
                                            if not bool(stor15.length):
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                                if bool(stor15.length) == 1:
                                                    idx = 0
                                                    s = 0
                                                    while idx < stor15.length.field_1:
                                                        mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = stor15[s].field_0
                                                        idx = idx + 32
                                                        s = s + 1
                                                        continue 
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                                mem[64] = 0
                                                _45027 = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                var66001 = ceil32(_45027)
                                                if ceil32(_45027) > _45027:
                                                    mem[_45027 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_45027) + -mem[64] + 64
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                            else:
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _44782 = mem[ceil32(stor14.length.field_1) + 224]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                    if ceil32(_44782) > _44782:
                                                        mem[_44782 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_44782) + -mem[64] + 64
                                                idx = 0
                                                s = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = stor15[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                var68001 = ceil32(mem[ceil32(stor14.length.field_1) + 224])
                                        if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                            return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                        mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                    s = 0
                                    idx = cd[4]
                                    while idx:
                                        if s == -1:
                                            revert with 0, 17
                                        s = s + 1
                                        idx = idx / 10
                                        continue 
                                    if s > test266151307():
                                        revert with 0, 65
                                    mem[ceil32(stor14.length.field_1) + 160] = s
                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + 192
                                    if not s:
                                        t = s
                                        idx = cd[4]
                                        while idx:
                                            if t < 1:
                                                revert with 0, 17
                                            if 48 > !(idx % 10):
                                                revert with 0, 17
                                            if t - 1 >= mem[ceil32(stor14.length.field_1) + 160]:
                                                revert with 0, 50
                                            mem[t + ceil32(stor14.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                            t = t - 1
                                            idx = idx / 10
                                            continue 
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(stor14.length.field_1)] = mem[160 len ceil32(stor14.length.field_1)]
                                        if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                                            _52984 = mem[ceil32(stor14.length.field_1) + 160]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                            if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                                if bool(stor15.length):
                                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        _59028 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_59028)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59028)]
                                                        if ceil32(_59028) > _59028:
                                                            mem[_59028 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_59028) + 32], 
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _59137 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_59137) > _59137:
                                                            mem[_59137 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_59137) + -mem[64] + 64
                                                    mem[0] = 15
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor15.length) * 0.5:
                                                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _60444 = mem[64]
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _61084 = mem[_60444]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + (uint255(stor15.length) * 0.5) + 256] = mem[_60444]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61084)] = mem[_60444 + 32 len ceil32(_61084)]
                                                    if ceil32(_61084) > _61084:
                                                        mem[_61084 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61084) + 32], 
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                    _59138 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_59138)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59138)]
                                                    if ceil32(_59138) > _59138:
                                                        mem[_59138 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_59138) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _59377 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_59377) > _59377:
                                                        mem[_59377 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_59377) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < stor15.length.field_1:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _60445 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + stor15.length.field_1 + 224] = 32
                                                _61085 = mem[_60445]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + stor15.length.field_1 + 256] = mem[_60445]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + stor15.length.field_1 + 288 len ceil32(_61085)] = mem[_60445 + 32 len ceil32(_61085)]
                                                if ceil32(_61085) > _61085:
                                                    mem[_61085 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + stor15.length.field_1 + 256 len ceil32(_61085) + 32], 
                                            mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _59031 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_59031)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59031)]
                                                    if ceil32(_59031) > _59031:
                                                        mem[_59031 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_59031) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _59140 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_59140) > _59140:
                                                        mem[_59140 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_59140) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _60446 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _61086 = mem[_60446]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + (uint255(stor15.length) * 0.5) + 256] = mem[_60446]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61086)] = mem[_60446 + 32 len ceil32(_61086)]
                                                if ceil32(_61086) > _61086:
                                                    mem[_61086 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61086) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                _59141 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_59141)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59141)]
                                                if ceil32(_59141) > _59141:
                                                    mem[_59141 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_59141) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _59379 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_59379) > _59379:
                                                    mem[_59379 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_59379) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _60447 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + stor15.length.field_1 + 224] = 32
                                            _61087 = mem[_60447]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + stor15.length.field_1 + 256] = mem[_60447]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + stor15.length.field_1 + 288 len ceil32(_61087)] = mem[_60447 + 32 len ceil32(_61087)]
                                            if ceil32(_61087) > _61087:
                                                mem[_61087 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52984 + stor15.length.field_1 + 256 len ceil32(_61087) + 32], 
                                        mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 224] = 0
                                        _52985 = mem[ceil32(stor14.length.field_1) + 160]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                        if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _59034 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_59034)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59034)]
                                                    if ceil32(_59034) > _59034:
                                                        mem[_59034 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_59034) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _59143 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_59143) > _59143:
                                                        mem[_59143 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_59143) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _60448 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _61088 = mem[_60448]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + (uint255(stor15.length) * 0.5) + 256] = mem[_60448]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61088)] = mem[_60448 + 32 len ceil32(_61088)]
                                                if ceil32(_61088) > _61088:
                                                    mem[_61088 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61088) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                _59144 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_59144)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59144)]
                                                if ceil32(_59144) > _59144:
                                                    mem[_59144 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_59144) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _59381 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_59381) > _59381:
                                                    mem[_59381 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_59381) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _60449 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + stor15.length.field_1 + 224] = 32
                                            _61089 = mem[_60449]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + stor15.length.field_1 + 256] = mem[_60449]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + stor15.length.field_1 + 288 len ceil32(_61089)] = mem[_60449 + 32 len ceil32(_61089)]
                                            if ceil32(_61089) > _61089:
                                                mem[_61089 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + stor15.length.field_1 + 256 len ceil32(_61089) + 32], 
                                        mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _59037 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_59037)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59037)]
                                                if ceil32(_59037) > _59037:
                                                    mem[_59037 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_59037) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _59146 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_59146) > _59146:
                                                    mem[_59146 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_59146) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _60450 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _61090 = mem[_60450]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + (uint255(stor15.length) * 0.5) + 256] = mem[_60450]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61090)] = mem[_60450 + 32 len ceil32(_61090)]
                                            if ceil32(_61090) > _61090:
                                                mem[_61090 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61090) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                            _59147 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_59147)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59147)]
                                            if ceil32(_59147) > _59147:
                                                mem[_59147 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_59147) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _59383 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_59383) > _59383:
                                                mem[_59383 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_59383) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _60451 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + stor15.length.field_1 + 224] = 32
                                        _61091 = mem[_60451]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + stor15.length.field_1 + 256] = mem[_60451]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + stor15.length.field_1 + 288 len ceil32(_61091)] = mem[_60451 + 32 len ceil32(_61091)]
                                        if ceil32(_61091) > _61091:
                                            mem[_61091 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52985 + stor15.length.field_1 + 256 len ceil32(_61091) + 32], 
                                    mem[ceil32(stor14.length.field_1) + 192 len s] = call.data[calldata.size len s]
                                    t = s
                                    idx = cd[4]
                                    while idx:
                                        if t < 1:
                                            revert with 0, 17
                                        if 48 > !(idx % 10):
                                            revert with 0, 17
                                        if t - 1 >= mem[ceil32(stor14.length.field_1) + 160]:
                                            revert with 0, 50
                                        mem[t + ceil32(stor14.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                        t = t - 1
                                        idx = idx / 10
                                        continue 
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(stor14.length.field_1)] = mem[160 len ceil32(stor14.length.field_1)]
                                    if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                                        _52986 = mem[ceil32(stor14.length.field_1) + 160]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                        var58001 = ceil32(mem[ceil32(stor14.length.field_1) + 160])
                                        if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _59040 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_59040)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59040)]
                                                    if ceil32(_59040) > _59040:
                                                        mem[_59040 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_59040) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _59149 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_59149) > _59149:
                                                        mem[_59149 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_59149) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _60452 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _61092 = mem[_60452]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + (uint255(stor15.length) * 0.5) + 256] = mem[_60452]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61092)] = mem[_60452 + 32 len ceil32(_61092)]
                                                if ceil32(_61092) > _61092:
                                                    mem[_61092 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61092) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                _59150 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_59150)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59150)]
                                                if ceil32(_59150) > _59150:
                                                    mem[_59150 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_59150) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _59385 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_59385) > _59385:
                                                    mem[_59385 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_59385) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _60453 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + stor15.length.field_1 + 224] = 32
                                            _61093 = mem[_60453]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + stor15.length.field_1 + 256] = mem[_60453]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + stor15.length.field_1 + 288 len ceil32(_61093)] = mem[_60453 + 32 len ceil32(_61093)]
                                            if ceil32(_61093) > _61093:
                                                mem[_61093 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + stor15.length.field_1 + 256 len ceil32(_61093) + 32], 
                                        mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _59043 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_59043)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59043)]
                                                if ceil32(_59043) > _59043:
                                                    mem[_59043 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_59043) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _59152 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_59152) > _59152:
                                                    mem[_59152 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_59152) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _60454 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _61094 = mem[_60454]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + (uint255(stor15.length) * 0.5) + 256] = mem[_60454]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61094)] = mem[_60454 + 32 len ceil32(_61094)]
                                            if ceil32(_61094) > _61094:
                                                mem[_61094 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61094) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                            _59153 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_59153)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59153)]
                                            if ceil32(_59153) > _59153:
                                                mem[_59153 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_59153) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _59387 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_59387) > _59387:
                                                mem[_59387 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_59387) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _60455 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + stor15.length.field_1 + 224] = 32
                                        _61095 = mem[_60455]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + stor15.length.field_1 + 256] = mem[_60455]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + stor15.length.field_1 + 288 len ceil32(_61095)] = mem[_60455 + 32 len ceil32(_61095)]
                                        if ceil32(_61095) > _61095:
                                            mem[_61095 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52986 + stor15.length.field_1 + 256 len ceil32(_61095) + 32], 
                                    mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 224] = 0
                                    _52987 = mem[ceil32(stor14.length.field_1) + 160]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                    var58001 = ceil32(mem[ceil32(stor14.length.field_1) + 160])
                                    if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _59046 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_59046)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59046)]
                                                if ceil32(_59046) > _59046:
                                                    mem[_59046 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_59046) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _59155 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_59155) > _59155:
                                                    mem[_59155 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_59155) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _60456 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _61096 = mem[_60456]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + (uint255(stor15.length) * 0.5) + 256] = mem[_60456]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61096)] = mem[_60456 + 32 len ceil32(_61096)]
                                            if ceil32(_61096) > _61096:
                                                mem[_61096 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61096) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                            _59156 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_59156)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59156)]
                                            if ceil32(_59156) > _59156:
                                                mem[_59156 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_59156) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _59389 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_59389) > _59389:
                                                mem[_59389 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_59389) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _60457 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + stor15.length.field_1 + 224] = 32
                                        _61097 = mem[_60457]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + stor15.length.field_1 + 256] = mem[_60457]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + stor15.length.field_1 + 288 len ceil32(_61097)] = mem[_60457 + 32 len ceil32(_61097)]
                                        if ceil32(_61097) > _61097:
                                            mem[_61097 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + stor15.length.field_1 + 256 len ceil32(_61097) + 32], 
                                    mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                    if bool(stor15.length):
                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _59049 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_59049)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59049)]
                                            if ceil32(_59049) > _59049:
                                                mem[_59049 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_59049) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _59158 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_59158) > _59158:
                                                mem[_59158 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_59158) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < uint255(stor15.length) * 0.5:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _60458 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + (uint255(stor15.length) * 0.5) + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + (uint255(stor15.length) * 0.5) + 224] = 32
                                        _61098 = mem[_60458]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + (uint255(stor15.length) * 0.5) + 256] = mem[_60458]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61098)] = mem[_60458 + 32 len ceil32(_61098)]
                                        if ceil32(_61098) > _61098:
                                            mem[_61098 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + (uint255(stor15.length) * 0.5) + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61098) + 32], 
                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                        revert with 0, 34
                                    if not bool(stor15.length):
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                        _59159 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_59159)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59159)]
                                        if ceil32(_59159) > _59159:
                                            mem[_59159 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_59159) + 32], 
                                    if bool(stor15.length) != 1:
                                        mem[64] = 0
                                        _59391 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                        if ceil32(_59391) > _59391:
                                            mem[_59391 + 64] = 0
                                        return memory
                                          from mem[64]
                                           len ceil32(_59391) + -mem[64] + 64
                                    mem[0] = 15
                                    idx = 0
                                    t = 0
                                    while idx < stor15.length.field_1:
                                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                        idx = idx + 32
                                        t = t + 1
                                        continue 
                                    _60459 = mem[64]
                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + stor15.length.field_1 + 224
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + stor15.length.field_1 + 224] = 32
                                    _61099 = mem[_60459]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + stor15.length.field_1 + 256] = mem[_60459]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + stor15.length.field_1 + 288 len ceil32(_61099)] = mem[_60459 + 32 len ceil32(_61099)]
                                    if ceil32(_61099) > _61099:
                                        mem[_61099 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + stor15.length.field_1 + 288] = 0
                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52987 + stor15.length.field_1 + 256 len ceil32(_61099) + 32], 
                                if bool(stor14.length) == stor14.length.field_1 < 32:
                                    revert with 0, 34
                                if not stor14.length.field_1:
                                    if stor14.length.field_1 <= 0:
                                        return ''
                                    if not cd[4]:
                                        mem[64] = ceil32(stor14.length.field_1) + 224
                                        mem[ceil32(stor14.length.field_1) + 160] = 1
                                        mem[ceil32(stor14.length.field_1) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                        mem[ceil32(stor14.length.field_1) + 256 len ceil32(stor14.length.field_1)] = mem[160 len ceil32(stor14.length.field_1)]
                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = 0
                                        if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _31315 = mem[ceil32(stor14.length.field_1) + 224]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                    if ceil32(_31315) > _31315:
                                                        mem[_31315 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_31315) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                s = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 256] = stor15[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                _43415 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                                _43929 = mem[_43415]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[_43415]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(_43929)] = mem[_43415 + 32 len ceil32(_43929)]
                                                if ceil32(_43929) > _43929:
                                                    mem[_43929 + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(_43929) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                    return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _31448 = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                if ceil32(_31448) > _31448:
                                                    mem[_31448 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_31448) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            s = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 256] = stor15[s].field_0
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            _43416 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                            _43930 = mem[_43416]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[_43416]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(_43930)] = mem[_43416 + 32 len ceil32(_43930)]
                                            if ceil32(_43930) > _43930:
                                                mem[_43930 + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(_43930) + 32]
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                    return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _31321 = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                if ceil32(_31321) > _31321:
                                                    mem[_31321 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_31321) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            s = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 256] = stor15[s].field_0
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            _43419 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                            _43933 = mem[_43419]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[_43419]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(_43933)] = mem[_43419 + 32 len ceil32(_43933)]
                                            if ceil32(_43933) > _43933:
                                                mem[_43933 + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(_43933) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                            if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                            mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _31452 = mem[ceil32(stor14.length.field_1) + 224]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                            if ceil32(_31452) > _31452:
                                                mem[_31452 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_31452) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        s = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 256] = stor15[s].field_0
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        _43420 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257
                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                        _43934 = mem[_43420]
                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[_43420]
                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(_43934)] = mem[_43420 + 32 len ceil32(_43934)]
                                        if ceil32(_43934) > _43934:
                                            mem[_43934 + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(_43934) + 32]
                                    s = 0
                                    idx = cd[4]
                                    while idx:
                                        if s == -1:
                                            revert with 0, 17
                                        s = s + 1
                                        idx = idx / 10
                                        continue 
                                    if s > test266151307():
                                        revert with 0, 65
                                    mem[ceil32(stor14.length.field_1) + 160] = s
                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + 192
                                    if not s:
                                        t = s
                                        idx = cd[4]
                                        while idx:
                                            if t < 1:
                                                revert with 0, 17
                                            if 48 > !(idx % 10):
                                                revert with 0, 17
                                            if t - 1 >= mem[ceil32(stor14.length.field_1) + 160]:
                                                revert with 0, 50
                                            mem[t + ceil32(stor14.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                            t = t - 1
                                            idx = idx / 10
                                            continue 
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(stor14.length.field_1)] = mem[160 len ceil32(stor14.length.field_1)]
                                        if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                                            _43409 = mem[ceil32(stor14.length.field_1) + 160]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                            if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                                if bool(stor15.length):
                                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        _54188 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54188)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54188)]
                                                        if ceil32(_54188) > _54188:
                                                            mem[_54188 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54188) + 32], 
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _54440 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_54440) > _54440:
                                                            mem[_54440 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_54440) + -mem[64] + 64
                                                    mem[0] = 15
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor15.length) * 0.5:
                                                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _57608 = mem[64]
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _58476 = mem[_57608]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + (uint255(stor15.length) * 0.5) + 256] = mem[_57608]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58476)] = mem[_57608 + 32 len ceil32(_58476)]
                                                    if ceil32(_58476) > _58476:
                                                        mem[_58476 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58476) + 32], 
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                    _54441 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54441)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54441)]
                                                    if ceil32(_54441) > _54441:
                                                        mem[_54441 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54441) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54701 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54701) > _54701:
                                                        mem[_54701 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54701) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < stor15.length.field_1:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57609 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + stor15.length.field_1 + 224] = 32
                                                _58477 = mem[_57609]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + stor15.length.field_1 + 256] = mem[_57609]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + stor15.length.field_1 + 288 len ceil32(_58477)] = mem[_57609 + 32 len ceil32(_58477)]
                                                if ceil32(_58477) > _58477:
                                                    mem[_58477 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + stor15.length.field_1 + 256 len ceil32(_58477) + 32], 
                                            mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _54191 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54191)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54191)]
                                                    if ceil32(_54191) > _54191:
                                                        mem[_54191 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54191) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54443 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54443) > _54443:
                                                        mem[_54443 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54443) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57610 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _58478 = mem[_57610]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + (uint255(stor15.length) * 0.5) + 256] = mem[_57610]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58478)] = mem[_57610 + 32 len ceil32(_58478)]
                                                if ceil32(_58478) > _58478:
                                                    mem[_58478 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58478) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                _54444 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54444)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54444)]
                                                if ceil32(_54444) > _54444:
                                                    mem[_54444 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54444) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54703 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54703) > _54703:
                                                    mem[_54703 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54703) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57611 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + stor15.length.field_1 + 224] = 32
                                            _58479 = mem[_57611]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + stor15.length.field_1 + 256] = mem[_57611]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + stor15.length.field_1 + 288 len ceil32(_58479)] = mem[_57611 + 32 len ceil32(_58479)]
                                            if ceil32(_58479) > _58479:
                                                mem[_58479 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43409 + stor15.length.field_1 + 256 len ceil32(_58479) + 32], 
                                        mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 224] = 0
                                        _43410 = mem[ceil32(stor14.length.field_1) + 160]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                        if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _54194 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54194)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54194)]
                                                    if ceil32(_54194) > _54194:
                                                        mem[_54194 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54194) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54446 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54446) > _54446:
                                                        mem[_54446 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54446) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57612 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _58480 = mem[_57612]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + (uint255(stor15.length) * 0.5) + 256] = mem[_57612]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58480)] = mem[_57612 + 32 len ceil32(_58480)]
                                                if ceil32(_58480) > _58480:
                                                    mem[_58480 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58480) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                _54447 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54447)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54447)]
                                                if ceil32(_54447) > _54447:
                                                    mem[_54447 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54447) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54705 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54705) > _54705:
                                                    mem[_54705 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54705) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57613 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + stor15.length.field_1 + 224] = 32
                                            _58481 = mem[_57613]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + stor15.length.field_1 + 256] = mem[_57613]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + stor15.length.field_1 + 288 len ceil32(_58481)] = mem[_57613 + 32 len ceil32(_58481)]
                                            if ceil32(_58481) > _58481:
                                                mem[_58481 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + stor15.length.field_1 + 256 len ceil32(_58481) + 32], 
                                        mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _54197 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54197)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54197)]
                                                if ceil32(_54197) > _54197:
                                                    mem[_54197 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54197) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54449 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54449) > _54449:
                                                    mem[_54449 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54449) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57614 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _58482 = mem[_57614]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + (uint255(stor15.length) * 0.5) + 256] = mem[_57614]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58482)] = mem[_57614 + 32 len ceil32(_58482)]
                                            if ceil32(_58482) > _58482:
                                                mem[_58482 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58482) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                            _54450 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54450)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54450)]
                                            if ceil32(_54450) > _54450:
                                                mem[_54450 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54450) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _54707 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_54707) > _54707:
                                                mem[_54707 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_54707) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _57615 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + stor15.length.field_1 + 224] = 32
                                        _58483 = mem[_57615]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + stor15.length.field_1 + 256] = mem[_57615]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + stor15.length.field_1 + 288 len ceil32(_58483)] = mem[_57615 + 32 len ceil32(_58483)]
                                        if ceil32(_58483) > _58483:
                                            mem[_58483 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43410 + stor15.length.field_1 + 256 len ceil32(_58483) + 32], 
                                    mem[ceil32(stor14.length.field_1) + 192 len s] = call.data[calldata.size len s]
                                    t = s
                                    idx = cd[4]
                                    while idx:
                                        if t < 1:
                                            revert with 0, 17
                                        if 48 > !(idx % 10):
                                            revert with 0, 17
                                        if t - 1 >= mem[ceil32(stor14.length.field_1) + 160]:
                                            revert with 0, 50
                                        mem[t + ceil32(stor14.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                        t = t - 1
                                        idx = idx / 10
                                        continue 
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(stor14.length.field_1)] = mem[160 len ceil32(stor14.length.field_1)]
                                    if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                                        _43411 = mem[ceil32(stor14.length.field_1) + 160]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                        if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _54200 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54200)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54200)]
                                                    if ceil32(_54200) > _54200:
                                                        mem[_54200 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54200) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54452 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54452) > _54452:
                                                        mem[_54452 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54452) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57616 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _58484 = mem[_57616]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + (uint255(stor15.length) * 0.5) + 256] = mem[_57616]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58484)] = mem[_57616 + 32 len ceil32(_58484)]
                                                if ceil32(_58484) > _58484:
                                                    mem[_58484 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58484) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                _54453 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54453)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54453)]
                                                if ceil32(_54453) > _54453:
                                                    mem[_54453 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54453) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54709 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54709) > _54709:
                                                    mem[_54709 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54709) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57617 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + stor15.length.field_1 + 224] = 32
                                            _58485 = mem[_57617]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + stor15.length.field_1 + 256] = mem[_57617]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + stor15.length.field_1 + 288 len ceil32(_58485)] = mem[_57617 + 32 len ceil32(_58485)]
                                            if ceil32(_58485) > _58485:
                                                mem[_58485 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + stor15.length.field_1 + 256 len ceil32(_58485) + 32], 
                                        mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _54203 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54203)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54203)]
                                                if ceil32(_54203) > _54203:
                                                    mem[_54203 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54203) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54455 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54455) > _54455:
                                                    mem[_54455 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54455) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57618 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _58486 = mem[_57618]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + (uint255(stor15.length) * 0.5) + 256] = mem[_57618]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58486)] = mem[_57618 + 32 len ceil32(_58486)]
                                            if ceil32(_58486) > _58486:
                                                mem[_58486 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58486) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                            _54456 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54456)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54456)]
                                            if ceil32(_54456) > _54456:
                                                mem[_54456 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54456) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _54711 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_54711) > _54711:
                                                mem[_54711 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_54711) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _57619 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + stor15.length.field_1 + 224] = 32
                                        _58487 = mem[_57619]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + stor15.length.field_1 + 256] = mem[_57619]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + stor15.length.field_1 + 288 len ceil32(_58487)] = mem[_57619 + 32 len ceil32(_58487)]
                                        if ceil32(_58487) > _58487:
                                            mem[_58487 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43411 + stor15.length.field_1 + 256 len ceil32(_58487) + 32], 
                                    mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 224] = 0
                                    _43412 = mem[ceil32(stor14.length.field_1) + 160]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                    if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _54206 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54206)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54206)]
                                                if ceil32(_54206) > _54206:
                                                    mem[_54206 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54206) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54458 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54458) > _54458:
                                                    mem[_54458 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54458) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57620 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _58488 = mem[_57620]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + (uint255(stor15.length) * 0.5) + 256] = mem[_57620]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58488)] = mem[_57620 + 32 len ceil32(_58488)]
                                            if ceil32(_58488) > _58488:
                                                mem[_58488 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58488) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                            _54459 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54459)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54459)]
                                            if ceil32(_54459) > _54459:
                                                mem[_54459 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54459) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _54713 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_54713) > _54713:
                                                mem[_54713 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_54713) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _57621 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + stor15.length.field_1 + 224] = 32
                                        _58489 = mem[_57621]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + stor15.length.field_1 + 256] = mem[_57621]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + stor15.length.field_1 + 288 len ceil32(_58489)] = mem[_57621 + 32 len ceil32(_58489)]
                                        if ceil32(_58489) > _58489:
                                            mem[_58489 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + stor15.length.field_1 + 256 len ceil32(_58489) + 32], 
                                    mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                    if bool(stor15.length):
                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _54209 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54209)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54209)]
                                            if ceil32(_54209) > _54209:
                                                mem[_54209 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54209) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _54461 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_54461) > _54461:
                                                mem[_54461 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_54461) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < uint255(stor15.length) * 0.5:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _57622 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + (uint255(stor15.length) * 0.5) + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + (uint255(stor15.length) * 0.5) + 224] = 32
                                        _58490 = mem[_57622]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + (uint255(stor15.length) * 0.5) + 256] = mem[_57622]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58490)] = mem[_57622 + 32 len ceil32(_58490)]
                                        if ceil32(_58490) > _58490:
                                            mem[_58490 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + (uint255(stor15.length) * 0.5) + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58490) + 32], 
                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                        revert with 0, 34
                                    if not bool(stor15.length):
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                        _54462 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54462)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54462)]
                                        if ceil32(_54462) > _54462:
                                            mem[_54462 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54462) + 32], 
                                    if bool(stor15.length) != 1:
                                        mem[64] = 0
                                        _54715 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                        if ceil32(_54715) > _54715:
                                            mem[_54715 + 64] = 0
                                        return memory
                                          from mem[64]
                                           len ceil32(_54715) + -mem[64] + 64
                                    mem[0] = 15
                                    idx = 0
                                    t = 0
                                    while idx < stor15.length.field_1:
                                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                        idx = idx + 32
                                        t = t + 1
                                        continue 
                                    _57623 = mem[64]
                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + stor15.length.field_1 + 224
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + stor15.length.field_1 + 224] = 32
                                    _58491 = mem[_57623]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + stor15.length.field_1 + 256] = mem[_57623]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + stor15.length.field_1 + 288 len ceil32(_58491)] = mem[_57623 + 32 len ceil32(_58491)]
                                    if ceil32(_58491) > _58491:
                                        mem[_58491 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + stor15.length.field_1 + 288] = 0
                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43412 + stor15.length.field_1 + 256 len ceil32(_58491) + 32], 
                                if 31 >= stor14.length.field_1:
                                    mem[160] = 256 * stor14.length.field_8
                                    if stor14.length.field_1 <= 0:
                                        return ''
                                    if not cd[4]:
                                        mem[64] = ceil32(stor14.length.field_1) + 224
                                        mem[ceil32(stor14.length.field_1) + 160] = 1
                                        mem[ceil32(stor14.length.field_1) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                        mem[ceil32(stor14.length.field_1) + 256 len ceil32(stor14.length.field_1)] = mem[160 len ceil32(stor14.length.field_1)]
                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = 0
                                        if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                    if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                        return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                    mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _31337 = mem[ceil32(stor14.length.field_1) + 224]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                    if ceil32(_31337) > _31337:
                                                        mem[_31337 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_31337) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                s = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 256] = stor15[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                _43429 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                                _43941 = mem[_43429]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[_43429]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(_43941)] = mem[_43429 + 32 len ceil32(_43941)]
                                                if ceil32(_43941) > _43941:
                                                    mem[_43941 + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(_43941) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                    return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _31465 = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                if ceil32(_31465) > _31465:
                                                    mem[_31465 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_31465) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            s = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 256] = stor15[s].field_0
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            _43430 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                            _43942 = mem[_43430]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[_43430]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(_43942)] = mem[_43430 + 32 len ceil32(_43942)]
                                            if ceil32(_43942) > _43942:
                                                mem[_43942 + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(_43942) + 32]
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                    return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _31343 = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                if ceil32(_31343) > _31343:
                                                    mem[_31343 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_31343) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            s = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 256] = stor15[s].field_0
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            _43433 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                            _43945 = mem[_43433]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[_43433]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(_43945)] = mem[_43433 + 32 len ceil32(_43945)]
                                            if ceil32(_43945) > _43945:
                                                mem[_43945 + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(_43945) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                            if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                            mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _31469 = mem[ceil32(stor14.length.field_1) + 224]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                            if ceil32(_31469) > _31469:
                                                mem[_31469 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_31469) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        s = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 256] = stor15[s].field_0
                                            idx = idx + 32
                                            s = s + 1
                                            continue 
                                        _43434 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257
                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                        _43946 = mem[_43434]
                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[_43434]
                                        mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(_43946)] = mem[_43434 + 32 len ceil32(_43946)]
                                        if ceil32(_43946) > _43946:
                                            mem[_43946 + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(_43946) + 32]
                                    s = 0
                                    idx = cd[4]
                                    while idx:
                                        if s == -1:
                                            revert with 0, 17
                                        s = s + 1
                                        idx = idx / 10
                                        continue 
                                    if s > test266151307():
                                        revert with 0, 65
                                    mem[ceil32(stor14.length.field_1) + 160] = s
                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + 192
                                    if not s:
                                        t = s
                                        idx = cd[4]
                                        while idx:
                                            if t < 1:
                                                revert with 0, 17
                                            if 48 > !(idx % 10):
                                                revert with 0, 17
                                            if t - 1 >= mem[ceil32(stor14.length.field_1) + 160]:
                                                revert with 0, 50
                                            mem[t + ceil32(stor14.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                            t = t - 1
                                            idx = idx / 10
                                            continue 
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(stor14.length.field_1)] = mem[160 len ceil32(stor14.length.field_1)]
                                        if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                                            _43423 = mem[ceil32(stor14.length.field_1) + 160]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                            if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                                if bool(stor15.length):
                                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                        revert with 0, 34
                                                    if not bool(stor15.length):
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                        _54220 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54220)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54220)]
                                                        if ceil32(_54220) > _54220:
                                                            mem[_54220 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54220) + 32], 
                                                    if bool(stor15.length) != 1:
                                                        mem[64] = 0
                                                        _54480 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                        if ceil32(_54480) > _54480:
                                                            mem[_54480 + 64] = 0
                                                        return memory
                                                          from mem[64]
                                                           len ceil32(_54480) + -mem[64] + 64
                                                    mem[0] = 15
                                                    idx = 0
                                                    t = 0
                                                    while idx < uint255(stor15.length) * 0.5:
                                                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                        idx = idx + 32
                                                        t = t + 1
                                                        continue 
                                                    _57624 = mem[64]
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _58500 = mem[_57624]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + (uint255(stor15.length) * 0.5) + 256] = mem[_57624]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58500)] = mem[_57624 + 32 len ceil32(_58500)]
                                                    if ceil32(_58500) > _58500:
                                                        mem[_58500 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58500) + 32], 
                                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                    _54481 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54481)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54481)]
                                                    if ceil32(_54481) > _54481:
                                                        mem[_54481 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54481) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54749 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54749) > _54749:
                                                        mem[_54749 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54749) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < stor15.length.field_1:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57625 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + stor15.length.field_1 + 224] = 32
                                                _58501 = mem[_57625]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + stor15.length.field_1 + 256] = mem[_57625]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + stor15.length.field_1 + 288 len ceil32(_58501)] = mem[_57625 + 32 len ceil32(_58501)]
                                                if ceil32(_58501) > _58501:
                                                    mem[_58501 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + stor15.length.field_1 + 256 len ceil32(_58501) + 32], 
                                            mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _54223 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54223)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54223)]
                                                    if ceil32(_54223) > _54223:
                                                        mem[_54223 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54223) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54483 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54483) > _54483:
                                                        mem[_54483 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54483) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57626 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _58502 = mem[_57626]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + (uint255(stor15.length) * 0.5) + 256] = mem[_57626]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58502)] = mem[_57626 + 32 len ceil32(_58502)]
                                                if ceil32(_58502) > _58502:
                                                    mem[_58502 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58502) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                _54484 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54484)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54484)]
                                                if ceil32(_54484) > _54484:
                                                    mem[_54484 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54484) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54751 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54751) > _54751:
                                                    mem[_54751 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54751) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57627 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + stor15.length.field_1 + 224] = 32
                                            _58503 = mem[_57627]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + stor15.length.field_1 + 256] = mem[_57627]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + stor15.length.field_1 + 288 len ceil32(_58503)] = mem[_57627 + 32 len ceil32(_58503)]
                                            if ceil32(_58503) > _58503:
                                                mem[_58503 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43423 + stor15.length.field_1 + 256 len ceil32(_58503) + 32], 
                                        mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 224] = 0
                                        _43424 = mem[ceil32(stor14.length.field_1) + 160]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                        if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _54226 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54226)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54226)]
                                                    if ceil32(_54226) > _54226:
                                                        mem[_54226 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54226) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54486 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54486) > _54486:
                                                        mem[_54486 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54486) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57628 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _58504 = mem[_57628]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + (uint255(stor15.length) * 0.5) + 256] = mem[_57628]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58504)] = mem[_57628 + 32 len ceil32(_58504)]
                                                if ceil32(_58504) > _58504:
                                                    mem[_58504 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58504) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                _54487 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54487)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54487)]
                                                if ceil32(_54487) > _54487:
                                                    mem[_54487 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54487) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54753 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54753) > _54753:
                                                    mem[_54753 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54753) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57629 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + stor15.length.field_1 + 224] = 32
                                            _58505 = mem[_57629]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + stor15.length.field_1 + 256] = mem[_57629]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + stor15.length.field_1 + 288 len ceil32(_58505)] = mem[_57629 + 32 len ceil32(_58505)]
                                            if ceil32(_58505) > _58505:
                                                mem[_58505 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + stor15.length.field_1 + 256 len ceil32(_58505) + 32], 
                                        mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _54229 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54229)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54229)]
                                                if ceil32(_54229) > _54229:
                                                    mem[_54229 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54229) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54489 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54489) > _54489:
                                                    mem[_54489 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54489) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57630 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _58506 = mem[_57630]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + (uint255(stor15.length) * 0.5) + 256] = mem[_57630]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58506)] = mem[_57630 + 32 len ceil32(_58506)]
                                            if ceil32(_58506) > _58506:
                                                mem[_58506 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58506) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                            _54490 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54490)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54490)]
                                            if ceil32(_54490) > _54490:
                                                mem[_54490 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54490) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _54755 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_54755) > _54755:
                                                mem[_54755 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_54755) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _57631 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + stor15.length.field_1 + 224] = 32
                                        _58507 = mem[_57631]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + stor15.length.field_1 + 256] = mem[_57631]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + stor15.length.field_1 + 288 len ceil32(_58507)] = mem[_57631 + 32 len ceil32(_58507)]
                                        if ceil32(_58507) > _58507:
                                            mem[_58507 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43424 + stor15.length.field_1 + 256 len ceil32(_58507) + 32], 
                                    mem[ceil32(stor14.length.field_1) + 192 len s] = call.data[calldata.size len s]
                                    t = s
                                    idx = cd[4]
                                    while idx:
                                        if t < 1:
                                            revert with 0, 17
                                        if 48 > !(idx % 10):
                                            revert with 0, 17
                                        if t - 1 >= mem[ceil32(stor14.length.field_1) + 160]:
                                            revert with 0, 50
                                        mem[t + ceil32(stor14.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                        t = t - 1
                                        idx = idx / 10
                                        continue 
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(stor14.length.field_1)] = mem[160 len ceil32(stor14.length.field_1)]
                                    if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                                        _43425 = mem[ceil32(stor14.length.field_1) + 160]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                        if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _54232 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54232)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54232)]
                                                    if ceil32(_54232) > _54232:
                                                        mem[_54232 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54232) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _54492 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_54492) > _54492:
                                                        mem[_54492 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_54492) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _57632 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _58508 = mem[_57632]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + (uint255(stor15.length) * 0.5) + 256] = mem[_57632]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58508)] = mem[_57632 + 32 len ceil32(_58508)]
                                                if ceil32(_58508) > _58508:
                                                    mem[_58508 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58508) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                _54493 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54493)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54493)]
                                                if ceil32(_54493) > _54493:
                                                    mem[_54493 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54493) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54757 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54757) > _54757:
                                                    mem[_54757 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54757) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57633 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + stor15.length.field_1 + 224] = 32
                                            _58509 = mem[_57633]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + stor15.length.field_1 + 256] = mem[_57633]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + stor15.length.field_1 + 288 len ceil32(_58509)] = mem[_57633 + 32 len ceil32(_58509)]
                                            if ceil32(_58509) > _58509:
                                                mem[_58509 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + stor15.length.field_1 + 256 len ceil32(_58509) + 32], 
                                        mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _54235 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54235)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54235)]
                                                if ceil32(_54235) > _54235:
                                                    mem[_54235 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54235) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54495 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54495) > _54495:
                                                    mem[_54495 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54495) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57634 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _58510 = mem[_57634]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + (uint255(stor15.length) * 0.5) + 256] = mem[_57634]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58510)] = mem[_57634 + 32 len ceil32(_58510)]
                                            if ceil32(_58510) > _58510:
                                                mem[_58510 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58510) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                            _54496 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54496)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54496)]
                                            if ceil32(_54496) > _54496:
                                                mem[_54496 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54496) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _54759 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_54759) > _54759:
                                                mem[_54759 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_54759) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _57635 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + stor15.length.field_1 + 224] = 32
                                        _58511 = mem[_57635]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + stor15.length.field_1 + 256] = mem[_57635]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + stor15.length.field_1 + 288 len ceil32(_58511)] = mem[_57635 + 32 len ceil32(_58511)]
                                        if ceil32(_58511) > _58511:
                                            mem[_58511 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43425 + stor15.length.field_1 + 256 len ceil32(_58511) + 32], 
                                    mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 224] = 0
                                    _43426 = mem[ceil32(stor14.length.field_1) + 160]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                    if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _54238 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54238)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54238)]
                                                if ceil32(_54238) > _54238:
                                                    mem[_54238 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54238) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _54498 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_54498) > _54498:
                                                    mem[_54498 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_54498) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _57636 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _58512 = mem[_57636]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + (uint255(stor15.length) * 0.5) + 256] = mem[_57636]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58512)] = mem[_57636 + 32 len ceil32(_58512)]
                                            if ceil32(_58512) > _58512:
                                                mem[_58512 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58512) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                            _54499 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54499)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54499)]
                                            if ceil32(_54499) > _54499:
                                                mem[_54499 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54499) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _54761 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_54761) > _54761:
                                                mem[_54761 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_54761) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _57637 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + stor15.length.field_1 + 224] = 32
                                        _58513 = mem[_57637]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + stor15.length.field_1 + 256] = mem[_57637]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + stor15.length.field_1 + 288 len ceil32(_58513)] = mem[_57637 + 32 len ceil32(_58513)]
                                        if ceil32(_58513) > _58513:
                                            mem[_58513 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + stor15.length.field_1 + 256 len ceil32(_58513) + 32], 
                                    mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                    if bool(stor15.length):
                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _54241 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_54241)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54241)]
                                            if ceil32(_54241) > _54241:
                                                mem[_54241 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_54241) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _54501 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_54501) > _54501:
                                                mem[_54501 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_54501) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < uint255(stor15.length) * 0.5:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _57638 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + (uint255(stor15.length) * 0.5) + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + (uint255(stor15.length) * 0.5) + 224] = 32
                                        _58514 = mem[_57638]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + (uint255(stor15.length) * 0.5) + 256] = mem[_57638]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_58514)] = mem[_57638 + 32 len ceil32(_58514)]
                                        if ceil32(_58514) > _58514:
                                            mem[_58514 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + (uint255(stor15.length) * 0.5) + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_58514) + 32], 
                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                        revert with 0, 34
                                    if not bool(stor15.length):
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                        _54502 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_54502)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_54502)]
                                        if ceil32(_54502) > _54502:
                                            mem[_54502 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_54502) + 32], 
                                    if bool(stor15.length) != 1:
                                        mem[64] = 0
                                        _54763 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                        if ceil32(_54763) > _54763:
                                            mem[_54763 + 64] = 0
                                        return memory
                                          from mem[64]
                                           len ceil32(_54763) + -mem[64] + 64
                                    mem[0] = 15
                                    idx = 0
                                    t = 0
                                    while idx < stor15.length.field_1:
                                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                        idx = idx + 32
                                        t = t + 1
                                        continue 
                                    _57639 = mem[64]
                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + stor15.length.field_1 + 224
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + stor15.length.field_1 + 224] = 32
                                    _58515 = mem[_57639]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + stor15.length.field_1 + 256] = mem[_57639]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + stor15.length.field_1 + 288 len ceil32(_58515)] = mem[_57639 + 32 len ceil32(_58515)]
                                    if ceil32(_58515) > _58515:
                                        mem[_58515 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + stor15.length.field_1 + 288] = 0
                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _43426 + stor15.length.field_1 + 256 len ceil32(_58515) + 32], 
                                mem[0] = 14
                                mem[160] = uint256(stor14.field_0)
                                idx = 160
                                s = 0
                                while stor14.length.field_1 + 128 > idx:
                                    mem[idx + 32] = stor14[s].field_256
                                    idx = idx + 32
                                    s = s + 1
                                    continue 
                                if stor14.length.field_1 <= 0:
                                    return ''
                                if not cd[4]:
                                    mem[ceil32(stor14.length.field_1) + 160] = 1
                                    mem[ceil32(stor14.length.field_1) + 192] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                    mem[ceil32(stor14.length.field_1) + 256 len ceil32(stor14.length.field_1)] = mem[160 len ceil32(stor14.length.field_1)]
                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 256] = 0x3000000000000000000000000000000000000000000000000000000000000000
                                    mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = 0
                                    if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                                        if not bool(stor15.length):
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                    return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                            if bool(stor15.length) == 1:
                                                idx = 0
                                                s = 0
                                                while idx < stor15.length.field_1:
                                                    mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = stor15[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                    return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                            mem[64] = 0
                                            _45095 = mem[ceil32(stor14.length.field_1) + 224]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                            var67001 = ceil32(_45095)
                                            if ceil32(_45095) > _45095:
                                                mem[_45095 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_45095) + -mem[64] + 64
                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                        else:
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _44820 = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                if ceil32(_44820) > _44820:
                                                    mem[_44820 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_44820) + -mem[64] + 64
                                            idx = 0
                                            s = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = stor15[s].field_0
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                            var69001 = ceil32(mem[ceil32(stor14.length.field_1) + 224])
                                    else:
                                        if not bool(stor15.length):
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                    return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                            if bool(stor15.length) == 1:
                                                idx = 0
                                                s = 0
                                                while idx < stor15.length.field_1:
                                                    mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = stor15[s].field_0
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 257] = 32
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                                    return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                                mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 321] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + stor15.length.field_1 + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                            mem[64] = 0
                                            _45099 = mem[ceil32(stor14.length.field_1) + 224]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                            var67001 = ceil32(_45099)
                                            if ceil32(_45099) > _45099:
                                                mem[_45099 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_45099) + -mem[64] + 64
                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = Mask(248, 8, stor15.length)
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                        else:
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _44826 = mem[ceil32(stor14.length.field_1) + 224]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                                if ceil32(_44826) > _44826:
                                                    mem[_44826 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_44826) + -mem[64] + 64
                                            idx = 0
                                            s = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(stor14.length.field_1) + stor14.length.field_1 + 257] = stor15[s].field_0
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 257] = 32
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289] = mem[ceil32(stor14.length.field_1) + 224]
                                            mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])] = mem[ceil32(stor14.length.field_1) + 256 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]
                                            var69001 = ceil32(mem[ceil32(stor14.length.field_1) + 224])
                                    if ceil32(mem[ceil32(stor14.length.field_1) + 224]) <= mem[ceil32(stor14.length.field_1) + 224]:
                                        return Array(len=mem[ceil32(stor14.length.field_1) + 224], data=mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321 len ceil32(mem[ceil32(stor14.length.field_1) + 224])]), 
                                    mem[mem[ceil32(stor14.length.field_1) + 224] + ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 321] = 0
                                    return 32, mem[ceil32(stor14.length.field_1) + stor14.length.field_1 + (uint255(stor15.length) * 0.5) + 289 len ceil32(mem[ceil32(stor14.length.field_1) + 224]) + 32], 
                                s = 0
                                idx = cd[4]
                                while idx:
                                    if s == -1:
                                        revert with 0, 17
                                    s = s + 1
                                    idx = idx / 10
                                    continue 
                                if s > test266151307():
                                    revert with 0, 65
                                mem[ceil32(stor14.length.field_1) + 160] = s
                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + 192
                                if not s:
                                    t = s
                                    idx = cd[4]
                                    while idx:
                                        if t < 1:
                                            revert with 0, 17
                                        if 48 > !(idx % 10):
                                            revert with 0, 17
                                        if t - 1 >= mem[ceil32(stor14.length.field_1) + 160]:
                                            revert with 0, 50
                                        mem[t + ceil32(stor14.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                        t = t - 1
                                        idx = idx / 10
                                        continue 
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(stor14.length.field_1)] = mem[160 len ceil32(stor14.length.field_1)]
                                    if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                                        _52996 = mem[ceil32(stor14.length.field_1) + 160]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                        if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                            if bool(stor15.length):
                                                if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                    revert with 0, 34
                                                if not bool(stor15.length):
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                    _59052 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_59052)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59052)]
                                                    if ceil32(_59052) > _59052:
                                                        mem[_59052 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_59052) + 32], 
                                                if bool(stor15.length) != 1:
                                                    mem[64] = 0
                                                    _59161 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                    if ceil32(_59161) > _59161:
                                                        mem[_59161 + 64] = 0
                                                    return memory
                                                      from mem[64]
                                                       len ceil32(_59161) + -mem[64] + 64
                                                mem[0] = 15
                                                idx = 0
                                                t = 0
                                                while idx < uint255(stor15.length) * 0.5:
                                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                    idx = idx + 32
                                                    t = t + 1
                                                    continue 
                                                _60460 = mem[64]
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _61100 = mem[_60460]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + (uint255(stor15.length) * 0.5) + 256] = mem[_60460]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61100)] = mem[_60460 + 32 len ceil32(_61100)]
                                                if ceil32(_61100) > _61100:
                                                    mem[_61100 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61100) + 32], 
                                            if bool(stor15.length) == stor15.length.field_1 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                                _59162 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_59162)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59162)]
                                                if ceil32(_59162) > _59162:
                                                    mem[_59162 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_59162) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _59457 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_59457) > _59457:
                                                    mem[_59457 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_59457) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < stor15.length.field_1:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _60461 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + stor15.length.field_1 + 224] = 32
                                            _61101 = mem[_60461]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + stor15.length.field_1 + 256] = mem[_60461]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + stor15.length.field_1 + 288 len ceil32(_61101)] = mem[_60461 + 32 len ceil32(_61101)]
                                            if ceil32(_61101) > _61101:
                                                mem[_61101 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + stor15.length.field_1 + 256 len ceil32(_61101) + 32], 
                                        mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _59055 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_59055)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59055)]
                                                if ceil32(_59055) > _59055:
                                                    mem[_59055 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_59055) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _59164 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_59164) > _59164:
                                                    mem[_59164 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_59164) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _60462 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _61102 = mem[_60462]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + (uint255(stor15.length) * 0.5) + 256] = mem[_60462]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61102)] = mem[_60462 + 32 len ceil32(_61102)]
                                            if ceil32(_61102) > _61102:
                                                mem[_61102 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61102) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                            _59165 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_59165)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59165)]
                                            if ceil32(_59165) > _59165:
                                                mem[_59165 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_59165) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _59459 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_59459) > _59459:
                                                mem[_59459 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_59459) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _60463 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + stor15.length.field_1 + 224] = 32
                                        _61103 = mem[_60463]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + stor15.length.field_1 + 256] = mem[_60463]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + stor15.length.field_1 + 288 len ceil32(_61103)] = mem[_60463 + 32 len ceil32(_61103)]
                                        if ceil32(_61103) > _61103:
                                            mem[_61103 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52996 + stor15.length.field_1 + 256 len ceil32(_61103) + 32], 
                                    mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 224] = 0
                                    _52997 = mem[ceil32(stor14.length.field_1) + 160]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                    if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _59058 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_59058)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59058)]
                                                if ceil32(_59058) > _59058:
                                                    mem[_59058 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_59058) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _59167 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_59167) > _59167:
                                                    mem[_59167 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_59167) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _60464 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _61104 = mem[_60464]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + (uint255(stor15.length) * 0.5) + 256] = mem[_60464]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61104)] = mem[_60464 + 32 len ceil32(_61104)]
                                            if ceil32(_61104) > _61104:
                                                mem[_61104 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61104) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                            _59168 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_59168)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59168)]
                                            if ceil32(_59168) > _59168:
                                                mem[_59168 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_59168) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _59461 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_59461) > _59461:
                                                mem[_59461 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_59461) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _60465 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + stor15.length.field_1 + 224] = 32
                                        _61105 = mem[_60465]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + stor15.length.field_1 + 256] = mem[_60465]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + stor15.length.field_1 + 288 len ceil32(_61105)] = mem[_60465 + 32 len ceil32(_61105)]
                                        if ceil32(_61105) > _61105:
                                            mem[_61105 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + stor15.length.field_1 + 256 len ceil32(_61105) + 32], 
                                    mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                    if bool(stor15.length):
                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _59061 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_59061)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59061)]
                                            if ceil32(_59061) > _59061:
                                                mem[_59061 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_59061) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _59170 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_59170) > _59170:
                                                mem[_59170 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_59170) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < uint255(stor15.length) * 0.5:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _60466 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + (uint255(stor15.length) * 0.5) + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + (uint255(stor15.length) * 0.5) + 224] = 32
                                        _61106 = mem[_60466]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + (uint255(stor15.length) * 0.5) + 256] = mem[_60466]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61106)] = mem[_60466 + 32 len ceil32(_61106)]
                                        if ceil32(_61106) > _61106:
                                            mem[_61106 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + (uint255(stor15.length) * 0.5) + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61106) + 32], 
                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                        revert with 0, 34
                                    if not bool(stor15.length):
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                        _59171 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_59171)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59171)]
                                        if ceil32(_59171) > _59171:
                                            mem[_59171 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_59171) + 32], 
                                    if bool(stor15.length) != 1:
                                        mem[64] = 0
                                        _59463 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                        if ceil32(_59463) > _59463:
                                            mem[_59463 + 64] = 0
                                        return memory
                                          from mem[64]
                                           len ceil32(_59463) + -mem[64] + 64
                                    mem[0] = 15
                                    idx = 0
                                    t = 0
                                    while idx < stor15.length.field_1:
                                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                        idx = idx + 32
                                        t = t + 1
                                        continue 
                                    _60467 = mem[64]
                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + stor15.length.field_1 + 224
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + stor15.length.field_1 + 224] = 32
                                    _61107 = mem[_60467]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + stor15.length.field_1 + 256] = mem[_60467]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + stor15.length.field_1 + 288 len ceil32(_61107)] = mem[_60467 + 32 len ceil32(_61107)]
                                    if ceil32(_61107) > _61107:
                                        mem[_61107 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + stor15.length.field_1 + 288] = 0
                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52997 + stor15.length.field_1 + 256 len ceil32(_61107) + 32], 
                                mem[ceil32(stor14.length.field_1) + 192 len s] = call.data[calldata.size len s]
                                t = s
                                idx = cd[4]
                                while idx:
                                    if t < 1:
                                        revert with 0, 17
                                    if 48 > !(idx % 10):
                                        revert with 0, 17
                                    if t - 1 >= mem[ceil32(stor14.length.field_1) + 160]:
                                        revert with 0, 50
                                    mem[t + ceil32(stor14.length.field_1) + 191 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                    t = t - 1
                                    idx = idx / 10
                                    continue 
                                mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(stor14.length.field_1)] = mem[160 len ceil32(stor14.length.field_1)]
                                if ceil32(stor14.length.field_1) <= stor14.length.field_1:
                                    _52998 = mem[ceil32(stor14.length.field_1) + 160]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                    var59001 = ceil32(mem[ceil32(stor14.length.field_1) + 160])
                                    if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                        if bool(stor15.length):
                                            if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                                revert with 0, 34
                                            if not bool(stor15.length):
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                                _59064 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_59064)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59064)]
                                                if ceil32(_59064) > _59064:
                                                    mem[_59064 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_59064) + 32], 
                                            if bool(stor15.length) != 1:
                                                mem[64] = 0
                                                _59173 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                                mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                                if ceil32(_59173) > _59173:
                                                    mem[_59173 + 64] = 0
                                                return memory
                                                  from mem[64]
                                                   len ceil32(_59173) + -mem[64] + 64
                                            mem[0] = 15
                                            idx = 0
                                            t = 0
                                            while idx < uint255(stor15.length) * 0.5:
                                                mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                                idx = idx + 32
                                                t = t + 1
                                                continue 
                                            _60468 = mem[64]
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _61108 = mem[_60468]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + (uint255(stor15.length) * 0.5) + 256] = mem[_60468]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61108)] = mem[_60468 + 32 len ceil32(_61108)]
                                            if ceil32(_61108) > _61108:
                                                mem[_61108 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61108) + 32], 
                                        if bool(stor15.length) == stor15.length.field_1 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                            _59174 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_59174)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59174)]
                                            if ceil32(_59174) > _59174:
                                                mem[_59174 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_59174) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _59465 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_59465) > _59465:
                                                mem[_59465 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_59465) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < stor15.length.field_1:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _60469 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + stor15.length.field_1 + 224] = 32
                                        _61109 = mem[_60469]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + stor15.length.field_1 + 256] = mem[_60469]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + stor15.length.field_1 + 288 len ceil32(_61109)] = mem[_60469 + 32 len ceil32(_61109)]
                                        if ceil32(_61109) > _61109:
                                            mem[_61109 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + stor15.length.field_1 + 256 len ceil32(_61109) + 32], 
                                    mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                    if bool(stor15.length):
                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _59067 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_59067)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59067)]
                                            if ceil32(_59067) > _59067:
                                                mem[_59067 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_59067) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _59176 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_59176) > _59176:
                                                mem[_59176 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_59176) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < uint255(stor15.length) * 0.5:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _60470 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + (uint255(stor15.length) * 0.5) + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + (uint255(stor15.length) * 0.5) + 224] = 32
                                        _61110 = mem[_60470]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + (uint255(stor15.length) * 0.5) + 256] = mem[_60470]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61110)] = mem[_60470 + 32 len ceil32(_61110)]
                                        if ceil32(_61110) > _61110:
                                            mem[_61110 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + (uint255(stor15.length) * 0.5) + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61110) + 32], 
                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                        revert with 0, 34
                                    if not bool(stor15.length):
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                        _59177 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_59177)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59177)]
                                        if ceil32(_59177) > _59177:
                                            mem[_59177 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_59177) + 32], 
                                    if bool(stor15.length) != 1:
                                        mem[64] = 0
                                        _59467 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                        if ceil32(_59467) > _59467:
                                            mem[_59467 + 64] = 0
                                        return memory
                                          from mem[64]
                                           len ceil32(_59467) + -mem[64] + 64
                                    mem[0] = 15
                                    idx = 0
                                    t = 0
                                    while idx < stor15.length.field_1:
                                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                        idx = idx + 32
                                        t = t + 1
                                        continue 
                                    _60471 = mem[64]
                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + stor15.length.field_1 + 224
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + stor15.length.field_1 + 224] = 32
                                    _61111 = mem[_60471]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + stor15.length.field_1 + 256] = mem[_60471]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + stor15.length.field_1 + 288 len ceil32(_61111)] = mem[_60471 + 32 len ceil32(_61111)]
                                    if ceil32(_61111) > _61111:
                                        mem[_61111 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + stor15.length.field_1 + 288] = 0
                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52998 + stor15.length.field_1 + 256 len ceil32(_61111) + 32], 
                                mem[stor14.length.field_1 + ceil32(stor14.length.field_1) + ceil32(s) + 224] = 0
                                _52999 = mem[ceil32(stor14.length.field_1) + 160]
                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224 len ceil32(mem[ceil32(stor14.length.field_1) + 160])] = mem[ceil32(stor14.length.field_1) + 192 len ceil32(mem[ceil32(stor14.length.field_1) + 160])]
                                var59001 = ceil32(mem[ceil32(stor14.length.field_1) + 160])
                                if ceil32(mem[ceil32(stor14.length.field_1) + 160]) <= mem[ceil32(stor14.length.field_1) + 160]:
                                    if bool(stor15.length):
                                        if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                            revert with 0, 34
                                        if not bool(stor15.length):
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                            mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                            _59070 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_59070)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59070)]
                                            if ceil32(_59070) > _59070:
                                                mem[_59070 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                            return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_59070) + 32], 
                                        if bool(stor15.length) != 1:
                                            mem[64] = 0
                                            _59179 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                            mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                            if ceil32(_59179) > _59179:
                                                mem[_59179 + 64] = 0
                                            return memory
                                              from mem[64]
                                               len ceil32(_59179) + -mem[64] + 64
                                        mem[0] = 15
                                        idx = 0
                                        t = 0
                                        while idx < uint255(stor15.length) * 0.5:
                                            mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                            idx = idx + 32
                                            t = t + 1
                                            continue 
                                        _60472 = mem[64]
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + (uint255(stor15.length) * 0.5) + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + (uint255(stor15.length) * 0.5) + 224] = 32
                                        _61112 = mem[_60472]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + (uint255(stor15.length) * 0.5) + 256] = mem[_60472]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61112)] = mem[_60472 + 32 len ceil32(_61112)]
                                        if ceil32(_61112) > _61112:
                                            mem[_61112 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + (uint255(stor15.length) * 0.5) + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61112) + 32], 
                                    if bool(stor15.length) == stor15.length.field_1 < 32:
                                        revert with 0, 34
                                    if not bool(stor15.length):
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                        _59180 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_59180)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59180)]
                                        if ceil32(_59180) > _59180:
                                            mem[_59180 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_59180) + 32], 
                                    if bool(stor15.length) != 1:
                                        mem[64] = 0
                                        _59469 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                        if ceil32(_59469) > _59469:
                                            mem[_59469 + 64] = 0
                                        return memory
                                          from mem[64]
                                           len ceil32(_59469) + -mem[64] + 64
                                    mem[0] = 15
                                    idx = 0
                                    t = 0
                                    while idx < stor15.length.field_1:
                                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                        idx = idx + 32
                                        t = t + 1
                                        continue 
                                    _60473 = mem[64]
                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + stor15.length.field_1 + 224
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + stor15.length.field_1 + 224] = 32
                                    _61113 = mem[_60473]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + stor15.length.field_1 + 256] = mem[_60473]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + stor15.length.field_1 + 288 len ceil32(_61113)] = mem[_60473 + 32 len ceil32(_61113)]
                                    if ceil32(_61113) > _61113:
                                        mem[_61113 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + stor15.length.field_1 + 288] = 0
                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + stor15.length.field_1 + 256 len ceil32(_61113) + 32], 
                                mem[mem[ceil32(stor14.length.field_1) + 160] + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + 224] = 0
                                if bool(stor15.length):
                                    if bool(stor15.length) == uint255(stor15.length) * 0.5 < 32:
                                        revert with 0, 34
                                    if not bool(stor15.length):
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                        mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 224] = 32
                                        _59073 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288 len ceil32(_59073)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59073)]
                                        if ceil32(_59073) > _59073:
                                            mem[_59073 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 288] = 0
                                        return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + (uint255(stor15.length) * 0.5) + 256 len ceil32(_59073) + 32], 
                                    if bool(stor15.length) != 1:
                                        mem[64] = 0
                                        _59182 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                        mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                        if ceil32(_59182) > _59182:
                                            mem[_59182 + 64] = 0
                                        return memory
                                          from mem[64]
                                           len ceil32(_59182) + -mem[64] + 64
                                    mem[0] = 15
                                    idx = 0
                                    t = 0
                                    while idx < uint255(stor15.length) * 0.5:
                                        mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                        idx = idx + 32
                                        t = t + 1
                                        continue 
                                    _60474 = mem[64]
                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + (uint255(stor15.length) * 0.5) + 224
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + (uint255(stor15.length) * 0.5) + 224] = 32
                                    _61114 = mem[_60474]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + (uint255(stor15.length) * 0.5) + 256] = mem[_60474]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + (uint255(stor15.length) * 0.5) + 288 len ceil32(_61114)] = mem[_60474 + 32 len ceil32(_61114)]
                                    if ceil32(_61114) > _61114:
                                        mem[_61114 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + (uint255(stor15.length) * 0.5) + 288] = 0
                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + (uint255(stor15.length) * 0.5) + 256 len ceil32(_61114) + 32], 
                                if bool(stor15.length) == stor15.length.field_1 < 32:
                                    revert with 0, 34
                                if not bool(stor15.length):
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = Mask(248, 8, stor15.length)
                                    mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 224] = 32
                                    _59183 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                    mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288 len ceil32(_59183)] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(_59183)]
                                    if ceil32(_59183) > _59183:
                                        mem[_59183 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 288] = 0
                                    return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + stor15.length.field_1 + 256 len ceil32(_59183) + 32], 
                                if bool(stor15.length) != 1:
                                    mem[64] = 0
                                    _59471 = mem[ceil32(stor14.length.field_1) + ceil32(s) + 192]
                                    mem[64 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])] = mem[ceil32(stor14.length.field_1) + ceil32(s) + 224 len ceil32(mem[ceil32(stor14.length.field_1) + ceil32(s) + 192])]
                                    if ceil32(_59471) > _59471:
                                        mem[_59471 + 64] = 0
                                    return memory
                                      from mem[64]
                                       len ceil32(_59471) + -mem[64] + 64
                                mem[0] = 15
                                idx = 0
                                t = 0
                                while idx < stor15.length.field_1:
                                    mem[idx + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + mem[ceil32(stor14.length.field_1) + 160] + 224] = stor15[t].field_0
                                    idx = idx + 32
                                    t = t + 1
                                    continue 
                                _60475 = mem[64]
                                mem[64] = ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + stor15.length.field_1 + 224
                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + stor15.length.field_1 + 224] = 32
                                _61115 = mem[_60475]
                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + stor15.length.field_1 + 256] = mem[_60475]
                                mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + stor15.length.field_1 + 288 len ceil32(_61115)] = mem[_60475 + 32 len ceil32(_61115)]
                                if ceil32(_61115) > _61115:
                                    mem[_61115 + ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + stor15.length.field_1 + 288] = 0
                                return 32, mem[ceil32(stor14.length.field_1) + ceil32(s) + stor14.length.field_1 + _52999 + stor15.length.field_1 + 256 len ceil32(_61115) + 32], 
                            require not msg.value
                            require calldata.size - 4 >= 128
                            require cd[4] == address(cd[4])
                            require cd[36] == address(cd[36])
                            require cd[100] <= test266151307()
                            require calldata.size > cd[100] + 35
                            if ('cd', 100).length > test266151307():
                                revert with 0, 65
                            if ceil32(ceil32(('cd', 100).length)) + 129 < 128 or ceil32(ceil32(('cd', 100).length)) + 129 > test266151307():
                                revert with 0, 65
                            mem[128] = ('cd', 100).length
                            require cd[100] + ('cd', 100).length + 36 <= calldata.size
                            mem[160 len ('cd', 100).length] = call.data[cd[100] + 36 len ('cd', 100).length]
                            if not ownerOf[cd[68]]:
                                revert with 0, 'ERC721: operator query for nonexistent token'
                            if not ownerOf[cd[68]]:
                                revert with 0, 'ERC721: owner query for nonexistent token'
                            if ownerOf[cd[68]] != msg.sender:
                                if not ownerOf[cd[68]]:
                                    revert with 0, 'ERC721: approved query for nonexistent token'
                                if approved[cd[68]] != msg.sender:
                                    if not stor5[stor2[cd[68]]][address(msg.sender)]:
                                        revert with 0, 'ERC721: transfer caller is not owner nor approved'
                            if not ownerOf[cd[68]]:
                                revert with 0, 'ERC721: owner query for nonexistent token'
                            if ownerOf[cd[68]] != address(cd[4]):
                                revert with 0, 'ERC721: transfer from incorrect owner'
                            if not address(cd[36]):
                                revert with 0, 'ERC721: transfer to the zero address'
                            idx = 0
                            while idx < sub_84917f4a.length:
                                mem[0] = 28
                                if sub_84917f4a[idx].field_0 == cd[68]:
                                    revert with 0, 'ERC721 Marketplace: Unable to transfer a listed token'
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            if not address(cd[4]):
                                stor9[cd[68]] = tokenByIndex.length
                                tokenByIndex.length++
                                tokenByIndex[tokenByIndex.length] = cd[68]
                            else:
                                if address(cd[4]) != address(cd[36]):
                                    if not address(cd[4]):
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(cd[4])] < 1:
                                        revert with 0, 17
                                    if balanceOf[address(cd[4])] - 1 != stor7[cd[68]]:
                                        tokenOfOwnerByIndex[address(cd[4])][stor7[cd[68]]] = tokenOfOwnerByIndex[address(cd[4])][stor3[address(cd[4])] - 1]
                                        stor7[stor6[address(cd[4])][stor3[address(cd[4])] - 1]] = stor7[cd[68]]
                                    stor7[cd[68]] = 0
                                    tokenOfOwnerByIndex[address(cd[4])][stor3[address(cd[4])] - 1] = 0
                            if address(cd[36]):
                                if address(cd[36]) != address(cd[4]):
                                    if not address(cd[36]):
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    tokenOfOwnerByIndex[address(cd[36])][stor3[address(cd[36])]] = cd[68]
                                    stor7[cd[68]] = balanceOf[address(cd[36])]
                            else:
                                if tokenByIndex.length < 1:
                                    revert with 0, 17
                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                    revert with 0, 50
                                if stor9[cd[68]] >= tokenByIndex.length:
                                    revert with 0, 50
                                tokenByIndex[stor9[cd[68]]] = tokenByIndex[tokenByIndex.length]
                                stor9[stor8[stor8.length]] = stor9[cd[68]]
                                stor9[cd[68]] = 0
                                if not tokenByIndex.length:
                                    revert with 0, 49
                                tokenByIndex[tokenByIndex.length] = 0
                                tokenByIndex.length--
                            approved[cd[68]] = 0
                            if not ownerOf[cd[68]]:
                                revert with 0, 'ERC721: owner query for nonexistent token'
                            emit Approval(ownerOf[cd[68]], 0, cd[68]);
                            if balanceOf[address(cd[4])] < 1:
                                revert with 0, 17
                            balanceOf[address(cd[4])]--
                            if balanceOf[address(cd[36])] > -2:
                                revert with 0, 17
                            balanceOf[address(cd[36])]++
                            ownerOf[cd[68]] = address(cd[36])
                            emit Transfer(address(cd[4]), address(cd[36]), cd[68]);
                            if ext_code.size(address(cd[36])):
                                mem[ceil32(ceil32(('cd', 100).length)) + 133] = msg.sender
                                mem[ceil32(ceil32(('cd', 100).length)) + 165] = address(cd[4])
                                mem[ceil32(ceil32(('cd', 100).length)) + 197] = cd[68]
                                mem[ceil32(ceil32(('cd', 100).length)) + 229] = 128
                                mem[ceil32(ceil32(('cd', 100).length)) + 261] = ('cd', 100).length
                                mem[ceil32(ceil32(('cd', 100).length)) + 293 len ceil32(('cd', 100).length)] = call.data[cd[100] + 36 len ('cd', 100).length], Mask(8 * ceil32(('cd', 100).length) - ('cd', 100).length, -(8 * ceil32(('cd', 100).length) + -ceil32(ceil32(('cd', 100).length)) + 27) + 256, msg.sender) >> -(8 * ceil32(('cd', 100).length) + -ceil32(ceil32(('cd', 100).length)) + 27) + 256
                                if ceil32(('cd', 100).length) > ('cd', 100).length:
                                    mem[('cd', 100).length + ceil32(ceil32(('cd', 100).length)) + 293] = 0
                                call address(cd[36]).onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, address(cd[4]), cd[68], Array(len=('cd', 100).length, data=call.data[cd[100] + 36 len ('cd', 100).length])
                                mem[ceil32(ceil32(('cd', 100).length)) + 129] = ext_call.return_data[0]
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not mem[96]:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with memory
                                          from 128
                                           len mem[96]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
}



}
