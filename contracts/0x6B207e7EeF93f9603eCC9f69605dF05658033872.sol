contract main {




// =====================  Runtime code  =====================


#
#  - claim(uint256 arg1)
#  - claim(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4)
#  - getPartnerProject(uint256 arg1)
#
const GAME_ADMIN = sha3(336492626609784167942478)

const DEFAULT_ADMIN_ROLE = 0


uint8 stor0;
uint8 stor0; offset 8
uint256 stor0; offset 8
array of struct roleAdmin;
array of uint256 stor99;
uint256 multiplierUnit;
array of struct stor102;
mapping of uint256 projectClaimedAmount;
uint256 stor105;
uint256 stor105;
uint256 stor105;
uint256 stor105;
uint256 stor105;
uint256 stor105;
uint256 stor105;
uint256 stor105;
uint256 skillPrice;
address gameAddress;
mapping of uint256 projectDistributionTime;
mapping of uint256 stor108;
uint256 defaultSlippage;
array of struct stor336492626609784167942478;
array of uint256 stor31803416089537561239136862248731574845551118351359000136225178771603843531604;
array of address stor31803416089537561239136862248731574845551118351359000136225178771603843531607;
array of uint256 stor31803416089537561239136862248731574845551118351359000136225178771603843531608;
array of uint256 stor31803416089537561239136862248731574845551118351359000136225178771603843531609;
array of uint8 stor31803416089537561239136862248731574845551118351359000136225178771603843531610;

function getProjectClaimedAmount(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    return projectClaimedAmount[arg1]
}

function getRoleAdmin(bytes32 arg1) payable {
    require calldata.size - 4 >= 32
    return roleAdmin[arg1].field_512
}

function defaultSlippage() payable {
    return defaultSlippage
}

function getProjectDistributionTime(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    return projectDistributionTime[arg1]
}

function getRoleMember(bytes32 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if arg2 >= roleAdmin[arg1].field_0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    34,
                    0xfe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64,
                    mem[198 len 30]
    return address(roleAdmin[arg1][arg2].field_0)
}

function hasRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    return bool(roleAdmin[arg1][1][address(arg2)].field_0)
}

function skillPrice() payable {
    return uint256(skillPrice)
}

function game() payable {
    return gameAddress
}

function getRoleMemberCount(bytes32 arg1) payable {
    require calldata.size - 4 >= 32
    return roleAdmin[arg1].field_0
}

function multiplierUnit() payable {
    return multiplierUnit
}

function _fallback() payable {
    revert
}

function setMultiplierUnit(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not stor51[('name', 'stor4741', 336492626609784167942478)][1][address(msg.sender)].field_0:
        revert with 0, 'Not game admin'
    multiplierUnit = arg1
}

function setDefaultSlippage(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not stor51[('name', 'stor4741', 336492626609784167942478)][1][address(msg.sender)].field_0:
        revert with 0, 'Not game admin'
    defaultSlippage = arg1
}

function setSkillPrice(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not stor51[('name', 'stor4741', 336492626609784167942478)][1][address(msg.sender)].field_0:
        revert with 0, 'Not game admin'
    require arg1 > 0
    uint256(skillPrice) = arg1
}

function setDistributionTime(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if not stor51[('name', 'stor4741', 336492626609784167942478)][1][address(msg.sender)].field_0:
        revert with 0, 'Not game admin'
    projectDistributionTime[arg1] = arg2
}

function getAmountOfActiveProjects() payable {
    idx = 0
    s = 0
    while idx < stor102.length:
        mem[0] = 102
        if not uint8(stor102[idx].field_1536):
            idx = idx + 1
            s = s
            continue 
        idx = idx + 1
        s = s + 1
        continue 
    return s
}

function setIsActive(uint256 arg1, bool arg2) payable {
    require calldata.size - 4 >= 64
    if not stor51[('name', 'stor4741', 336492626609784167942478)][1][address(msg.sender)].field_0:
        revert with 0, 'Not game admin'
    require arg1 < stor102.length
    uint8(stor102[arg1].field_1536) = uint8(arg2)
}

function setPartnerTokenPrice(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if not stor51[('name', 'stor4741', 336492626609784167942478)][1][address(msg.sender)].field_0:
        revert with 0, 'Not game admin'
    require arg2 > 0
    require arg1 < stor102.length
    stor102[arg1].field_1280 = arg2
}

function getRemainingPartnerTokenSupply(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < stor102.length
    require ext_code.size(address(stor102[arg1].field_768))
    staticcall address(stor102[arg1].field_768).0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function grantRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    if not roleAdmin[roleAdmin[arg1].field_512][1][address(msg.sender)].field_0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    47,
                    0x73416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e,
                    mem[211 len 17]
    if not roleAdmin[arg1][1][address(arg2)].field_0:
        roleAdmin[arg1].field_0++
        address(roleAdmin[arg1][roleAdmin[arg1].field_0].field_0) = arg2
        Mask(96, 0, roleAdmin[arg1][roleAdmin[arg1].field_0].field_160) = 0
        roleAdmin[arg1][1][address(arg2)].field_0 = roleAdmin[arg1].field_0
        emit RoleGranted(arg1, arg2, msg.sender);
}

function getActivePartnerProjectsIds() payable {
    idx = 0
    s = 0
    while idx < stor102.length:
        mem[0] = 102
        if not uint8(stor102[idx].field_1536):
            idx = idx + 1
            s = s
            continue 
        idx = idx + 1
        s = s + 1
        continue 
    require s <= test266151307()
    if s:
        mem[128 len 32 * s] = call.data[calldata.size len 32 * s]
    idx = 0
    t = 0
    while idx < stor102.length:
        mem[0] = 102
        if not uint8(stor102[idx].field_1536):
            idx = idx + 1
            t = t
            continue 
        require t < s
        mem[(32 * t) + 128] = idx
        idx = idx + 1
        t = t + 1
        continue 
    mem[(32 * s) + 192 len floor32(s)] = mem[128 len floor32(s)]
    return Array(len=s, data=mem[128 len floor32(s)], mem[(32 * s) + floor32(s) + 192 len (32 * s) - floor32(s)])
}

function renounceRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    if arg2 != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    47,
                    0x64416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c,
                    mem[211 len 17]
    if roleAdmin[arg1][1][address(arg2)].field_0:
        require roleAdmin[arg1].field_0 - 1 < roleAdmin[arg1].field_0
        require roleAdmin[arg1][1][address(arg2)].field_0 - 1 < roleAdmin[arg1].field_0
        roleAdmin[arg1][roleAdmin[arg1][1][address(arg2)].field_0].field_0 = roleAdmin[arg1][roleAdmin[arg1].field_0].field_0
        roleAdmin[arg1][1][roleAdmin[arg1][roleAdmin[arg1].field_0].field_0].field_0 = roleAdmin[arg1][1][address(arg2)].field_0
        require roleAdmin[arg1].field_0
        roleAdmin[arg1][roleAdmin[arg1].field_0].field_0 = 0
        roleAdmin[arg1].field_0--
        roleAdmin[arg1][1][address(arg2)].field_0 = 0
        emit RoleRevoked(arg1, arg2, msg.sender);
}

function revokeRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    if not roleAdmin[roleAdmin[arg1].field_512][1][address(msg.sender)].field_0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    48,
                    0x6c416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b,
                    mem[212 len 16]
    if roleAdmin[arg1][1][address(arg2)].field_0:
        require roleAdmin[arg1].field_0 - 1 < roleAdmin[arg1].field_0
        require roleAdmin[arg1][1][address(arg2)].field_0 - 1 < roleAdmin[arg1].field_0
        roleAdmin[arg1][roleAdmin[arg1][1][address(arg2)].field_0].field_0 = roleAdmin[arg1][roleAdmin[arg1].field_0].field_0
        roleAdmin[arg1][1][roleAdmin[arg1][roleAdmin[arg1].field_0].field_0].field_0 = roleAdmin[arg1][1][address(arg2)].field_0
        require roleAdmin[arg1].field_0
        roleAdmin[arg1][roleAdmin[arg1].field_0].field_0 = 0
        roleAdmin[arg1].field_0--
        roleAdmin[arg1][1][address(arg2)].field_0 = 0
        emit RoleRevoked(arg1, arg2, msg.sender);
}

function getProjectMultiplier(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if block.timestamp >= stor108[arg1]:
        if stor108[arg1] > block.timestamp:
            revert with 0, 'SafeMath: subtraction overflow'
        if multiplierUnit <= 0:
            revert with 0, 'SafeMath: division by zero'
        require multiplierUnit
        if not 10^18 / multiplierUnit:
            return 10^18
        if (block.timestamp * 10^18 / multiplierUnit) - (stor108[arg1] * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != block.timestamp - stor108[arg1]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        return ((block.timestamp * 10^18 / multiplierUnit) + (-1 * stor108[arg1] * 10^18 / multiplierUnit) + 10^18)
    if block.timestamp > stor108[arg1]:
        revert with 0, 'SafeMath: subtraction overflow'
    if multiplierUnit <= 0:
        revert with 0, 'SafeMath: division by zero'
    require multiplierUnit
    if not 10^18 / multiplierUnit:
        return 10^18
    if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != stor108[arg1] - block.timestamp:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) <= 10^18:
        return ((-1 * stor108[arg1] * 10^18 / multiplierUnit) + (block.timestamp * 10^18 / multiplierUnit) + 10^18)
    else:
        return 0
}

function addPartnerProject(string arg1, string arg2, address arg3, uint256 arg4, uint256 arg5, uint256 arg6, bool arg7) payable {
    require calldata.size - 4 >= 224
    require arg1 <= 4294967296
    require arg1 + 36 <= calldata.size
    require arg1.length <= 4294967296 and arg1 + arg1.length + 36 <= calldata.size
    require arg2 <= 4294967296
    require arg2 + 36 <= calldata.size
    require arg2.length <= 4294967296 and arg2 + arg2.length + 36 <= calldata.size
    mem[ceil32(arg1.length) + 128] = arg2.length
    mem[ceil32(arg1.length) + 160 len arg2.length] = arg2[all]
    mem[ceil32(arg1.length) + arg2.length + 160] = 0
    if not roleAdmin[Mask(80, -(8 * ceil32(arg2.length) + -arg2.length + 10) + 256, 0) >> 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb0 + (8 * -ceil32(arg2.length)) + (8 * arg2.length) + 256][1][address(msg.sender)].field_0:
        revert with 0, 'Not game admin'
    stor108[stor102.length] = block.timestamp
    projectClaimedAmount[stor102.length] = 0
    mem[ceil32(arg1.length) + ceil32(arg2.length) + 160] = stor102.length
    mem[ceil32(arg1.length) + ceil32(arg2.length) + 192] = 96
    mem[ceil32(arg1.length) + ceil32(arg2.length) + 224] = ceil32(arg1.length) + 128
    mem[ceil32(arg1.length) + ceil32(arg2.length) + 256] = arg3
    mem[ceil32(arg1.length) + ceil32(arg2.length) + 288] = arg4
    mem[ceil32(arg1.length) + ceil32(arg2.length) + 320] = arg5
    mem[ceil32(arg1.length) + ceil32(arg2.length) + 352] = arg7
    stor102.length++
    stor4650[stor102.length] = stor102.length
    stor[sha3((7 * stor102.length) + 0x46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94355)][] = Array(len=arg1.length, data=arg1[all])
    stor[sha3((7 * stor102.length) + 0x46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94356)][] = Array(len=Mask(8 * -ceil32(arg1.length) + arg1.length + 32, 0, 0), mem[arg1.length + 160 len -arg1.length + ceil32(arg1.length)], data=mem[ceil32(arg1.length) + 160 len Mask(8 * -ceil32(arg1.length) + arg1.length + 32, 0, 0), mem[arg1.length + 160 len -arg1.length + ceil32(arg1.length)]])
    stor4650[stor102.length] = arg3
    stor4650[stor102.length] = arg4
    stor4650[stor102.length] = arg5
    stor4650[stor102.length] = uint8(arg7)
    projectDistributionTime[stor102.length] = arg6
}

function initialize(address arg1) payable {
    require calldata.size - 4 >= 32
    if not uint8(stor0.field_8):
        if ext_code.size(this.address):
            if uint8(stor0.field_0):
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            46,
                            0x65496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65,
                            mem[210 len 18]
        if not uint8(stor0.field_8):
            uint8(stor0.field_0) = 1
            uint8(stor0.field_8) = 1
            Mask(248, 0, stor0.field_8) = 0
            if ext_code.size(this.address):
                if uint8(stor0.field_0):
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                46,
                                0x65496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65,
                                mem[210 len 18]
            if not uint8(stor0.field_8):
                uint8(stor0.field_0) = 1
                uint8(stor0.field_8) = 1
                Mask(248, 0, stor0.field_8) = 0
                uint8(stor0.field_8) = 0
    if not roleAdmin[0][1][address(msg.sender)].field_0:
        roleAdmin[0].field_0++
        address(roleAdmin[0][roleAdmin[0].field_0].field_0) = msg.sender
        Mask(96, 0, roleAdmin[0][roleAdmin[0].field_0].field_160) = 0
        roleAdmin[0][1][address(msg.sender)].field_0 = roleAdmin[0].field_0
        emit RoleGranted(0, msg.sender, msg.sender);
    if not stor51[('name', 'stor4741', 336492626609784167942478)][1][address(msg.sender)].field_0:
        stor51[('name', 'stor4741', 336492626609784167942478)].field_0++
        address(stor51[('name', 'stor4741', 336492626609784167942478)][stor51[('name', 'stor4741', 336492626609784167942478)].field_0].field_0) = msg.sender
        Mask(96, 0, stor51[('name', 'stor4741', 336492626609784167942478)][stor51[('name', 'stor4741', 336492626609784167942478)].field_0].field_160) = 0
        stor51[('name', 'stor4741', 336492626609784167942478)][1][address(msg.sender)].field_0 = stor51[('name', 'stor4741', 336492626609784167942478)].field_0
        emit RoleGranted(sha3(336492626609784167942478), msg.sender, msg.sender);
    gameAddress = arg1
    multiplierUnit = 10000
    if not uint8(stor0.field_8):
        uint8(stor0.field_8) = 0
}

function getSkillToPartnerRatio(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < stor102.length
    require stor102[arg1].field_1280
    if uint256(skillPrice) <= 0xffffffffffffffffffffffffffffffffffffffffffffffff:
        require stor102[arg1].field_1280
        require Mask(192, 0, stor105) / stor102[arg1].field_1280 <= test266151307()
        require uint128(Mask(192, 0, stor105) / stor102[arg1].field_1280) <= 0x7fffffffffffffffffffffffffffffff
        return ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))
    if uint64(uint256(skillPrice)) >> 192 >= 4294967296:
        require (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1
        require Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 <= test266151307()
        if Mask(192, 0, stor105) >= Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280):
            if Mask(192, 0, stor105) - (Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                require uint64(uint256(skillPrice)) >> 192 == uint128(Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
            else:
                require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
        else:
            if Mask(192, 0, stor105) - (Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
            else:
                require (uint64(uint256(skillPrice)) >> 192) - 2 == uint128(Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
        require stor102[arg1].field_1280
        require (Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1) + (Mask(192, 0, stor105) - (Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280) <= test266151307()
        require uint128((Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1) + (Mask(192, 0, stor105) - (Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280)) <= 0x7fffffffffffffffffffffffffffffff
        return ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))
    if uint64(uint256(skillPrice)) >> 192 >= 65536:
        require (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1
        require Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 <= test266151307()
        if Mask(192, 0, stor105) >= Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280):
            if Mask(192, 0, stor105) - (Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                require uint64(uint256(skillPrice)) >> 192 == uint128(Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
            else:
                require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
        else:
            if Mask(192, 0, stor105) - (Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
            else:
                require (uint64(uint256(skillPrice)) >> 192) - 2 == uint128(Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
        require stor102[arg1].field_1280
        require (Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1) + (Mask(192, 0, stor105) - (Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280) <= test266151307()
        require uint128((Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1) + (Mask(192, 0, stor105) - (Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280)) <= 0x7fffffffffffffffffffffffffffffff
        return ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))
    if uint64(uint256(skillPrice)) >> 192 >= 256:
        require (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1
        require Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 <= test266151307()
        if Mask(192, 0, stor105) >= Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280):
            if Mask(192, 0, stor105) - (Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                require uint64(uint256(skillPrice)) >> 192 == uint128(Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
            else:
                require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
        else:
            if Mask(192, 0, stor105) - (Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
            else:
                require (uint64(uint256(skillPrice)) >> 192) - 2 == uint128(Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
        require stor102[arg1].field_1280
        require (Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1) + (Mask(192, 0, stor105) - (Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280) <= test266151307()
        require uint128((Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1) + (Mask(192, 0, stor105) - (Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280)) <= 0x7fffffffffffffffffffffffffffffff
        return ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))
    if uint64(uint256(skillPrice)) >> 192 >= 16:
        require (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1
        require Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 <= test266151307()
        if Mask(192, 0, stor105) >= Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280):
            if Mask(192, 0, stor105) - (Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                require uint64(uint256(skillPrice)) >> 192 == uint128(Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
            else:
                require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
        else:
            if Mask(192, 0, stor105) - (Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
            else:
                require (uint64(uint256(skillPrice)) >> 192) - 2 == uint128(Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
        require stor102[arg1].field_1280
        require (Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1) + (Mask(192, 0, stor105) - (Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280) <= test266151307()
        require uint128((Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1) + (Mask(192, 0, stor105) - (Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280)) <= 0x7fffffffffffffffffffffffffffffff
        return ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))
    if uint64(uint256(skillPrice)) >> 192 >= 4:
        require (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1
        require Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 <= test266151307()
        if Mask(192, 0, stor105) >= Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280):
            if Mask(192, 0, stor105) - (Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                require uint64(uint256(skillPrice)) >> 192 == uint128(Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
            else:
                require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
        else:
            if Mask(192, 0, stor105) - (Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
            else:
                require (uint64(uint256(skillPrice)) >> 192) - 2 == uint128(Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
        require stor102[arg1].field_1280
        require (Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1) + (Mask(192, 0, stor105) - (Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280) <= test266151307()
        require uint128((Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1) + (Mask(192, 0, stor105) - (Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280)) <= 0x7fffffffffffffffffffffffffffffff
        return ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))
    if uint64(uint256(skillPrice)) >> 192 < 2:
        require (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1
        require Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 <= test266151307()
        if Mask(192, 0, stor105) >= Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280):
            if Mask(192, 0, stor105) - (Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                require uint64(uint256(skillPrice)) >> 192 == uint128(Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
            else:
                require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
        else:
            if Mask(192, 0, stor105) - (Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
            else:
                require (uint64(uint256(skillPrice)) >> 192) - 2 == uint128(Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
        require stor102[arg1].field_1280
        require (Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1) + (Mask(192, 0, stor105) - (Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280) <= test266151307()
        require uint128((Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1) + (Mask(192, 0, stor105) - (Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280)) <= 0x7fffffffffffffffffffffffffffffff
        return ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))
    require (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1
    require Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 <= test266151307()
    if Mask(192, 0, stor105) >= Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280):
        if Mask(192, 0, stor105) - (Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
            require uint64(uint256(skillPrice)) >> 192 == uint128(Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
        else:
            require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
    else:
        if Mask(192, 0, stor105) - (Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
            require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
        else:
            require (uint64(uint256(skillPrice)) >> 192) - 2 == uint128(Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
    require stor102[arg1].field_1280
    require (Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1) + (Mask(192, 0, stor105) - (Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280) <= test266151307()
    require uint128((Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1) + (Mask(192, 0, stor105) - (Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280)) <= 0x7fffffffffffffffffffffffffffffff
    return ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))
}

function getAmountInPartnerToken(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 < stor102.length
    require stor102[arg1].field_1280
    if uint256(skillPrice) <= 0xffffffffffffffffffffffffffffffffffffffffffffffff:
        require stor102[arg1].field_1280
        require Mask(192, 0, stor105) / stor102[arg1].field_1280 <= test266151307()
        require uint128(Mask(192, 0, stor105) / stor102[arg1].field_1280) <= 0x7fffffffffffffffffffffffffffffff
        if not arg2:
            if block.timestamp >= stor108[arg1]:
                if stor108[arg1] > block.timestamp:
                    revert with 0, 'SafeMath: subtraction overflow'
                if multiplierUnit <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require multiplierUnit
                if 10^18 / multiplierUnit:
                    if (block.timestamp * 10^18 / multiplierUnit) - (stor108[arg1] * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != block.timestamp - stor108[arg1]:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
            else:
                if block.timestamp > stor108[arg1]:
                    revert with 0, 'SafeMath: subtraction overflow'
                if multiplierUnit <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require multiplierUnit
                if 10^18 / multiplierUnit:
                    if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != stor108[arg1] - block.timestamp:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
        else:
            require ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) >= 0
            require uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) <= 0xffffffffffffffffffffffffffffffffffffffffffffffff
            require uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64 <= !(Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64)
            if block.timestamp >= stor108[arg1]:
                if stor108[arg1] > block.timestamp:
                    revert with 0, 'SafeMath: subtraction overflow'
                if multiplierUnit <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require multiplierUnit
                if not 10^18 / multiplierUnit:
                    if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64):
                        return 0
                    if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64) != 10^18:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64) / 10^18)
                if (block.timestamp * 10^18 / multiplierUnit) - (stor108[arg1] * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != block.timestamp - stor108[arg1]:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64):
                    return 0
                if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64) != (block.timestamp * 10^18 / multiplierUnit) + (-1 * stor108[arg1] * 10^18 / multiplierUnit) + 10^18:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) / 10^18)
            if block.timestamp > stor108[arg1]:
                revert with 0, 'SafeMath: subtraction overflow'
            if multiplierUnit <= 0:
                revert with 0, 'SafeMath: division by zero'
            require multiplierUnit
            if not 10^18 / multiplierUnit:
                if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64):
                    return 0
                if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64) != 10^18:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64) / 10^18)
            if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != stor108[arg1] - block.timestamp:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) <= 10^18:
                if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64):
                    return 0
                if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64) != (-1 * stor108[arg1] * 10^18 / multiplierUnit) + (block.timestamp * 10^18 / multiplierUnit) + 10^18:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) / 10^18)
            if (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64):
                if 0 / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('div', ('type', 192, ('stor', ('name', 'stor105', 105))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))) * uint128(arg2)) >> 64):
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
    else:
        if uint64(uint256(skillPrice)) >> 192 >= 4294967296:
            require (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1
            require Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 <= test266151307()
            if Mask(192, 0, stor105) >= Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280):
                if Mask(192, 0, stor105) - (Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                    require uint64(uint256(skillPrice)) >> 192 == uint128(Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                else:
                    require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
            else:
                if Mask(192, 0, stor105) - (Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                    require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                else:
                    require (uint64(uint256(skillPrice)) >> 192) - 2 == uint128(Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
            require stor102[arg1].field_1280
            require (Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1) + (Mask(192, 0, stor105) - (Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280) <= test266151307()
            require uint128((Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1) + (Mask(192, 0, stor105) - (Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(225, 0, stor105) / (Mask(223, 0, stor102[arg1].field_1280 - 1) >> 33) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280)) <= 0x7fffffffffffffffffffffffffffffff
            if not arg2:
                if block.timestamp >= stor108[arg1]:
                    if stor108[arg1] > block.timestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if multiplierUnit <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require multiplierUnit
                    if 10^18 / multiplierUnit:
                        if (block.timestamp * 10^18 / multiplierUnit) - (stor108[arg1] * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != block.timestamp - stor108[arg1]:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                else:
                    if block.timestamp > stor108[arg1]:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if multiplierUnit <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require multiplierUnit
                    if 10^18 / multiplierUnit:
                        if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != stor108[arg1] - block.timestamp:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
            else:
                require ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) >= 0
                require uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) <= 0xffffffffffffffffffffffffffffffffffffffffffffffff
                require uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 <= !(Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64)
                if block.timestamp >= stor108[arg1]:
                    if stor108[arg1] > block.timestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if multiplierUnit <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require multiplierUnit
                    if not 10^18 / multiplierUnit:
                        if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                            return 0
                        if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != 10^18:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / 10^18)
                    if (block.timestamp * 10^18 / multiplierUnit) - (stor108[arg1] * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != block.timestamp - stor108[arg1]:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                        return 0
                    if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != (block.timestamp * 10^18 / multiplierUnit) + (-1 * stor108[arg1] * 10^18 / multiplierUnit) + 10^18:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) / 10^18)
                if block.timestamp > stor108[arg1]:
                    revert with 0, 'SafeMath: subtraction overflow'
                if multiplierUnit <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require multiplierUnit
                if not 10^18 / multiplierUnit:
                    if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                        return 0
                    if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != 10^18:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / 10^18)
                if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != stor108[arg1] - block.timestamp:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) <= 10^18:
                    if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                        return 0
                    if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != (-1 * stor108[arg1] * 10^18 / multiplierUnit) + (block.timestamp * 10^18 / multiplierUnit) + 10^18:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) / 10^18)
                if (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                    if 0 / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 225, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -33, -33, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
        else:
            if uint64(uint256(skillPrice)) >> 192 >= 65536:
                require (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1
                require Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 <= test266151307()
                if Mask(192, 0, stor105) >= Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280):
                    if Mask(192, 0, stor105) - (Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                        require uint64(uint256(skillPrice)) >> 192 == uint128(Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                    else:
                        require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                else:
                    if Mask(192, 0, stor105) - (Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                        require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                    else:
                        require (uint64(uint256(skillPrice)) >> 192) - 2 == uint128(Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                require stor102[arg1].field_1280
                require (Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1) + (Mask(192, 0, stor105) - (Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280) <= test266151307()
                require uint128((Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1) + (Mask(192, 0, stor105) - (Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(209, 0, stor105) / (Mask(239, 0, stor102[arg1].field_1280 - 1) >> 17) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280)) <= 0x7fffffffffffffffffffffffffffffff
                if not arg2:
                    if block.timestamp >= stor108[arg1]:
                        if stor108[arg1] > block.timestamp:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if multiplierUnit <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require multiplierUnit
                        if 10^18 / multiplierUnit:
                            if (block.timestamp * 10^18 / multiplierUnit) - (stor108[arg1] * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != block.timestamp - stor108[arg1]:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                    else:
                        if block.timestamp > stor108[arg1]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if multiplierUnit <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require multiplierUnit
                        if 10^18 / multiplierUnit:
                            if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != stor108[arg1] - block.timestamp:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                else:
                    require ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) >= 0
                    require uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) <= 0xffffffffffffffffffffffffffffffffffffffffffffffff
                    require uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 <= !(Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64)
                    if block.timestamp >= stor108[arg1]:
                        if stor108[arg1] > block.timestamp:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if multiplierUnit <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require multiplierUnit
                        if not 10^18 / multiplierUnit:
                            if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                return 0
                            if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / 10^18)
                        if (block.timestamp * 10^18 / multiplierUnit) - (stor108[arg1] * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != block.timestamp - stor108[arg1]:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                            return 0
                        if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != (block.timestamp * 10^18 / multiplierUnit) + (-1 * stor108[arg1] * 10^18 / multiplierUnit) + 10^18:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) / 10^18)
                    if block.timestamp > stor108[arg1]:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if multiplierUnit <= 0:
                        revert with 0, 'SafeMath: division by zero'
                    require multiplierUnit
                    if not 10^18 / multiplierUnit:
                        if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                            return 0
                        if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != 10^18:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / 10^18)
                    if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != stor108[arg1] - block.timestamp:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) <= 10^18:
                        if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                            return 0
                        if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != (-1 * stor108[arg1] * 10^18 / multiplierUnit) + (block.timestamp * 10^18 / multiplierUnit) + 10^18:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) / 10^18)
                    if (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                        if 0 / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 209, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -17, -17, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
            else:
                if uint64(uint256(skillPrice)) >> 192 >= 256:
                    require (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1
                    require Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 <= test266151307()
                    if Mask(192, 0, stor105) >= Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280):
                        if Mask(192, 0, stor105) - (Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                            require uint64(uint256(skillPrice)) >> 192 == uint128(Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                        else:
                            require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                    else:
                        if Mask(192, 0, stor105) - (Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                            require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                        else:
                            require (uint64(uint256(skillPrice)) >> 192) - 2 == uint128(Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                    require stor102[arg1].field_1280
                    require (Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1) + (Mask(192, 0, stor105) - (Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280) <= test266151307()
                    require uint128((Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1) + (Mask(192, 0, stor105) - (Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(201, 0, stor105) / (Mask(247, 0, stor102[arg1].field_1280 - 1) >> 9) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280)) <= 0x7fffffffffffffffffffffffffffffff
                    if not arg2:
                        if block.timestamp >= stor108[arg1]:
                            if stor108[arg1] > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if multiplierUnit <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require multiplierUnit
                            if 10^18 / multiplierUnit:
                                if (block.timestamp * 10^18 / multiplierUnit) - (stor108[arg1] * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != block.timestamp - stor108[arg1]:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                        else:
                            if block.timestamp > stor108[arg1]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if multiplierUnit <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require multiplierUnit
                            if 10^18 / multiplierUnit:
                                if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != stor108[arg1] - block.timestamp:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                    else:
                        require ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) >= 0
                        require uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) <= 0xffffffffffffffffffffffffffffffffffffffffffffffff
                        require uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 <= !(Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64)
                        if block.timestamp >= stor108[arg1]:
                            if stor108[arg1] > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if multiplierUnit <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require multiplierUnit
                            if not 10^18 / multiplierUnit:
                                if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                    return 0
                                if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / 10^18)
                            if (block.timestamp * 10^18 / multiplierUnit) - (stor108[arg1] * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != block.timestamp - stor108[arg1]:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                return 0
                            if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != (block.timestamp * 10^18 / multiplierUnit) + (-1 * stor108[arg1] * 10^18 / multiplierUnit) + 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) / 10^18)
                        if block.timestamp > stor108[arg1]:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if multiplierUnit <= 0:
                            revert with 0, 'SafeMath: division by zero'
                        require multiplierUnit
                        if not 10^18 / multiplierUnit:
                            if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                return 0
                            if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / 10^18)
                        if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != stor108[arg1] - block.timestamp:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) <= 10^18:
                            if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                return 0
                            if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != (-1 * stor108[arg1] * 10^18 / multiplierUnit) + (block.timestamp * 10^18 / multiplierUnit) + 10^18:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) / 10^18)
                        if (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                            if 0 / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 201, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -9, -9, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                else:
                    if uint64(uint256(skillPrice)) >> 192 >= 16:
                        require (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1
                        require Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 <= test266151307()
                        if Mask(192, 0, stor105) >= Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280):
                            if Mask(192, 0, stor105) - (Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                                require uint64(uint256(skillPrice)) >> 192 == uint128(Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                            else:
                                require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                        else:
                            if Mask(192, 0, stor105) - (Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                                require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                            else:
                                require (uint64(uint256(skillPrice)) >> 192) - 2 == uint128(Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                        require stor102[arg1].field_1280
                        require (Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1) + (Mask(192, 0, stor105) - (Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280) <= test266151307()
                        require uint128((Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1) + (Mask(192, 0, stor105) - (Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(197, 0, stor105) / (Mask(251, 0, stor102[arg1].field_1280 - 1) * 0.03125) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280)) <= 0x7fffffffffffffffffffffffffffffff
                        if not arg2:
                            if block.timestamp >= stor108[arg1]:
                                if stor108[arg1] > block.timestamp:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if multiplierUnit <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require multiplierUnit
                                if 10^18 / multiplierUnit:
                                    if (block.timestamp * 10^18 / multiplierUnit) - (stor108[arg1] * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != block.timestamp - stor108[arg1]:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                            else:
                                if block.timestamp > stor108[arg1]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if multiplierUnit <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require multiplierUnit
                                if 10^18 / multiplierUnit:
                                    if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != stor108[arg1] - block.timestamp:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                        else:
                            require ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) >= 0
                            require uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) <= 0xffffffffffffffffffffffffffffffffffffffffffffffff
                            require uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 <= !(Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64)
                            if block.timestamp >= stor108[arg1]:
                                if stor108[arg1] > block.timestamp:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if multiplierUnit <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require multiplierUnit
                                if not 10^18 / multiplierUnit:
                                    if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                        return 0
                                    if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / 10^18)
                                if (block.timestamp * 10^18 / multiplierUnit) - (stor108[arg1] * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != block.timestamp - stor108[arg1]:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                    return 0
                                if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != (block.timestamp * 10^18 / multiplierUnit) + (-1 * stor108[arg1] * 10^18 / multiplierUnit) + 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) / 10^18)
                            if block.timestamp > stor108[arg1]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if multiplierUnit <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require multiplierUnit
                            if not 10^18 / multiplierUnit:
                                if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                    return 0
                                if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / 10^18)
                            if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != stor108[arg1] - block.timestamp:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) <= 10^18:
                                if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                    return 0
                                if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != (-1 * stor108[arg1] * 10^18 / multiplierUnit) + (block.timestamp * 10^18 / multiplierUnit) + 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) / 10^18)
                            if (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                if 0 / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 197, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -5, -5, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                    else:
                        if uint64(uint256(skillPrice)) >> 192 >= 4:
                            require (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1
                            require Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 <= test266151307()
                            if Mask(192, 0, stor105) >= Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280):
                                if Mask(192, 0, stor105) - (Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                                    require uint64(uint256(skillPrice)) >> 192 == uint128(Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                                else:
                                    require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                            else:
                                if Mask(192, 0, stor105) - (Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                                    require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                                else:
                                    require (uint64(uint256(skillPrice)) >> 192) - 2 == uint128(Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                            require stor102[arg1].field_1280
                            require (Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1) + (Mask(192, 0, stor105) - (Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280) <= test266151307()
                            require uint128((Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1) + (Mask(192, 0, stor105) - (Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(195, 0, stor105) / (Mask(253, 0, stor102[arg1].field_1280 - 1) * 0.125) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280)) <= 0x7fffffffffffffffffffffffffffffff
                            if not arg2:
                                if block.timestamp >= stor108[arg1]:
                                    if stor108[arg1] > block.timestamp:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if multiplierUnit <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require multiplierUnit
                                    if 10^18 / multiplierUnit:
                                        if (block.timestamp * 10^18 / multiplierUnit) - (stor108[arg1] * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != block.timestamp - stor108[arg1]:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                else:
                                    if block.timestamp > stor108[arg1]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if multiplierUnit <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require multiplierUnit
                                    if 10^18 / multiplierUnit:
                                        if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != stor108[arg1] - block.timestamp:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                            else:
                                require ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) >= 0
                                require uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) <= 0xffffffffffffffffffffffffffffffffffffffffffffffff
                                require uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 <= !(Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64)
                                if block.timestamp >= stor108[arg1]:
                                    if stor108[arg1] > block.timestamp:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if multiplierUnit <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require multiplierUnit
                                    if not 10^18 / multiplierUnit:
                                        if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                            return 0
                                        if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != 10^18:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / 10^18)
                                    if (block.timestamp * 10^18 / multiplierUnit) - (stor108[arg1] * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != block.timestamp - stor108[arg1]:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                        return 0
                                    if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != (block.timestamp * 10^18 / multiplierUnit) + (-1 * stor108[arg1] * 10^18 / multiplierUnit) + 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) / 10^18)
                                if block.timestamp > stor108[arg1]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if multiplierUnit <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require multiplierUnit
                                if not 10^18 / multiplierUnit:
                                    if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                        return 0
                                    if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / 10^18)
                                if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != stor108[arg1] - block.timestamp:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) <= 10^18:
                                    if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                        return 0
                                    if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != (-1 * stor108[arg1] * 10^18 / multiplierUnit) + (block.timestamp * 10^18 / multiplierUnit) + 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) / 10^18)
                                if (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                    if 0 / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 195, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -3, -3, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                        else:
                            if uint64(uint256(skillPrice)) >> 192 < 2:
                                require (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1
                                require Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 <= test266151307()
                                if Mask(192, 0, stor105) >= Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280):
                                    if Mask(192, 0, stor105) - (Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                                        require uint64(uint256(skillPrice)) >> 192 == uint128(Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                                    else:
                                        require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                                else:
                                    if Mask(192, 0, stor105) - (Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                                        require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                                    else:
                                        require (uint64(uint256(skillPrice)) >> 192) - 2 == uint128(Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                                require stor102[arg1].field_1280
                                require (Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1) + (Mask(192, 0, stor105) - (Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280) <= test266151307()
                                require uint128((Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1) + (Mask(192, 0, stor105) - (Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(193, 0, stor105) / (uint255(stor102[arg1].field_1280 - 1) * 0.5) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280)) <= 0x7fffffffffffffffffffffffffffffff
                                if not arg2:
                                    if block.timestamp >= stor108[arg1]:
                                        if stor108[arg1] > block.timestamp:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if multiplierUnit <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require multiplierUnit
                                        if 10^18 / multiplierUnit:
                                            if (block.timestamp * 10^18 / multiplierUnit) - (stor108[arg1] * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != block.timestamp - stor108[arg1]:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                    else:
                                        if block.timestamp > stor108[arg1]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if multiplierUnit <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require multiplierUnit
                                        if 10^18 / multiplierUnit:
                                            if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != stor108[arg1] - block.timestamp:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                else:
                                    require ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) >= 0
                                    require uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) <= 0xffffffffffffffffffffffffffffffffffffffffffffffff
                                    require uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 <= !(Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64)
                                    if block.timestamp >= stor108[arg1]:
                                        if stor108[arg1] > block.timestamp:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if multiplierUnit <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require multiplierUnit
                                        if not 10^18 / multiplierUnit:
                                            if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                                return 0
                                            if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != 10^18:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / 10^18)
                                        if (block.timestamp * 10^18 / multiplierUnit) - (stor108[arg1] * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != block.timestamp - stor108[arg1]:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                            return 0
                                        if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != (block.timestamp * 10^18 / multiplierUnit) + (-1 * stor108[arg1] * 10^18 / multiplierUnit) + 10^18:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) / 10^18)
                                    if block.timestamp > stor108[arg1]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if multiplierUnit <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require multiplierUnit
                                    if not 10^18 / multiplierUnit:
                                        if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                            return 0
                                        if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != 10^18:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / 10^18)
                                    if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != stor108[arg1] - block.timestamp:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) <= 10^18:
                                        if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                            return 0
                                        if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != (-1 * stor108[arg1] * 10^18 / multiplierUnit) + (block.timestamp * 10^18 / multiplierUnit) + 10^18:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) / 10^18)
                                    if (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                        if 0 / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 193, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -1, -1, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                            else:
                                require (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1
                                require Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 <= test266151307()
                                if Mask(192, 0, stor105) >= Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280):
                                    if Mask(192, 0, stor105) - (Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                                        require uint64(uint256(skillPrice)) >> 192 == uint128(Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                                    else:
                                        require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                                else:
                                    if Mask(192, 0, stor105) - (Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280)) >= Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128:
                                        require (uint64(uint256(skillPrice)) >> 192) - 1 == uint128(Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                                    else:
                                        require (uint64(uint256(skillPrice)) >> 192) - 2 == uint128(Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280) >> 128) >> 128
                                require stor102[arg1].field_1280
                                require (Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1) + (Mask(192, 0, stor105) - (Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280) <= test266151307()
                                require uint128((Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1) + (Mask(192, 0, stor105) - (Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280)) - (Mask(194, 0, stor105) / (Mask(254, 0, stor102[arg1].field_1280 - 1) * 0.25) + 1 * uint128(stor102[arg1].field_1280) >> 128 << 128) / stor102[arg1].field_1280)) <= 0x7fffffffffffffffffffffffffffffff
                                if not arg2:
                                    if block.timestamp >= stor108[arg1]:
                                        if stor108[arg1] > block.timestamp:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if multiplierUnit <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require multiplierUnit
                                        if 10^18 / multiplierUnit:
                                            if (block.timestamp * 10^18 / multiplierUnit) - (stor108[arg1] * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != block.timestamp - stor108[arg1]:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                    else:
                                        if block.timestamp > stor108[arg1]:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if multiplierUnit <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require multiplierUnit
                                        if 10^18 / multiplierUnit:
                                            if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != stor108[arg1] - block.timestamp:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                else:
                                    require ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) >= 0
                                    require uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) <= 0xffffffffffffffffffffffffffffffffffffffffffffffff
                                    require uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 <= !(Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64)
                                    if block.timestamp >= stor108[arg1]:
                                        if stor108[arg1] > block.timestamp:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if multiplierUnit <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require multiplierUnit
                                        if not 10^18 / multiplierUnit:
                                            if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                                return 0
                                            if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != 10^18:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / 10^18)
                                        if (block.timestamp * 10^18 / multiplierUnit) - (stor108[arg1] * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != block.timestamp - stor108[arg1]:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                            return 0
                                        if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != (block.timestamp * 10^18 / multiplierUnit) + (-1 * stor108[arg1] * 10^18 / multiplierUnit) + 10^18:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) / 10^18)
                                    if block.timestamp > stor108[arg1]:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if multiplierUnit <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require multiplierUnit
                                    if not 10^18 / multiplierUnit:
                                        if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                            return 0
                                        if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != 10^18:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) / 10^18)
                                    if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) / 10^18 / multiplierUnit != stor108[arg1] - block.timestamp:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if (stor108[arg1] * 10^18 / multiplierUnit) - (block.timestamp * 10^18 / multiplierUnit) <= 10^18:
                                        if not (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                            return 0
                                        if (10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) != (-1 * stor108[arg1] * 10^18 / multiplierUnit) + (block.timestamp * 10^18 / multiplierUnit) + 10^18:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        return ((10^18 * uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (10^18 * Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64) - (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * stor108[arg1] * 10^18 / multiplierUnit) - (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * stor108[arg1] * 10^18 / multiplierUnit) + (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64 * block.timestamp * 10^18 / multiplierUnit) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64 * block.timestamp * 10^18 / multiplierUnit) / 10^18)
                                    if (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                        if 0 / (uint128(arg2) >> 128 * ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) << 64) + (Mask(192, 0, ('signextend', 15, ('signextend', 15, ('add', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('div', ('add', ('type', 192, ('stor', ('name', 'stor105', 105))), ('mul', -1, ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('type', 128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))), ('mul', -1, ('mask_shl', 256, 0, 128, ('mul', ('div', ('type', 194, ('stor', ('name', 'stor105', 105))), ('add', 1, ('mask_shl', 256, -2, -2, ('add', -1, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))), ('mask_shl', 256, -128, -128, ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102))))))))), ('field', 1280, ('stor', ('array', ('mul', 7, ('param', 'arg1')), ('name', 'stor102', 102)))))))) * uint128(arg2)) >> 64):
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x64536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
    return 0
}



}
