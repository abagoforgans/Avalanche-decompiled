contract main {




// =====================  Runtime code  =====================


#
#  - compoundReward(uint256 arg1)
#  - burn(uint256 arg1)
#  - cashoutReward(uint256 arg1)
#  - compoundAll()
#  - sub_f3c391d1(?)
#
uint8 stor0;
uint8 stor0; offset 8
uint16 stor0;
array of struct stor1;
array of uint256 stor2;
array of uint256 stor3;
array of uint256 stor4;
array of uint256 stor5;
array of uint256 stor6;
array of struct stor7;
array of struct stor101;
array of struct stor102;
mapping of address ownerOf;
mapping of uint256 balanceOf;
mapping of address approved;
mapping of uint8 stor106;
mapping of uint256 tokenOfOwnerByIndex;
mapping of uint256 stor152;
array of uint256 tokenByIndex;
mapping of uint256 stor154;
mapping of struct stor201;
uint8 paused;
address owner;
uint256 stor401;
address universeImplementationAddress;
address liquidityPoolManagerImplementationAddress;
uint256 stor551;
mapping of struct stor552;
mapping of struct stor553;
array of uint256 stor554;
uint256 rewardPerDay;
uint256 creationMinPrice;
uint256 compoundDelay;
uint256 processingFee;
array of uint16 tierSlope;
uint256 stor561;
uint256 sub_dfe59ed4;
uint256 sub_d25e3369;
uint256 sub_d3420136;
uint256 sub_a25ce986;
uint256 sub_6317d564;
uint256 sub_00f46c58;
address rewardPoolAddress;
address rewardTokenAddress;
array of uint256 stor51848699043762354786445001410105671568266765734117956169291548475795829136640;
array of uint256 stor92563391796531448025736367971217786061797538077753646771409532489194446654766;

function sub_00f46c58(?) payable {
    return sub_00f46c58
}

function getApproved(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not ownerOf[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
    return approved[arg1]
}

function totalSupply() payable {
    return tokenByIndex.length
}

function creationMinPrice() payable {
    return creationMinPrice
}

function tokenOfOwnerByIndex(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    if arg2 >= balanceOf[address(arg1)]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Enumerable: owner index out of bounds'
    return tokenOfOwnerByIndex[address(arg1)][arg2]
}

function tokenByIndex(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if arg1 >= tokenByIndex.length:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Enumerable: global index out of bounds'
    return tokenByIndex[arg1]
}

function paused() payable {
    return bool(paused)
}

function sub_6317d564(?) payable {
    return sub_6317d564
}

function getUniverseImplementation() payable {
    return universeImplementationAddress
}

function ownerOf(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not ownerOf[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    return ownerOf[arg1]
}

function rewardPool() payable {
    return rewardPoolAddress
}

function balanceOf(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    return balanceOf[address(arg1)]
}

function owner() payable {
    return owner
}

function compoundDelay() payable {
    return compoundDelay
}

function sub_a25ce986(?) payable {
    return sub_a25ce986
}

function tierLevel(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < 6
    return tierLevel[arg1 / 10].field_8 * 3 * arg1 % 10 % 16777216
}

function rewardPerDay() payable {
    return rewardPerDay
}

function getLiquidityPoolManagerImplementation() payable {
    return liquidityPoolManagerImplementationAddress
}

function tierSlope(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < 6
    return tierSlope[uint8(arg1)]
}

function sub_d25e3369(?) payable {
    return sub_d25e3369
}

function sub_d3420136(?) payable {
    return sub_d3420136
}

function processingFee() payable {
    return processingFee
}

function sub_dfe59ed4(?) payable {
    return sub_dfe59ed4
}

function isApprovedForAll(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return bool(stor106[address(arg1)][address(arg2)])
}

function rewardToken() payable {
    return rewardTokenAddress
}

function _fallback() payable {
    revert
}

function totalValueLocked() payable {
    if stor561 < 42000000000 * 10^18:
        revert with 0, 17
    return (stor561 - 42000000000 * 10^18)
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    owner = 0
    emit OwnershipTransferred(owner, 0);
}

function pause() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if paused:
        revert with 0, 'Pausable: paused'
    paused = 1
    emit Paused(msg.sender);
}

function setRewardPool(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    rewardPoolAddress = arg1
}

function setRewardToken(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    rewardTokenAddress = arg1
}

function unpause() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not paused:
        revert with 0, 'Pausable: not paused'
    paused = 0
    emit Unpaused(msg.sender);
}

function isOwnerOfPlanets(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    return (balanceOf[address(arg1)] > 0)
}

function recoverLostAVAX() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call owner with:
       value eth.balance(this.address) wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function setApprovalForAll(address arg1, bool arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if not msg.sender - arg1:
        revert with 0, 'ERC721: approve to caller'
    stor106[address(msg.sender)][address(arg1)] = uint8(arg2)
    emit ApprovalForAll(arg2, msg.sender, arg1);
}

function changeCompoundDelay(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 <= 0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Planets: compoundDelay must be greater than 0'
    compoundDelay = arg1
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    owner = arg1
    emit OwnershipTransferred(owner, arg1);
}

function recoverLostTokens(address arg1, address arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call arg1.0xa9059cbb with:
         gas gas_remaining wei
        args address(arg2), arg3
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function changeUniverseImplementation(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not ext_code.size(arg1):
        if arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'Universe: You can only set 0x0 or a contract address as a new implementation'
    universeImplementationAddress = arg1
    emit UpdateUniverse(universeImplementationAddress, arg1);
}

function supportsInterface(bytes4 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == Mask(32, 224, arg1)
    if 0x780e9d6300000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    if 0x80ac58cd00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    if 0x5b5e139f00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    return (Mask(32, 224, arg1) == 0x1ffc9a700000000000000000000000000000000000000000000000000000000)
}

function changeLiquidityPoolManagerImplementation(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not ext_code.size(arg1):
        if arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'LiquidityPoolManager: You can only set 0x0 or a contract address as a new implementation'
    liquidityPoolManagerImplementationAddress = arg1
    emit UpdateLiquidityPoolManager(liquidityPoolManagerImplementationAddress, arg1);
}

function approve(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not ownerOf[arg2]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if not arg1 - ownerOf[arg2]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approval to current owner'
    if ownerOf[arg2] != msg.sender:
        if not stor106[stor103[arg2]][address(msg.sender)]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'ERC721: approve caller is not owner nor approved for all'
    approved[arg2] = arg1
    if not ownerOf[arg2]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    emit Approval(ownerOf[arg2], arg1, arg2);
}

function rewardLength() payable {
    mem[64] = 96
    idx = 1
    s = 0
    while idx <= stor551:
        mem[0] = idx
        mem[32] = 552
        if not uint8(stor552[idx].field_1792):
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        mem[0] = stor552[idx].field_0
        mem[32] = 103
        if not ownerOf[stor552[idx].field_0]:
            revert with 0, 'ERC721: owner query for nonexistent token'
        mem[mem[64] + 4] = ownerOf[stor552[idx].field_0]
        staticcall rewardTokenAddress.0x70a08231 with:
                gas gas_remaining wei
               args ownerOf[stor552[idx].field_0]
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _22 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if mem[_22] <= 0:
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        mem[0] = idx
        mem[32] = 552
        if 105000 >= stor552[idx].field_1024:
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        if not s + 1:
            revert with 0, 17
        if not idx + 1:
            revert with 0, 17
        idx = idx + 1
        s = s + 1
        continue 
    return s
}

function calculateTotalDailyEmission() payable {
    mem[64] = 96
    idx = 0
    s = 0
    while idx < stor554.length:
        mem[0] = stor554[idx]
        mem[32] = 553
        _9 = mem[64]
        mem[64] = mem[64] + 96
        mem[_9] = stor553[stor554[idx]].field_0
        mem[_9 + 32] = stor553[stor554[idx]].field_256
        mem[_9 + 64] = bool(uint8(stor553[stor554[idx]].field_512))
        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
            revert with 0, 17
        if 24 * 3600 * rewardPerDay / 10^6 and stor553[stor554[idx]].field_0 > -1 / 24 * 3600 * rewardPerDay / 10^6:
            revert with 0, 17
        if 24 * 3600 * rewardPerDay / 10^6 * stor553[stor554[idx]].field_0 / 100000 and stor553[stor554[idx]].field_256 > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor553[stor554[idx]].field_0 / 100000:
            revert with 0, 17
        if s > !(24 * 3600 * rewardPerDay / 10^6 * stor553[stor554[idx]].field_0 / 100000 * stor553[stor554[idx]].field_256 / 100000):
            revert with 0, 17
        if not idx + 1:
            revert with 0, 17
        idx = idx + 1
        s = s + (24 * 3600 * rewardPerDay / 10^6 * stor553[stor554[idx]].field_0 / 100000 * stor553[stor554[idx]].field_256 / 100000)
        continue 
    return (s * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length * stor554.length)
}

function initialize() payable {
    if uint8(stor0.field_8):
        if ext_code.size(this.address):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
    else:
        if uint8(stor0.field_0):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
    if not uint8(stor0.field_8):
        uint16(stor0.field_0) = 257
        revert with 0, 'Initializable: contract is not initializing'
    if bool(stor101.length):
        if not bool(stor101.length) - (uint255(stor101.length) * 0.5 < 32):
            revert with 0, 34
        bool(stor101.length) = 0
        uint255(stor101.length.field_1) = 21
        Mask(168, 0, stor101.length.field_88) = Mask(168, 0, 'Dark Forest Ecosystem')
        idx = 0
        while (uint255(stor101.length) * 0.5) + 31 / 32 > idx:
            stor101[idx].field_0 = 0
            idx = idx + 1
            continue 
    else:
        if not bool(stor101.length) - (stor101.length.field_1 % 128 < 32):
            revert with 0, 34
        bool(stor101.length) = 0
        uint255(stor101.length.field_1) = 21
        Mask(168, 0, stor101.length.field_88) = Mask(168, 0, 'Dark Forest Ecosystem')
        idx = 0
        while stor101.length.field_1 % 128 + 31 / 32 > idx:
            stor101[idx].field_0 = 0
            idx = idx + 1
            continue 
    if bool(stor102.length):
        if not bool(stor102.length) - (uint255(stor102.length) * 0.5 < 32):
            revert with 0, 34
        bool(stor102.length) = 0
        uint255(stor102.length.field_1) = 4
        uint32(stor102.length.field_224) = 1145455955
        idx = 0
        while (uint255(stor102.length) * 0.5) + 31 / 32 > idx:
            stor102[idx].field_0 = 0
            idx = idx + 1
            continue 
    else:
        if not bool(stor102.length) - (stor102.length.field_1 % 128 < 32):
            revert with 0, 34
        bool(stor102.length) = 0
        uint255(stor102.length.field_1) = 4
        uint32(stor102.length.field_224) = 1145455955
        idx = 0
        while stor102.length.field_1 % 128 + 31 / 32 > idx:
            stor102[idx].field_0 = 0
            idx = idx + 1
            continue 
    if not uint8(stor0.field_8):
        revert with 0, 'Initializable: contract is not initializing'
    owner = msg.sender
    emit OwnershipTransferred(owner, msg.sender);
    stor401 = 1
    paused = 0
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    compoundDelay = 12 * 3600
    if not uint8(stor0.field_8):
        uint8(stor0.field_8) = 0
}

function transferFrom(address arg1, address arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    if not ownerOf[arg3]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: operator query for nonexistent token'
    if not ownerOf[arg3]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg3] != msg.sender:
        if not ownerOf[arg3]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
        if approved[arg3] != msg.sender:
            if not stor106[stor103[arg3]][address(msg.sender)]:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: transfer caller is not owner nor approved'
    if not ownerOf[arg3]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg3] != arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: transfer of token that is not own'
    if not arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: transfer to the zero address'
    if paused:
        revert with 0, 'Pausable: paused'
    if not arg1:
        stor154[arg3] = tokenByIndex.length
        tokenByIndex.length++
        stor72A1[stor153.length] = arg3
    else:
        if arg1 != arg2:
            if not arg1:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
            if balanceOf[address(arg1)] < 1:
                revert with 0, 17
            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
            stor152[arg3] = 0
            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
    if arg2:
        if arg2 != arg1:
            if not arg2:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
            stor152[arg3] = balanceOf[address(arg2)]
    else:
        if tokenByIndex.length < 1:
            revert with 0, 17
        if tokenByIndex.length - 1 >= tokenByIndex.length:
            revert with 0, 50
        if stor154[arg3] >= tokenByIndex.length:
            revert with 0, 50
        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
        stor154[stor153[stor153.length]] = stor154[arg3]
        stor154[arg3] = 0
        if not tokenByIndex.length:
            revert with 0, 49
        tokenByIndex[tokenByIndex.length] = 0
        tokenByIndex.length--
    approved[arg3] = 0
    if not ownerOf[arg3]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    emit Approval(ownerOf[arg3], 0, arg3);
    if balanceOf[address(arg1)] < 1:
        revert with 0, 17
    balanceOf[address(arg1)]--
    if balanceOf[address(arg2)] > -2:
        revert with 0, 17
    balanceOf[address(arg2)]++
    ownerOf[arg3] = arg2
    emit Transfer(arg1, arg2, arg3);
}

function safeTransferFrom(address arg1, address arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: operator query for nonexistent token'
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg3] != msg.sender:
        if not ownerOf[arg3]:
            revert with 0, 'ERC721: approved query for nonexistent token'
        if approved[arg3] != msg.sender:
            if not stor106[stor103[arg3]][address(msg.sender)]:
                revert with 0, 'ERC721: transfer caller is not owner nor approved'
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg3] != arg1:
        revert with 0, 'ERC721: transfer of token that is not own'
    if not arg2:
        revert with 0, 'ERC721: transfer to the zero address'
    if paused:
        revert with 0, 'Pausable: paused'
    if not arg1:
        stor154[arg3] = tokenByIndex.length
        tokenByIndex.length++
        stor72A1[stor153.length] = arg3
    else:
        if arg1 != arg2:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if balanceOf[address(arg1)] < 1:
                revert with 0, 17
            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
            stor152[arg3] = 0
            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
    if arg2:
        if arg2 != arg1:
            if not arg2:
                revert with 0, 'ERC721: balance query for the zero address'
            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
            stor152[arg3] = balanceOf[address(arg2)]
    else:
        if tokenByIndex.length < 1:
            revert with 0, 17
        if tokenByIndex.length - 1 >= tokenByIndex.length:
            revert with 0, 50
        if stor154[arg3] >= tokenByIndex.length:
            revert with 0, 50
        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
        stor154[stor153[stor153.length]] = stor154[arg3]
        stor154[arg3] = 0
        if not tokenByIndex.length:
            revert with 0, 49
        tokenByIndex[tokenByIndex.length] = 0
        tokenByIndex.length--
    approved[arg3] = 0
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    emit Approval(ownerOf[arg3], 0, arg3);
    if balanceOf[address(arg1)] < 1:
        revert with 0, 17
    balanceOf[address(arg1)]--
    if balanceOf[address(arg2)] > -2:
        revert with 0, 17
    balanceOf[address(arg2)]++
    ownerOf[arg3] = arg2
    emit Transfer(arg1, arg2, arg3);
    if ext_code.size(arg2):
        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
             gas gas_remaining wei
            args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
        if not ext_call.success:
            if not return_data.size:
                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            if not -return_data.size:
                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
}

function safeTransferFrom(address arg1, address arg2, uint256 arg3, bytes arg4) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg4 <= test266151307()
    require calldata.size > arg4 + 35
    if arg4.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg4.length)) + 97 < 96 or ceil32(ceil32(arg4.length)) + 97 > test266151307():
        revert with 0, 65
    require arg4 + arg4.length + 36 <= calldata.size
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: operator query for nonexistent token'
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg3] != msg.sender:
        if not ownerOf[arg3]:
            revert with 0, 'ERC721: approved query for nonexistent token'
        if approved[arg3] != msg.sender:
            if not stor106[stor103[arg3]][address(msg.sender)]:
                revert with 0, 'ERC721: transfer caller is not owner nor approved'
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg3] != arg1:
        revert with 0, 'ERC721: transfer of token that is not own'
    if not arg2:
        revert with 0, 'ERC721: transfer to the zero address'
    if paused:
        revert with 0, 'Pausable: paused'
    if not arg1:
        stor154[arg3] = tokenByIndex.length
        tokenByIndex.length++
        stor72A1[stor153.length] = arg3
    else:
        if arg1 != arg2:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if balanceOf[address(arg1)] < 1:
                revert with 0, 17
            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
            stor152[arg3] = 0
            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
    if arg2:
        if arg2 != arg1:
            if not arg2:
                revert with 0, 'ERC721: balance query for the zero address'
            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
            stor152[arg3] = balanceOf[address(arg2)]
    else:
        if tokenByIndex.length < 1:
            revert with 0, 17
        if tokenByIndex.length - 1 >= tokenByIndex.length:
            revert with 0, 50
        if stor154[arg3] >= tokenByIndex.length:
            revert with 0, 50
        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
        stor154[stor153[stor153.length]] = stor154[arg3]
        stor154[arg3] = 0
        if not tokenByIndex.length:
            revert with 0, 49
        tokenByIndex[tokenByIndex.length] = 0
        tokenByIndex.length--
    approved[arg3] = 0
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    emit Approval(ownerOf[arg3], 0, arg3);
    if balanceOf[address(arg1)] < 1:
        revert with 0, 17
    balanceOf[address(arg1)]--
    if balanceOf[address(arg2)] > -2:
        revert with 0, 17
    balanceOf[address(arg2)]++
    ownerOf[arg3] = arg2
    emit Transfer(arg1, arg2, arg3);
    if ext_code.size(arg2):
        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
             gas gas_remaining wei
            args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
        if not ext_call.success:
            if not return_data.size:
                if not -arg4.length:
                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                revert with arg4[all]
            if not -return_data.size:
                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
}

function name() payable {
    if bool(stor101.length):
        if not bool(stor101.length) - (uint255(stor101.length) * 0.5 < 32):
            revert with 0, 34
        if bool(stor101.length):
            if not bool(stor101.length) - (uint255(stor101.length) * 0.5 < 32):
                revert with 0, 34
            if Mask(256, -1, stor101.length):
                if 31 < uint255(stor101.length) * 0.5:
                    mem[128] = uint256(stor101.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor101.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor101[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor101.length), data=mem[128 len ceil32(uint255(stor101.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor101.length.field_8)
        else:
            if not bool(stor101.length) - (stor101.length.field_1 % 128 < 32):
                revert with 0, 34
            if stor101.length.field_1 % 128:
                if 31 < stor101.length.field_1 % 128:
                    mem[128] = uint256(stor101.field_0)
                    idx = 128
                    s = 0
                    while stor101.length.field_1 % 128 + 96 > idx:
                        mem[idx + 32] = stor101[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor101.length), data=mem[128 len ceil32(uint255(stor101.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor101.length.field_8)
        mem[ceil32(uint255(stor101.length) * 0.5) + 192 len ceil32(uint255(stor101.length) * 0.5)] = mem[128 len ceil32(uint255(stor101.length) * 0.5)]
        if ceil32(uint255(stor101.length) * 0.5) > uint255(stor101.length) * 0.5:
            mem[(uint255(stor101.length) * 0.5) + ceil32(uint255(stor101.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor101.length), data=mem[128 len ceil32(uint255(stor101.length) * 0.5)], mem[(2 * ceil32(uint255(stor101.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor101.length) * 0.5)]), 
    if not bool(stor101.length) - (stor101.length.field_1 % 128 < 32):
        revert with 0, 34
    if bool(stor101.length):
        if not bool(stor101.length) - (uint255(stor101.length) * 0.5 < 32):
            revert with 0, 34
        if Mask(256, -1, stor101.length):
            if 31 < uint255(stor101.length) * 0.5:
                mem[128] = uint256(stor101.field_0)
                idx = 128
                s = 0
                while (uint255(stor101.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor101[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor101.length % 128, data=mem[128 len ceil32(stor101.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor101.length.field_8)
    else:
        if not bool(stor101.length) - (stor101.length.field_1 % 128 < 32):
            revert with 0, 34
        if stor101.length.field_1 % 128:
            if 31 < stor101.length.field_1 % 128:
                mem[128] = uint256(stor101.field_0)
                idx = 128
                s = 0
                while stor101.length.field_1 % 128 + 96 > idx:
                    mem[idx + 32] = stor101[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor101.length % 128, data=mem[128 len ceil32(stor101.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor101.length.field_8)
    mem[ceil32(stor101.length.field_1 % 128) + 192 len ceil32(stor101.length.field_1 % 128)] = mem[128 len ceil32(stor101.length.field_1 % 128)]
    if ceil32(stor101.length.field_1 % 128) > stor101.length.field_1 % 128:
        mem[stor101.length.field_1 % 128 + ceil32(stor101.length.field_1 % 128) + 192] = 0
    return Array(len=stor101.length % 128, data=mem[128 len ceil32(stor101.length.field_1 % 128)], mem[(2 * ceil32(stor101.length.field_1 % 128)) + 192 len 2 * ceil32(stor101.length.field_1 % 128)]), 
}

function symbol() payable {
    if bool(stor102.length):
        if not bool(stor102.length) - (uint255(stor102.length) * 0.5 < 32):
            revert with 0, 34
        if bool(stor102.length):
            if not bool(stor102.length) - (uint255(stor102.length) * 0.5 < 32):
                revert with 0, 34
            if Mask(256, -1, stor102.length):
                if 31 < uint255(stor102.length) * 0.5:
                    mem[128] = uint256(stor102.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor102.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor102[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor102.length), data=mem[128 len ceil32(uint255(stor102.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor102.length.field_8)
        else:
            if not bool(stor102.length) - (stor102.length.field_1 % 128 < 32):
                revert with 0, 34
            if stor102.length.field_1 % 128:
                if 31 < stor102.length.field_1 % 128:
                    mem[128] = uint256(stor102.field_0)
                    idx = 128
                    s = 0
                    while stor102.length.field_1 % 128 + 96 > idx:
                        mem[idx + 32] = stor102[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor102.length), data=mem[128 len ceil32(uint255(stor102.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor102.length.field_8)
        mem[ceil32(uint255(stor102.length) * 0.5) + 192 len ceil32(uint255(stor102.length) * 0.5)] = mem[128 len ceil32(uint255(stor102.length) * 0.5)]
        if ceil32(uint255(stor102.length) * 0.5) > uint255(stor102.length) * 0.5:
            mem[(uint255(stor102.length) * 0.5) + ceil32(uint255(stor102.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor102.length), data=mem[128 len ceil32(uint255(stor102.length) * 0.5)], mem[(2 * ceil32(uint255(stor102.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor102.length) * 0.5)]), 
    if not bool(stor102.length) - (stor102.length.field_1 % 128 < 32):
        revert with 0, 34
    if bool(stor102.length):
        if not bool(stor102.length) - (uint255(stor102.length) * 0.5 < 32):
            revert with 0, 34
        if Mask(256, -1, stor102.length):
            if 31 < uint255(stor102.length) * 0.5:
                mem[128] = uint256(stor102.field_0)
                idx = 128
                s = 0
                while (uint255(stor102.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor102[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor102.length % 128, data=mem[128 len ceil32(stor102.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor102.length.field_8)
    else:
        if not bool(stor102.length) - (stor102.length.field_1 % 128 < 32):
            revert with 0, 34
        if stor102.length.field_1 % 128:
            if 31 < stor102.length.field_1 % 128:
                mem[128] = uint256(stor102.field_0)
                idx = 128
                s = 0
                while stor102.length.field_1 % 128 + 96 > idx:
                    mem[idx + 32] = stor102[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor102.length % 128, data=mem[128 len ceil32(stor102.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor102.length.field_8)
    mem[ceil32(stor102.length.field_1 % 128) + 192 len ceil32(stor102.length.field_1 % 128)] = mem[128 len ceil32(stor102.length.field_1 % 128)]
    if ceil32(stor102.length.field_1 % 128) > stor102.length.field_1 % 128:
        mem[stor102.length.field_1 % 128 + ceil32(stor102.length.field_1 % 128) + 192] = 0
    return Array(len=stor102.length % 128, data=mem[128 len ceil32(stor102.length.field_1 % 128)], mem[(2 * ceil32(stor102.length.field_1 % 128)) + 192 len 2 * ceil32(stor102.length.field_1 % 128)]), 
}

function tokenURI(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not ownerOf[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721URIStorage: URI query for nonexistent token'
    if bool(stor201[arg1].field_0):
        if not bool(stor201[arg1].field_0) - (uint255(stor201[arg1].field_0) * 0.5 < 32):
            revert with 0, 34
        if bool(stor201[arg1].field_0):
            if not bool(stor201[arg1].field_0) - (uint255(stor201[arg1].field_0) * 0.5 < 32):
                revert with 0, 34
            if Mask(256, -1, stor201[arg1].field_0):
                if 31 < uint255(stor201[arg1].field_0) * 0.5:
                    mem[128] = stor201[arg1].field_0
                    idx = 128
                    s = 0
                    while (uint255(stor201[arg1].field_0) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor201[arg1][s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor201[arg1].field_0), data=mem[128 len ceil32(uint255(stor201[arg1].field_0) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor201[arg1].field_8)
        else:
            if not bool(stor201[arg1].field_0) - (stor201[arg1].field_1 % 128 < 32):
                revert with 0, 34
            if stor201[arg1].field_1 % 128:
                if 31 < stor201[arg1].field_1 % 128:
                    mem[128] = stor201[arg1].field_0
                    idx = 128
                    s = 0
                    while stor201[arg1].field_1 % 128 + 96 > idx:
                        mem[idx + 32] = stor201[arg1][s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor201[arg1].field_0), data=mem[128 len ceil32(uint255(stor201[arg1].field_0) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor201[arg1].field_8)
        mem[ceil32(uint255(stor201[arg1].field_0) * 0.5) + 224 len ceil32(uint255(stor201[arg1].field_0) * 0.5)] = mem[128 len ceil32(uint255(stor201[arg1].field_0) * 0.5)]
        if ceil32(uint255(stor201[arg1].field_0) * 0.5) > uint255(stor201[arg1].field_0) * 0.5:
            mem[(uint255(stor201[arg1].field_0) * 0.5) + ceil32(uint255(stor201[arg1].field_0) * 0.5) + 224] = 0
        return Array(len=2 * Mask(256, -1, stor201[arg1].field_0), data=mem[128 len ceil32(uint255(stor201[arg1].field_0) * 0.5)], mem[(2 * ceil32(uint255(stor201[arg1].field_0) * 0.5)) + 224 len 2 * ceil32(uint255(stor201[arg1].field_0) * 0.5)]), 
    if not bool(stor201[arg1].field_0) - (stor201[arg1].field_1 % 128 < 32):
        revert with 0, 34
    if bool(stor201[arg1].field_0):
        if not bool(stor201[arg1].field_0) - (uint255(stor201[arg1].field_0) * 0.5 < 32):
            revert with 0, 34
        if Mask(256, -1, stor201[arg1].field_0):
            if 31 < uint255(stor201[arg1].field_0) * 0.5:
                mem[128] = stor201[arg1].field_0
                idx = 128
                s = 0
                while (uint255(stor201[arg1].field_0) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor201[arg1][s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor201[arg1].field_0 % 128, data=mem[128 len ceil32(stor201[arg1].field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor201[arg1].field_8)
    else:
        if not bool(stor201[arg1].field_0) - (stor201[arg1].field_1 % 128 < 32):
            revert with 0, 34
        if stor201[arg1].field_1 % 128:
            if 31 < stor201[arg1].field_1 % 128:
                mem[128] = stor201[arg1].field_0
                idx = 128
                s = 0
                while stor201[arg1].field_1 % 128 + 96 > idx:
                    mem[idx + 32] = stor201[arg1][s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor201[arg1].field_0 % 128, data=mem[128 len ceil32(stor201[arg1].field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor201[arg1].field_8)
    mem[ceil32(stor201[arg1].field_1 % 128) + 224 len ceil32(stor201[arg1].field_1 % 128)] = mem[128 len ceil32(stor201[arg1].field_1 % 128)]
    if ceil32(stor201[arg1].field_1 % 128) > stor201[arg1].field_1 % 128:
        mem[stor201[arg1].field_1 % 128 + ceil32(stor201[arg1].field_1 % 128) + 224] = 0
    return Array(len=stor201[arg1].field_0 % 128, data=mem[128 len ceil32(stor201[arg1].field_1 % 128)], mem[(2 * ceil32(stor201[arg1].field_1 % 128)) + 224 len 2 * ceil32(stor201[arg1].field_1 % 128)]), 
}

function sub_c713c44a(?) payable {
    mem[64] = 96
    idx = 1
    s = 0
    while idx <= stor551:
        mem[0] = idx
        mem[32] = 552
        if not uint8(stor552[idx].field_1792):
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        mem[0] = stor552[idx].field_0
        mem[32] = 103
        if not ownerOf[stor552[idx].field_0]:
            revert with 0, 'ERC721: owner query for nonexistent token'
        mem[mem[64] + 4] = ownerOf[stor552[idx].field_0]
        staticcall rewardTokenAddress.0x70a08231 with:
                gas gas_remaining wei
               args ownerOf[stor552[idx].field_0]
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _37 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if mem[_37] <= 0:
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        mem[0] = idx
        mem[32] = 552
        if 105000 >= stor552[idx].field_1024:
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        if not s + 1:
            revert with 0, 17
        if not idx + 1:
            revert with 0, 17
        idx = idx + 1
        s = s + 1
        continue 
    if s > test266151307():
        revert with 0, 65
    _30 = mem[64]
    mem[mem[64]] = s
    mem[64] = mem[64] + (32 * s) + 32
    if not s:
        idx = 1
        s = 0
        while idx <= stor551:
            mem[0] = idx
            mem[32] = 552
            if not uint8(stor552[idx].field_1792):
                if not idx + 1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                continue 
            mem[0] = stor552[idx].field_0
            mem[32] = 103
            if not ownerOf[stor552[idx].field_0]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            mem[mem[64] + 4] = ownerOf[stor552[idx].field_0]
            staticcall rewardTokenAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args ownerOf[stor552[idx].field_0]
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _92 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_92] <= 0:
                if not idx + 1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                continue 
            mem[0] = idx
            mem[32] = 552
            if 105000 >= stor552[idx].field_1024:
                if not idx + 1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                continue 
            mem[0] = idx
            mem[32] = 552
            if not s + 1:
                revert with 0, 17
            if s >= mem[_30]:
                revert with 0, 50
            mem[(32 * s) + _30 + 32] = stor552[idx].field_0
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s + 1
            continue 
        mem[mem[64]] = 32
        _77 = mem[_30]
        mem[mem[64] + 32] = mem[_30]
        mem[mem[64] + 64 len 32 * _77] = mem[_30 + 32 len 32 * _77]
        return 32, mem[mem[64] + 32 len (32 * _77) + 32]
    mem[_30 + 32 len 32 * s] = call.data[calldata.size len 32 * s]
    idx = 1
    s = 0
    while idx <= stor551:
        mem[0] = idx
        mem[32] = 552
        if not uint8(stor552[idx].field_1792):
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        mem[0] = stor552[idx].field_0
        mem[32] = 103
        if not ownerOf[stor552[idx].field_0]:
            revert with 0, 'ERC721: owner query for nonexistent token'
        mem[mem[64] + 4] = ownerOf[stor552[idx].field_0]
        staticcall rewardTokenAddress.0x70a08231 with:
                gas gas_remaining wei
               args ownerOf[stor552[idx].field_0]
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _94 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if mem[_94] <= 0:
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        mem[0] = idx
        mem[32] = 552
        if 105000 >= stor552[idx].field_1024:
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        mem[0] = idx
        mem[32] = 552
        if not s + 1:
            revert with 0, 17
        if s >= mem[_30]:
            revert with 0, 50
        mem[(32 * s) + _30 + 32] = stor552[idx].field_0
        if not idx + 1:
            revert with 0, 17
        idx = idx + 1
        s = s + 1
        continue 
    mem[mem[64]] = 32
    _79 = mem[_30]
    mem[mem[64] + 32] = mem[_30]
    mem[mem[64] + 64 len 32 * _79] = mem[_30 + 32 len 32 * _79]
    return 32, mem[mem[64] + 32 len (32 * _79) + 32]
}

function sub_b33d17f2(?) payable {
    mem[64] = 96
    idx = 1
    s = 0
    while idx <= stor551:
        mem[0] = idx
        mem[32] = 552
        if not uint8(stor552[idx].field_1792):
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        mem[0] = stor552[idx].field_0
        mem[32] = 103
        if not ownerOf[stor552[idx].field_0]:
            revert with 0, 'ERC721: owner query for nonexistent token'
        mem[mem[64] + 4] = ownerOf[stor552[idx].field_0]
        staticcall rewardTokenAddress.0x70a08231 with:
                gas gas_remaining wei
               args ownerOf[stor552[idx].field_0]
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _37 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if mem[_37] <= 0:
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        mem[0] = idx
        mem[32] = 552
        if 105000 >= stor552[idx].field_1024:
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        if not s + 1:
            revert with 0, 17
        if not idx + 1:
            revert with 0, 17
        idx = idx + 1
        s = s + 1
        continue 
    if s > test266151307():
        revert with 0, 65
    _30 = mem[64]
    mem[mem[64]] = s
    mem[64] = mem[64] + (32 * s) + 32
    if not s:
        idx = 1
        s = 0
        while idx <= stor551:
            mem[0] = idx
            mem[32] = 552
            if not uint8(stor552[idx].field_1792):
                if not idx + 1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                continue 
            mem[0] = stor552[idx].field_0
            mem[32] = 103
            if not ownerOf[stor552[idx].field_0]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            mem[mem[64] + 4] = ownerOf[stor552[idx].field_0]
            staticcall rewardTokenAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args ownerOf[stor552[idx].field_0]
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _92 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_92] <= 0:
                if not idx + 1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                continue 
            mem[0] = idx
            mem[32] = 552
            if 105000 >= stor552[idx].field_1024:
                if not idx + 1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                continue 
            mem[0] = idx
            mem[32] = 552
            if not s + 1:
                revert with 0, 17
            if s >= mem[_30]:
                revert with 0, 50
            mem[(32 * s) + _30 + 32] = stor552[idx].field_1280
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s + 1
            continue 
        mem[mem[64]] = 32
        _77 = mem[_30]
        mem[mem[64] + 32] = mem[_30]
        mem[mem[64] + 64 len 32 * _77] = mem[_30 + 32 len 32 * _77]
        return 32, mem[mem[64] + 32 len (32 * _77) + 32]
    mem[_30 + 32 len 32 * s] = call.data[calldata.size len 32 * s]
    idx = 1
    s = 0
    while idx <= stor551:
        mem[0] = idx
        mem[32] = 552
        if not uint8(stor552[idx].field_1792):
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        mem[0] = stor552[idx].field_0
        mem[32] = 103
        if not ownerOf[stor552[idx].field_0]:
            revert with 0, 'ERC721: owner query for nonexistent token'
        mem[mem[64] + 4] = ownerOf[stor552[idx].field_0]
        staticcall rewardTokenAddress.0x70a08231 with:
                gas gas_remaining wei
               args ownerOf[stor552[idx].field_0]
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _94 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if mem[_94] <= 0:
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        mem[0] = idx
        mem[32] = 552
        if 105000 >= stor552[idx].field_1024:
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        mem[0] = idx
        mem[32] = 552
        if not s + 1:
            revert with 0, 17
        if s >= mem[_30]:
            revert with 0, 50
        mem[(32 * s) + _30 + 32] = stor552[idx].field_1280
        if not idx + 1:
            revert with 0, 17
        idx = idx + 1
        s = s + 1
        continue 
    mem[mem[64]] = 32
    _79 = mem[_30]
    mem[mem[64] + 32] = mem[_30]
    mem[mem[64] + 64 len 32 * _79] = mem[_30 + 32 len 32 * _79]
    return 32, mem[mem[64] + 32 len (32 * _79) + 32]
}

function sub_d25d0afb(?) payable {
    mem[64] = 96
    idx = 1
    s = 0
    while idx <= stor551:
        mem[0] = idx
        mem[32] = 552
        if not uint8(stor552[idx].field_1792):
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        mem[0] = stor552[idx].field_0
        mem[32] = 103
        if not ownerOf[stor552[idx].field_0]:
            revert with 0, 'ERC721: owner query for nonexistent token'
        mem[mem[64] + 4] = ownerOf[stor552[idx].field_0]
        staticcall rewardTokenAddress.0x70a08231 with:
                gas gas_remaining wei
               args ownerOf[stor552[idx].field_0]
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _37 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if mem[_37] <= 0:
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        mem[0] = idx
        mem[32] = 552
        if 105000 >= stor552[idx].field_1024:
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        if not s + 1:
            revert with 0, 17
        if not idx + 1:
            revert with 0, 17
        idx = idx + 1
        s = s + 1
        continue 
    if s > test266151307():
        revert with 0, 65
    _30 = mem[64]
    mem[mem[64]] = s
    mem[64] = mem[64] + (32 * s) + 32
    if not s:
        idx = 1
        s = 0
        while idx <= stor551:
            mem[0] = idx
            mem[32] = 552
            if not uint8(stor552[idx].field_1792):
                if not idx + 1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                continue 
            mem[0] = stor552[idx].field_0
            mem[32] = 103
            if not ownerOf[stor552[idx].field_0]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            mem[mem[64] + 4] = ownerOf[stor552[idx].field_0]
            staticcall rewardTokenAddress.0x70a08231 with:
                    gas gas_remaining wei
                   args ownerOf[stor552[idx].field_0]
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _92 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_92] <= 0:
                if not idx + 1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                continue 
            mem[0] = idx
            mem[32] = 552
            if 105000 >= stor552[idx].field_1024:
                if not idx + 1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                continue 
            mem[0] = idx
            mem[32] = 552
            if not s + 1:
                revert with 0, 17
            if s >= mem[_30]:
                revert with 0, 50
            mem[(32 * s) + _30 + 32] = stor552[idx].field_1024
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s + 1
            continue 
        mem[mem[64]] = 32
        _77 = mem[_30]
        mem[mem[64] + 32] = mem[_30]
        mem[mem[64] + 64 len 32 * _77] = mem[_30 + 32 len 32 * _77]
        return 32, mem[mem[64] + 32 len (32 * _77) + 32]
    mem[_30 + 32 len 32 * s] = call.data[calldata.size len 32 * s]
    idx = 1
    s = 0
    while idx <= stor551:
        mem[0] = idx
        mem[32] = 552
        if not uint8(stor552[idx].field_1792):
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        mem[0] = stor552[idx].field_0
        mem[32] = 103
        if not ownerOf[stor552[idx].field_0]:
            revert with 0, 'ERC721: owner query for nonexistent token'
        mem[mem[64] + 4] = ownerOf[stor552[idx].field_0]
        staticcall rewardTokenAddress.0x70a08231 with:
                gas gas_remaining wei
               args ownerOf[stor552[idx].field_0]
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _94 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if mem[_94] <= 0:
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        mem[0] = idx
        mem[32] = 552
        if 105000 >= stor552[idx].field_1024:
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            s = s
            continue 
        mem[0] = idx
        mem[32] = 552
        if not s + 1:
            revert with 0, 17
        if s >= mem[_30]:
            revert with 0, 50
        mem[(32 * s) + _30 + 32] = stor552[idx].field_1024
        if not idx + 1:
            revert with 0, 17
        idx = idx + 1
        s = s + 1
        continue 
    mem[mem[64]] = 32
    _79 = mem[_30]
    mem[mem[64] + 32] = mem[_30]
    mem[mem[64] + 64 len 32 * _79] = mem[_30 + 32 len 32 * _79]
    return 32, mem[mem[64] + 32 len (32 * _79) + 32]
}

function getPlanetIdsOf(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    mem[0] = arg1
    if balanceOf[address(arg1)] > test266151307():
        revert with 0, 65
    mem[96] = balanceOf[address(arg1)]
    mem[64] = (32 * balanceOf[address(arg1)]) + 128
    if not balanceOf[address(arg1)]:
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Planets: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _166 = mem[64]
            mem[64] = mem[64] + 288
            mem[_166] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32):
                    revert with 0, 34
                _173 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_173] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_173 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_173 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _173 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _173 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_173 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_173 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _173 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _173 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_166 + 32] = _173
            else:
                if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32):
                    revert with 0, 34
                _175 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_175] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_175 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_175 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _175 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _175 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_175 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_175 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _175 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _175 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_166 + 32] = _175
            mem[_166 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_166 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_166 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_166 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_166 + 192] = stor552[stor151[address(arg1)][idx]].field_1536
            mem[_166 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1792))
            mem[_166 + 256] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1800))
            if not uint8(stor552[stor151[address(arg1)][idx]].field_1792):
                revert with 0, 'Planets: This planet doesn't exist'
            if idx >= mem[96]:
                revert with 0, 50
            mem[(32 * idx) + 128] = tokenOfOwnerByIndex[address(arg1)][idx]
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
    else:
        mem[128 len 32 * balanceOf[address(arg1)]] = call.data[calldata.size len 32 * balanceOf[address(arg1)]]
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Planets: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _169 = mem[64]
            mem[64] = mem[64] + 288
            mem[_169] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32):
                    revert with 0, 34
                _174 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_174] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_174 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_174 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _174 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _174 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_174 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_174 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _174 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _174 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_169 + 32] = _174
            else:
                if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32):
                    revert with 0, 34
                _176 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_176] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_176 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_176 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _176 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _176 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_176 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_176 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _176 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _176 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_169 + 32] = _176
            mem[_169 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_169 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_169 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_169 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_169 + 192] = stor552[stor151[address(arg1)][idx]].field_1536
            mem[_169 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1792))
            mem[_169 + 256] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1800))
            if not uint8(stor552[stor151[address(arg1)][idx]].field_1792):
                revert with 0, 'Planets: This planet doesn't exist'
            if idx >= mem[96]:
                revert with 0, 50
            mem[(32 * idx) + 128] = tokenOfOwnerByIndex[address(arg1)][idx]
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
    mem[mem[64]] = 32
    mem[mem[64] + 32] = mem[96]
    mem[mem[64] + 64 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
    return 32, mem[mem[64] + 32 len (32 * mem[96]) + 32]
}

function isOwnerOfPlanet(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    if balanceOf[address(arg1)] > test266151307():
        revert with 0, 65
    mem[96] = balanceOf[address(arg1)]
    mem[64] = (32 * balanceOf[address(arg1)]) + 128
    if not balanceOf[address(arg1)]:
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Planets: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _177 = mem[64]
            mem[64] = mem[64] + 288
            mem[_177] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32):
                    revert with 0, 34
                _185 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_185] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_185 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_185 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _185 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _185 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_185 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_185 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _185 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _185 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_177 + 32] = _185
            else:
                if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32):
                    revert with 0, 34
                _187 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_187] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_187 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_187 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _187 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _187 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_187 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_187 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _187 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _187 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_177 + 32] = _187
            mem[_177 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_177 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_177 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_177 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_177 + 192] = stor552[stor151[address(arg1)][idx]].field_1536
            mem[_177 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1792))
            mem[_177 + 256] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1800))
            if not uint8(stor552[stor151[address(arg1)][idx]].field_1792):
                revert with 0, 'Planets: This planet doesn't exist'
            if idx >= mem[96]:
                revert with 0, 50
            mem[(32 * idx) + 128] = tokenOfOwnerByIndex[address(arg1)][idx]
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
    else:
        mem[128 len 32 * balanceOf[address(arg1)]] = call.data[calldata.size len 32 * balanceOf[address(arg1)]]
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Planets: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _181 = mem[64]
            mem[64] = mem[64] + 288
            mem[_181] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32):
                    revert with 0, 34
                _186 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_186] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_186 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_186 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _186 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _186 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_186 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_186 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _186 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _186 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_181 + 32] = _186
            else:
                if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32):
                    revert with 0, 34
                _188 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_188] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_188 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_188 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _188 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _188 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_188 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_188 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _188 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _188 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_181 + 32] = _188
            mem[_181 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_181 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_181 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_181 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_181 + 192] = stor552[stor151[address(arg1)][idx]].field_1536
            mem[_181 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1792))
            mem[_181 + 256] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1800))
            if not uint8(stor552[stor151[address(arg1)][idx]].field_1792):
                revert with 0, 'Planets: This planet doesn't exist'
            if idx >= mem[96]:
                revert with 0, 50
            mem[(32 * idx) + 128] = tokenOfOwnerByIndex[address(arg1)][idx]
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
    idx = 0
    while idx < mem[96]:
        if idx >= mem[96]:
            revert with 0, 50
        if not mem[(32 * idx) + 128] - arg2:
            return 1
        if not idx + 1:
            revert with 0, 17
        idx = idx + 1
        continue 
    return 0
}

function isNameAvailable(address arg1, string arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    if arg2.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg2.length)) + 97 < 96 or ceil32(ceil32(arg2.length)) + 97 > test266151307():
        revert with 0, 65
    mem[96] = arg2.length
    require arg2 + arg2.length + 36 <= calldata.size
    mem[128 len arg2.length] = arg2[all]
    mem[arg2.length + 128] = 0
    if not arg1:
        revert with 0, 'ERC721: balance query for the zero address'
    mem[0] = arg1
    mem[32] = 104
    if balanceOf[address(arg1)] > test266151307():
        revert with 0, 65
    mem[ceil32(ceil32(arg2.length)) + 97] = balanceOf[address(arg1)]
    mem[64] = ceil32(ceil32(arg2.length)) + (32 * balanceOf[address(arg1)]) + 129
    if not balanceOf[address(arg1)]:
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Planets: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _360 = mem[64]
            mem[64] = mem[64] + 288
            mem[_360] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32):
                    revert with 0, 34
                _370 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_370] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_370 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_370 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _370 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _370 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_370 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_370 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _370 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _370 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_360 + 32] = _370
            else:
                if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32):
                    revert with 0, 34
                _377 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_377] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_377 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_377 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _377 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _377 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_377 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_377 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _377 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _377 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_360 + 32] = _377
            mem[_360 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_360 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_360 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_360 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_360 + 192] = stor552[stor151[address(arg1)][idx]].field_1536
            mem[_360 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1792))
            mem[_360 + 256] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1800))
            if not uint8(stor552[stor151[address(arg1)][idx]].field_1792):
                revert with 0, 'Planets: This planet doesn't exist'
            if idx >= mem[ceil32(ceil32(arg2.length)) + 97]:
                revert with 0, 50
            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129] = tokenOfOwnerByIndex[address(arg1)][idx]
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _654 = mem[ceil32(ceil32(arg2.length)) + 97]
        idx = 0
        while idx < _654:
            if idx >= mem[ceil32(ceil32(arg2.length)) + 97]:
                revert with 0, 50
            mem[0] = mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129]
            mem[32] = 552
            _660 = sha3(mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129], 552)
            _661 = mem[64]
            mem[64] = mem[64] + 288
            mem[_661] = stor552[mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129]].field_0
            if bool(stor1[_660].field_0):
                if not bool(stor1[_660].field_0) - (uint255(stor1[_660].field_0) * 0.5 < 32):
                    revert with 0, 34
                _692 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_660].field_0) * 0.5) + 32
                mem[_692] = uint255(stor1[_660].field_0) * 0.5
                if bool(stor1[_660].field_0):
                    if not bool(stor1[_660].field_0) - (uint255(stor1[_660].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor1[_660].field_0):
                        if 31 >= uint255(stor1[_660].field_0) * 0.5:
                            mem[_692 + 32] = 256 * Mask(248, 0, stor1[_660].field_8)
                        else:
                            mem[0] = _660 + 1
                            mem[_692 + 32] = stor[sha3(_660 + 1)]
                            s = _692 + 32
                            t = sha3(_660 + 1)
                            while _692 + (uint255(stor1[_660].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor1[_660].field_0) - (stor1[_660].field_1 % 128 < 32):
                        revert with 0, 34
                    if stor1[_660].field_1 % 128:
                        if 31 >= stor1[_660].field_1 % 128:
                            mem[_692 + 32] = 256 * Mask(248, 0, stor1[_660].field_8)
                        else:
                            mem[0] = _660 + 1
                            mem[_692 + 32] = stor[sha3(_660 + 1)]
                            s = _692 + 32
                            t = sha3(_660 + 1)
                            while _692 + stor1[_660].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_661 + 32] = _692
                mem[_661 + 64] = stor2[_660]
                mem[_661 + 96] = stor3[_660]
                mem[_661 + 128] = stor4[_660]
                mem[_661 + 160] = stor5[_660]
                mem[_661 + 192] = stor6[_660]
                mem[_661 + 224] = bool(uint8(stor7[_660].field_0))
                mem[_661 + 256] = bool(uint8(stor7[_660].field_8))
                if not sha3(mem[_692 + 32 len uint255(stor1[_660].field_0) * 0.5]) - sha3(mem[128 len mem[96]]):
                    return 0
            else:
                if not bool(stor1[_660].field_0) - (stor1[_660].field_1 % 128 < 32):
                    revert with 0, 34
                _694 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_660].field_1 % 128) + 32
                mem[_694] = stor1[_660].field_1 % 128
                if bool(stor1[_660].field_0):
                    if not bool(stor1[_660].field_0) - (uint255(stor1[_660].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor1[_660].field_0):
                        if 31 >= uint255(stor1[_660].field_0) * 0.5:
                            mem[_694 + 32] = 256 * Mask(248, 0, stor1[_660].field_8)
                        else:
                            mem[0] = _660 + 1
                            mem[_694 + 32] = stor[sha3(_660 + 1)]
                            s = _694 + 32
                            t = sha3(_660 + 1)
                            while _694 + (uint255(stor1[_660].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor1[_660].field_0) - (stor1[_660].field_1 % 128 < 32):
                        revert with 0, 34
                    if stor1[_660].field_1 % 128:
                        if 31 >= stor1[_660].field_1 % 128:
                            mem[_694 + 32] = 256 * Mask(248, 0, stor1[_660].field_8)
                        else:
                            mem[0] = _660 + 1
                            mem[_694 + 32] = stor[sha3(_660 + 1)]
                            s = _694 + 32
                            t = sha3(_660 + 1)
                            while _694 + stor1[_660].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_661 + 32] = _694
                mem[_661 + 64] = stor2[_660]
                mem[_661 + 96] = stor3[_660]
                mem[_661 + 128] = stor4[_660]
                mem[_661 + 160] = stor5[_660]
                mem[_661 + 192] = stor6[_660]
                mem[_661 + 224] = bool(uint8(stor7[_660].field_0))
                mem[_661 + 256] = bool(uint8(stor7[_660].field_8))
                if not sha3(mem[_694 + 32 len stor1[_660].field_1 % 128]) - sha3(mem[128 len mem[96]]):
                    return 0
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
    else:
        mem[ceil32(ceil32(arg2.length)) + 129 len 32 * balanceOf[address(arg1)]] = call.data[calldata.size len 32 * balanceOf[address(arg1)]]
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Planets: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _364 = mem[64]
            mem[64] = mem[64] + 288
            mem[_364] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32):
                    revert with 0, 34
                _371 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_371] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_371 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_371 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _371 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _371 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_371 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_371 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _371 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _371 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_364 + 32] = _371
            else:
                if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32):
                    revert with 0, 34
                _383 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_383] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_383 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_383 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _383 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _383 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(arg1)][idx]].field_256) - (stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_383 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_383 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _383 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _383 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_364 + 32] = _383
            mem[_364 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_364 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_364 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_364 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_364 + 192] = stor552[stor151[address(arg1)][idx]].field_1536
            mem[_364 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1792))
            mem[_364 + 256] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1800))
            if not uint8(stor552[stor151[address(arg1)][idx]].field_1792):
                revert with 0, 'Planets: This planet doesn't exist'
            if idx >= mem[ceil32(ceil32(arg2.length)) + 97]:
                revert with 0, 50
            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129] = tokenOfOwnerByIndex[address(arg1)][idx]
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _655 = mem[ceil32(ceil32(arg2.length)) + 97]
        idx = 0
        while idx < _655:
            if idx >= mem[ceil32(ceil32(arg2.length)) + 97]:
                revert with 0, 50
            mem[0] = mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129]
            mem[32] = 552
            _668 = sha3(mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129], 552)
            _669 = mem[64]
            mem[64] = mem[64] + 288
            mem[_669] = stor552[mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129]].field_0
            if bool(stor1[_668].field_0):
                if not bool(stor1[_668].field_0) - (uint255(stor1[_668].field_0) * 0.5 < 32):
                    revert with 0, 34
                _693 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_668].field_0) * 0.5) + 32
                mem[_693] = uint255(stor1[_668].field_0) * 0.5
                if bool(stor1[_668].field_0):
                    if not bool(stor1[_668].field_0) - (uint255(stor1[_668].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor1[_668].field_0):
                        if 31 >= uint255(stor1[_668].field_0) * 0.5:
                            mem[_693 + 32] = 256 * Mask(248, 0, stor1[_668].field_8)
                        else:
                            mem[0] = _668 + 1
                            mem[_693 + 32] = stor[sha3(_668 + 1)]
                            s = _693 + 32
                            t = sha3(_668 + 1)
                            while _693 + (uint255(stor1[_668].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor1[_668].field_0) - (stor1[_668].field_1 % 128 < 32):
                        revert with 0, 34
                    if stor1[_668].field_1 % 128:
                        if 31 >= stor1[_668].field_1 % 128:
                            mem[_693 + 32] = 256 * Mask(248, 0, stor1[_668].field_8)
                        else:
                            mem[0] = _668 + 1
                            mem[_693 + 32] = stor[sha3(_668 + 1)]
                            s = _693 + 32
                            t = sha3(_668 + 1)
                            while _693 + stor1[_668].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_669 + 32] = _693
                mem[_669 + 64] = stor2[_668]
                mem[_669 + 96] = stor3[_668]
                mem[_669 + 128] = stor4[_668]
                mem[_669 + 160] = stor5[_668]
                mem[_669 + 192] = stor6[_668]
                mem[_669 + 224] = bool(uint8(stor7[_668].field_0))
                mem[_669 + 256] = bool(uint8(stor7[_668].field_8))
                if not sha3(mem[_693 + 32 len uint255(stor1[_668].field_0) * 0.5]) - sha3(mem[128 len mem[96]]):
                    return 0
            else:
                if not bool(stor1[_668].field_0) - (stor1[_668].field_1 % 128 < 32):
                    revert with 0, 34
                _699 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_668].field_1 % 128) + 32
                mem[_699] = stor1[_668].field_1 % 128
                if bool(stor1[_668].field_0):
                    if not bool(stor1[_668].field_0) - (uint255(stor1[_668].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor1[_668].field_0):
                        if 31 >= uint255(stor1[_668].field_0) * 0.5:
                            mem[_699 + 32] = 256 * Mask(248, 0, stor1[_668].field_8)
                        else:
                            mem[0] = _668 + 1
                            mem[_699 + 32] = stor[sha3(_668 + 1)]
                            s = _699 + 32
                            t = sha3(_668 + 1)
                            while _699 + (uint255(stor1[_668].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor1[_668].field_0) - (stor1[_668].field_1 % 128 < 32):
                        revert with 0, 34
                    if stor1[_668].field_1 % 128:
                        if 31 >= stor1[_668].field_1 % 128:
                            mem[_699 + 32] = 256 * Mask(248, 0, stor1[_668].field_8)
                        else:
                            mem[0] = _668 + 1
                            mem[_699 + 32] = stor[sha3(_668 + 1)]
                            s = _699 + 32
                            t = sha3(_668 + 1)
                            while _699 + stor1[_668].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_669 + 32] = _699
                mem[_669 + 64] = stor2[_668]
                mem[_669 + 96] = stor3[_668]
                mem[_669 + 128] = stor4[_668]
                mem[_669 + 160] = stor5[_668]
                mem[_669 + 192] = stor6[_668]
                mem[_669 + 224] = bool(uint8(stor7[_668].field_0))
                mem[_669 + 256] = bool(uint8(stor7[_668].field_8))
                if not sha3(mem[_699 + 32 len stor1[_668].field_1 % 128]) - sha3(mem[128 len mem[96]]):
                    return 0
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
    return 1
}

function createPlanetWithTokens(string arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    if arg1.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg1.length)) + 97 < 96 or ceil32(ceil32(arg1.length)) + 97 > test266151307():
        revert with 0, 65
    mem[96] = arg1.length
    require arg1 + arg1.length + 36 <= calldata.size
    mem[128 len arg1.length] = arg1[all]
    mem[arg1.length + 128] = 0
    if not stor401 - 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor401 = 2
    if paused:
        revert with 0, 'Pausable: paused'
    stor551++
    if not universeImplementationAddress:
        revert with 0, 'Planets: Universe is not set'
    if 1 >= arg1.length:
        revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
    if arg1.length >= 32:
        revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
    if arg2 < creationMinPrice:
        revert with 0, 'Planets: Planet value set below minimum'
    if not msg.sender:
        revert with 0, 'ERC721: balance query for the zero address'
    mem[0] = msg.sender
    mem[32] = 104
    if balanceOf[address(msg.sender)] > test266151307():
        revert with 0, 65
    mem[ceil32(ceil32(arg1.length)) + 97] = balanceOf[address(msg.sender)]
    mem[64] = ceil32(ceil32(arg1.length)) + (32 * balanceOf[address(msg.sender)]) + 129
    if not balanceOf[address(msg.sender)]:
        idx = 0
        while idx < balanceOf[address(msg.sender)]:
            if not msg.sender:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(msg.sender)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                revert with 0, 'Planets: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
            mem[32] = 552
            _1797 = mem[64]
            mem[64] = mem[64] + 288
            mem[_1797] = stor552[stor151[address(msg.sender)][idx]].field_0
            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                    revert with 0, 34
                _1816 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                mem[_1816] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                            mem[_1816 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_1816 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _1816 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _1816 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                            mem[_1816 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_1816 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _1816 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _1816 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_1797 + 32] = _1816
            else:
                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                    revert with 0, 34
                _1823 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                mem[_1823] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                            mem[_1823 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_1823 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _1823 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _1823 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                            mem[_1823 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_1823 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _1823 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _1823 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_1797 + 32] = _1823
            mem[_1797 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
            mem[_1797 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
            mem[_1797 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
            mem[_1797 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
            mem[_1797 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
            mem[_1797 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
            mem[_1797 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                revert with 0, 'Planets: This planet doesn't exist'
            if idx >= mem[ceil32(ceil32(arg1.length)) + 97]:
                revert with 0, 50
            mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129] = tokenOfOwnerByIndex[address(msg.sender)][idx]
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _3508 = mem[ceil32(ceil32(arg1.length)) + 97]
        idx = 0
        while idx < _3508:
            if idx >= mem[ceil32(ceil32(arg1.length)) + 97]:
                revert with 0, 50
            mem[0] = mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129]
            mem[32] = 552
            _3513 = sha3(mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129], 552)
            _3514 = mem[64]
            mem[64] = mem[64] + 288
            mem[_3514] = stor552[mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129]].field_0
            if bool(stor1[_3513].field_0):
                if not bool(stor1[_3513].field_0) - (uint255(stor1[_3513].field_0) * 0.5 < 32):
                    revert with 0, 34
                _3549 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_3513].field_0) * 0.5) + 32
                mem[_3549] = uint255(stor1[_3513].field_0) * 0.5
                if bool(stor1[_3513].field_0):
                    if not bool(stor1[_3513].field_0) - (uint255(stor1[_3513].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor1[_3513].field_0):
                        if 31 >= uint255(stor1[_3513].field_0) * 0.5:
                            mem[_3549 + 32] = 256 * Mask(248, 0, stor1[_3513].field_8)
                        else:
                            mem[0] = _3513 + 1
                            mem[_3549 + 32] = stor[sha3(_3513 + 1)]
                            s = _3549 + 32
                            t = sha3(_3513 + 1)
                            while _3549 + (uint255(stor1[_3513].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor1[_3513].field_0) - (stor1[_3513].field_1 % 128 < 32):
                        revert with 0, 34
                    if stor1[_3513].field_1 % 128:
                        if 31 >= stor1[_3513].field_1 % 128:
                            mem[_3549 + 32] = 256 * Mask(248, 0, stor1[_3513].field_8)
                        else:
                            mem[0] = _3513 + 1
                            mem[_3549 + 32] = stor[sha3(_3513 + 1)]
                            s = _3549 + 32
                            t = sha3(_3513 + 1)
                            while _3549 + stor1[_3513].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_3514 + 32] = _3549
                mem[_3514 + 64] = stor2[_3513]
                mem[_3514 + 96] = stor3[_3513]
                mem[_3514 + 128] = stor4[_3513]
                mem[_3514 + 160] = stor5[_3513]
                mem[_3514 + 192] = stor6[_3513]
                mem[_3514 + 224] = bool(uint8(stor7[_3513].field_0))
                mem[_3514 + 256] = bool(uint8(stor7[_3513].field_8))
                if not sha3(mem[_3549 + 32 len uint255(stor1[_3513].field_0) * 0.5]) - sha3(mem[128 len mem[96]]):
                    revert with 0, 'Planets: Name not available'
            else:
                if not bool(stor1[_3513].field_0) - (stor1[_3513].field_1 % 128 < 32):
                    revert with 0, 34
                _3552 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_3513].field_1 % 128) + 32
                mem[_3552] = stor1[_3513].field_1 % 128
                if bool(stor1[_3513].field_0):
                    if not bool(stor1[_3513].field_0) - (uint255(stor1[_3513].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor1[_3513].field_0):
                        if 31 >= uint255(stor1[_3513].field_0) * 0.5:
                            mem[_3552 + 32] = 256 * Mask(248, 0, stor1[_3513].field_8)
                        else:
                            mem[0] = _3513 + 1
                            mem[_3552 + 32] = stor[sha3(_3513 + 1)]
                            s = _3552 + 32
                            t = sha3(_3513 + 1)
                            while _3552 + (uint255(stor1[_3513].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor1[_3513].field_0) - (stor1[_3513].field_1 % 128 < 32):
                        revert with 0, 34
                    if stor1[_3513].field_1 % 128:
                        if 31 >= stor1[_3513].field_1 % 128:
                            mem[_3552 + 32] = 256 * Mask(248, 0, stor1[_3513].field_8)
                        else:
                            mem[0] = _3513 + 1
                            mem[_3552 + 32] = stor[sha3(_3513 + 1)]
                            s = _3552 + 32
                            t = sha3(_3513 + 1)
                            while _3552 + stor1[_3513].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_3514 + 32] = _3552
                mem[_3514 + 64] = stor2[_3513]
                mem[_3514 + 96] = stor3[_3513]
                mem[_3514 + 128] = stor4[_3513]
                mem[_3514 + 160] = stor5[_3513]
                mem[_3514 + 192] = stor6[_3513]
                mem[_3514 + 224] = bool(uint8(stor7[_3513].field_0))
                mem[_3514 + 256] = bool(uint8(stor7[_3513].field_8))
                if not sha3(mem[_3552 + 32 len stor1[_3513].field_1 % 128]) - sha3(mem[128 len mem[96]]):
                    revert with 0, 'Planets: Name not available'
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
        mem[mem[64] + 4] = msg.sender
        staticcall universeImplementationAddress.0x70a08231 with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3530 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if mem[_3530] < creationMinPrice:
            revert with 0, 'Planets: Balance too low for creation'
        mem[mem[64]] = 0xdb0e185b00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = msg.sender
        mem[mem[64] + 36] = arg2
        require ext_code.size(universeImplementationAddress)
        call universeImplementationAddress.accountBurn(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args msg.sender, arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if stor561 > !arg2:
            revert with 0, 17
        stor561 += arg2
        mem[0] = tierLevel.length
        mem[32] = 553
        if uint8(stor553[stor559.length].field_512):
            if tierLevel.length != stor553[stor559.length].field_0:
                revert with 0, 'Planets: rewardMult does not match in TierStorage'
            if arg2 > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                revert with 0, 17
            if stor553[stor559.length].field_256 < 0 and arg2 < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                revert with 0, 17
            stor553[stor559.length].field_256 += arg2
            _3768 = mem[64]
            mem[64] = mem[64] + 288
            mem[_3768] = stor551
            mem[_3768 + 32] = 96
            mem[_3768 + 64] = block.timestamp
            mem[_3768 + 96] = block.timestamp
            mem[_3768 + 128] = tierLevel.length
            mem[_3768 + 160] = arg2
            mem[_3768 + 192] = 0
            mem[_3768 + 224] = 1
            mem[_3768 + 256] = 0
        else:
            if arg2 <= 0:
                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
            _3672 = mem[64]
            mem[64] = mem[64] + 96
            mem[_3672] = tierLevel.length
            mem[_3672 + 32] = arg2
            mem[_3672 + 64] = 1
            mem[32] = 553
            stor553[stor559.length].field_0 = tierLevel.length
            stor553[stor559.length].field_256 = arg2
            uint8(stor553[stor559.length].field_512) = 1
            stor554.length++
            mem[0] = 554
            storCCA5[stor554.length] = tierLevel.length
            _3712 = mem[64]
            mem[64] = mem[64] + 288
            mem[_3712] = stor551
            mem[_3712 + 32] = 96
            mem[_3712 + 64] = block.timestamp
            mem[_3712 + 96] = block.timestamp
            mem[_3712 + 128] = tierLevel.length
            mem[_3712 + 160] = arg2
            mem[_3712 + 192] = 0
            mem[_3712 + 224] = 1
            mem[_3712 + 256] = 0
    else:
        mem[ceil32(ceil32(arg1.length)) + 129 len 32 * balanceOf[address(msg.sender)]] = call.data[calldata.size len 32 * balanceOf[address(msg.sender)]]
        idx = 0
        while idx < balanceOf[address(msg.sender)]:
            if not msg.sender:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(msg.sender)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                revert with 0, 'Planets: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
            mem[32] = 552
            _1802 = mem[64]
            mem[64] = mem[64] + 288
            mem[_1802] = stor552[stor151[address(msg.sender)][idx]].field_0
            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                    revert with 0, 34
                _1817 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                mem[_1817] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                            mem[_1817 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_1817 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _1817 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _1817 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                            mem[_1817 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_1817 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _1817 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _1817 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_1802 + 32] = _1817
            else:
                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                    revert with 0, 34
                _1829 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                mem[_1829] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                            mem[_1829 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_1829 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _1829 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _1829 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                            mem[_1829 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_1829 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _1829 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _1829 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_1802 + 32] = _1829
            mem[_1802 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
            mem[_1802 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
            mem[_1802 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
            mem[_1802 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
            mem[_1802 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
            mem[_1802 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
            mem[_1802 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                revert with 0, 'Planets: This planet doesn't exist'
            if idx >= mem[ceil32(ceil32(arg1.length)) + 97]:
                revert with 0, 50
            mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129] = tokenOfOwnerByIndex[address(msg.sender)][idx]
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _3509 = mem[ceil32(ceil32(arg1.length)) + 97]
        idx = 0
        while idx < _3509:
            if idx >= mem[ceil32(ceil32(arg1.length)) + 97]:
                revert with 0, 50
            mem[0] = mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129]
            mem[32] = 552
            _3520 = sha3(mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129], 552)
            _3521 = mem[64]
            mem[64] = mem[64] + 288
            mem[_3521] = stor552[mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129]].field_0
            if bool(stor1[_3520].field_0):
                if not bool(stor1[_3520].field_0) - (uint255(stor1[_3520].field_0) * 0.5 < 32):
                    revert with 0, 34
                _3551 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_3520].field_0) * 0.5) + 32
                mem[_3551] = uint255(stor1[_3520].field_0) * 0.5
                if bool(stor1[_3520].field_0):
                    if not bool(stor1[_3520].field_0) - (uint255(stor1[_3520].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor1[_3520].field_0):
                        if 31 >= uint255(stor1[_3520].field_0) * 0.5:
                            mem[_3551 + 32] = 256 * Mask(248, 0, stor1[_3520].field_8)
                        else:
                            mem[0] = _3520 + 1
                            mem[_3551 + 32] = stor[sha3(_3520 + 1)]
                            s = _3551 + 32
                            t = sha3(_3520 + 1)
                            while _3551 + (uint255(stor1[_3520].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor1[_3520].field_0) - (stor1[_3520].field_1 % 128 < 32):
                        revert with 0, 34
                    if stor1[_3520].field_1 % 128:
                        if 31 >= stor1[_3520].field_1 % 128:
                            mem[_3551 + 32] = 256 * Mask(248, 0, stor1[_3520].field_8)
                        else:
                            mem[0] = _3520 + 1
                            mem[_3551 + 32] = stor[sha3(_3520 + 1)]
                            s = _3551 + 32
                            t = sha3(_3520 + 1)
                            while _3551 + stor1[_3520].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_3521 + 32] = _3551
                mem[_3521 + 64] = stor2[_3520]
                mem[_3521 + 96] = stor3[_3520]
                mem[_3521 + 128] = stor4[_3520]
                mem[_3521 + 160] = stor5[_3520]
                mem[_3521 + 192] = stor6[_3520]
                mem[_3521 + 224] = bool(uint8(stor7[_3520].field_0))
                mem[_3521 + 256] = bool(uint8(stor7[_3520].field_8))
                if not sha3(mem[_3551 + 32 len uint255(stor1[_3520].field_0) * 0.5]) - sha3(mem[128 len mem[96]]):
                    revert with 0, 'Planets: Name not available'
            else:
                if not bool(stor1[_3520].field_0) - (stor1[_3520].field_1 % 128 < 32):
                    revert with 0, 34
                _3557 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_3520].field_1 % 128) + 32
                mem[_3557] = stor1[_3520].field_1 % 128
                if bool(stor1[_3520].field_0):
                    if not bool(stor1[_3520].field_0) - (uint255(stor1[_3520].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor1[_3520].field_0):
                        if 31 >= uint255(stor1[_3520].field_0) * 0.5:
                            mem[_3557 + 32] = 256 * Mask(248, 0, stor1[_3520].field_8)
                        else:
                            mem[0] = _3520 + 1
                            mem[_3557 + 32] = stor[sha3(_3520 + 1)]
                            s = _3557 + 32
                            t = sha3(_3520 + 1)
                            while _3557 + (uint255(stor1[_3520].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor1[_3520].field_0) - (stor1[_3520].field_1 % 128 < 32):
                        revert with 0, 34
                    if stor1[_3520].field_1 % 128:
                        if 31 >= stor1[_3520].field_1 % 128:
                            mem[_3557 + 32] = 256 * Mask(248, 0, stor1[_3520].field_8)
                        else:
                            mem[0] = _3520 + 1
                            mem[_3557 + 32] = stor[sha3(_3520 + 1)]
                            s = _3557 + 32
                            t = sha3(_3520 + 1)
                            while _3557 + stor1[_3520].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_3521 + 32] = _3557
                mem[_3521 + 64] = stor2[_3520]
                mem[_3521 + 96] = stor3[_3520]
                mem[_3521 + 128] = stor4[_3520]
                mem[_3521 + 160] = stor5[_3520]
                mem[_3521 + 192] = stor6[_3520]
                mem[_3521 + 224] = bool(uint8(stor7[_3520].field_0))
                mem[_3521 + 256] = bool(uint8(stor7[_3520].field_8))
                if not sha3(mem[_3557 + 32 len stor1[_3520].field_1 % 128]) - sha3(mem[128 len mem[96]]):
                    revert with 0, 'Planets: Name not available'
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
        mem[mem[64] + 4] = msg.sender
        staticcall universeImplementationAddress.0x70a08231 with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3531 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if mem[_3531] < creationMinPrice:
            revert with 0, 'Planets: Balance too low for creation'
        mem[mem[64]] = 0xdb0e185b00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = msg.sender
        mem[mem[64] + 36] = arg2
        require ext_code.size(universeImplementationAddress)
        call universeImplementationAddress.accountBurn(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args msg.sender, arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if stor561 > !arg2:
            revert with 0, 17
        stor561 += arg2
        mem[0] = tierLevel.length
        mem[32] = 553
        if uint8(stor553[stor559.length].field_512):
            if tierLevel.length != stor553[stor559.length].field_0:
                revert with 0, 'Planets: rewardMult does not match in TierStorage'
            if arg2 > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                revert with 0, 17
            if stor553[stor559.length].field_256 < 0 and arg2 < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                revert with 0, 17
            stor553[stor559.length].field_256 += arg2
            _3772 = mem[64]
            mem[64] = mem[64] + 288
            mem[_3772] = stor551
            mem[_3772 + 32] = 96
            mem[_3772 + 64] = block.timestamp
            mem[_3772 + 96] = block.timestamp
            mem[_3772 + 128] = tierLevel.length
            mem[_3772 + 160] = arg2
            mem[_3772 + 192] = 0
            mem[_3772 + 224] = 1
            mem[_3772 + 256] = 0
        else:
            if arg2 <= 0:
                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
            _3692 = mem[64]
            mem[64] = mem[64] + 96
            mem[_3692] = tierLevel.length
            mem[_3692 + 32] = arg2
            mem[_3692 + 64] = 1
            mem[32] = 553
            stor553[stor559.length].field_0 = tierLevel.length
            stor553[stor559.length].field_256 = arg2
            uint8(stor553[stor559.length].field_512) = 1
            stor554.length++
            mem[0] = 554
            storCCA5[stor554.length] = tierLevel.length
            _3724 = mem[64]
            mem[64] = mem[64] + 288
            mem[_3724] = stor551
            mem[_3724 + 32] = 96
            mem[_3724 + 64] = block.timestamp
            mem[_3724 + 96] = block.timestamp
            mem[_3724 + 128] = tierLevel.length
            mem[_3724 + 160] = arg2
            mem[_3724 + 192] = 0
            mem[_3724 + 224] = 1
            mem[_3724 + 256] = 0
    stor552[stor551].field_0 = stor551
    if bool(stor552[stor551].field_256):
        if not bool(stor552[stor551].field_256) - (uint255(stor552[stor551].field_256) * 0.5 < 32):
            revert with 0, 34
        if mem[96]:
            stor552[stor551][1][].field_0 = Array(len=mem[96], data=mem[128 len mem[96]])
        else:
            stor552[stor551].field_256 = 0
            idx = 0
            while (uint255(stor552[stor551].field_256) * 0.5) + 31 / 32 > idx:
                stor552[stor551][idx + 1].field_0 = 0
                idx = idx + 1
                continue 
    else:
        if not bool(stor552[stor551].field_256) - (stor552[stor551].field_257 % 128 < 32):
            revert with 0, 34
        if mem[96]:
            stor552[stor551][1][].field_0 = Array(len=mem[96], data=mem[128 len mem[96]])
        else:
            stor552[stor551].field_256 = 0
            idx = 0
            while stor552[stor551].field_257 % 128 + 31 / 32 > idx:
                stor552[stor551][idx + 1].field_0 = 0
                idx = idx + 1
                continue 
    stor552[stor551].field_512 = block.timestamp
    stor552[stor551].field_768 = block.timestamp
    stor552[stor551].field_1024 = tierLevel.length
    stor552[stor551].field_1280 = arg2
    stor552[stor551].field_1536 = 0
    uint8(stor552[stor551].field_1792) = 1
    Mask(248, 0, stor552[stor551].field_1800) = 0
    Mask(240, 0, stor552[stor551].field_1808) = 0
    if not msg.sender:
        revert with 0, 'ERC721: mint to the zero address'
    if ownerOf[stor551]:
        revert with 0, 'ERC721: token already minted'
    if paused:
        revert with 0, 'Pausable: paused'
    stor154[stor551] = tokenByIndex.length
    tokenByIndex.length++
    stor72A1[stor153.length] = stor551
    if msg.sender:
        if msg.sender:
            if not msg.sender:
                revert with 0, 'ERC721: balance query for the zero address'
            tokenOfOwnerByIndex[address(msg.sender)][stor104[address(msg.sender)]] = stor551
            stor152[stor551] = balanceOf[address(msg.sender)]
    else:
        if tokenByIndex.length < 1:
            revert with 0, 17
        if tokenByIndex.length - 1 >= tokenByIndex.length:
            revert with 0, 50
        if stor154[stor551] >= tokenByIndex.length:
            revert with 0, 50
        tokenByIndex[stor154[stor551]] = tokenByIndex[tokenByIndex.length]
        stor154[stor153[stor153.length]] = stor154[stor551]
        stor154[stor551] = 0
        if not tokenByIndex.length:
            revert with 0, 49
        tokenByIndex[tokenByIndex.length] = 0
        tokenByIndex.length--
    if balanceOf[address(msg.sender)] > -2:
        revert with 0, 17
    balanceOf[address(msg.sender)]++
    ownerOf[stor551] = msg.sender
    emit Transfer(0, msg.sender, stor551);
    stor401 = 1
    return stor551
}

function getPlanetsByIds(uint256[] arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    if arg1.length > test266151307():
        revert with 0, 65
    if ceil32(32 * arg1.length) + 97 < 96 or ceil32(32 * arg1.length) + 97 > test266151307():
        revert with 0, 65
    mem[96] = arg1.length
    require (32 * arg1.length) + arg1 + 36 <= calldata.size
    s = 128
    idx = arg1 + 36
    while idx < (32 * arg1.length) + arg1 + 36:
        mem[s] = cd[idx]
        s = s + 32
        idx = idx + 32
        continue 
    if arg1.length > test266151307():
        revert with 0, 65
    mem[ceil32(32 * arg1.length) + 97] = arg1.length
    mem[64] = ceil32(32 * arg1.length) + (32 * arg1.length) + 129
    if not arg1.length:
        idx = 0
        while idx < arg1.length:
            if idx >= mem[96]:
                revert with 0, 50
            _519 = mem[(32 * idx) + 128]
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 552
            _520 = sha3(mem[(32 * idx) + 128], 552)
            _521 = mem[64]
            mem[64] = mem[64] + 288
            mem[_521] = stor552[mem[(32 * idx) + 128]].field_0
            if bool(stor1[_520].field_0):
                if not bool(stor1[_520].field_0) - (uint255(stor1[_520].field_0) * 0.5 < 32):
                    revert with 0, 34
                _529 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_520].field_0) * 0.5) + 32
                mem[_529] = uint255(stor1[_520].field_0) * 0.5
                if bool(stor1[_520].field_0):
                    if not bool(stor1[_520].field_0) - (uint255(stor1[_520].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if not Mask(256, -1, stor1[_520].field_0):
                        mem[_521 + 32] = _529
                        mem[_521 + 64] = stor2[_520]
                        mem[_521 + 96] = stor3[_520]
                        mem[_521 + 128] = stor4[_520]
                        mem[_521 + 160] = stor5[_520]
                        mem[_521 + 192] = stor6[_520]
                        mem[_521 + 224] = bool(uint8(stor7[_520].field_0))
                        mem[_521 + 256] = bool(uint8(stor7[_520].field_8))
                        _539 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_539] = _521
                        mem[_539 + 32] = _519
                        if block.timestamp < stor3[_520]:
                            revert with 0, 17
                        if block.timestamp - stor3[_520] and rewardPerDay > -1 / block.timestamp - stor3[_520]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 and stor4[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000:
                            revert with 0, 17
                        mem[_539 + 64] = (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000:
                            revert with 0, 17
                        mem[_539 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                        mem[_539 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _539
                    else:
                        if 31 >= uint255(stor1[_520].field_0) * 0.5:
                            mem[_529 + 32] = 256 * Mask(248, 0, stor1[_520].field_8)
                            mem[_521 + 32] = _529
                            mem[_521 + 64] = stor2[_520]
                            mem[_521 + 96] = stor3[_520]
                            mem[_521 + 128] = stor4[_520]
                            mem[_521 + 160] = stor5[_520]
                            mem[_521 + 192] = stor6[_520]
                            mem[_521 + 224] = bool(uint8(stor7[_520].field_0))
                            mem[_521 + 256] = bool(uint8(stor7[_520].field_8))
                            _575 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_575] = _521
                            mem[_575 + 32] = _519
                            if block.timestamp < stor3[_520]:
                                revert with 0, 17
                            if block.timestamp - stor3[_520] and rewardPerDay > -1 / block.timestamp - stor3[_520]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 and stor4[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000:
                                revert with 0, 17
                            mem[_575 + 64] = (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000:
                                revert with 0, 17
                            mem[_575 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                            mem[_575 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _575
                        else:
                            mem[0] = _520 + 1
                            mem[_529 + 32] = stor[sha3(_520 + 1)]
                            s = _529 + 32
                            t = sha3(_520 + 1)
                            while _529 + (uint255(stor1[_520].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_521 + 32] = _529
                            mem[_521 + 64] = stor2[_520]
                            mem[_521 + 96] = stor3[_520]
                            mem[_521 + 128] = stor4[_520]
                            mem[_521 + 160] = stor5[_520]
                            mem[_521 + 192] = stor6[_520]
                            mem[_521 + 224] = bool(uint8(stor7[_520].field_0))
                            mem[_521 + 256] = bool(uint8(stor7[_520].field_8))
                            _776 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_776] = _521
                            mem[_776 + 32] = _519
                            if block.timestamp < stor3[_520]:
                                revert with 0, 17
                            if block.timestamp - stor3[_520] and rewardPerDay > -1 / block.timestamp - stor3[_520]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 and stor4[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000:
                                revert with 0, 17
                            mem[_776 + 64] = (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000:
                                revert with 0, 17
                            mem[_776 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                            mem[_776 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _776
                else:
                    if not bool(stor1[_520].field_0) - (stor1[_520].field_1 % 128 < 32):
                        revert with 0, 34
                    if not stor1[_520].field_1 % 128:
                        mem[_521 + 32] = _529
                        mem[_521 + 64] = stor2[_520]
                        mem[_521 + 96] = stor3[_520]
                        mem[_521 + 128] = stor4[_520]
                        mem[_521 + 160] = stor5[_520]
                        mem[_521 + 192] = stor6[_520]
                        mem[_521 + 224] = bool(uint8(stor7[_520].field_0))
                        mem[_521 + 256] = bool(uint8(stor7[_520].field_8))
                        _560 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_560] = _521
                        mem[_560 + 32] = _519
                        if block.timestamp < stor3[_520]:
                            revert with 0, 17
                        if block.timestamp - stor3[_520] and rewardPerDay > -1 / block.timestamp - stor3[_520]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 and stor4[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000:
                            revert with 0, 17
                        mem[_560 + 64] = (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000:
                            revert with 0, 17
                        mem[_560 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                        mem[_560 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _560
                    else:
                        if 31 >= stor1[_520].field_1 % 128:
                            mem[_529 + 32] = 256 * Mask(248, 0, stor1[_520].field_8)
                            mem[_521 + 32] = _529
                            mem[_521 + 64] = stor2[_520]
                            mem[_521 + 96] = stor3[_520]
                            mem[_521 + 128] = stor4[_520]
                            mem[_521 + 160] = stor5[_520]
                            mem[_521 + 192] = stor6[_520]
                            mem[_521 + 224] = bool(uint8(stor7[_520].field_0))
                            mem[_521 + 256] = bool(uint8(stor7[_520].field_8))
                            _589 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_589] = _521
                            mem[_589 + 32] = _519
                            if block.timestamp < stor3[_520]:
                                revert with 0, 17
                            if block.timestamp - stor3[_520] and rewardPerDay > -1 / block.timestamp - stor3[_520]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 and stor4[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000:
                                revert with 0, 17
                            mem[_589 + 64] = (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000:
                                revert with 0, 17
                            mem[_589 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                            mem[_589 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _589
                        else:
                            mem[0] = _520 + 1
                            mem[_529 + 32] = stor[sha3(_520 + 1)]
                            s = _529 + 32
                            t = sha3(_520 + 1)
                            while _529 + stor1[_520].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_521 + 32] = _529
                            mem[_521 + 64] = stor2[_520]
                            mem[_521 + 96] = stor3[_520]
                            mem[_521 + 128] = stor4[_520]
                            mem[_521 + 160] = stor5[_520]
                            mem[_521 + 192] = stor6[_520]
                            mem[_521 + 224] = bool(uint8(stor7[_520].field_0))
                            mem[_521 + 256] = bool(uint8(stor7[_520].field_8))
                            _777 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_777] = _521
                            mem[_777 + 32] = _519
                            if block.timestamp < stor3[_520]:
                                revert with 0, 17
                            if block.timestamp - stor3[_520] and rewardPerDay > -1 / block.timestamp - stor3[_520]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 and stor4[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000:
                                revert with 0, 17
                            mem[_777 + 64] = (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000:
                                revert with 0, 17
                            mem[_777 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                            mem[_777 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _777
            else:
                if not bool(stor1[_520].field_0) - (stor1[_520].field_1 % 128 < 32):
                    revert with 0, 34
                _531 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_520].field_1 % 128) + 32
                mem[_531] = stor1[_520].field_1 % 128
                if bool(stor1[_520].field_0):
                    if not bool(stor1[_520].field_0) - (uint255(stor1[_520].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if not Mask(256, -1, stor1[_520].field_0):
                        mem[_521 + 32] = _531
                        mem[_521 + 64] = stor2[_520]
                        mem[_521 + 96] = stor3[_520]
                        mem[_521 + 128] = stor4[_520]
                        mem[_521 + 160] = stor5[_520]
                        mem[_521 + 192] = stor6[_520]
                        mem[_521 + 224] = bool(uint8(stor7[_520].field_0))
                        mem[_521 + 256] = bool(uint8(stor7[_520].field_8))
                        _561 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_561] = _521
                        mem[_561 + 32] = _519
                        if block.timestamp < stor3[_520]:
                            revert with 0, 17
                        if block.timestamp - stor3[_520] and rewardPerDay > -1 / block.timestamp - stor3[_520]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 and stor4[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000:
                            revert with 0, 17
                        mem[_561 + 64] = (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000:
                            revert with 0, 17
                        mem[_561 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                        mem[_561 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _561
                    else:
                        if 31 >= uint255(stor1[_520].field_0) * 0.5:
                            mem[_531 + 32] = 256 * Mask(248, 0, stor1[_520].field_8)
                            mem[_521 + 32] = _531
                            mem[_521 + 64] = stor2[_520]
                            mem[_521 + 96] = stor3[_520]
                            mem[_521 + 128] = stor4[_520]
                            mem[_521 + 160] = stor5[_520]
                            mem[_521 + 192] = stor6[_520]
                            mem[_521 + 224] = bool(uint8(stor7[_520].field_0))
                            mem[_521 + 256] = bool(uint8(stor7[_520].field_8))
                            _590 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_590] = _521
                            mem[_590 + 32] = _519
                            if block.timestamp < stor3[_520]:
                                revert with 0, 17
                            if block.timestamp - stor3[_520] and rewardPerDay > -1 / block.timestamp - stor3[_520]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 and stor4[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000:
                                revert with 0, 17
                            mem[_590 + 64] = (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000:
                                revert with 0, 17
                            mem[_590 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                            mem[_590 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _590
                        else:
                            mem[0] = _520 + 1
                            mem[_531 + 32] = stor[sha3(_520 + 1)]
                            s = _531 + 32
                            t = sha3(_520 + 1)
                            while _531 + (uint255(stor1[_520].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_521 + 32] = _531
                            mem[_521 + 64] = stor2[_520]
                            mem[_521 + 96] = stor3[_520]
                            mem[_521 + 128] = stor4[_520]
                            mem[_521 + 160] = stor5[_520]
                            mem[_521 + 192] = stor6[_520]
                            mem[_521 + 224] = bool(uint8(stor7[_520].field_0))
                            mem[_521 + 256] = bool(uint8(stor7[_520].field_8))
                            _778 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_778] = _521
                            mem[_778 + 32] = _519
                            if block.timestamp < stor3[_520]:
                                revert with 0, 17
                            if block.timestamp - stor3[_520] and rewardPerDay > -1 / block.timestamp - stor3[_520]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 and stor4[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000:
                                revert with 0, 17
                            mem[_778 + 64] = (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000:
                                revert with 0, 17
                            mem[_778 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                            mem[_778 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _778
                else:
                    if not bool(stor1[_520].field_0) - (stor1[_520].field_1 % 128 < 32):
                        revert with 0, 34
                    if not stor1[_520].field_1 % 128:
                        mem[_521 + 32] = _531
                        mem[_521 + 64] = stor2[_520]
                        mem[_521 + 96] = stor3[_520]
                        mem[_521 + 128] = stor4[_520]
                        mem[_521 + 160] = stor5[_520]
                        mem[_521 + 192] = stor6[_520]
                        mem[_521 + 224] = bool(uint8(stor7[_520].field_0))
                        mem[_521 + 256] = bool(uint8(stor7[_520].field_8))
                        _584 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_584] = _521
                        mem[_584 + 32] = _519
                        if block.timestamp < stor3[_520]:
                            revert with 0, 17
                        if block.timestamp - stor3[_520] and rewardPerDay > -1 / block.timestamp - stor3[_520]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 and stor4[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000:
                            revert with 0, 17
                        mem[_584 + 64] = (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000:
                            revert with 0, 17
                        mem[_584 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                        mem[_584 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _584
                    else:
                        if 31 >= stor1[_520].field_1 % 128:
                            mem[_531 + 32] = 256 * Mask(248, 0, stor1[_520].field_8)
                            mem[_521 + 32] = _531
                            mem[_521 + 64] = stor2[_520]
                            mem[_521 + 96] = stor3[_520]
                            mem[_521 + 128] = stor4[_520]
                            mem[_521 + 160] = stor5[_520]
                            mem[_521 + 192] = stor6[_520]
                            mem[_521 + 224] = bool(uint8(stor7[_520].field_0))
                            mem[_521 + 256] = bool(uint8(stor7[_520].field_8))
                            _602 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_602] = _521
                            mem[_602 + 32] = _519
                            if block.timestamp < stor3[_520]:
                                revert with 0, 17
                            if block.timestamp - stor3[_520] and rewardPerDay > -1 / block.timestamp - stor3[_520]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 and stor4[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000:
                                revert with 0, 17
                            mem[_602 + 64] = (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000:
                                revert with 0, 17
                            mem[_602 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                            mem[_602 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _602
                        else:
                            mem[0] = _520 + 1
                            mem[_531 + 32] = stor[sha3(_520 + 1)]
                            s = _531 + 32
                            t = sha3(_520 + 1)
                            while _531 + stor1[_520].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_521 + 32] = _531
                            mem[_521 + 64] = stor2[_520]
                            mem[_521 + 96] = stor3[_520]
                            mem[_521 + 128] = stor4[_520]
                            mem[_521 + 160] = stor5[_520]
                            mem[_521 + 192] = stor6[_520]
                            mem[_521 + 224] = bool(uint8(stor7[_520].field_0))
                            mem[_521 + 256] = bool(uint8(stor7[_520].field_8))
                            _779 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_779] = _521
                            mem[_779 + 32] = _519
                            if block.timestamp < stor3[_520]:
                                revert with 0, 17
                            if block.timestamp - stor3[_520] and rewardPerDay > -1 / block.timestamp - stor3[_520]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 and stor4[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000:
                                revert with 0, 17
                            mem[_779 + 64] = (block.timestamp * rewardPerDay) - (stor3[_520] * rewardPerDay) / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 and stor5[_520] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000:
                                revert with 0, 17
                            mem[_779 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_520] / 100000 * stor5[_520] / 100000
                            mem[_779 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _779
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _518 = mem[64]
        mem[mem[64]] = 32
        _522 = mem[ceil32(32 * arg1.length) + 97]
        mem[mem[64] + 32] = mem[ceil32(32 * arg1.length) + 97]
        idx = 0
        s = ceil32(32 * arg1.length) + 129
        t = mem[64] + (32 * _522) + 64
        u = mem[64] + 64
        while idx < _522:
            mem[u] = t + -_518 - 64
            _770 = mem[s]
            _771 = mem[mem[s]]
            mem[t] = 160
            mem[t + 160] = mem[_771]
            _773 = mem[_771 + 32]
            mem[t + 192] = 288
            _775 = mem[_773]
            mem[t + 448] = mem[_773]
            v = 0
            while v < _775:
                mem[v + t + 480] = mem[v + _773 + 32]
                v = v + 32
                continue 
            if ceil32(_775) > _775:
                mem[_775 + t + 480] = 0
            mem[t + 224] = mem[_771 + 64]
            mem[t + 256] = mem[_771 + 96]
            mem[t + 288] = mem[_771 + 128]
            mem[t + 320] = mem[_771 + 160]
            mem[t + 352] = mem[_771 + 192]
            mem[t + 384] = bool(mem[_771 + 224])
            mem[t + 416] = bool(mem[_771 + 256])
            mem[t + 32] = mem[_770 + 32]
            mem[t + 64] = mem[_770 + 64]
            mem[t + 96] = mem[_770 + 96]
            mem[t + 128] = mem[_770 + 128]
            idx = idx + 1
            s = s + 32
            t = ceil32(_775) + t + 480
            u = u + 32
            continue 
        return memory
          from mem[64]
           len t - mem[64]
    mem[64] = ceil32(32 * arg1.length) + (32 * arg1.length) + 577
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 289] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 321] = 96
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 353] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 385] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 417] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 449] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 481] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 513] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 545] = 0
    mem[var28002] = var28001
    mem[var28002 + 32] = 0
    mem[var28002 + 64] = 0
    mem[var28002 + 96] = 0
    mem[var28002 + 128] = 0
    mem[var30002] = var30001
    if not var30003 - 1:
        idx = 0
        while idx < arg1.length:
            if idx >= mem[96]:
                revert with 0, 50
            _1365 = mem[(32 * idx) + 128]
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 552
            _1366 = sha3(mem[(32 * idx) + 128], 552)
            _1367 = mem[64]
            mem[64] = mem[64] + 288
            mem[_1367] = stor552[mem[(32 * idx) + 128]].field_0
            if bool(stor1[_1366].field_0):
                if not bool(stor1[_1366].field_0) - (uint255(stor1[_1366].field_0) * 0.5 < 32):
                    revert with 0, 34
                _1376 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_1366].field_0) * 0.5) + 32
                mem[_1376] = uint255(stor1[_1366].field_0) * 0.5
                if bool(stor1[_1366].field_0):
                    if not bool(stor1[_1366].field_0) - (uint255(stor1[_1366].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if not Mask(256, -1, stor1[_1366].field_0):
                        mem[_1367 + 32] = _1376
                        mem[_1367 + 64] = stor2[_1366]
                        mem[_1367 + 96] = stor3[_1366]
                        mem[_1367 + 128] = stor4[_1366]
                        mem[_1367 + 160] = stor5[_1366]
                        mem[_1367 + 192] = stor6[_1366]
                        mem[_1367 + 224] = bool(uint8(stor7[_1366].field_0))
                        mem[_1367 + 256] = bool(uint8(stor7[_1366].field_8))
                        _1389 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_1389] = _1367
                        mem[_1389 + 32] = _1365
                        if block.timestamp < stor3[_1366]:
                            revert with 0, 17
                        if block.timestamp - stor3[_1366] and rewardPerDay > -1 / block.timestamp - stor3[_1366]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 and stor4[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000:
                            revert with 0, 17
                        mem[_1389 + 64] = (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000:
                            revert with 0, 17
                        mem[_1389 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                        mem[_1389 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _1389
                    else:
                        if 31 >= uint255(stor1[_1366].field_0) * 0.5:
                            mem[_1376 + 32] = 256 * Mask(248, 0, stor1[_1366].field_8)
                            mem[_1367 + 32] = _1376
                            mem[_1367 + 64] = stor2[_1366]
                            mem[_1367 + 96] = stor3[_1366]
                            mem[_1367 + 128] = stor4[_1366]
                            mem[_1367 + 160] = stor5[_1366]
                            mem[_1367 + 192] = stor6[_1366]
                            mem[_1367 + 224] = bool(uint8(stor7[_1366].field_0))
                            mem[_1367 + 256] = bool(uint8(stor7[_1366].field_8))
                            _1422 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_1422] = _1367
                            mem[_1422 + 32] = _1365
                            if block.timestamp < stor3[_1366]:
                                revert with 0, 17
                            if block.timestamp - stor3[_1366] and rewardPerDay > -1 / block.timestamp - stor3[_1366]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 and stor4[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000:
                                revert with 0, 17
                            mem[_1422 + 64] = (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000:
                                revert with 0, 17
                            mem[_1422 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                            mem[_1422 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _1422
                        else:
                            mem[0] = _1366 + 1
                            mem[_1376 + 32] = stor[sha3(_1366 + 1)]
                            s = _1376 + 32
                            t = sha3(_1366 + 1)
                            while _1376 + (uint255(stor1[_1366].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_1367 + 32] = _1376
                            mem[_1367 + 64] = stor2[_1366]
                            mem[_1367 + 96] = stor3[_1366]
                            mem[_1367 + 128] = stor4[_1366]
                            mem[_1367 + 160] = stor5[_1366]
                            mem[_1367 + 192] = stor6[_1366]
                            mem[_1367 + 224] = bool(uint8(stor7[_1366].field_0))
                            mem[_1367 + 256] = bool(uint8(stor7[_1366].field_8))
                            _1622 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_1622] = _1367
                            mem[_1622 + 32] = _1365
                            if block.timestamp < stor3[_1366]:
                                revert with 0, 17
                            if block.timestamp - stor3[_1366] and rewardPerDay > -1 / block.timestamp - stor3[_1366]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 and stor4[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000:
                                revert with 0, 17
                            mem[_1622 + 64] = (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000:
                                revert with 0, 17
                            mem[_1622 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                            mem[_1622 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _1622
                else:
                    if not bool(stor1[_1366].field_0) - (stor1[_1366].field_1 % 128 < 32):
                        revert with 0, 34
                    if not stor1[_1366].field_1 % 128:
                        mem[_1367 + 32] = _1376
                        mem[_1367 + 64] = stor2[_1366]
                        mem[_1367 + 96] = stor3[_1366]
                        mem[_1367 + 128] = stor4[_1366]
                        mem[_1367 + 160] = stor5[_1366]
                        mem[_1367 + 192] = stor6[_1366]
                        mem[_1367 + 224] = bool(uint8(stor7[_1366].field_0))
                        mem[_1367 + 256] = bool(uint8(stor7[_1366].field_8))
                        _1409 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_1409] = _1367
                        mem[_1409 + 32] = _1365
                        if block.timestamp < stor3[_1366]:
                            revert with 0, 17
                        if block.timestamp - stor3[_1366] and rewardPerDay > -1 / block.timestamp - stor3[_1366]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 and stor4[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000:
                            revert with 0, 17
                        mem[_1409 + 64] = (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000:
                            revert with 0, 17
                        mem[_1409 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                        mem[_1409 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _1409
                    else:
                        if 31 >= stor1[_1366].field_1 % 128:
                            mem[_1376 + 32] = 256 * Mask(248, 0, stor1[_1366].field_8)
                            mem[_1367 + 32] = _1376
                            mem[_1367 + 64] = stor2[_1366]
                            mem[_1367 + 96] = stor3[_1366]
                            mem[_1367 + 128] = stor4[_1366]
                            mem[_1367 + 160] = stor5[_1366]
                            mem[_1367 + 192] = stor6[_1366]
                            mem[_1367 + 224] = bool(uint8(stor7[_1366].field_0))
                            mem[_1367 + 256] = bool(uint8(stor7[_1366].field_8))
                            _1435 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_1435] = _1367
                            mem[_1435 + 32] = _1365
                            if block.timestamp < stor3[_1366]:
                                revert with 0, 17
                            if block.timestamp - stor3[_1366] and rewardPerDay > -1 / block.timestamp - stor3[_1366]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 and stor4[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000:
                                revert with 0, 17
                            mem[_1435 + 64] = (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000:
                                revert with 0, 17
                            mem[_1435 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                            mem[_1435 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _1435
                        else:
                            mem[0] = _1366 + 1
                            mem[_1376 + 32] = stor[sha3(_1366 + 1)]
                            s = _1376 + 32
                            t = sha3(_1366 + 1)
                            while _1376 + stor1[_1366].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_1367 + 32] = _1376
                            mem[_1367 + 64] = stor2[_1366]
                            mem[_1367 + 96] = stor3[_1366]
                            mem[_1367 + 128] = stor4[_1366]
                            mem[_1367 + 160] = stor5[_1366]
                            mem[_1367 + 192] = stor6[_1366]
                            mem[_1367 + 224] = bool(uint8(stor7[_1366].field_0))
                            mem[_1367 + 256] = bool(uint8(stor7[_1366].field_8))
                            _1623 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_1623] = _1367
                            mem[_1623 + 32] = _1365
                            if block.timestamp < stor3[_1366]:
                                revert with 0, 17
                            if block.timestamp - stor3[_1366] and rewardPerDay > -1 / block.timestamp - stor3[_1366]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 and stor4[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000:
                                revert with 0, 17
                            mem[_1623 + 64] = (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000:
                                revert with 0, 17
                            mem[_1623 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                            mem[_1623 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _1623
            else:
                if not bool(stor1[_1366].field_0) - (stor1[_1366].field_1 % 128 < 32):
                    revert with 0, 34
                _1378 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_1366].field_1 % 128) + 32
                mem[_1378] = stor1[_1366].field_1 % 128
                if bool(stor1[_1366].field_0):
                    if not bool(stor1[_1366].field_0) - (uint255(stor1[_1366].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if not Mask(256, -1, stor1[_1366].field_0):
                        mem[_1367 + 32] = _1378
                        mem[_1367 + 64] = stor2[_1366]
                        mem[_1367 + 96] = stor3[_1366]
                        mem[_1367 + 128] = stor4[_1366]
                        mem[_1367 + 160] = stor5[_1366]
                        mem[_1367 + 192] = stor6[_1366]
                        mem[_1367 + 224] = bool(uint8(stor7[_1366].field_0))
                        mem[_1367 + 256] = bool(uint8(stor7[_1366].field_8))
                        _1410 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_1410] = _1367
                        mem[_1410 + 32] = _1365
                        if block.timestamp < stor3[_1366]:
                            revert with 0, 17
                        if block.timestamp - stor3[_1366] and rewardPerDay > -1 / block.timestamp - stor3[_1366]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 and stor4[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000:
                            revert with 0, 17
                        mem[_1410 + 64] = (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000:
                            revert with 0, 17
                        mem[_1410 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                        mem[_1410 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _1410
                    else:
                        if 31 >= uint255(stor1[_1366].field_0) * 0.5:
                            mem[_1378 + 32] = 256 * Mask(248, 0, stor1[_1366].field_8)
                            mem[_1367 + 32] = _1378
                            mem[_1367 + 64] = stor2[_1366]
                            mem[_1367 + 96] = stor3[_1366]
                            mem[_1367 + 128] = stor4[_1366]
                            mem[_1367 + 160] = stor5[_1366]
                            mem[_1367 + 192] = stor6[_1366]
                            mem[_1367 + 224] = bool(uint8(stor7[_1366].field_0))
                            mem[_1367 + 256] = bool(uint8(stor7[_1366].field_8))
                            _1436 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_1436] = _1367
                            mem[_1436 + 32] = _1365
                            if block.timestamp < stor3[_1366]:
                                revert with 0, 17
                            if block.timestamp - stor3[_1366] and rewardPerDay > -1 / block.timestamp - stor3[_1366]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 and stor4[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000:
                                revert with 0, 17
                            mem[_1436 + 64] = (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000:
                                revert with 0, 17
                            mem[_1436 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                            mem[_1436 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _1436
                        else:
                            mem[0] = _1366 + 1
                            mem[_1378 + 32] = stor[sha3(_1366 + 1)]
                            s = _1378 + 32
                            t = sha3(_1366 + 1)
                            while _1378 + (uint255(stor1[_1366].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_1367 + 32] = _1378
                            mem[_1367 + 64] = stor2[_1366]
                            mem[_1367 + 96] = stor3[_1366]
                            mem[_1367 + 128] = stor4[_1366]
                            mem[_1367 + 160] = stor5[_1366]
                            mem[_1367 + 192] = stor6[_1366]
                            mem[_1367 + 224] = bool(uint8(stor7[_1366].field_0))
                            mem[_1367 + 256] = bool(uint8(stor7[_1366].field_8))
                            _1624 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_1624] = _1367
                            mem[_1624 + 32] = _1365
                            if block.timestamp < stor3[_1366]:
                                revert with 0, 17
                            if block.timestamp - stor3[_1366] and rewardPerDay > -1 / block.timestamp - stor3[_1366]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 and stor4[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000:
                                revert with 0, 17
                            mem[_1624 + 64] = (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000:
                                revert with 0, 17
                            mem[_1624 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                            mem[_1624 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _1624
                else:
                    if not bool(stor1[_1366].field_0) - (stor1[_1366].field_1 % 128 < 32):
                        revert with 0, 34
                    if not stor1[_1366].field_1 % 128:
                        mem[_1367 + 32] = _1378
                        mem[_1367 + 64] = stor2[_1366]
                        mem[_1367 + 96] = stor3[_1366]
                        mem[_1367 + 128] = stor4[_1366]
                        mem[_1367 + 160] = stor5[_1366]
                        mem[_1367 + 192] = stor6[_1366]
                        mem[_1367 + 224] = bool(uint8(stor7[_1366].field_0))
                        mem[_1367 + 256] = bool(uint8(stor7[_1366].field_8))
                        _1431 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_1431] = _1367
                        mem[_1431 + 32] = _1365
                        if block.timestamp < stor3[_1366]:
                            revert with 0, 17
                        if block.timestamp - stor3[_1366] and rewardPerDay > -1 / block.timestamp - stor3[_1366]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 and stor4[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000:
                            revert with 0, 17
                        mem[_1431 + 64] = (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000:
                            revert with 0, 17
                        mem[_1431 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                        mem[_1431 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _1431
                    else:
                        if 31 >= stor1[_1366].field_1 % 128:
                            mem[_1378 + 32] = 256 * Mask(248, 0, stor1[_1366].field_8)
                            mem[_1367 + 32] = _1378
                            mem[_1367 + 64] = stor2[_1366]
                            mem[_1367 + 96] = stor3[_1366]
                            mem[_1367 + 128] = stor4[_1366]
                            mem[_1367 + 160] = stor5[_1366]
                            mem[_1367 + 192] = stor6[_1366]
                            mem[_1367 + 224] = bool(uint8(stor7[_1366].field_0))
                            mem[_1367 + 256] = bool(uint8(stor7[_1366].field_8))
                            _1449 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_1449] = _1367
                            mem[_1449 + 32] = _1365
                            if block.timestamp < stor3[_1366]:
                                revert with 0, 17
                            if block.timestamp - stor3[_1366] and rewardPerDay > -1 / block.timestamp - stor3[_1366]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 and stor4[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000:
                                revert with 0, 17
                            mem[_1449 + 64] = (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000:
                                revert with 0, 17
                            mem[_1449 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                            mem[_1449 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _1449
                        else:
                            mem[0] = _1366 + 1
                            mem[_1378 + 32] = stor[sha3(_1366 + 1)]
                            s = _1378 + 32
                            t = sha3(_1366 + 1)
                            while _1378 + stor1[_1366].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_1367 + 32] = _1378
                            mem[_1367 + 64] = stor2[_1366]
                            mem[_1367 + 96] = stor3[_1366]
                            mem[_1367 + 128] = stor4[_1366]
                            mem[_1367 + 160] = stor5[_1366]
                            mem[_1367 + 192] = stor6[_1366]
                            mem[_1367 + 224] = bool(uint8(stor7[_1366].field_0))
                            mem[_1367 + 256] = bool(uint8(stor7[_1366].field_8))
                            _1625 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_1625] = _1367
                            mem[_1625 + 32] = _1365
                            if block.timestamp < stor3[_1366]:
                                revert with 0, 17
                            if block.timestamp - stor3[_1366] and rewardPerDay > -1 / block.timestamp - stor3[_1366]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 and stor4[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000:
                                revert with 0, 17
                            mem[_1625 + 64] = (block.timestamp * rewardPerDay) - (stor3[_1366] * rewardPerDay) / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 and stor5[_1366] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000:
                                revert with 0, 17
                            mem[_1625 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_1366] / 100000 * stor5[_1366] / 100000
                            mem[_1625 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _1625
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _1364 = mem[64]
        mem[mem[64]] = 32
        _1368 = mem[ceil32(32 * arg1.length) + 97]
        mem[mem[64] + 32] = mem[ceil32(32 * arg1.length) + 97]
        idx = 0
        s = ceil32(32 * arg1.length) + 129
        t = mem[64] + (32 * _1368) + 64
        u = mem[64] + 64
        while idx < _1368:
            mem[u] = t + -_1364 - 64
            _1616 = mem[s]
            _1617 = mem[mem[s]]
            mem[t] = 160
            mem[t + 160] = mem[_1617]
            _1619 = mem[_1617 + 32]
            mem[t + 192] = 288
            _1621 = mem[_1619]
            mem[t + 448] = mem[_1619]
            v = 0
            while v < _1621:
                mem[v + t + 480] = mem[v + _1619 + 32]
                v = v + 32
                continue 
            if ceil32(_1621) > _1621:
                mem[_1621 + t + 480] = 0
            mem[t + 224] = mem[_1617 + 64]
            mem[t + 256] = mem[_1617 + 96]
            mem[t + 288] = mem[_1617 + 128]
            mem[t + 320] = mem[_1617 + 160]
            mem[t + 352] = mem[_1617 + 192]
            mem[t + 384] = bool(mem[_1617 + 224])
            mem[t + 416] = bool(mem[_1617 + 256])
            mem[t + 32] = mem[_1616 + 32]
            mem[t + 64] = mem[_1616 + 64]
            mem[t + 96] = mem[_1616 + 96]
            mem[t + 128] = mem[_1616 + 128]
            idx = idx + 1
            s = s + 32
            t = ceil32(_1621) + t + 480
            u = u + 32
            continue 
        return memory
          from mem[64]
           len t - mem[64]
    mem[64] = ceil32(32 * arg1.length) + (32 * arg1.length) + 1025
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 737] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 769] = 96
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 801] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 833] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 865] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 897] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 929] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 961] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 993] = 0
    mem[var36002] = var36001
    mem[var36002 + 32] = 0
    mem[var36002 + 64] = 0
    mem[var36002 + 96] = 0
    mem[var36002 + 128] = 0
    mem[var38002] = var38001
    if not var38003 - 1:
        idx = 0
        while idx < arg1.length:
            if idx >= mem[96]:
                revert with 0, 50
            _2211 = mem[(32 * idx) + 128]
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 552
            _2212 = sha3(mem[(32 * idx) + 128], 552)
            _2213 = mem[64]
            mem[64] = mem[64] + 288
            mem[_2213] = stor552[mem[(32 * idx) + 128]].field_0
            if bool(stor1[_2212].field_0):
                if not bool(stor1[_2212].field_0) - (uint255(stor1[_2212].field_0) * 0.5 < 32):
                    revert with 0, 34
                _2222 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_2212].field_0) * 0.5) + 32
                mem[_2222] = uint255(stor1[_2212].field_0) * 0.5
                if bool(stor1[_2212].field_0):
                    if not bool(stor1[_2212].field_0) - (uint255(stor1[_2212].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if not Mask(256, -1, stor1[_2212].field_0):
                        mem[_2213 + 32] = _2222
                        mem[_2213 + 64] = stor2[_2212]
                        mem[_2213 + 96] = stor3[_2212]
                        mem[_2213 + 128] = stor4[_2212]
                        mem[_2213 + 160] = stor5[_2212]
                        mem[_2213 + 192] = stor6[_2212]
                        mem[_2213 + 224] = bool(uint8(stor7[_2212].field_0))
                        mem[_2213 + 256] = bool(uint8(stor7[_2212].field_8))
                        _2235 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_2235] = _2213
                        mem[_2235 + 32] = _2211
                        if block.timestamp < stor3[_2212]:
                            revert with 0, 17
                        if block.timestamp - stor3[_2212] and rewardPerDay > -1 / block.timestamp - stor3[_2212]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 and stor4[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000:
                            revert with 0, 17
                        mem[_2235 + 64] = (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000:
                            revert with 0, 17
                        mem[_2235 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                        mem[_2235 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _2235
                    else:
                        if 31 >= uint255(stor1[_2212].field_0) * 0.5:
                            mem[_2222 + 32] = 256 * Mask(248, 0, stor1[_2212].field_8)
                            mem[_2213 + 32] = _2222
                            mem[_2213 + 64] = stor2[_2212]
                            mem[_2213 + 96] = stor3[_2212]
                            mem[_2213 + 128] = stor4[_2212]
                            mem[_2213 + 160] = stor5[_2212]
                            mem[_2213 + 192] = stor6[_2212]
                            mem[_2213 + 224] = bool(uint8(stor7[_2212].field_0))
                            mem[_2213 + 256] = bool(uint8(stor7[_2212].field_8))
                            _2268 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_2268] = _2213
                            mem[_2268 + 32] = _2211
                            if block.timestamp < stor3[_2212]:
                                revert with 0, 17
                            if block.timestamp - stor3[_2212] and rewardPerDay > -1 / block.timestamp - stor3[_2212]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 and stor4[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000:
                                revert with 0, 17
                            mem[_2268 + 64] = (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000:
                                revert with 0, 17
                            mem[_2268 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                            mem[_2268 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _2268
                        else:
                            mem[0] = _2212 + 1
                            mem[_2222 + 32] = stor[sha3(_2212 + 1)]
                            s = _2222 + 32
                            t = sha3(_2212 + 1)
                            while _2222 + (uint255(stor1[_2212].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_2213 + 32] = _2222
                            mem[_2213 + 64] = stor2[_2212]
                            mem[_2213 + 96] = stor3[_2212]
                            mem[_2213 + 128] = stor4[_2212]
                            mem[_2213 + 160] = stor5[_2212]
                            mem[_2213 + 192] = stor6[_2212]
                            mem[_2213 + 224] = bool(uint8(stor7[_2212].field_0))
                            mem[_2213 + 256] = bool(uint8(stor7[_2212].field_8))
                            _2468 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_2468] = _2213
                            mem[_2468 + 32] = _2211
                            if block.timestamp < stor3[_2212]:
                                revert with 0, 17
                            if block.timestamp - stor3[_2212] and rewardPerDay > -1 / block.timestamp - stor3[_2212]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 and stor4[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000:
                                revert with 0, 17
                            mem[_2468 + 64] = (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000:
                                revert with 0, 17
                            mem[_2468 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                            mem[_2468 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _2468
                else:
                    if not bool(stor1[_2212].field_0) - (stor1[_2212].field_1 % 128 < 32):
                        revert with 0, 34
                    if not stor1[_2212].field_1 % 128:
                        mem[_2213 + 32] = _2222
                        mem[_2213 + 64] = stor2[_2212]
                        mem[_2213 + 96] = stor3[_2212]
                        mem[_2213 + 128] = stor4[_2212]
                        mem[_2213 + 160] = stor5[_2212]
                        mem[_2213 + 192] = stor6[_2212]
                        mem[_2213 + 224] = bool(uint8(stor7[_2212].field_0))
                        mem[_2213 + 256] = bool(uint8(stor7[_2212].field_8))
                        _2255 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_2255] = _2213
                        mem[_2255 + 32] = _2211
                        if block.timestamp < stor3[_2212]:
                            revert with 0, 17
                        if block.timestamp - stor3[_2212] and rewardPerDay > -1 / block.timestamp - stor3[_2212]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 and stor4[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000:
                            revert with 0, 17
                        mem[_2255 + 64] = (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000:
                            revert with 0, 17
                        mem[_2255 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                        mem[_2255 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _2255
                    else:
                        if 31 >= stor1[_2212].field_1 % 128:
                            mem[_2222 + 32] = 256 * Mask(248, 0, stor1[_2212].field_8)
                            mem[_2213 + 32] = _2222
                            mem[_2213 + 64] = stor2[_2212]
                            mem[_2213 + 96] = stor3[_2212]
                            mem[_2213 + 128] = stor4[_2212]
                            mem[_2213 + 160] = stor5[_2212]
                            mem[_2213 + 192] = stor6[_2212]
                            mem[_2213 + 224] = bool(uint8(stor7[_2212].field_0))
                            mem[_2213 + 256] = bool(uint8(stor7[_2212].field_8))
                            _2281 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_2281] = _2213
                            mem[_2281 + 32] = _2211
                            if block.timestamp < stor3[_2212]:
                                revert with 0, 17
                            if block.timestamp - stor3[_2212] and rewardPerDay > -1 / block.timestamp - stor3[_2212]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 and stor4[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000:
                                revert with 0, 17
                            mem[_2281 + 64] = (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000:
                                revert with 0, 17
                            mem[_2281 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                            mem[_2281 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _2281
                        else:
                            mem[0] = _2212 + 1
                            mem[_2222 + 32] = stor[sha3(_2212 + 1)]
                            s = _2222 + 32
                            t = sha3(_2212 + 1)
                            while _2222 + stor1[_2212].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_2213 + 32] = _2222
                            mem[_2213 + 64] = stor2[_2212]
                            mem[_2213 + 96] = stor3[_2212]
                            mem[_2213 + 128] = stor4[_2212]
                            mem[_2213 + 160] = stor5[_2212]
                            mem[_2213 + 192] = stor6[_2212]
                            mem[_2213 + 224] = bool(uint8(stor7[_2212].field_0))
                            mem[_2213 + 256] = bool(uint8(stor7[_2212].field_8))
                            _2469 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_2469] = _2213
                            mem[_2469 + 32] = _2211
                            if block.timestamp < stor3[_2212]:
                                revert with 0, 17
                            if block.timestamp - stor3[_2212] and rewardPerDay > -1 / block.timestamp - stor3[_2212]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 and stor4[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000:
                                revert with 0, 17
                            mem[_2469 + 64] = (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000:
                                revert with 0, 17
                            mem[_2469 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                            mem[_2469 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _2469
            else:
                if not bool(stor1[_2212].field_0) - (stor1[_2212].field_1 % 128 < 32):
                    revert with 0, 34
                _2224 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_2212].field_1 % 128) + 32
                mem[_2224] = stor1[_2212].field_1 % 128
                if bool(stor1[_2212].field_0):
                    if not bool(stor1[_2212].field_0) - (uint255(stor1[_2212].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if not Mask(256, -1, stor1[_2212].field_0):
                        mem[_2213 + 32] = _2224
                        mem[_2213 + 64] = stor2[_2212]
                        mem[_2213 + 96] = stor3[_2212]
                        mem[_2213 + 128] = stor4[_2212]
                        mem[_2213 + 160] = stor5[_2212]
                        mem[_2213 + 192] = stor6[_2212]
                        mem[_2213 + 224] = bool(uint8(stor7[_2212].field_0))
                        mem[_2213 + 256] = bool(uint8(stor7[_2212].field_8))
                        _2256 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_2256] = _2213
                        mem[_2256 + 32] = _2211
                        if block.timestamp < stor3[_2212]:
                            revert with 0, 17
                        if block.timestamp - stor3[_2212] and rewardPerDay > -1 / block.timestamp - stor3[_2212]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 and stor4[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000:
                            revert with 0, 17
                        mem[_2256 + 64] = (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000:
                            revert with 0, 17
                        mem[_2256 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                        mem[_2256 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _2256
                    else:
                        if 31 >= uint255(stor1[_2212].field_0) * 0.5:
                            mem[_2224 + 32] = 256 * Mask(248, 0, stor1[_2212].field_8)
                            mem[_2213 + 32] = _2224
                            mem[_2213 + 64] = stor2[_2212]
                            mem[_2213 + 96] = stor3[_2212]
                            mem[_2213 + 128] = stor4[_2212]
                            mem[_2213 + 160] = stor5[_2212]
                            mem[_2213 + 192] = stor6[_2212]
                            mem[_2213 + 224] = bool(uint8(stor7[_2212].field_0))
                            mem[_2213 + 256] = bool(uint8(stor7[_2212].field_8))
                            _2282 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_2282] = _2213
                            mem[_2282 + 32] = _2211
                            if block.timestamp < stor3[_2212]:
                                revert with 0, 17
                            if block.timestamp - stor3[_2212] and rewardPerDay > -1 / block.timestamp - stor3[_2212]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 and stor4[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000:
                                revert with 0, 17
                            mem[_2282 + 64] = (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000:
                                revert with 0, 17
                            mem[_2282 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                            mem[_2282 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _2282
                        else:
                            mem[0] = _2212 + 1
                            mem[_2224 + 32] = stor[sha3(_2212 + 1)]
                            s = _2224 + 32
                            t = sha3(_2212 + 1)
                            while _2224 + (uint255(stor1[_2212].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_2213 + 32] = _2224
                            mem[_2213 + 64] = stor2[_2212]
                            mem[_2213 + 96] = stor3[_2212]
                            mem[_2213 + 128] = stor4[_2212]
                            mem[_2213 + 160] = stor5[_2212]
                            mem[_2213 + 192] = stor6[_2212]
                            mem[_2213 + 224] = bool(uint8(stor7[_2212].field_0))
                            mem[_2213 + 256] = bool(uint8(stor7[_2212].field_8))
                            _2470 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_2470] = _2213
                            mem[_2470 + 32] = _2211
                            if block.timestamp < stor3[_2212]:
                                revert with 0, 17
                            if block.timestamp - stor3[_2212] and rewardPerDay > -1 / block.timestamp - stor3[_2212]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 and stor4[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000:
                                revert with 0, 17
                            mem[_2470 + 64] = (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000:
                                revert with 0, 17
                            mem[_2470 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                            mem[_2470 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _2470
                else:
                    if not bool(stor1[_2212].field_0) - (stor1[_2212].field_1 % 128 < 32):
                        revert with 0, 34
                    if not stor1[_2212].field_1 % 128:
                        mem[_2213 + 32] = _2224
                        mem[_2213 + 64] = stor2[_2212]
                        mem[_2213 + 96] = stor3[_2212]
                        mem[_2213 + 128] = stor4[_2212]
                        mem[_2213 + 160] = stor5[_2212]
                        mem[_2213 + 192] = stor6[_2212]
                        mem[_2213 + 224] = bool(uint8(stor7[_2212].field_0))
                        mem[_2213 + 256] = bool(uint8(stor7[_2212].field_8))
                        _2277 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_2277] = _2213
                        mem[_2277 + 32] = _2211
                        if block.timestamp < stor3[_2212]:
                            revert with 0, 17
                        if block.timestamp - stor3[_2212] and rewardPerDay > -1 / block.timestamp - stor3[_2212]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 and stor4[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000:
                            revert with 0, 17
                        mem[_2277 + 64] = (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000:
                            revert with 0, 17
                        mem[_2277 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                        mem[_2277 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _2277
                    else:
                        if 31 >= stor1[_2212].field_1 % 128:
                            mem[_2224 + 32] = 256 * Mask(248, 0, stor1[_2212].field_8)
                            mem[_2213 + 32] = _2224
                            mem[_2213 + 64] = stor2[_2212]
                            mem[_2213 + 96] = stor3[_2212]
                            mem[_2213 + 128] = stor4[_2212]
                            mem[_2213 + 160] = stor5[_2212]
                            mem[_2213 + 192] = stor6[_2212]
                            mem[_2213 + 224] = bool(uint8(stor7[_2212].field_0))
                            mem[_2213 + 256] = bool(uint8(stor7[_2212].field_8))
                            _2295 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_2295] = _2213
                            mem[_2295 + 32] = _2211
                            if block.timestamp < stor3[_2212]:
                                revert with 0, 17
                            if block.timestamp - stor3[_2212] and rewardPerDay > -1 / block.timestamp - stor3[_2212]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 and stor4[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000:
                                revert with 0, 17
                            mem[_2295 + 64] = (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000:
                                revert with 0, 17
                            mem[_2295 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                            mem[_2295 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _2295
                        else:
                            mem[0] = _2212 + 1
                            mem[_2224 + 32] = stor[sha3(_2212 + 1)]
                            s = _2224 + 32
                            t = sha3(_2212 + 1)
                            while _2224 + stor1[_2212].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_2213 + 32] = _2224
                            mem[_2213 + 64] = stor2[_2212]
                            mem[_2213 + 96] = stor3[_2212]
                            mem[_2213 + 128] = stor4[_2212]
                            mem[_2213 + 160] = stor5[_2212]
                            mem[_2213 + 192] = stor6[_2212]
                            mem[_2213 + 224] = bool(uint8(stor7[_2212].field_0))
                            mem[_2213 + 256] = bool(uint8(stor7[_2212].field_8))
                            _2471 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_2471] = _2213
                            mem[_2471 + 32] = _2211
                            if block.timestamp < stor3[_2212]:
                                revert with 0, 17
                            if block.timestamp - stor3[_2212] and rewardPerDay > -1 / block.timestamp - stor3[_2212]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 and stor4[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000:
                                revert with 0, 17
                            mem[_2471 + 64] = (block.timestamp * rewardPerDay) - (stor3[_2212] * rewardPerDay) / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 and stor5[_2212] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000:
                                revert with 0, 17
                            mem[_2471 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_2212] / 100000 * stor5[_2212] / 100000
                            mem[_2471 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _2471
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _2210 = mem[64]
        mem[mem[64]] = 32
        _2214 = mem[ceil32(32 * arg1.length) + 97]
        mem[mem[64] + 32] = mem[ceil32(32 * arg1.length) + 97]
        idx = 0
        s = ceil32(32 * arg1.length) + 129
        t = mem[64] + (32 * _2214) + 64
        u = mem[64] + 64
        while idx < _2214:
            mem[u] = t + -_2210 - 64
            _2462 = mem[s]
            _2463 = mem[mem[s]]
            mem[t] = 160
            mem[t + 160] = mem[_2463]
            _2465 = mem[_2463 + 32]
            mem[t + 192] = 288
            _2467 = mem[_2465]
            mem[t + 448] = mem[_2465]
            v = 0
            while v < _2467:
                mem[v + t + 480] = mem[v + _2465 + 32]
                v = v + 32
                continue 
            if ceil32(_2467) > _2467:
                mem[_2467 + t + 480] = 0
            mem[t + 224] = mem[_2463 + 64]
            mem[t + 256] = mem[_2463 + 96]
            mem[t + 288] = mem[_2463 + 128]
            mem[t + 320] = mem[_2463 + 160]
            mem[t + 352] = mem[_2463 + 192]
            mem[t + 384] = bool(mem[_2463 + 224])
            mem[t + 416] = bool(mem[_2463 + 256])
            mem[t + 32] = mem[_2462 + 32]
            mem[t + 64] = mem[_2462 + 64]
            mem[t + 96] = mem[_2462 + 96]
            mem[t + 128] = mem[_2462 + 128]
            idx = idx + 1
            s = s + 32
            t = ceil32(_2467) + t + 480
            u = u + 32
            continue 
        return memory
          from mem[64]
           len t - mem[64]
    mem[64] = ceil32(32 * arg1.length) + (32 * arg1.length) + 1473
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 1185] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 1217] = 96
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 1249] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 1281] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 1313] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 1345] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 1377] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 1409] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 1441] = 0
    mem[var44002] = var44001
    mem[var44002 + 32] = 0
    mem[var44002 + 64] = 0
    mem[var44002 + 96] = 0
    mem[var44002 + 128] = 0
    mem[var46002] = var46001
    if not var46003 - 1:
        idx = 0
        while idx < arg1.length:
            if idx >= mem[96]:
                revert with 0, 50
            _3057 = mem[(32 * idx) + 128]
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 552
            _3058 = sha3(mem[(32 * idx) + 128], 552)
            _3059 = mem[64]
            mem[64] = mem[64] + 288
            mem[_3059] = stor552[mem[(32 * idx) + 128]].field_0
            if bool(stor1[_3058].field_0):
                if not bool(stor1[_3058].field_0) - (uint255(stor1[_3058].field_0) * 0.5 < 32):
                    revert with 0, 34
                _3068 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_3058].field_0) * 0.5) + 32
                mem[_3068] = uint255(stor1[_3058].field_0) * 0.5
                if bool(stor1[_3058].field_0):
                    if not bool(stor1[_3058].field_0) - (uint255(stor1[_3058].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if not Mask(256, -1, stor1[_3058].field_0):
                        mem[_3059 + 32] = _3068
                        mem[_3059 + 64] = stor2[_3058]
                        mem[_3059 + 96] = stor3[_3058]
                        mem[_3059 + 128] = stor4[_3058]
                        mem[_3059 + 160] = stor5[_3058]
                        mem[_3059 + 192] = stor6[_3058]
                        mem[_3059 + 224] = bool(uint8(stor7[_3058].field_0))
                        mem[_3059 + 256] = bool(uint8(stor7[_3058].field_8))
                        _3081 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_3081] = _3059
                        mem[_3081 + 32] = _3057
                        if block.timestamp < stor3[_3058]:
                            revert with 0, 17
                        if block.timestamp - stor3[_3058] and rewardPerDay > -1 / block.timestamp - stor3[_3058]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 and stor4[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000:
                            revert with 0, 17
                        mem[_3081 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000:
                            revert with 0, 17
                        mem[_3081 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                        mem[_3081 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3081
                    else:
                        if 31 >= uint255(stor1[_3058].field_0) * 0.5:
                            mem[_3068 + 32] = 256 * Mask(248, 0, stor1[_3058].field_8)
                            mem[_3059 + 32] = _3068
                            mem[_3059 + 64] = stor2[_3058]
                            mem[_3059 + 96] = stor3[_3058]
                            mem[_3059 + 128] = stor4[_3058]
                            mem[_3059 + 160] = stor5[_3058]
                            mem[_3059 + 192] = stor6[_3058]
                            mem[_3059 + 224] = bool(uint8(stor7[_3058].field_0))
                            mem[_3059 + 256] = bool(uint8(stor7[_3058].field_8))
                            _3114 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_3114] = _3059
                            mem[_3114 + 32] = _3057
                            if block.timestamp < stor3[_3058]:
                                revert with 0, 17
                            if block.timestamp - stor3[_3058] and rewardPerDay > -1 / block.timestamp - stor3[_3058]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 and stor4[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000:
                                revert with 0, 17
                            mem[_3114 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000:
                                revert with 0, 17
                            mem[_3114 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                            mem[_3114 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3114
                        else:
                            mem[0] = _3058 + 1
                            mem[_3068 + 32] = stor[sha3(_3058 + 1)]
                            s = _3068 + 32
                            t = sha3(_3058 + 1)
                            while _3068 + (uint255(stor1[_3058].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_3059 + 32] = _3068
                            mem[_3059 + 64] = stor2[_3058]
                            mem[_3059 + 96] = stor3[_3058]
                            mem[_3059 + 128] = stor4[_3058]
                            mem[_3059 + 160] = stor5[_3058]
                            mem[_3059 + 192] = stor6[_3058]
                            mem[_3059 + 224] = bool(uint8(stor7[_3058].field_0))
                            mem[_3059 + 256] = bool(uint8(stor7[_3058].field_8))
                            _3314 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_3314] = _3059
                            mem[_3314 + 32] = _3057
                            if block.timestamp < stor3[_3058]:
                                revert with 0, 17
                            if block.timestamp - stor3[_3058] and rewardPerDay > -1 / block.timestamp - stor3[_3058]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 and stor4[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000:
                                revert with 0, 17
                            mem[_3314 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000:
                                revert with 0, 17
                            mem[_3314 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                            mem[_3314 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3314
                else:
                    if not bool(stor1[_3058].field_0) - (stor1[_3058].field_1 % 128 < 32):
                        revert with 0, 34
                    if not stor1[_3058].field_1 % 128:
                        mem[_3059 + 32] = _3068
                        mem[_3059 + 64] = stor2[_3058]
                        mem[_3059 + 96] = stor3[_3058]
                        mem[_3059 + 128] = stor4[_3058]
                        mem[_3059 + 160] = stor5[_3058]
                        mem[_3059 + 192] = stor6[_3058]
                        mem[_3059 + 224] = bool(uint8(stor7[_3058].field_0))
                        mem[_3059 + 256] = bool(uint8(stor7[_3058].field_8))
                        _3101 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_3101] = _3059
                        mem[_3101 + 32] = _3057
                        if block.timestamp < stor3[_3058]:
                            revert with 0, 17
                        if block.timestamp - stor3[_3058] and rewardPerDay > -1 / block.timestamp - stor3[_3058]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 and stor4[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000:
                            revert with 0, 17
                        mem[_3101 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000:
                            revert with 0, 17
                        mem[_3101 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                        mem[_3101 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3101
                    else:
                        if 31 >= stor1[_3058].field_1 % 128:
                            mem[_3068 + 32] = 256 * Mask(248, 0, stor1[_3058].field_8)
                            mem[_3059 + 32] = _3068
                            mem[_3059 + 64] = stor2[_3058]
                            mem[_3059 + 96] = stor3[_3058]
                            mem[_3059 + 128] = stor4[_3058]
                            mem[_3059 + 160] = stor5[_3058]
                            mem[_3059 + 192] = stor6[_3058]
                            mem[_3059 + 224] = bool(uint8(stor7[_3058].field_0))
                            mem[_3059 + 256] = bool(uint8(stor7[_3058].field_8))
                            _3127 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_3127] = _3059
                            mem[_3127 + 32] = _3057
                            if block.timestamp < stor3[_3058]:
                                revert with 0, 17
                            if block.timestamp - stor3[_3058] and rewardPerDay > -1 / block.timestamp - stor3[_3058]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 and stor4[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000:
                                revert with 0, 17
                            mem[_3127 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000:
                                revert with 0, 17
                            mem[_3127 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                            mem[_3127 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3127
                        else:
                            mem[0] = _3058 + 1
                            mem[_3068 + 32] = stor[sha3(_3058 + 1)]
                            s = _3068 + 32
                            t = sha3(_3058 + 1)
                            while _3068 + stor1[_3058].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_3059 + 32] = _3068
                            mem[_3059 + 64] = stor2[_3058]
                            mem[_3059 + 96] = stor3[_3058]
                            mem[_3059 + 128] = stor4[_3058]
                            mem[_3059 + 160] = stor5[_3058]
                            mem[_3059 + 192] = stor6[_3058]
                            mem[_3059 + 224] = bool(uint8(stor7[_3058].field_0))
                            mem[_3059 + 256] = bool(uint8(stor7[_3058].field_8))
                            _3315 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_3315] = _3059
                            mem[_3315 + 32] = _3057
                            if block.timestamp < stor3[_3058]:
                                revert with 0, 17
                            if block.timestamp - stor3[_3058] and rewardPerDay > -1 / block.timestamp - stor3[_3058]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 and stor4[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000:
                                revert with 0, 17
                            mem[_3315 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000:
                                revert with 0, 17
                            mem[_3315 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                            mem[_3315 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3315
            else:
                if not bool(stor1[_3058].field_0) - (stor1[_3058].field_1 % 128 < 32):
                    revert with 0, 34
                _3070 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_3058].field_1 % 128) + 32
                mem[_3070] = stor1[_3058].field_1 % 128
                if bool(stor1[_3058].field_0):
                    if not bool(stor1[_3058].field_0) - (uint255(stor1[_3058].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if not Mask(256, -1, stor1[_3058].field_0):
                        mem[_3059 + 32] = _3070
                        mem[_3059 + 64] = stor2[_3058]
                        mem[_3059 + 96] = stor3[_3058]
                        mem[_3059 + 128] = stor4[_3058]
                        mem[_3059 + 160] = stor5[_3058]
                        mem[_3059 + 192] = stor6[_3058]
                        mem[_3059 + 224] = bool(uint8(stor7[_3058].field_0))
                        mem[_3059 + 256] = bool(uint8(stor7[_3058].field_8))
                        _3102 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_3102] = _3059
                        mem[_3102 + 32] = _3057
                        if block.timestamp < stor3[_3058]:
                            revert with 0, 17
                        if block.timestamp - stor3[_3058] and rewardPerDay > -1 / block.timestamp - stor3[_3058]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 and stor4[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000:
                            revert with 0, 17
                        mem[_3102 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000:
                            revert with 0, 17
                        mem[_3102 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                        mem[_3102 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3102
                    else:
                        if 31 >= uint255(stor1[_3058].field_0) * 0.5:
                            mem[_3070 + 32] = 256 * Mask(248, 0, stor1[_3058].field_8)
                            mem[_3059 + 32] = _3070
                            mem[_3059 + 64] = stor2[_3058]
                            mem[_3059 + 96] = stor3[_3058]
                            mem[_3059 + 128] = stor4[_3058]
                            mem[_3059 + 160] = stor5[_3058]
                            mem[_3059 + 192] = stor6[_3058]
                            mem[_3059 + 224] = bool(uint8(stor7[_3058].field_0))
                            mem[_3059 + 256] = bool(uint8(stor7[_3058].field_8))
                            _3128 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_3128] = _3059
                            mem[_3128 + 32] = _3057
                            if block.timestamp < stor3[_3058]:
                                revert with 0, 17
                            if block.timestamp - stor3[_3058] and rewardPerDay > -1 / block.timestamp - stor3[_3058]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 and stor4[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000:
                                revert with 0, 17
                            mem[_3128 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000:
                                revert with 0, 17
                            mem[_3128 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                            mem[_3128 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3128
                        else:
                            mem[0] = _3058 + 1
                            mem[_3070 + 32] = stor[sha3(_3058 + 1)]
                            s = _3070 + 32
                            t = sha3(_3058 + 1)
                            while _3070 + (uint255(stor1[_3058].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_3059 + 32] = _3070
                            mem[_3059 + 64] = stor2[_3058]
                            mem[_3059 + 96] = stor3[_3058]
                            mem[_3059 + 128] = stor4[_3058]
                            mem[_3059 + 160] = stor5[_3058]
                            mem[_3059 + 192] = stor6[_3058]
                            mem[_3059 + 224] = bool(uint8(stor7[_3058].field_0))
                            mem[_3059 + 256] = bool(uint8(stor7[_3058].field_8))
                            _3316 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_3316] = _3059
                            mem[_3316 + 32] = _3057
                            if block.timestamp < stor3[_3058]:
                                revert with 0, 17
                            if block.timestamp - stor3[_3058] and rewardPerDay > -1 / block.timestamp - stor3[_3058]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 and stor4[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000:
                                revert with 0, 17
                            mem[_3316 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000:
                                revert with 0, 17
                            mem[_3316 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                            mem[_3316 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3316
                else:
                    if not bool(stor1[_3058].field_0) - (stor1[_3058].field_1 % 128 < 32):
                        revert with 0, 34
                    if not stor1[_3058].field_1 % 128:
                        mem[_3059 + 32] = _3070
                        mem[_3059 + 64] = stor2[_3058]
                        mem[_3059 + 96] = stor3[_3058]
                        mem[_3059 + 128] = stor4[_3058]
                        mem[_3059 + 160] = stor5[_3058]
                        mem[_3059 + 192] = stor6[_3058]
                        mem[_3059 + 224] = bool(uint8(stor7[_3058].field_0))
                        mem[_3059 + 256] = bool(uint8(stor7[_3058].field_8))
                        _3123 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_3123] = _3059
                        mem[_3123 + 32] = _3057
                        if block.timestamp < stor3[_3058]:
                            revert with 0, 17
                        if block.timestamp - stor3[_3058] and rewardPerDay > -1 / block.timestamp - stor3[_3058]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 and stor4[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000:
                            revert with 0, 17
                        mem[_3123 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000:
                            revert with 0, 17
                        mem[_3123 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                        mem[_3123 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3123
                    else:
                        if 31 >= stor1[_3058].field_1 % 128:
                            mem[_3070 + 32] = 256 * Mask(248, 0, stor1[_3058].field_8)
                            mem[_3059 + 32] = _3070
                            mem[_3059 + 64] = stor2[_3058]
                            mem[_3059 + 96] = stor3[_3058]
                            mem[_3059 + 128] = stor4[_3058]
                            mem[_3059 + 160] = stor5[_3058]
                            mem[_3059 + 192] = stor6[_3058]
                            mem[_3059 + 224] = bool(uint8(stor7[_3058].field_0))
                            mem[_3059 + 256] = bool(uint8(stor7[_3058].field_8))
                            _3141 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_3141] = _3059
                            mem[_3141 + 32] = _3057
                            if block.timestamp < stor3[_3058]:
                                revert with 0, 17
                            if block.timestamp - stor3[_3058] and rewardPerDay > -1 / block.timestamp - stor3[_3058]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 and stor4[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000:
                                revert with 0, 17
                            mem[_3141 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000:
                                revert with 0, 17
                            mem[_3141 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                            mem[_3141 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3141
                        else:
                            mem[0] = _3058 + 1
                            mem[_3070 + 32] = stor[sha3(_3058 + 1)]
                            s = _3070 + 32
                            t = sha3(_3058 + 1)
                            while _3070 + stor1[_3058].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_3059 + 32] = _3070
                            mem[_3059 + 64] = stor2[_3058]
                            mem[_3059 + 96] = stor3[_3058]
                            mem[_3059 + 128] = stor4[_3058]
                            mem[_3059 + 160] = stor5[_3058]
                            mem[_3059 + 192] = stor6[_3058]
                            mem[_3059 + 224] = bool(uint8(stor7[_3058].field_0))
                            mem[_3059 + 256] = bool(uint8(stor7[_3058].field_8))
                            _3317 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_3317] = _3059
                            mem[_3317 + 32] = _3057
                            if block.timestamp < stor3[_3058]:
                                revert with 0, 17
                            if block.timestamp - stor3[_3058] and rewardPerDay > -1 / block.timestamp - stor3[_3058]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 and stor4[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000:
                                revert with 0, 17
                            mem[_3317 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3058] * rewardPerDay) / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 and stor5[_3058] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000:
                                revert with 0, 17
                            mem[_3317 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3058] / 100000 * stor5[_3058] / 100000
                            mem[_3317 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3317
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _3056 = mem[64]
        mem[mem[64]] = 32
        _3060 = mem[ceil32(32 * arg1.length) + 97]
        mem[mem[64] + 32] = mem[ceil32(32 * arg1.length) + 97]
        idx = 0
        s = ceil32(32 * arg1.length) + 129
        t = mem[64] + (32 * _3060) + 64
        u = mem[64] + 64
        while idx < _3060:
            mem[u] = t + -_3056 - 64
            _3308 = mem[s]
            _3309 = mem[mem[s]]
            mem[t] = 160
            mem[t + 160] = mem[_3309]
            _3311 = mem[_3309 + 32]
            mem[t + 192] = 288
            _3313 = mem[_3311]
            mem[t + 448] = mem[_3311]
            v = 0
            while v < _3313:
                mem[v + t + 480] = mem[v + _3311 + 32]
                v = v + 32
                continue 
            if ceil32(_3313) > _3313:
                mem[_3313 + t + 480] = 0
            mem[t + 224] = mem[_3309 + 64]
            mem[t + 256] = mem[_3309 + 96]
            mem[t + 288] = mem[_3309 + 128]
            mem[t + 320] = mem[_3309 + 160]
            mem[t + 352] = mem[_3309 + 192]
            mem[t + 384] = bool(mem[_3309 + 224])
            mem[t + 416] = bool(mem[_3309 + 256])
            mem[t + 32] = mem[_3308 + 32]
            mem[t + 64] = mem[_3308 + 64]
            mem[t + 96] = mem[_3308 + 96]
            mem[t + 128] = mem[_3308 + 128]
            idx = idx + 1
            s = s + 32
            t = ceil32(_3313) + t + 480
            u = u + 32
            continue 
        return memory
          from mem[64]
           len t - mem[64]
    mem[64] = ceil32(32 * arg1.length) + (32 * arg1.length) + 1921
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 1633] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 1665] = 96
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 1697] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 1729] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 1761] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 1793] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 1825] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 1857] = 0
    mem[ceil32(32 * arg1.length) + (32 * arg1.length) + 1889] = 0
    mem[var52002] = var52001
    mem[var52002 + 32] = 0
    mem[var52002 + 64] = 0
    mem[var52002 + 96] = 0
    mem[var52002 + 128] = 0
    mem[var54002] = var54001
    if var54003 - 1:
        # nil
    else:
        idx = 0
        while idx < arg1.length:
            if idx >= mem[96]:
                revert with 0, 50
            _3903 = mem[(32 * idx) + 128]
            mem[0] = mem[(32 * idx) + 128]
            mem[32] = 552
            _3904 = sha3(mem[(32 * idx) + 128], 552)
            _3905 = mem[64]
            mem[64] = mem[64] + 288
            mem[_3905] = stor552[mem[(32 * idx) + 128]].field_0
            if bool(stor1[_3904].field_0):
                if not bool(stor1[_3904].field_0) - (uint255(stor1[_3904].field_0) * 0.5 < 32):
                    revert with 0, 34
                _3914 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_3904].field_0) * 0.5) + 32
                mem[_3914] = uint255(stor1[_3904].field_0) * 0.5
                if bool(stor1[_3904].field_0):
                    if not bool(stor1[_3904].field_0) - (uint255(stor1[_3904].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if not Mask(256, -1, stor1[_3904].field_0):
                        mem[_3905 + 32] = _3914
                        mem[_3905 + 64] = stor2[_3904]
                        mem[_3905 + 96] = stor3[_3904]
                        mem[_3905 + 128] = stor4[_3904]
                        mem[_3905 + 160] = stor5[_3904]
                        mem[_3905 + 192] = stor6[_3904]
                        mem[_3905 + 224] = bool(uint8(stor7[_3904].field_0))
                        mem[_3905 + 256] = bool(uint8(stor7[_3904].field_8))
                        _3927 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_3927] = _3905
                        mem[_3927 + 32] = _3903
                        if block.timestamp < stor3[_3904]:
                            revert with 0, 17
                        if block.timestamp - stor3[_3904] and rewardPerDay > -1 / block.timestamp - stor3[_3904]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 and stor4[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000:
                            revert with 0, 17
                        mem[_3927 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000:
                            revert with 0, 17
                        mem[_3927 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                        mem[_3927 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3927
                    else:
                        if 31 >= uint255(stor1[_3904].field_0) * 0.5:
                            mem[_3914 + 32] = 256 * Mask(248, 0, stor1[_3904].field_8)
                            mem[_3905 + 32] = _3914
                            mem[_3905 + 64] = stor2[_3904]
                            mem[_3905 + 96] = stor3[_3904]
                            mem[_3905 + 128] = stor4[_3904]
                            mem[_3905 + 160] = stor5[_3904]
                            mem[_3905 + 192] = stor6[_3904]
                            mem[_3905 + 224] = bool(uint8(stor7[_3904].field_0))
                            mem[_3905 + 256] = bool(uint8(stor7[_3904].field_8))
                            _3960 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_3960] = _3905
                            mem[_3960 + 32] = _3903
                            if block.timestamp < stor3[_3904]:
                                revert with 0, 17
                            if block.timestamp - stor3[_3904] and rewardPerDay > -1 / block.timestamp - stor3[_3904]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 and stor4[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000:
                                revert with 0, 17
                            mem[_3960 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000:
                                revert with 0, 17
                            mem[_3960 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                            mem[_3960 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3960
                        else:
                            mem[0] = _3904 + 1
                            mem[_3914 + 32] = stor[sha3(_3904 + 1)]
                            s = _3914 + 32
                            t = sha3(_3904 + 1)
                            while _3914 + (uint255(stor1[_3904].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_3905 + 32] = _3914
                            mem[_3905 + 64] = stor2[_3904]
                            mem[_3905 + 96] = stor3[_3904]
                            mem[_3905 + 128] = stor4[_3904]
                            mem[_3905 + 160] = stor5[_3904]
                            mem[_3905 + 192] = stor6[_3904]
                            mem[_3905 + 224] = bool(uint8(stor7[_3904].field_0))
                            mem[_3905 + 256] = bool(uint8(stor7[_3904].field_8))
                            _4160 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_4160] = _3905
                            mem[_4160 + 32] = _3903
                            if block.timestamp < stor3[_3904]:
                                revert with 0, 17
                            if block.timestamp - stor3[_3904] and rewardPerDay > -1 / block.timestamp - stor3[_3904]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 and stor4[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000:
                                revert with 0, 17
                            mem[_4160 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000:
                                revert with 0, 17
                            mem[_4160 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                            mem[_4160 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _4160
                else:
                    if not bool(stor1[_3904].field_0) - (stor1[_3904].field_1 % 128 < 32):
                        revert with 0, 34
                    if not stor1[_3904].field_1 % 128:
                        mem[_3905 + 32] = _3914
                        mem[_3905 + 64] = stor2[_3904]
                        mem[_3905 + 96] = stor3[_3904]
                        mem[_3905 + 128] = stor4[_3904]
                        mem[_3905 + 160] = stor5[_3904]
                        mem[_3905 + 192] = stor6[_3904]
                        mem[_3905 + 224] = bool(uint8(stor7[_3904].field_0))
                        mem[_3905 + 256] = bool(uint8(stor7[_3904].field_8))
                        _3947 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_3947] = _3905
                        mem[_3947 + 32] = _3903
                        if block.timestamp < stor3[_3904]:
                            revert with 0, 17
                        if block.timestamp - stor3[_3904] and rewardPerDay > -1 / block.timestamp - stor3[_3904]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 and stor4[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000:
                            revert with 0, 17
                        mem[_3947 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000:
                            revert with 0, 17
                        mem[_3947 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                        mem[_3947 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3947
                    else:
                        if 31 >= stor1[_3904].field_1 % 128:
                            mem[_3914 + 32] = 256 * Mask(248, 0, stor1[_3904].field_8)
                            mem[_3905 + 32] = _3914
                            mem[_3905 + 64] = stor2[_3904]
                            mem[_3905 + 96] = stor3[_3904]
                            mem[_3905 + 128] = stor4[_3904]
                            mem[_3905 + 160] = stor5[_3904]
                            mem[_3905 + 192] = stor6[_3904]
                            mem[_3905 + 224] = bool(uint8(stor7[_3904].field_0))
                            mem[_3905 + 256] = bool(uint8(stor7[_3904].field_8))
                            _3973 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_3973] = _3905
                            mem[_3973 + 32] = _3903
                            if block.timestamp < stor3[_3904]:
                                revert with 0, 17
                            if block.timestamp - stor3[_3904] and rewardPerDay > -1 / block.timestamp - stor3[_3904]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 and stor4[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000:
                                revert with 0, 17
                            mem[_3973 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000:
                                revert with 0, 17
                            mem[_3973 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                            mem[_3973 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3973
                        else:
                            mem[0] = _3904 + 1
                            mem[_3914 + 32] = stor[sha3(_3904 + 1)]
                            s = _3914 + 32
                            t = sha3(_3904 + 1)
                            while _3914 + stor1[_3904].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_3905 + 32] = _3914
                            mem[_3905 + 64] = stor2[_3904]
                            mem[_3905 + 96] = stor3[_3904]
                            mem[_3905 + 128] = stor4[_3904]
                            mem[_3905 + 160] = stor5[_3904]
                            mem[_3905 + 192] = stor6[_3904]
                            mem[_3905 + 224] = bool(uint8(stor7[_3904].field_0))
                            mem[_3905 + 256] = bool(uint8(stor7[_3904].field_8))
                            _4161 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_4161] = _3905
                            mem[_4161 + 32] = _3903
                            if block.timestamp < stor3[_3904]:
                                revert with 0, 17
                            if block.timestamp - stor3[_3904] and rewardPerDay > -1 / block.timestamp - stor3[_3904]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 and stor4[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000:
                                revert with 0, 17
                            mem[_4161 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000:
                                revert with 0, 17
                            mem[_4161 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                            mem[_4161 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _4161
            else:
                if not bool(stor1[_3904].field_0) - (stor1[_3904].field_1 % 128 < 32):
                    revert with 0, 34
                _3916 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_3904].field_1 % 128) + 32
                mem[_3916] = stor1[_3904].field_1 % 128
                if bool(stor1[_3904].field_0):
                    if not bool(stor1[_3904].field_0) - (uint255(stor1[_3904].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if not Mask(256, -1, stor1[_3904].field_0):
                        mem[_3905 + 32] = _3916
                        mem[_3905 + 64] = stor2[_3904]
                        mem[_3905 + 96] = stor3[_3904]
                        mem[_3905 + 128] = stor4[_3904]
                        mem[_3905 + 160] = stor5[_3904]
                        mem[_3905 + 192] = stor6[_3904]
                        mem[_3905 + 224] = bool(uint8(stor7[_3904].field_0))
                        mem[_3905 + 256] = bool(uint8(stor7[_3904].field_8))
                        _3948 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_3948] = _3905
                        mem[_3948 + 32] = _3903
                        if block.timestamp < stor3[_3904]:
                            revert with 0, 17
                        if block.timestamp - stor3[_3904] and rewardPerDay > -1 / block.timestamp - stor3[_3904]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 and stor4[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000:
                            revert with 0, 17
                        mem[_3948 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000:
                            revert with 0, 17
                        mem[_3948 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                        mem[_3948 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3948
                    else:
                        if 31 >= uint255(stor1[_3904].field_0) * 0.5:
                            mem[_3916 + 32] = 256 * Mask(248, 0, stor1[_3904].field_8)
                            mem[_3905 + 32] = _3916
                            mem[_3905 + 64] = stor2[_3904]
                            mem[_3905 + 96] = stor3[_3904]
                            mem[_3905 + 128] = stor4[_3904]
                            mem[_3905 + 160] = stor5[_3904]
                            mem[_3905 + 192] = stor6[_3904]
                            mem[_3905 + 224] = bool(uint8(stor7[_3904].field_0))
                            mem[_3905 + 256] = bool(uint8(stor7[_3904].field_8))
                            _3974 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_3974] = _3905
                            mem[_3974 + 32] = _3903
                            if block.timestamp < stor3[_3904]:
                                revert with 0, 17
                            if block.timestamp - stor3[_3904] and rewardPerDay > -1 / block.timestamp - stor3[_3904]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 and stor4[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000:
                                revert with 0, 17
                            mem[_3974 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000:
                                revert with 0, 17
                            mem[_3974 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                            mem[_3974 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3974
                        else:
                            mem[0] = _3904 + 1
                            mem[_3916 + 32] = stor[sha3(_3904 + 1)]
                            s = _3916 + 32
                            t = sha3(_3904 + 1)
                            while _3916 + (uint255(stor1[_3904].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_3905 + 32] = _3916
                            mem[_3905 + 64] = stor2[_3904]
                            mem[_3905 + 96] = stor3[_3904]
                            mem[_3905 + 128] = stor4[_3904]
                            mem[_3905 + 160] = stor5[_3904]
                            mem[_3905 + 192] = stor6[_3904]
                            mem[_3905 + 224] = bool(uint8(stor7[_3904].field_0))
                            mem[_3905 + 256] = bool(uint8(stor7[_3904].field_8))
                            _4162 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_4162] = _3905
                            mem[_4162 + 32] = _3903
                            if block.timestamp < stor3[_3904]:
                                revert with 0, 17
                            if block.timestamp - stor3[_3904] and rewardPerDay > -1 / block.timestamp - stor3[_3904]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 and stor4[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000:
                                revert with 0, 17
                            mem[_4162 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000:
                                revert with 0, 17
                            mem[_4162 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                            mem[_4162 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _4162
                else:
                    if not bool(stor1[_3904].field_0) - (stor1[_3904].field_1 % 128 < 32):
                        revert with 0, 34
                    if not stor1[_3904].field_1 % 128:
                        mem[_3905 + 32] = _3916
                        mem[_3905 + 64] = stor2[_3904]
                        mem[_3905 + 96] = stor3[_3904]
                        mem[_3905 + 128] = stor4[_3904]
                        mem[_3905 + 160] = stor5[_3904]
                        mem[_3905 + 192] = stor6[_3904]
                        mem[_3905 + 224] = bool(uint8(stor7[_3904].field_0))
                        mem[_3905 + 256] = bool(uint8(stor7[_3904].field_8))
                        _3969 = mem[64]
                        mem[64] = mem[64] + 160
                        mem[_3969] = _3905
                        mem[_3969 + 32] = _3903
                        if block.timestamp < stor3[_3904]:
                            revert with 0, 17
                        if block.timestamp - stor3[_3904] and rewardPerDay > -1 / block.timestamp - stor3[_3904]:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 and stor4[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6:
                            revert with 0, 17
                        if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000:
                            revert with 0, 17
                        mem[_3969 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                        if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                            revert with 0, 17
                        if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000:
                            revert with 0, 17
                        mem[_3969 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                        mem[_3969 + 128] = compoundDelay
                        if idx >= mem[ceil32(32 * arg1.length) + 97]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3969
                    else:
                        if 31 >= stor1[_3904].field_1 % 128:
                            mem[_3916 + 32] = 256 * Mask(248, 0, stor1[_3904].field_8)
                            mem[_3905 + 32] = _3916
                            mem[_3905 + 64] = stor2[_3904]
                            mem[_3905 + 96] = stor3[_3904]
                            mem[_3905 + 128] = stor4[_3904]
                            mem[_3905 + 160] = stor5[_3904]
                            mem[_3905 + 192] = stor6[_3904]
                            mem[_3905 + 224] = bool(uint8(stor7[_3904].field_0))
                            mem[_3905 + 256] = bool(uint8(stor7[_3904].field_8))
                            _3987 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_3987] = _3905
                            mem[_3987 + 32] = _3903
                            if block.timestamp < stor3[_3904]:
                                revert with 0, 17
                            if block.timestamp - stor3[_3904] and rewardPerDay > -1 / block.timestamp - stor3[_3904]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 and stor4[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000:
                                revert with 0, 17
                            mem[_3987 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000:
                                revert with 0, 17
                            mem[_3987 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                            mem[_3987 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _3987
                        else:
                            mem[0] = _3904 + 1
                            mem[_3916 + 32] = stor[sha3(_3904 + 1)]
                            s = _3916 + 32
                            t = sha3(_3904 + 1)
                            while _3916 + stor1[_3904].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_3905 + 32] = _3916
                            mem[_3905 + 64] = stor2[_3904]
                            mem[_3905 + 96] = stor3[_3904]
                            mem[_3905 + 128] = stor4[_3904]
                            mem[_3905 + 160] = stor5[_3904]
                            mem[_3905 + 192] = stor6[_3904]
                            mem[_3905 + 224] = bool(uint8(stor7[_3904].field_0))
                            mem[_3905 + 256] = bool(uint8(stor7[_3904].field_8))
                            _4163 = mem[64]
                            mem[64] = mem[64] + 160
                            mem[_4163] = _3905
                            mem[_4163 + 32] = _3903
                            if block.timestamp < stor3[_3904]:
                                revert with 0, 17
                            if block.timestamp - stor3[_3904] and rewardPerDay > -1 / block.timestamp - stor3[_3904]:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 and stor4[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6:
                                revert with 0, 17
                            if (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000:
                                revert with 0, 17
                            mem[_4163 + 64] = (block.timestamp * rewardPerDay) - (stor3[_3904] * rewardPerDay) / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                            if rewardPerDay > 0xc22e450672894ab6cd8efb11d33f5617839a5bc7dea00c22e450672894ab:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 and stor4[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6:
                                revert with 0, 17
                            if 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 and stor5[_3904] > -1 / 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000:
                                revert with 0, 17
                            mem[_4163 + 96] = 24 * 3600 * rewardPerDay / 10^6 * stor4[_3904] / 100000 * stor5[_3904] / 100000
                            mem[_4163 + 128] = compoundDelay
                            if idx >= mem[ceil32(32 * arg1.length) + 97]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(32 * arg1.length) + 129] = _4163
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _3906 = mem[ceil32(32 * arg1.length) + 97]
        mem[mem[64] + 32] = mem[ceil32(32 * arg1.length) + 97]
        if var69001 >= _3906:
            return memory
              from mem[64]
               len var69003 - mem[64]
        # nil
}

function sub_a74c0906(?) payable {
    require calldata.size - 4 >= 64
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    if arg2.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg2.length)) + 97 < 96 or ceil32(ceil32(arg2.length)) + 97 > test266151307():
        revert with 0, 65
    mem[96] = arg2.length
    require arg2 + arg2.length + 36 <= calldata.size
    mem[128 len arg2.length] = arg2[all]
    mem[arg2.length + 128] = 0
    if not stor401 - 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor401 = 2
    if not msg.sender:
        revert with 0, 'Planets: Cannot be from the zero address'
    if not msg.sender:
        revert with 0, 'ERC721: balance query for the zero address'
    if balanceOf[address(msg.sender)] <= 0:
        revert with 0, 'Planets: No Planet owned by this account'
    mem[ceil32(ceil32(arg2.length)) + 101] = msg.sender
    staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
            gas gas_remaining wei
           args msg.sender
    mem[ceil32(ceil32(arg2.length)) + 97] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if ext_call.return_data[0]:
        revert with 0, 'Planets: Fee receivers cannot own Planets'
    if arg1 <= 0:
        revert with 0, 'Planets: Id must be higher than zero'
    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 97] = stor552[arg1].field_0
    if bool(stor552[arg1].field_256):
        if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
            revert with 0, 34
        mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 385] = uint255(stor552[arg1].field_256) * 0.5
        if bool(stor552[arg1].field_256):
            if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                revert with 0, 34
            if not Mask(256, -1, stor552[arg1].field_256):
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 129] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 385
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 161] = stor552[arg1].field_512
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 193] = stor552[arg1].field_768
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 225] = stor552[arg1].field_1024
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 257] = stor552[arg1].field_1280
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 289] = stor552[arg1].field_1536
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 321] = bool(uint8(stor552[arg1].field_1792))
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 353] = bool(uint8(stor552[arg1].field_1800))
                if not uint8(stor552[arg1].field_1792):
                    revert with 0, 'Planets: This planet doesn't exist'
                if not msg.sender:
                    revert with 0, 'ERC721: balance query for the zero address'
                mem[0] = msg.sender
                mem[32] = 104
                if balanceOf[address(msg.sender)] > test266151307():
                    revert with 0, 65
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417] = balanceOf[address(msg.sender)]
                mem[64] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + (32 * balanceOf[address(msg.sender)]) + 449
                if not balanceOf[address(msg.sender)]:
                    idx = 0
                    while idx < balanceOf[address(msg.sender)]:
                        if not msg.sender:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if idx >= balanceOf[address(msg.sender)]:
                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                        if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                            revert with 0, 'Planets: Id must be higher than zero'
                        mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                        mem[32] = 552
                        _2884 = mem[64]
                        mem[64] = mem[64] + 288
                        mem[_2884] = stor552[stor151[address(msg.sender)][idx]].field_0
                        if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                            if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                revert with 0, 34
                            _3045 = mem[64]
                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                            mem[_3045] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                        mem[_3045 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3045 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3045 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3045 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                    if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        mem[_3045 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3045 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3045 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3045 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            mem[_2884 + 32] = _3045
                        else:
                            if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                revert with 0, 34
                            _3093 = mem[64]
                            mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                            mem[_3093] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                        mem[_3093 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3093 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3093 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3093 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                    if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        mem[_3093 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3093 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3093 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3093 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            mem[_2884 + 32] = _3093
                        mem[_2884 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                        mem[_2884 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                        mem[_2884 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                        mem[_2884 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                        mem[_2884 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                        mem[_2884 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                        mem[_2884 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                        if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                            revert with 0, 'Planets: This planet doesn't exist'
                        if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                        if not idx + 1:
                            revert with 0, 17
                        idx = idx + 1
                        continue 
                    idx = 0
                    while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                        if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                            revert with 0, 50
                        if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] - arg1:
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        if paused:
                            revert with 0, 'Pausable: paused'
                        if not universeImplementationAddress:
                            revert with 0, 'Planets: Universe is not set'
                        if mem[96] <= 1:
                            revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                        if mem[96] >= 32:
                            revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                        if not stor552[arg1].field_1280:
                            revert with 0, 'Error: Planet is empty'
                        if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                            revert with 0, 17
                        if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                            revert with 0, 17
                        if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                            revert with 0, 17
                        mem[0] = stor552[arg1].field_1024
                        mem[32] = 553
                        if uint8(stor553[stor552[arg1].field_1024].field_512):
                            if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                            if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                revert with 0, 17
                            if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                        else:
                            if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                            _6499 = mem[64]
                            mem[64] = mem[64] + 96
                            mem[_6499] = stor552[arg1].field_1024
                            mem[_6499 + 32] = -5 * stor552[arg1].field_1280 / 100
                            mem[_6499 + 64] = 1
                            stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                            stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                            uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                            stor554.length++
                            storCCA5[stor554.length] = stor552[arg1].field_1024
                        if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                            revert with 0, 17
                        sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                        stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                        if bool(stor552[arg1].field_256):
                            if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                revert with 0, 34
                            if not mem[96]:
                                stor552[arg1].field_256 = 0
                                idx = sha3(sha3(arg1, 552) + 1)
                                while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                            else:
                                stor552[arg1].field_256 = (2 * mem[96]) + 1
                                s = sha3(sha3(arg1, 552) + 1)
                                idx = 128
                                while mem[96] + 128 > idx:
                                    stor[s] = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                        else:
                            if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                revert with 0, 34
                            if not mem[96]:
                                stor552[arg1].field_256 = 0
                                idx = sha3(sha3(arg1, 552) + 1)
                                while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                            else:
                                stor552[arg1].field_256 = (2 * mem[96]) + 1
                                s = sha3(sha3(arg1, 552) + 1)
                                idx = 128
                                while mem[96] + 128 > idx:
                                    stor[s] = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                        stor401 = 1
                else:
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449 len 32 * balanceOf[address(msg.sender)]] = call.data[calldata.size len 32 * balanceOf[address(msg.sender)]]
                    idx = 0
                    while idx < balanceOf[address(msg.sender)]:
                        if not msg.sender:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if idx >= balanceOf[address(msg.sender)]:
                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                        if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                            revert with 0, 'Planets: Id must be higher than zero'
                        mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                        mem[32] = 552
                        _2887 = mem[64]
                        mem[64] = mem[64] + 288
                        mem[_2887] = stor552[stor151[address(msg.sender)][idx]].field_0
                        if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                            if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                revert with 0, 34
                            _3048 = mem[64]
                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                            mem[_3048] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                        mem[_3048 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3048 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3048 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3048 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                    if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        mem[_3048 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3048 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3048 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3048 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            mem[_2887 + 32] = _3048
                        else:
                            if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                revert with 0, 34
                            _3096 = mem[64]
                            mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                            mem[_3096] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                        mem[_3096 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3096 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3096 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3096 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                    if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        mem[_3096 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3096 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3096 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3096 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            mem[_2887 + 32] = _3096
                        mem[_2887 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                        mem[_2887 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                        mem[_2887 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                        mem[_2887 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                        mem[_2887 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                        mem[_2887 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                        mem[_2887 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                        if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                            revert with 0, 'Planets: This planet doesn't exist'
                        if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                        if not idx + 1:
                            revert with 0, 17
                        idx = idx + 1
                        continue 
                    idx = 0
                    while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                        if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                            revert with 0, 50
                        if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] - arg1:
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        if paused:
                            revert with 0, 'Pausable: paused'
                        if not universeImplementationAddress:
                            revert with 0, 'Planets: Universe is not set'
                        if mem[96] <= 1:
                            revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                        if mem[96] >= 32:
                            revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                        if not stor552[arg1].field_1280:
                            revert with 0, 'Error: Planet is empty'
                        if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                            revert with 0, 17
                        if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                            revert with 0, 17
                        if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                            revert with 0, 17
                        mem[0] = stor552[arg1].field_1024
                        mem[32] = 553
                        if uint8(stor553[stor552[arg1].field_1024].field_512):
                            if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                            if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                revert with 0, 17
                            if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                        else:
                            if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                            _6506 = mem[64]
                            mem[64] = mem[64] + 96
                            mem[_6506] = stor552[arg1].field_1024
                            mem[_6506 + 32] = -5 * stor552[arg1].field_1280 / 100
                            mem[_6506 + 64] = 1
                            stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                            stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                            uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                            stor554.length++
                            storCCA5[stor554.length] = stor552[arg1].field_1024
                        if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                            revert with 0, 17
                        sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                        stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                        if bool(stor552[arg1].field_256):
                            if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                revert with 0, 34
                            if not mem[96]:
                                stor552[arg1].field_256 = 0
                                idx = sha3(sha3(arg1, 552) + 1)
                                while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                            else:
                                stor552[arg1].field_256 = (2 * mem[96]) + 1
                                s = sha3(sha3(arg1, 552) + 1)
                                idx = 128
                                while mem[96] + 128 > idx:
                                    stor[s] = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                        else:
                            if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                revert with 0, 34
                            if not mem[96]:
                                stor552[arg1].field_256 = 0
                                idx = sha3(sha3(arg1, 552) + 1)
                                while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                            else:
                                stor552[arg1].field_256 = (2 * mem[96]) + 1
                                s = sha3(sha3(arg1, 552) + 1)
                                idx = 128
                                while mem[96] + 128 > idx:
                                    stor[s] = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                        stor401 = 1
            else:
                if 31 >= uint255(stor552[arg1].field_256) * 0.5:
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 417] = 256 * Mask(248, 0, stor552[arg1].field_264)
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 129] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 385
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 161] = stor552[arg1].field_512
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 193] = stor552[arg1].field_768
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 225] = stor552[arg1].field_1024
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 257] = stor552[arg1].field_1280
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 289] = stor552[arg1].field_1536
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 321] = bool(uint8(stor552[arg1].field_1792))
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 353] = bool(uint8(stor552[arg1].field_1800))
                    if not uint8(stor552[arg1].field_1792):
                        revert with 0, 'Planets: This planet doesn't exist'
                    if not msg.sender:
                        revert with 0, 'ERC721: balance query for the zero address'
                    mem[0] = msg.sender
                    mem[32] = 104
                    if balanceOf[address(msg.sender)] > test266151307():
                        revert with 0, 65
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417] = balanceOf[address(msg.sender)]
                    mem[64] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + (32 * balanceOf[address(msg.sender)]) + 449
                    if not balanceOf[address(msg.sender)]:
                        idx = 0
                        while idx < balanceOf[address(msg.sender)]:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(msg.sender)]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                                revert with 0, 'Planets: Id must be higher than zero'
                            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            mem[32] = 552
                            _2892 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_2892] = stor552[stor151[address(msg.sender)][idx]].field_0
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                _3051 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                                mem[_3051] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_3051 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3051 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3051 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3051 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_3051 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3051 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3051 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3051 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_2892 + 32] = _3051
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                _3099 = mem[64]
                                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                                mem[_3099] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_3099 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3099 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3099 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3099 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_3099 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3099 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3099 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3099 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_2892 + 32] = _3099
                            mem[_2892 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                            mem[_2892 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                            mem[_2892 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                            mem[_2892 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                            mem[_2892 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                            mem[_2892 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                            mem[_2892 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                                revert with 0, 'Planets: This planet doesn't exist'
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        idx = 0
                        while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                                revert with 0, 50
                            if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] - arg1:
                                if not idx + 1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            if paused:
                                revert with 0, 'Pausable: paused'
                            if not universeImplementationAddress:
                                revert with 0, 'Planets: Universe is not set'
                            if mem[96] <= 1:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if mem[96] >= 32:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if not stor552[arg1].field_1280:
                                revert with 0, 'Error: Planet is empty'
                            if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                                revert with 0, 17
                            if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                                revert with 0, 17
                            if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            mem[0] = stor552[arg1].field_1024
                            mem[32] = 553
                            if uint8(stor553[stor552[arg1].field_1024].field_512):
                                if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                    revert with 0, 17
                                if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 17
                                stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                            else:
                                if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                _6513 = mem[64]
                                mem[64] = mem[64] + 96
                                mem[_6513] = stor552[arg1].field_1024
                                mem[_6513 + 32] = -5 * stor552[arg1].field_1280 / 100
                                mem[_6513 + 64] = 1
                                stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                                stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                                uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                                stor554.length++
                                storCCA5[stor554.length] = stor552[arg1].field_1024
                            if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                                revert with 0, 17
                            sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                            stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                            if bool(stor552[arg1].field_256):
                                if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            stor401 = 1
                    else:
                        mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449 len 32 * balanceOf[address(msg.sender)]] = call.data[calldata.size len 32 * balanceOf[address(msg.sender)]]
                        idx = 0
                        while idx < balanceOf[address(msg.sender)]:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(msg.sender)]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                                revert with 0, 'Planets: Id must be higher than zero'
                            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            mem[32] = 552
                            _2895 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_2895] = stor552[stor151[address(msg.sender)][idx]].field_0
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                _3054 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                                mem[_3054] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_3054 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3054 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3054 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3054 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_3054 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3054 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3054 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3054 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_2895 + 32] = _3054
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                _3102 = mem[64]
                                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                                mem[_3102] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_3102 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3102 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3102 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3102 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_3102 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3102 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3102 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3102 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_2895 + 32] = _3102
                            mem[_2895 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                            mem[_2895 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                            mem[_2895 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                            mem[_2895 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                            mem[_2895 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                            mem[_2895 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                            mem[_2895 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                                revert with 0, 'Planets: This planet doesn't exist'
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        idx = 0
                        while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                                revert with 0, 50
                            if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] - arg1:
                                if not idx + 1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            if paused:
                                revert with 0, 'Pausable: paused'
                            if not universeImplementationAddress:
                                revert with 0, 'Planets: Universe is not set'
                            if mem[96] <= 1:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if mem[96] >= 32:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if not stor552[arg1].field_1280:
                                revert with 0, 'Error: Planet is empty'
                            if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                                revert with 0, 17
                            if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                                revert with 0, 17
                            if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            mem[0] = stor552[arg1].field_1024
                            mem[32] = 553
                            if uint8(stor553[stor552[arg1].field_1024].field_512):
                                if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                    revert with 0, 17
                                if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 17
                                stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                            else:
                                if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                _6520 = mem[64]
                                mem[64] = mem[64] + 96
                                mem[_6520] = stor552[arg1].field_1024
                                mem[_6520 + 32] = -5 * stor552[arg1].field_1280 / 100
                                mem[_6520 + 64] = 1
                                stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                                stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                                uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                                stor554.length++
                                storCCA5[stor554.length] = stor552[arg1].field_1024
                            if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                                revert with 0, 17
                            sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                            stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                            if bool(stor552[arg1].field_256):
                                if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            stor401 = 1
                else:
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 417] = stor552[arg1][1].field_0
                    idx = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 417
                    s = 0
                    while ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + (uint255(stor552[arg1].field_256) * 0.5) + 385 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 129] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 385
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 161] = stor552[arg1].field_512
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 193] = stor552[arg1].field_768
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 225] = stor552[arg1].field_1024
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 257] = stor552[arg1].field_1280
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 289] = stor552[arg1].field_1536
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 321] = bool(uint8(stor552[arg1].field_1792))
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 353] = bool(uint8(stor552[arg1].field_1800))
                    if not uint8(stor552[arg1].field_1792):
                        revert with 0, 'Planets: This planet doesn't exist'
                    if not msg.sender:
                        revert with 0, 'ERC721: balance query for the zero address'
                    mem[0] = msg.sender
                    mem[32] = 104
                    if balanceOf[address(msg.sender)] > test266151307():
                        revert with 0, 65
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417] = balanceOf[address(msg.sender)]
                    mem[64] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + (32 * balanceOf[address(msg.sender)]) + 449
                    if not balanceOf[address(msg.sender)]:
                        idx = 0
                        while idx < balanceOf[address(msg.sender)]:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(msg.sender)]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                                revert with 0, 'Planets: Id must be higher than zero'
                            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            mem[32] = 552
                            _5760 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_5760] = stor552[stor151[address(msg.sender)][idx]].field_0
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                _5961 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                                mem[_5961] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_5961 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_5961 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _5961 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _5961 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_5961 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_5961 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _5961 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _5961 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_5760 + 32] = _5961
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                _6013 = mem[64]
                                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                                mem[_6013] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_6013 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6013 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6013 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6013 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_6013 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6013 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6013 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6013 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_5760 + 32] = _6013
                            mem[_5760 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                            mem[_5760 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                            mem[_5760 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                            mem[_5760 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                            mem[_5760 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                            mem[_5760 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                            mem[_5760 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                                revert with 0, 'Planets: This planet doesn't exist'
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        idx = 0
                        while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                                revert with 0, 50
                            if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] - arg1:
                                if not idx + 1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            if paused:
                                revert with 0, 'Pausable: paused'
                            if not universeImplementationAddress:
                                revert with 0, 'Planets: Universe is not set'
                            if mem[96] <= 1:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if mem[96] >= 32:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if not stor552[arg1].field_1280:
                                revert with 0, 'Error: Planet is empty'
                            if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                                revert with 0, 17
                            if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                                revert with 0, 17
                            if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            mem[0] = stor552[arg1].field_1024
                            mem[32] = 553
                            if uint8(stor553[stor552[arg1].field_1024].field_512):
                                if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                    revert with 0, 17
                                if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 17
                                stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                            else:
                                if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                _7403 = mem[64]
                                mem[64] = mem[64] + 96
                                mem[_7403] = stor552[arg1].field_1024
                                mem[_7403 + 32] = -5 * stor552[arg1].field_1280 / 100
                                mem[_7403 + 64] = 1
                                stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                                stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                                uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                                stor554.length++
                                storCCA5[stor554.length] = stor552[arg1].field_1024
                            if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                                revert with 0, 17
                            sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                            stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                            if bool(stor552[arg1].field_256):
                                if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            stor401 = 1
                    else:
                        mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449 len 32 * balanceOf[address(msg.sender)]] = call.data[calldata.size len 32 * balanceOf[address(msg.sender)]]
                        idx = 0
                        while idx < balanceOf[address(msg.sender)]:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(msg.sender)]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                                revert with 0, 'Planets: Id must be higher than zero'
                            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            mem[32] = 552
                            _5763 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_5763] = stor552[stor151[address(msg.sender)][idx]].field_0
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                _5964 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                                mem[_5964] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_5964 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_5964 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _5964 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _5964 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_5964 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_5964 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _5964 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _5964 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_5763 + 32] = _5964
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                _6016 = mem[64]
                                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                                mem[_6016] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_6016 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6016 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6016 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6016 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_6016 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6016 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6016 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6016 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_5763 + 32] = _6016
                            mem[_5763 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                            mem[_5763 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                            mem[_5763 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                            mem[_5763 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                            mem[_5763 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                            mem[_5763 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                            mem[_5763 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                                revert with 0, 'Planets: This planet doesn't exist'
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        idx = 0
                        while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                                revert with 0, 50
                            if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] - arg1:
                                if not idx + 1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            if paused:
                                revert with 0, 'Pausable: paused'
                            if not universeImplementationAddress:
                                revert with 0, 'Planets: Universe is not set'
                            if mem[96] <= 1:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if mem[96] >= 32:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if not stor552[arg1].field_1280:
                                revert with 0, 'Error: Planet is empty'
                            if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                                revert with 0, 17
                            if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                                revert with 0, 17
                            if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            mem[0] = stor552[arg1].field_1024
                            mem[32] = 553
                            if uint8(stor553[stor552[arg1].field_1024].field_512):
                                if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                    revert with 0, 17
                                if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 17
                                stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                            else:
                                if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                _7410 = mem[64]
                                mem[64] = mem[64] + 96
                                mem[_7410] = stor552[arg1].field_1024
                                mem[_7410 + 32] = -5 * stor552[arg1].field_1280 / 100
                                mem[_7410 + 64] = 1
                                stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                                stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                                uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                                stor554.length++
                                storCCA5[stor554.length] = stor552[arg1].field_1024
                            if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                                revert with 0, 17
                            sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                            stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                            if bool(stor552[arg1].field_256):
                                if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            stor401 = 1
        else:
            if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                revert with 0, 34
            if not stor552[arg1].field_257 % 128:
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 129] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 385
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 161] = stor552[arg1].field_512
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 193] = stor552[arg1].field_768
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 225] = stor552[arg1].field_1024
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 257] = stor552[arg1].field_1280
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 289] = stor552[arg1].field_1536
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 321] = bool(uint8(stor552[arg1].field_1792))
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 353] = bool(uint8(stor552[arg1].field_1800))
                if not uint8(stor552[arg1].field_1792):
                    revert with 0, 'Planets: This planet doesn't exist'
                if not msg.sender:
                    revert with 0, 'ERC721: balance query for the zero address'
                mem[0] = msg.sender
                mem[32] = 104
                if balanceOf[address(msg.sender)] > test266151307():
                    revert with 0, 65
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417] = balanceOf[address(msg.sender)]
                mem[64] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + (32 * balanceOf[address(msg.sender)]) + 449
                if not balanceOf[address(msg.sender)]:
                    idx = 0
                    while idx < balanceOf[address(msg.sender)]:
                        if not msg.sender:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if idx >= balanceOf[address(msg.sender)]:
                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                        if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                            revert with 0, 'Planets: Id must be higher than zero'
                        mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                        mem[32] = 552
                        _2898 = mem[64]
                        mem[64] = mem[64] + 288
                        mem[_2898] = stor552[stor151[address(msg.sender)][idx]].field_0
                        if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                            if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                revert with 0, 34
                            _3057 = mem[64]
                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                            mem[_3057] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                        mem[_3057 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3057 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3057 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3057 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                    if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        mem[_3057 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3057 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3057 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3057 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            mem[_2898 + 32] = _3057
                        else:
                            if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                revert with 0, 34
                            _3105 = mem[64]
                            mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                            mem[_3105] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                        mem[_3105 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3105 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3105 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3105 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                    if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        mem[_3105 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3105 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3105 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3105 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            mem[_2898 + 32] = _3105
                        mem[_2898 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                        mem[_2898 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                        mem[_2898 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                        mem[_2898 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                        mem[_2898 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                        mem[_2898 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                        mem[_2898 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                        if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                            revert with 0, 'Planets: This planet doesn't exist'
                        if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                        if not idx + 1:
                            revert with 0, 17
                        idx = idx + 1
                        continue 
                    idx = 0
                    while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                        if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                            revert with 0, 50
                        if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] - arg1:
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        if paused:
                            revert with 0, 'Pausable: paused'
                        if not universeImplementationAddress:
                            revert with 0, 'Planets: Universe is not set'
                        if mem[96] <= 1:
                            revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                        if mem[96] >= 32:
                            revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                        if not stor552[arg1].field_1280:
                            revert with 0, 'Error: Planet is empty'
                        if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                            revert with 0, 17
                        if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                            revert with 0, 17
                        if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                            revert with 0, 17
                        mem[0] = stor552[arg1].field_1024
                        mem[32] = 553
                        if uint8(stor553[stor552[arg1].field_1024].field_512):
                            if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                            if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                revert with 0, 17
                            if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                        else:
                            if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                            _6527 = mem[64]
                            mem[64] = mem[64] + 96
                            mem[_6527] = stor552[arg1].field_1024
                            mem[_6527 + 32] = -5 * stor552[arg1].field_1280 / 100
                            mem[_6527 + 64] = 1
                            stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                            stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                            uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                            stor554.length++
                            storCCA5[stor554.length] = stor552[arg1].field_1024
                        if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                            revert with 0, 17
                        sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                        stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                        if bool(stor552[arg1].field_256):
                            if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                revert with 0, 34
                            if not mem[96]:
                                stor552[arg1].field_256 = 0
                                idx = sha3(sha3(arg1, 552) + 1)
                                while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                            else:
                                stor552[arg1].field_256 = (2 * mem[96]) + 1
                                s = sha3(sha3(arg1, 552) + 1)
                                idx = 128
                                while mem[96] + 128 > idx:
                                    stor[s] = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                        else:
                            if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                revert with 0, 34
                            if not mem[96]:
                                stor552[arg1].field_256 = 0
                                idx = sha3(sha3(arg1, 552) + 1)
                                while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                            else:
                                stor552[arg1].field_256 = (2 * mem[96]) + 1
                                s = sha3(sha3(arg1, 552) + 1)
                                idx = 128
                                while mem[96] + 128 > idx:
                                    stor[s] = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                        stor401 = 1
                else:
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449 len 32 * balanceOf[address(msg.sender)]] = call.data[calldata.size len 32 * balanceOf[address(msg.sender)]]
                    idx = 0
                    while idx < balanceOf[address(msg.sender)]:
                        if not msg.sender:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if idx >= balanceOf[address(msg.sender)]:
                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                        if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                            revert with 0, 'Planets: Id must be higher than zero'
                        mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                        mem[32] = 552
                        _2901 = mem[64]
                        mem[64] = mem[64] + 288
                        mem[_2901] = stor552[stor151[address(msg.sender)][idx]].field_0
                        if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                            if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                revert with 0, 34
                            _3060 = mem[64]
                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                            mem[_3060] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                        mem[_3060 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3060 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3060 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3060 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                    if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        mem[_3060 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3060 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3060 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3060 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            mem[_2901 + 32] = _3060
                        else:
                            if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                revert with 0, 34
                            _3108 = mem[64]
                            mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                            mem[_3108] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                        mem[_3108 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3108 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3108 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3108 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                    if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        mem[_3108 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3108 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3108 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3108 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            mem[_2901 + 32] = _3108
                        mem[_2901 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                        mem[_2901 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                        mem[_2901 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                        mem[_2901 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                        mem[_2901 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                        mem[_2901 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                        mem[_2901 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                        if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                            revert with 0, 'Planets: This planet doesn't exist'
                        if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                        if not idx + 1:
                            revert with 0, 17
                        idx = idx + 1
                        continue 
                    idx = 0
                    while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                        if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                            revert with 0, 50
                        if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] - arg1:
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        if paused:
                            revert with 0, 'Pausable: paused'
                        if not universeImplementationAddress:
                            revert with 0, 'Planets: Universe is not set'
                        if mem[96] <= 1:
                            revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                        if mem[96] >= 32:
                            revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                        if not stor552[arg1].field_1280:
                            revert with 0, 'Error: Planet is empty'
                        if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                            revert with 0, 17
                        if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                            revert with 0, 17
                        if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                            revert with 0, 17
                        mem[0] = stor552[arg1].field_1024
                        mem[32] = 553
                        if uint8(stor553[stor552[arg1].field_1024].field_512):
                            if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                            if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                revert with 0, 17
                            if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                        else:
                            if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                            _6534 = mem[64]
                            mem[64] = mem[64] + 96
                            mem[_6534] = stor552[arg1].field_1024
                            mem[_6534 + 32] = -5 * stor552[arg1].field_1280 / 100
                            mem[_6534 + 64] = 1
                            stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                            stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                            uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                            stor554.length++
                            storCCA5[stor554.length] = stor552[arg1].field_1024
                        if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                            revert with 0, 17
                        sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                        stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                        if bool(stor552[arg1].field_256):
                            if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                revert with 0, 34
                            if not mem[96]:
                                stor552[arg1].field_256 = 0
                                idx = sha3(sha3(arg1, 552) + 1)
                                while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                            else:
                                stor552[arg1].field_256 = (2 * mem[96]) + 1
                                s = sha3(sha3(arg1, 552) + 1)
                                idx = 128
                                while mem[96] + 128 > idx:
                                    stor[s] = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                        else:
                            if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                revert with 0, 34
                            if not mem[96]:
                                stor552[arg1].field_256 = 0
                                idx = sha3(sha3(arg1, 552) + 1)
                                while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                            else:
                                stor552[arg1].field_256 = (2 * mem[96]) + 1
                                s = sha3(sha3(arg1, 552) + 1)
                                idx = 128
                                while mem[96] + 128 > idx:
                                    stor[s] = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                        stor401 = 1
            else:
                if 31 >= stor552[arg1].field_257 % 128:
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 417] = 256 * Mask(248, 0, stor552[arg1].field_264)
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 129] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 385
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 161] = stor552[arg1].field_512
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 193] = stor552[arg1].field_768
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 225] = stor552[arg1].field_1024
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 257] = stor552[arg1].field_1280
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 289] = stor552[arg1].field_1536
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 321] = bool(uint8(stor552[arg1].field_1792))
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 353] = bool(uint8(stor552[arg1].field_1800))
                    if not uint8(stor552[arg1].field_1792):
                        revert with 0, 'Planets: This planet doesn't exist'
                    if not msg.sender:
                        revert with 0, 'ERC721: balance query for the zero address'
                    mem[0] = msg.sender
                    mem[32] = 104
                    if balanceOf[address(msg.sender)] > test266151307():
                        revert with 0, 65
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417] = balanceOf[address(msg.sender)]
                    mem[64] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + (32 * balanceOf[address(msg.sender)]) + 449
                    if not balanceOf[address(msg.sender)]:
                        idx = 0
                        while idx < balanceOf[address(msg.sender)]:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(msg.sender)]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                                revert with 0, 'Planets: Id must be higher than zero'
                            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            mem[32] = 552
                            _2906 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_2906] = stor552[stor151[address(msg.sender)][idx]].field_0
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                _3063 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                                mem[_3063] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_3063 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3063 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3063 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3063 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_3063 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3063 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3063 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3063 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_2906 + 32] = _3063
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                _3111 = mem[64]
                                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                                mem[_3111] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_3111 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3111 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3111 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3111 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_3111 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3111 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3111 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3111 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_2906 + 32] = _3111
                            mem[_2906 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                            mem[_2906 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                            mem[_2906 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                            mem[_2906 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                            mem[_2906 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                            mem[_2906 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                            mem[_2906 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                                revert with 0, 'Planets: This planet doesn't exist'
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        idx = 0
                        while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                                revert with 0, 50
                            if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] - arg1:
                                if not idx + 1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            if paused:
                                revert with 0, 'Pausable: paused'
                            if not universeImplementationAddress:
                                revert with 0, 'Planets: Universe is not set'
                            if mem[96] <= 1:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if mem[96] >= 32:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if not stor552[arg1].field_1280:
                                revert with 0, 'Error: Planet is empty'
                            if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                                revert with 0, 17
                            if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                                revert with 0, 17
                            if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            mem[0] = stor552[arg1].field_1024
                            mem[32] = 553
                            if uint8(stor553[stor552[arg1].field_1024].field_512):
                                if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                    revert with 0, 17
                                if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 17
                                stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                            else:
                                if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                _6541 = mem[64]
                                mem[64] = mem[64] + 96
                                mem[_6541] = stor552[arg1].field_1024
                                mem[_6541 + 32] = -5 * stor552[arg1].field_1280 / 100
                                mem[_6541 + 64] = 1
                                stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                                stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                                uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                                stor554.length++
                                storCCA5[stor554.length] = stor552[arg1].field_1024
                            if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                                revert with 0, 17
                            sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                            stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                            if bool(stor552[arg1].field_256):
                                if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            stor401 = 1
                    else:
                        mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449 len 32 * balanceOf[address(msg.sender)]] = call.data[calldata.size len 32 * balanceOf[address(msg.sender)]]
                        idx = 0
                        while idx < balanceOf[address(msg.sender)]:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(msg.sender)]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                                revert with 0, 'Planets: Id must be higher than zero'
                            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            mem[32] = 552
                            _2909 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_2909] = stor552[stor151[address(msg.sender)][idx]].field_0
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                _3066 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                                mem[_3066] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_3066 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3066 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3066 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3066 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_3066 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3066 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3066 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3066 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_2909 + 32] = _3066
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                _3114 = mem[64]
                                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                                mem[_3114] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_3114 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3114 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3114 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3114 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_3114 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3114 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3114 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3114 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_2909 + 32] = _3114
                            mem[_2909 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                            mem[_2909 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                            mem[_2909 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                            mem[_2909 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                            mem[_2909 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                            mem[_2909 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                            mem[_2909 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                                revert with 0, 'Planets: This planet doesn't exist'
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        idx = 0
                        while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                                revert with 0, 50
                            if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] - arg1:
                                if not idx + 1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            if paused:
                                revert with 0, 'Pausable: paused'
                            if not universeImplementationAddress:
                                revert with 0, 'Planets: Universe is not set'
                            if mem[96] <= 1:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if mem[96] >= 32:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if not stor552[arg1].field_1280:
                                revert with 0, 'Error: Planet is empty'
                            if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                                revert with 0, 17
                            if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                                revert with 0, 17
                            if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            mem[0] = stor552[arg1].field_1024
                            mem[32] = 553
                            if uint8(stor553[stor552[arg1].field_1024].field_512):
                                if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                    revert with 0, 17
                                if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 17
                                stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                            else:
                                if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                _6548 = mem[64]
                                mem[64] = mem[64] + 96
                                mem[_6548] = stor552[arg1].field_1024
                                mem[_6548 + 32] = -5 * stor552[arg1].field_1280 / 100
                                mem[_6548 + 64] = 1
                                stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                                stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                                uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                                stor554.length++
                                storCCA5[stor554.length] = stor552[arg1].field_1024
                            if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                                revert with 0, 17
                            sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                            stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                            if bool(stor552[arg1].field_256):
                                if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            stor401 = 1
                else:
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 417] = stor552[arg1][1].field_0
                    idx = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 417
                    s = 0
                    while ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + stor552[arg1].field_257 % 128 + 385 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 129] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 385
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 161] = stor552[arg1].field_512
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 193] = stor552[arg1].field_768
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 225] = stor552[arg1].field_1024
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 257] = stor552[arg1].field_1280
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 289] = stor552[arg1].field_1536
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 321] = bool(uint8(stor552[arg1].field_1792))
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 353] = bool(uint8(stor552[arg1].field_1800))
                    if not uint8(stor552[arg1].field_1792):
                        revert with 0, 'Planets: This planet doesn't exist'
                    if not msg.sender:
                        revert with 0, 'ERC721: balance query for the zero address'
                    mem[0] = msg.sender
                    mem[32] = 104
                    if balanceOf[address(msg.sender)] > test266151307():
                        revert with 0, 65
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417] = balanceOf[address(msg.sender)]
                    mem[64] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + (32 * balanceOf[address(msg.sender)]) + 449
                    if not balanceOf[address(msg.sender)]:
                        idx = 0
                        while idx < balanceOf[address(msg.sender)]:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(msg.sender)]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                                revert with 0, 'Planets: Id must be higher than zero'
                            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            mem[32] = 552
                            _5774 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_5774] = stor552[stor151[address(msg.sender)][idx]].field_0
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                _5975 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                                mem[_5975] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_5975 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_5975 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _5975 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _5975 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_5975 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_5975 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _5975 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _5975 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_5774 + 32] = _5975
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                _6019 = mem[64]
                                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                                mem[_6019] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_6019 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6019 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6019 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6019 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_6019 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6019 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6019 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6019 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_5774 + 32] = _6019
                            mem[_5774 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                            mem[_5774 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                            mem[_5774 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                            mem[_5774 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                            mem[_5774 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                            mem[_5774 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                            mem[_5774 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                                revert with 0, 'Planets: This planet doesn't exist'
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        idx = 0
                        while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                                revert with 0, 50
                            if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] - arg1:
                                if not idx + 1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            if paused:
                                revert with 0, 'Pausable: paused'
                            if not universeImplementationAddress:
                                revert with 0, 'Planets: Universe is not set'
                            if mem[96] <= 1:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if mem[96] >= 32:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if not stor552[arg1].field_1280:
                                revert with 0, 'Error: Planet is empty'
                            if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                                revert with 0, 17
                            if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                                revert with 0, 17
                            if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            mem[0] = stor552[arg1].field_1024
                            mem[32] = 553
                            if uint8(stor553[stor552[arg1].field_1024].field_512):
                                if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                    revert with 0, 17
                                if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 17
                                stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                            else:
                                if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                _7417 = mem[64]
                                mem[64] = mem[64] + 96
                                mem[_7417] = stor552[arg1].field_1024
                                mem[_7417 + 32] = -5 * stor552[arg1].field_1280 / 100
                                mem[_7417 + 64] = 1
                                stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                                stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                                uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                                stor554.length++
                                storCCA5[stor554.length] = stor552[arg1].field_1024
                            if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                                revert with 0, 17
                            sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                            stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                            if bool(stor552[arg1].field_256):
                                if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            stor401 = 1
                    else:
                        mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449 len 32 * balanceOf[address(msg.sender)]] = call.data[calldata.size len 32 * balanceOf[address(msg.sender)]]
                        idx = 0
                        while idx < balanceOf[address(msg.sender)]:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(msg.sender)]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                                revert with 0, 'Planets: Id must be higher than zero'
                            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            mem[32] = 552
                            _5777 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_5777] = stor552[stor151[address(msg.sender)][idx]].field_0
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                _5978 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                                mem[_5978] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_5978 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_5978 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _5978 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _5978 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_5978 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_5978 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _5978 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _5978 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_5777 + 32] = _5978
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                _6022 = mem[64]
                                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                                mem[_6022] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_6022 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6022 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6022 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6022 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_6022 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6022 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6022 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6022 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_5777 + 32] = _6022
                            mem[_5777 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                            mem[_5777 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                            mem[_5777 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                            mem[_5777 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                            mem[_5777 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                            mem[_5777 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                            mem[_5777 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                                revert with 0, 'Planets: This planet doesn't exist'
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        idx = 0
                        while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 417]:
                                revert with 0, 50
                            if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 449] - arg1:
                                if not idx + 1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            if paused:
                                revert with 0, 'Pausable: paused'
                            if not universeImplementationAddress:
                                revert with 0, 'Planets: Universe is not set'
                            if mem[96] <= 1:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if mem[96] >= 32:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if not stor552[arg1].field_1280:
                                revert with 0, 'Error: Planet is empty'
                            if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                                revert with 0, 17
                            if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                                revert with 0, 17
                            if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            mem[0] = stor552[arg1].field_1024
                            mem[32] = 553
                            if uint8(stor553[stor552[arg1].field_1024].field_512):
                                if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                    revert with 0, 17
                                if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 17
                                stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                            else:
                                if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                _7424 = mem[64]
                                mem[64] = mem[64] + 96
                                mem[_7424] = stor552[arg1].field_1024
                                mem[_7424 + 32] = -5 * stor552[arg1].field_1280 / 100
                                mem[_7424 + 64] = 1
                                stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                                stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                                uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                                stor554.length++
                                storCCA5[stor554.length] = stor552[arg1].field_1024
                            if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                                revert with 0, 17
                            sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                            stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                            if bool(stor552[arg1].field_256):
                                if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            stor401 = 1
    else:
        if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
            revert with 0, 34
        mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 385] = stor552[arg1].field_257 % 128
        if bool(stor552[arg1].field_256):
            if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                revert with 0, 34
            if not Mask(256, -1, stor552[arg1].field_256):
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 129] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 385
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 161] = stor552[arg1].field_512
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 193] = stor552[arg1].field_768
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 225] = stor552[arg1].field_1024
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 257] = stor552[arg1].field_1280
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 289] = stor552[arg1].field_1536
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 321] = bool(uint8(stor552[arg1].field_1792))
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 353] = bool(uint8(stor552[arg1].field_1800))
                if not uint8(stor552[arg1].field_1792):
                    revert with 0, 'Planets: This planet doesn't exist'
                if not msg.sender:
                    revert with 0, 'ERC721: balance query for the zero address'
                mem[0] = msg.sender
                mem[32] = 104
                if balanceOf[address(msg.sender)] > test266151307():
                    revert with 0, 65
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417] = balanceOf[address(msg.sender)]
                mem[64] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + (32 * balanceOf[address(msg.sender)]) + 449
                if not balanceOf[address(msg.sender)]:
                    idx = 0
                    while idx < balanceOf[address(msg.sender)]:
                        if not msg.sender:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if idx >= balanceOf[address(msg.sender)]:
                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                        if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                            revert with 0, 'Planets: Id must be higher than zero'
                        mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                        mem[32] = 552
                        _2912 = mem[64]
                        mem[64] = mem[64] + 288
                        mem[_2912] = stor552[stor151[address(msg.sender)][idx]].field_0
                        if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                            if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                revert with 0, 34
                            _3069 = mem[64]
                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                            mem[_3069] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                        mem[_3069 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3069 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3069 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3069 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                    if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        mem[_3069 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3069 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3069 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3069 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            mem[_2912 + 32] = _3069
                        else:
                            if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                revert with 0, 34
                            _3117 = mem[64]
                            mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                            mem[_3117] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                        mem[_3117 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3117 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3117 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3117 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                    if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        mem[_3117 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3117 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3117 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3117 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            mem[_2912 + 32] = _3117
                        mem[_2912 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                        mem[_2912 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                        mem[_2912 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                        mem[_2912 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                        mem[_2912 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                        mem[_2912 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                        mem[_2912 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                        if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                            revert with 0, 'Planets: This planet doesn't exist'
                        if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                        if not idx + 1:
                            revert with 0, 17
                        idx = idx + 1
                        continue 
                    idx = 0
                    while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                        if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                            revert with 0, 50
                        if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] - arg1:
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        if paused:
                            revert with 0, 'Pausable: paused'
                        if not universeImplementationAddress:
                            revert with 0, 'Planets: Universe is not set'
                        if mem[96] <= 1:
                            revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                        if mem[96] >= 32:
                            revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                        if not stor552[arg1].field_1280:
                            revert with 0, 'Error: Planet is empty'
                        if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                            revert with 0, 17
                        if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                            revert with 0, 17
                        if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                            revert with 0, 17
                        mem[0] = stor552[arg1].field_1024
                        mem[32] = 553
                        if uint8(stor553[stor552[arg1].field_1024].field_512):
                            if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                            if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                revert with 0, 17
                            if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                        else:
                            if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                            _6555 = mem[64]
                            mem[64] = mem[64] + 96
                            mem[_6555] = stor552[arg1].field_1024
                            mem[_6555 + 32] = -5 * stor552[arg1].field_1280 / 100
                            mem[_6555 + 64] = 1
                            stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                            stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                            uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                            stor554.length++
                            storCCA5[stor554.length] = stor552[arg1].field_1024
                        if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                            revert with 0, 17
                        sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                        stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                        if bool(stor552[arg1].field_256):
                            if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                revert with 0, 34
                            if not mem[96]:
                                stor552[arg1].field_256 = 0
                                idx = sha3(sha3(arg1, 552) + 1)
                                while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                            else:
                                stor552[arg1].field_256 = (2 * mem[96]) + 1
                                s = sha3(sha3(arg1, 552) + 1)
                                idx = 128
                                while mem[96] + 128 > idx:
                                    stor[s] = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                        else:
                            if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                revert with 0, 34
                            if not mem[96]:
                                stor552[arg1].field_256 = 0
                                idx = sha3(sha3(arg1, 552) + 1)
                                while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                            else:
                                stor552[arg1].field_256 = (2 * mem[96]) + 1
                                s = sha3(sha3(arg1, 552) + 1)
                                idx = 128
                                while mem[96] + 128 > idx:
                                    stor[s] = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                        stor401 = 1
                else:
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449 len 32 * balanceOf[address(msg.sender)]] = call.data[calldata.size len 32 * balanceOf[address(msg.sender)]]
                    idx = 0
                    while idx < balanceOf[address(msg.sender)]:
                        if not msg.sender:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if idx >= balanceOf[address(msg.sender)]:
                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                        if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                            revert with 0, 'Planets: Id must be higher than zero'
                        mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                        mem[32] = 552
                        _2915 = mem[64]
                        mem[64] = mem[64] + 288
                        mem[_2915] = stor552[stor151[address(msg.sender)][idx]].field_0
                        if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                            if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                revert with 0, 34
                            _3072 = mem[64]
                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                            mem[_3072] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                        mem[_3072 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3072 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3072 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3072 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                    if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        mem[_3072 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3072 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3072 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3072 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            mem[_2915 + 32] = _3072
                        else:
                            if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                revert with 0, 34
                            _3120 = mem[64]
                            mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                            mem[_3120] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                        mem[_3120 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3120 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3120 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3120 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                    if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        mem[_3120 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3120 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3120 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3120 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            mem[_2915 + 32] = _3120
                        mem[_2915 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                        mem[_2915 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                        mem[_2915 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                        mem[_2915 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                        mem[_2915 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                        mem[_2915 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                        mem[_2915 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                        if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                            revert with 0, 'Planets: This planet doesn't exist'
                        if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                        if not idx + 1:
                            revert with 0, 17
                        idx = idx + 1
                        continue 
                    idx = 0
                    while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                        if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                            revert with 0, 50
                        if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] - arg1:
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        if paused:
                            revert with 0, 'Pausable: paused'
                        if not universeImplementationAddress:
                            revert with 0, 'Planets: Universe is not set'
                        if mem[96] <= 1:
                            revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                        if mem[96] >= 32:
                            revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                        if not stor552[arg1].field_1280:
                            revert with 0, 'Error: Planet is empty'
                        if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                            revert with 0, 17
                        if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                            revert with 0, 17
                        if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                            revert with 0, 17
                        mem[0] = stor552[arg1].field_1024
                        mem[32] = 553
                        if uint8(stor553[stor552[arg1].field_1024].field_512):
                            if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                            if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                revert with 0, 17
                            if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                        else:
                            if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                            _6562 = mem[64]
                            mem[64] = mem[64] + 96
                            mem[_6562] = stor552[arg1].field_1024
                            mem[_6562 + 32] = -5 * stor552[arg1].field_1280 / 100
                            mem[_6562 + 64] = 1
                            stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                            stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                            uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                            stor554.length++
                            storCCA5[stor554.length] = stor552[arg1].field_1024
                        if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                            revert with 0, 17
                        sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                        stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                        if bool(stor552[arg1].field_256):
                            if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                revert with 0, 34
                            if not mem[96]:
                                stor552[arg1].field_256 = 0
                                idx = sha3(sha3(arg1, 552) + 1)
                                while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                            else:
                                stor552[arg1].field_256 = (2 * mem[96]) + 1
                                s = sha3(sha3(arg1, 552) + 1)
                                idx = 128
                                while mem[96] + 128 > idx:
                                    stor[s] = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                        else:
                            if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                revert with 0, 34
                            if not mem[96]:
                                stor552[arg1].field_256 = 0
                                idx = sha3(sha3(arg1, 552) + 1)
                                while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                            else:
                                stor552[arg1].field_256 = (2 * mem[96]) + 1
                                s = sha3(sha3(arg1, 552) + 1)
                                idx = 128
                                while mem[96] + 128 > idx:
                                    stor[s] = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                        stor401 = 1
            else:
                if 31 >= uint255(stor552[arg1].field_256) * 0.5:
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 417] = 256 * Mask(248, 0, stor552[arg1].field_264)
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 129] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 385
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 161] = stor552[arg1].field_512
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 193] = stor552[arg1].field_768
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 225] = stor552[arg1].field_1024
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 257] = stor552[arg1].field_1280
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 289] = stor552[arg1].field_1536
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 321] = bool(uint8(stor552[arg1].field_1792))
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 353] = bool(uint8(stor552[arg1].field_1800))
                    if not uint8(stor552[arg1].field_1792):
                        revert with 0, 'Planets: This planet doesn't exist'
                    if not msg.sender:
                        revert with 0, 'ERC721: balance query for the zero address'
                    mem[0] = msg.sender
                    mem[32] = 104
                    if balanceOf[address(msg.sender)] > test266151307():
                        revert with 0, 65
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417] = balanceOf[address(msg.sender)]
                    mem[64] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + (32 * balanceOf[address(msg.sender)]) + 449
                    if not balanceOf[address(msg.sender)]:
                        idx = 0
                        while idx < balanceOf[address(msg.sender)]:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(msg.sender)]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                                revert with 0, 'Planets: Id must be higher than zero'
                            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            mem[32] = 552
                            _2920 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_2920] = stor552[stor151[address(msg.sender)][idx]].field_0
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                _3075 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                                mem[_3075] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_3075 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3075 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3075 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3075 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_3075 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3075 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3075 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3075 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_2920 + 32] = _3075
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                _3123 = mem[64]
                                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                                mem[_3123] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_3123 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3123 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3123 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3123 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_3123 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3123 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3123 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3123 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_2920 + 32] = _3123
                            mem[_2920 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                            mem[_2920 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                            mem[_2920 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                            mem[_2920 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                            mem[_2920 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                            mem[_2920 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                            mem[_2920 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                                revert with 0, 'Planets: This planet doesn't exist'
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        idx = 0
                        while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                                revert with 0, 50
                            if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] - arg1:
                                if not idx + 1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            if paused:
                                revert with 0, 'Pausable: paused'
                            if not universeImplementationAddress:
                                revert with 0, 'Planets: Universe is not set'
                            if mem[96] <= 1:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if mem[96] >= 32:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if not stor552[arg1].field_1280:
                                revert with 0, 'Error: Planet is empty'
                            if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                                revert with 0, 17
                            if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                                revert with 0, 17
                            if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            mem[0] = stor552[arg1].field_1024
                            mem[32] = 553
                            if uint8(stor553[stor552[arg1].field_1024].field_512):
                                if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                    revert with 0, 17
                                if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 17
                                stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                            else:
                                if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                _6569 = mem[64]
                                mem[64] = mem[64] + 96
                                mem[_6569] = stor552[arg1].field_1024
                                mem[_6569 + 32] = -5 * stor552[arg1].field_1280 / 100
                                mem[_6569 + 64] = 1
                                stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                                stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                                uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                                stor554.length++
                                storCCA5[stor554.length] = stor552[arg1].field_1024
                            if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                                revert with 0, 17
                            sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                            stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                            if bool(stor552[arg1].field_256):
                                if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            stor401 = 1
                    else:
                        mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449 len 32 * balanceOf[address(msg.sender)]] = call.data[calldata.size len 32 * balanceOf[address(msg.sender)]]
                        idx = 0
                        while idx < balanceOf[address(msg.sender)]:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(msg.sender)]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                                revert with 0, 'Planets: Id must be higher than zero'
                            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            mem[32] = 552
                            _2923 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_2923] = stor552[stor151[address(msg.sender)][idx]].field_0
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                _3078 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                                mem[_3078] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_3078 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3078 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3078 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3078 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_3078 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3078 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3078 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3078 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_2923 + 32] = _3078
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                _3126 = mem[64]
                                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                                mem[_3126] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_3126 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3126 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3126 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3126 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_3126 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3126 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3126 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3126 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_2923 + 32] = _3126
                            mem[_2923 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                            mem[_2923 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                            mem[_2923 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                            mem[_2923 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                            mem[_2923 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                            mem[_2923 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                            mem[_2923 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                                revert with 0, 'Planets: This planet doesn't exist'
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        idx = 0
                        while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                                revert with 0, 50
                            if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] - arg1:
                                if not idx + 1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            if paused:
                                revert with 0, 'Pausable: paused'
                            if not universeImplementationAddress:
                                revert with 0, 'Planets: Universe is not set'
                            if mem[96] <= 1:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if mem[96] >= 32:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if not stor552[arg1].field_1280:
                                revert with 0, 'Error: Planet is empty'
                            if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                                revert with 0, 17
                            if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                                revert with 0, 17
                            if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            mem[0] = stor552[arg1].field_1024
                            mem[32] = 553
                            if uint8(stor553[stor552[arg1].field_1024].field_512):
                                if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                    revert with 0, 17
                                if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 17
                                stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                            else:
                                if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                _6576 = mem[64]
                                mem[64] = mem[64] + 96
                                mem[_6576] = stor552[arg1].field_1024
                                mem[_6576 + 32] = -5 * stor552[arg1].field_1280 / 100
                                mem[_6576 + 64] = 1
                                stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                                stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                                uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                                stor554.length++
                                storCCA5[stor554.length] = stor552[arg1].field_1024
                            if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                                revert with 0, 17
                            sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                            stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                            if bool(stor552[arg1].field_256):
                                if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            stor401 = 1
                else:
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 417] = stor552[arg1][1].field_0
                    idx = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 417
                    s = 0
                    while ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + (uint255(stor552[arg1].field_256) * 0.5) + 385 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 129] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 385
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 161] = stor552[arg1].field_512
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 193] = stor552[arg1].field_768
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 225] = stor552[arg1].field_1024
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 257] = stor552[arg1].field_1280
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 289] = stor552[arg1].field_1536
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 321] = bool(uint8(stor552[arg1].field_1792))
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 353] = bool(uint8(stor552[arg1].field_1800))
                    if not uint8(stor552[arg1].field_1792):
                        revert with 0, 'Planets: This planet doesn't exist'
                    if not msg.sender:
                        revert with 0, 'ERC721: balance query for the zero address'
                    mem[0] = msg.sender
                    mem[32] = 104
                    if balanceOf[address(msg.sender)] > test266151307():
                        revert with 0, 65
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417] = balanceOf[address(msg.sender)]
                    mem[64] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + (32 * balanceOf[address(msg.sender)]) + 449
                    if not balanceOf[address(msg.sender)]:
                        idx = 0
                        while idx < balanceOf[address(msg.sender)]:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(msg.sender)]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                                revert with 0, 'Planets: Id must be higher than zero'
                            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            mem[32] = 552
                            _5788 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_5788] = stor552[stor151[address(msg.sender)][idx]].field_0
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                _5989 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                                mem[_5989] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_5989 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_5989 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _5989 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _5989 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_5989 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_5989 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _5989 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _5989 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_5788 + 32] = _5989
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                _6025 = mem[64]
                                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                                mem[_6025] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_6025 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6025 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6025 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6025 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_6025 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6025 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6025 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6025 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_5788 + 32] = _6025
                            mem[_5788 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                            mem[_5788 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                            mem[_5788 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                            mem[_5788 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                            mem[_5788 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                            mem[_5788 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                            mem[_5788 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                                revert with 0, 'Planets: This planet doesn't exist'
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        idx = 0
                        while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                                revert with 0, 50
                            if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] - arg1:
                                if not idx + 1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            if paused:
                                revert with 0, 'Pausable: paused'
                            if not universeImplementationAddress:
                                revert with 0, 'Planets: Universe is not set'
                            if mem[96] <= 1:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if mem[96] >= 32:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if not stor552[arg1].field_1280:
                                revert with 0, 'Error: Planet is empty'
                            if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                                revert with 0, 17
                            if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                                revert with 0, 17
                            if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            mem[0] = stor552[arg1].field_1024
                            mem[32] = 553
                            if uint8(stor553[stor552[arg1].field_1024].field_512):
                                if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                    revert with 0, 17
                                if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 17
                                stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                            else:
                                if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                _7431 = mem[64]
                                mem[64] = mem[64] + 96
                                mem[_7431] = stor552[arg1].field_1024
                                mem[_7431 + 32] = -5 * stor552[arg1].field_1280 / 100
                                mem[_7431 + 64] = 1
                                stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                                stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                                uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                                stor554.length++
                                storCCA5[stor554.length] = stor552[arg1].field_1024
                            if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                                revert with 0, 17
                            sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                            stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                            if bool(stor552[arg1].field_256):
                                if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            stor401 = 1
                    else:
                        mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449 len 32 * balanceOf[address(msg.sender)]] = call.data[calldata.size len 32 * balanceOf[address(msg.sender)]]
                        idx = 0
                        while idx < balanceOf[address(msg.sender)]:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(msg.sender)]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                                revert with 0, 'Planets: Id must be higher than zero'
                            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            mem[32] = 552
                            _5791 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_5791] = stor552[stor151[address(msg.sender)][idx]].field_0
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                _5992 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                                mem[_5992] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_5992 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_5992 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _5992 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _5992 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_5992 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_5992 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _5992 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _5992 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_5791 + 32] = _5992
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                _6028 = mem[64]
                                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                                mem[_6028] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_6028 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6028 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6028 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6028 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_6028 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6028 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6028 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6028 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_5791 + 32] = _6028
                            mem[_5791 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                            mem[_5791 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                            mem[_5791 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                            mem[_5791 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                            mem[_5791 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                            mem[_5791 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                            mem[_5791 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                                revert with 0, 'Planets: This planet doesn't exist'
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        idx = 0
                        while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                                revert with 0, 50
                            if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] - arg1:
                                if not idx + 1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            if paused:
                                revert with 0, 'Pausable: paused'
                            if not universeImplementationAddress:
                                revert with 0, 'Planets: Universe is not set'
                            if mem[96] <= 1:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if mem[96] >= 32:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if not stor552[arg1].field_1280:
                                revert with 0, 'Error: Planet is empty'
                            if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                                revert with 0, 17
                            if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                                revert with 0, 17
                            if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            mem[0] = stor552[arg1].field_1024
                            mem[32] = 553
                            if uint8(stor553[stor552[arg1].field_1024].field_512):
                                if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                    revert with 0, 17
                                if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 17
                                stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                            else:
                                if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                _7438 = mem[64]
                                mem[64] = mem[64] + 96
                                mem[_7438] = stor552[arg1].field_1024
                                mem[_7438 + 32] = -5 * stor552[arg1].field_1280 / 100
                                mem[_7438 + 64] = 1
                                stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                                stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                                uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                                stor554.length++
                                storCCA5[stor554.length] = stor552[arg1].field_1024
                            if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                                revert with 0, 17
                            sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                            stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                            if bool(stor552[arg1].field_256):
                                if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            stor401 = 1
        else:
            if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                revert with 0, 34
            if not stor552[arg1].field_257 % 128:
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 129] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 385
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 161] = stor552[arg1].field_512
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 193] = stor552[arg1].field_768
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 225] = stor552[arg1].field_1024
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 257] = stor552[arg1].field_1280
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 289] = stor552[arg1].field_1536
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 321] = bool(uint8(stor552[arg1].field_1792))
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 353] = bool(uint8(stor552[arg1].field_1800))
                if not uint8(stor552[arg1].field_1792):
                    revert with 0, 'Planets: This planet doesn't exist'
                if not msg.sender:
                    revert with 0, 'ERC721: balance query for the zero address'
                mem[0] = msg.sender
                mem[32] = 104
                if balanceOf[address(msg.sender)] > test266151307():
                    revert with 0, 65
                mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417] = balanceOf[address(msg.sender)]
                mem[64] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + (32 * balanceOf[address(msg.sender)]) + 449
                if not balanceOf[address(msg.sender)]:
                    idx = 0
                    while idx < balanceOf[address(msg.sender)]:
                        if not msg.sender:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if idx >= balanceOf[address(msg.sender)]:
                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                        if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                            revert with 0, 'Planets: Id must be higher than zero'
                        mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                        mem[32] = 552
                        _2926 = mem[64]
                        mem[64] = mem[64] + 288
                        mem[_2926] = stor552[stor151[address(msg.sender)][idx]].field_0
                        if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                            if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                revert with 0, 34
                            _3081 = mem[64]
                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                            mem[_3081] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                        mem[_3081 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3081 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3081 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3081 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                    if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        mem[_3081 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3081 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3081 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3081 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            mem[_2926 + 32] = _3081
                        else:
                            if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                revert with 0, 34
                            _3129 = mem[64]
                            mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                            mem[_3129] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                        mem[_3129 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3129 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3129 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3129 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                    if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        mem[_3129 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3129 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3129 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3129 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            mem[_2926 + 32] = _3129
                        mem[_2926 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                        mem[_2926 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                        mem[_2926 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                        mem[_2926 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                        mem[_2926 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                        mem[_2926 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                        mem[_2926 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                        if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                            revert with 0, 'Planets: This planet doesn't exist'
                        if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                        if not idx + 1:
                            revert with 0, 17
                        idx = idx + 1
                        continue 
                    idx = 0
                    while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                        if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                            revert with 0, 50
                        if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] - arg1:
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        if paused:
                            revert with 0, 'Pausable: paused'
                        if not universeImplementationAddress:
                            revert with 0, 'Planets: Universe is not set'
                        if mem[96] <= 1:
                            revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                        if mem[96] >= 32:
                            revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                        if not stor552[arg1].field_1280:
                            revert with 0, 'Error: Planet is empty'
                        if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                            revert with 0, 17
                        if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                            revert with 0, 17
                        if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                            revert with 0, 17
                        mem[0] = stor552[arg1].field_1024
                        mem[32] = 553
                        if uint8(stor553[stor552[arg1].field_1024].field_512):
                            if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                            if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                revert with 0, 17
                            if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                        else:
                            if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                            _6583 = mem[64]
                            mem[64] = mem[64] + 96
                            mem[_6583] = stor552[arg1].field_1024
                            mem[_6583 + 32] = -5 * stor552[arg1].field_1280 / 100
                            mem[_6583 + 64] = 1
                            stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                            stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                            uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                            stor554.length++
                            storCCA5[stor554.length] = stor552[arg1].field_1024
                        if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                            revert with 0, 17
                        sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                        stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                        if bool(stor552[arg1].field_256):
                            if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                revert with 0, 34
                            if not mem[96]:
                                stor552[arg1].field_256 = 0
                                idx = sha3(sha3(arg1, 552) + 1)
                                while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                            else:
                                stor552[arg1].field_256 = (2 * mem[96]) + 1
                                s = sha3(sha3(arg1, 552) + 1)
                                idx = 128
                                while mem[96] + 128 > idx:
                                    stor[s] = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                        else:
                            if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                revert with 0, 34
                            if not mem[96]:
                                stor552[arg1].field_256 = 0
                                idx = sha3(sha3(arg1, 552) + 1)
                                while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                            else:
                                stor552[arg1].field_256 = (2 * mem[96]) + 1
                                s = sha3(sha3(arg1, 552) + 1)
                                idx = 128
                                while mem[96] + 128 > idx:
                                    stor[s] = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                        stor401 = 1
                else:
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449 len 32 * balanceOf[address(msg.sender)]] = call.data[calldata.size len 32 * balanceOf[address(msg.sender)]]
                    idx = 0
                    while idx < balanceOf[address(msg.sender)]:
                        if not msg.sender:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if idx >= balanceOf[address(msg.sender)]:
                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                        if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                            revert with 0, 'Planets: Id must be higher than zero'
                        mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                        mem[32] = 552
                        _2929 = mem[64]
                        mem[64] = mem[64] + 288
                        mem[_2929] = stor552[stor151[address(msg.sender)][idx]].field_0
                        if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                            if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                revert with 0, 34
                            _3084 = mem[64]
                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                            mem[_3084] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                        mem[_3084 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3084 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3084 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3084 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                    if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        mem[_3084 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3084 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3084 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3084 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            mem[_2929 + 32] = _3084
                        else:
                            if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                revert with 0, 34
                            _3132 = mem[64]
                            mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                            mem[_3132] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                        mem[_3132 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3132 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3132 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3132 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                    if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        mem[_3132 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                    else:
                                        mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                        mem[_3132 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                        s = _3132 + 32
                                        t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                        while _3132 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                            mem[s + 32] = stor1[t].field_0
                                            s = s + 32
                                            t = t + 1
                                            continue 
                            mem[_2929 + 32] = _3132
                        mem[_2929 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                        mem[_2929 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                        mem[_2929 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                        mem[_2929 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                        mem[_2929 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                        mem[_2929 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                        mem[_2929 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                        if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                            revert with 0, 'Planets: This planet doesn't exist'
                        if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                            revert with 0, 50
                        mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                        if not idx + 1:
                            revert with 0, 17
                        idx = idx + 1
                        continue 
                    idx = 0
                    while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                        if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                            revert with 0, 50
                        if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] - arg1:
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        if paused:
                            revert with 0, 'Pausable: paused'
                        if not universeImplementationAddress:
                            revert with 0, 'Planets: Universe is not set'
                        if mem[96] <= 1:
                            revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                        if mem[96] >= 32:
                            revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                        if not stor552[arg1].field_1280:
                            revert with 0, 'Error: Planet is empty'
                        if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                            revert with 0, 17
                        if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                            revert with 0, 17
                        if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                            revert with 0, 17
                        mem[0] = stor552[arg1].field_1024
                        mem[32] = 553
                        if uint8(stor553[stor552[arg1].field_1024].field_512):
                            if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                            if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                revert with 0, 17
                            if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                        else:
                            if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                            _6590 = mem[64]
                            mem[64] = mem[64] + 96
                            mem[_6590] = stor552[arg1].field_1024
                            mem[_6590 + 32] = -5 * stor552[arg1].field_1280 / 100
                            mem[_6590 + 64] = 1
                            stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                            stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                            uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                            stor554.length++
                            storCCA5[stor554.length] = stor552[arg1].field_1024
                        if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                            revert with 0, 17
                        sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                        stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                        if bool(stor552[arg1].field_256):
                            if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                revert with 0, 34
                            if not mem[96]:
                                stor552[arg1].field_256 = 0
                                idx = sha3(sha3(arg1, 552) + 1)
                                while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                            else:
                                stor552[arg1].field_256 = (2 * mem[96]) + 1
                                s = sha3(sha3(arg1, 552) + 1)
                                idx = 128
                                while mem[96] + 128 > idx:
                                    stor[s] = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                        else:
                            if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                revert with 0, 34
                            if not mem[96]:
                                stor552[arg1].field_256 = 0
                                idx = sha3(sha3(arg1, 552) + 1)
                                while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                            else:
                                stor552[arg1].field_256 = (2 * mem[96]) + 1
                                s = sha3(sha3(arg1, 552) + 1)
                                idx = 128
                                while mem[96] + 128 > idx:
                                    stor[s] = mem[idx]
                                    s = s + 1
                                    idx = idx + 32
                                    continue 
                                idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                    stor[idx] = 0
                                    idx = idx + 1
                                    continue 
                        stor401 = 1
            else:
                if 31 >= stor552[arg1].field_257 % 128:
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 417] = 256 * Mask(248, 0, stor552[arg1].field_264)
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 129] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 385
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 161] = stor552[arg1].field_512
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 193] = stor552[arg1].field_768
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 225] = stor552[arg1].field_1024
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 257] = stor552[arg1].field_1280
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 289] = stor552[arg1].field_1536
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 321] = bool(uint8(stor552[arg1].field_1792))
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 353] = bool(uint8(stor552[arg1].field_1800))
                    if not uint8(stor552[arg1].field_1792):
                        revert with 0, 'Planets: This planet doesn't exist'
                    if not msg.sender:
                        revert with 0, 'ERC721: balance query for the zero address'
                    mem[0] = msg.sender
                    mem[32] = 104
                    if balanceOf[address(msg.sender)] > test266151307():
                        revert with 0, 65
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417] = balanceOf[address(msg.sender)]
                    mem[64] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + (32 * balanceOf[address(msg.sender)]) + 449
                    if not balanceOf[address(msg.sender)]:
                        idx = 0
                        while idx < balanceOf[address(msg.sender)]:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(msg.sender)]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                                revert with 0, 'Planets: Id must be higher than zero'
                            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            mem[32] = 552
                            _2934 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_2934] = stor552[stor151[address(msg.sender)][idx]].field_0
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                _3087 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                                mem[_3087] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_3087 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3087 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3087 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3087 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_3087 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3087 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3087 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3087 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_2934 + 32] = _3087
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                _3135 = mem[64]
                                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                                mem[_3135] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_3135 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3135 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3135 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3135 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_3135 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3135 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3135 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3135 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_2934 + 32] = _3135
                            mem[_2934 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                            mem[_2934 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                            mem[_2934 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                            mem[_2934 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                            mem[_2934 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                            mem[_2934 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                            mem[_2934 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                                revert with 0, 'Planets: This planet doesn't exist'
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        idx = 0
                        while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                                revert with 0, 50
                            if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] - arg1:
                                if not idx + 1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            if paused:
                                revert with 0, 'Pausable: paused'
                            if not universeImplementationAddress:
                                revert with 0, 'Planets: Universe is not set'
                            if mem[96] <= 1:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if mem[96] >= 32:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if not stor552[arg1].field_1280:
                                revert with 0, 'Error: Planet is empty'
                            if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                                revert with 0, 17
                            if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                                revert with 0, 17
                            if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            mem[0] = stor552[arg1].field_1024
                            mem[32] = 553
                            if uint8(stor553[stor552[arg1].field_1024].field_512):
                                if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                    revert with 0, 17
                                if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 17
                                stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                            else:
                                if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                _6597 = mem[64]
                                mem[64] = mem[64] + 96
                                mem[_6597] = stor552[arg1].field_1024
                                mem[_6597 + 32] = -5 * stor552[arg1].field_1280 / 100
                                mem[_6597 + 64] = 1
                                stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                                stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                                uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                                stor554.length++
                                storCCA5[stor554.length] = stor552[arg1].field_1024
                            if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                                revert with 0, 17
                            sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                            stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                            if bool(stor552[arg1].field_256):
                                if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            stor401 = 1
                    else:
                        mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449 len 32 * balanceOf[address(msg.sender)]] = call.data[calldata.size len 32 * balanceOf[address(msg.sender)]]
                        idx = 0
                        while idx < balanceOf[address(msg.sender)]:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(msg.sender)]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                                revert with 0, 'Planets: Id must be higher than zero'
                            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            mem[32] = 552
                            _2937 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_2937] = stor552[stor151[address(msg.sender)][idx]].field_0
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                _3090 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                                mem[_3090] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_3090 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3090 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3090 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3090 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_3090 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3090 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3090 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3090 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_2937 + 32] = _3090
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                _3138 = mem[64]
                                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                                mem[_3138] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_3138 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3138 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3138 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3138 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_3138 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_3138 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _3138 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _3138 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_2937 + 32] = _3138
                            mem[_2937 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                            mem[_2937 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                            mem[_2937 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                            mem[_2937 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                            mem[_2937 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                            mem[_2937 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                            mem[_2937 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                                revert with 0, 'Planets: This planet doesn't exist'
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        idx = 0
                        while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                                revert with 0, 50
                            if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] - arg1:
                                if not idx + 1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            if paused:
                                revert with 0, 'Pausable: paused'
                            if not universeImplementationAddress:
                                revert with 0, 'Planets: Universe is not set'
                            if mem[96] <= 1:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if mem[96] >= 32:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if not stor552[arg1].field_1280:
                                revert with 0, 'Error: Planet is empty'
                            if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                                revert with 0, 17
                            if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                                revert with 0, 17
                            if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            mem[0] = stor552[arg1].field_1024
                            mem[32] = 553
                            if uint8(stor553[stor552[arg1].field_1024].field_512):
                                if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                    revert with 0, 17
                                if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 17
                                stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                            else:
                                if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                _6604 = mem[64]
                                mem[64] = mem[64] + 96
                                mem[_6604] = stor552[arg1].field_1024
                                mem[_6604 + 32] = -5 * stor552[arg1].field_1280 / 100
                                mem[_6604 + 64] = 1
                                stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                                stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                                uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                                stor554.length++
                                storCCA5[stor554.length] = stor552[arg1].field_1024
                            if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                                revert with 0, 17
                            sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                            stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                            if bool(stor552[arg1].field_256):
                                if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            stor401 = 1
                else:
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 417] = stor552[arg1][1].field_0
                    idx = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 417
                    s = 0
                    while ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + stor552[arg1].field_257 % 128 + 385 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 129] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 385
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 161] = stor552[arg1].field_512
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 193] = stor552[arg1].field_768
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 225] = stor552[arg1].field_1024
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 257] = stor552[arg1].field_1280
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 289] = stor552[arg1].field_1536
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 321] = bool(uint8(stor552[arg1].field_1792))
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + 353] = bool(uint8(stor552[arg1].field_1800))
                    if not uint8(stor552[arg1].field_1792):
                        revert with 0, 'Planets: This planet doesn't exist'
                    if not msg.sender:
                        revert with 0, 'ERC721: balance query for the zero address'
                    mem[0] = msg.sender
                    mem[32] = 104
                    if balanceOf[address(msg.sender)] > test266151307():
                        revert with 0, 65
                    mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417] = balanceOf[address(msg.sender)]
                    mem[64] = ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + (32 * balanceOf[address(msg.sender)]) + 449
                    if not balanceOf[address(msg.sender)]:
                        idx = 0
                        while idx < balanceOf[address(msg.sender)]:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(msg.sender)]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                                revert with 0, 'Planets: Id must be higher than zero'
                            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            mem[32] = 552
                            _5802 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_5802] = stor552[stor151[address(msg.sender)][idx]].field_0
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                _6003 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                                mem[_6003] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_6003 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6003 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6003 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6003 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_6003 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6003 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6003 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6003 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_5802 + 32] = _6003
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                _6031 = mem[64]
                                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                                mem[_6031] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_6031 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6031 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6031 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6031 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_6031 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6031 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6031 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6031 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_5802 + 32] = _6031
                            mem[_5802 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                            mem[_5802 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                            mem[_5802 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                            mem[_5802 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                            mem[_5802 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                            mem[_5802 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                            mem[_5802 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                                revert with 0, 'Planets: This planet doesn't exist'
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        idx = 0
                        while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                                revert with 0, 50
                            if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] - arg1:
                                if not idx + 1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            if paused:
                                revert with 0, 'Pausable: paused'
                            if not universeImplementationAddress:
                                revert with 0, 'Planets: Universe is not set'
                            if mem[96] <= 1:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if mem[96] >= 32:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if not stor552[arg1].field_1280:
                                revert with 0, 'Error: Planet is empty'
                            if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                                revert with 0, 17
                            if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                                revert with 0, 17
                            if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            mem[0] = stor552[arg1].field_1024
                            mem[32] = 553
                            if uint8(stor553[stor552[arg1].field_1024].field_512):
                                if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                    revert with 0, 17
                                if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 17
                                stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                            else:
                                if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                _7445 = mem[64]
                                mem[64] = mem[64] + 96
                                mem[_7445] = stor552[arg1].field_1024
                                mem[_7445 + 32] = -5 * stor552[arg1].field_1280 / 100
                                mem[_7445 + 64] = 1
                                stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                                stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                                uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                                stor554.length++
                                storCCA5[stor554.length] = stor552[arg1].field_1024
                            if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                                revert with 0, 17
                            sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                            stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                            if bool(stor552[arg1].field_256):
                                if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            stor401 = 1
                    else:
                        mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449 len 32 * balanceOf[address(msg.sender)]] = call.data[calldata.size len 32 * balanceOf[address(msg.sender)]]
                        idx = 0
                        while idx < balanceOf[address(msg.sender)]:
                            if not msg.sender:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if idx >= balanceOf[address(msg.sender)]:
                                revert with 0, 'ERC721Enumerable: owner index out of bounds'
                            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                                revert with 0, 'Planets: Id must be higher than zero'
                            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            mem[32] = 552
                            _5805 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_5805] = stor552[stor151[address(msg.sender)][idx]].field_0
                            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                _6006 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                                mem[_6006] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_6006 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6006 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6006 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6006 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_6006 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6006 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6006 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6006 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_5805 + 32] = _6006
                            else:
                                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                    revert with 0, 34
                                _6034 = mem[64]
                                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                                mem[_6034] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                                        revert with 0, 34
                                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                                            mem[_6034 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6034 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6034 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6034 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                else:
                                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                                        revert with 0, 34
                                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                                            mem[_6034 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                                        else:
                                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                                            mem[_6034 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                                            s = _6034 + 32
                                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                                            while _6034 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                mem[_5805 + 32] = _6034
                            mem[_5805 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
                            mem[_5805 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
                            mem[_5805 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
                            mem[_5805 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
                            mem[_5805 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
                            mem[_5805 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
                            mem[_5805 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
                            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                                revert with 0, 'Planets: This planet doesn't exist'
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                                revert with 0, 50
                            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] = tokenOfOwnerByIndex[address(msg.sender)][idx]
                            if not idx + 1:
                                revert with 0, 17
                            idx = idx + 1
                            continue 
                        idx = 0
                        while idx < mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                            if idx >= mem[ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 417]:
                                revert with 0, 50
                            if mem[(32 * idx) + ceil32(ceil32(arg2.length)) + ceil32(return_data.size) + ceil32(stor552[arg1].field_257 % 128) + 449] - arg1:
                                if not idx + 1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            if paused:
                                revert with 0, 'Pausable: paused'
                            if not universeImplementationAddress:
                                revert with 0, 'Planets: Universe is not set'
                            if mem[96] <= 1:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if mem[96] >= 32:
                                revert with 0, 'Planets: Incorrect name length, must be between 2 to 31'
                            if not stor552[arg1].field_1280:
                                revert with 0, 'Error: Planet is empty'
                            if stor552[arg1].field_1280 and 5 > -1 / stor552[arg1].field_1280:
                                revert with 0, 17
                            if stor552[arg1].field_1280 < 5 * stor552[arg1].field_1280 / 100:
                                revert with 0, 17
                            if not (5 * stor552[arg1].field_1280 / 100) - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                revert with 0, 17
                            mem[0] = stor552[arg1].field_1024
                            mem[32] = 553
                            if uint8(stor553[stor552[arg1].field_1024].field_512):
                                if stor552[arg1].field_1024 != stor553[stor552[arg1].field_1024].field_0:
                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                if -5 * stor552[arg1].field_1280 / 100 > -stor553[stor552[arg1].field_1024].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor552[arg1].field_1024].field_256 >= 0:
                                    revert with 0, 17
                                if stor553[stor552[arg1].field_1024].field_256 < 0 and -5 * stor552[arg1].field_1280 / 100 < -stor553[stor552[arg1].field_1024].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 17
                                stor553[stor552[arg1].field_1024].field_256 -= 5 * stor552[arg1].field_1280 / 100
                            else:
                                if -5 * stor552[arg1].field_1280 / 100 <= 0:
                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                _7452 = mem[64]
                                mem[64] = mem[64] + 96
                                mem[_7452] = stor552[arg1].field_1024
                                mem[_7452 + 32] = -5 * stor552[arg1].field_1280 / 100
                                mem[_7452 + 64] = 1
                                stor553[stor552[arg1].field_1024].field_0 = stor552[arg1].field_1024
                                stor553[stor552[arg1].field_1024].field_256 = -5 * stor552[arg1].field_1280 / 100
                                uint8(stor553[stor552[arg1].field_1024].field_512) = 1
                                stor554.length++
                                storCCA5[stor554.length] = stor552[arg1].field_1024
                            if sub_dfe59ed4 > !(5 * stor552[arg1].field_1280 / 100):
                                revert with 0, 17
                            sub_dfe59ed4 += 5 * stor552[arg1].field_1280 / 100
                            stor552[arg1].field_1280 -= 5 * stor552[arg1].field_1280 / 100
                            if bool(stor552[arg1].field_256):
                                if not bool(stor552[arg1].field_256) - (uint255(stor552[arg1].field_256) * 0.5 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + ((uint255(stor552[arg1].field_256) * 0.5) + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if not bool(stor552[arg1].field_256) - (stor552[arg1].field_257 % 128 < 32):
                                    revert with 0, 34
                                if not mem[96]:
                                    stor552[arg1].field_256 = 0
                                    idx = sha3(sha3(arg1, 552) + 1)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    stor552[arg1].field_256 = (2 * mem[96]) + 1
                                    s = sha3(sha3(arg1, 552) + 1)
                                    idx = 128
                                    while mem[96] + 128 > idx:
                                        stor[s] = mem[idx]
                                        s = s + 1
                                        idx = idx + 32
                                        continue 
                                    idx = sha3(sha3(arg1, 552) + 1) + (Mask(251, 0, mem[96] + 31) >> 5)
                                    while sha3(sha3(arg1, 552) + 1) + (stor552[arg1].field_257 % 128 + 31 / 32) > idx:
                                        stor[idx] = 0
                                        idx = idx + 1
                                        continue 
                            stor401 = 1
    revert with 0, 'Planets: You do not control this Planet'
}

function cashoutAll() payable {
    if not stor401 - 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor401 = 2
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Planets: Cannot be from the zero address'
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    if balanceOf[address(msg.sender)] <= 0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Planets: No Planet owned by this account'
    mem[100] = msg.sender
    staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
            gas gas_remaining wei
           args msg.sender
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if ext_call.return_data[0]:
        revert with 0, 'Planets: Fee receivers cannot own Planets'
    if paused:
        revert with 0, 'Pausable: paused'
    if not universeImplementationAddress:
        revert with 0, 'Planets: Universe is not set'
    if not msg.sender:
        revert with 0, 'ERC721: balance query for the zero address'
    if balanceOf[address(msg.sender)] > test266151307():
        revert with 0, 65
    mem[ceil32(return_data.size) + 96] = balanceOf[address(msg.sender)]
    mem[64] = ceil32(return_data.size) + (32 * balanceOf[address(msg.sender)]) + 128
    if not balanceOf[address(msg.sender)]:
        idx = 0
        while idx < balanceOf[address(msg.sender)]:
            if not msg.sender:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(msg.sender)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                revert with 0, 'Planets: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
            mem[32] = 552
            _9905 = mem[64]
            mem[64] = mem[64] + 288
            mem[_9905] = stor552[stor151[address(msg.sender)][idx]].field_0
            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                    revert with 0, 34
                _9916 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                mem[_9916] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                            mem[_9916 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_9916 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _9916 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _9916 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                            mem[_9916 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_9916 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _9916 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _9916 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_9905 + 32] = _9916
            else:
                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                    revert with 0, 34
                _9918 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                mem[_9918] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                            mem[_9918 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_9918 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _9918 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _9918 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                            mem[_9918 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_9918 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _9918 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _9918 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_9905 + 32] = _9918
            mem[_9905 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
            mem[_9905 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
            mem[_9905 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
            mem[_9905 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
            mem[_9905 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
            mem[_9905 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
            mem[_9905 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                revert with 0, 'Planets: This planet doesn't exist'
            if idx >= mem[ceil32(return_data.size) + 96]:
                revert with 0, 50
            mem[(32 * idx) + ceil32(return_data.size) + 128] = tokenOfOwnerByIndex[address(msg.sender)][idx]
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _19728 = mem[ceil32(return_data.size) + 96]
        idx = 0
        while idx < _19728:
            if idx >= mem[ceil32(return_data.size) + 96]:
                revert with 0, 50
            mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 128]
            mem[32] = 552
            _19743 = sha3(mem[(32 * idx) + ceil32(return_data.size) + 128], 552)
            _19744 = mem[64]
            mem[64] = mem[64] + 288
            mem[_19744] = stor552[mem[(32 * idx) + ceil32(return_data.size) + 128]].field_0
            if bool(stor1[_19743].field_0):
                if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                    revert with 0, 34
                _19766 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_19743].field_0) * 0.5) + 32
                mem[_19766] = uint255(stor1[_19743].field_0) * 0.5
                if bool(stor1[_19743].field_0):
                    if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if not Mask(256, -1, stor1[_19743].field_0):
                        mem[_19744 + 32] = _19766
                        mem[_19744 + 64] = stor2[_19743]
                        mem[_19744 + 96] = stor3[_19743]
                        mem[_19744 + 128] = stor4[_19743]
                        mem[_19744 + 160] = stor5[_19743]
                        mem[_19744 + 192] = stor6[_19743]
                        mem[_19744 + 224] = bool(uint8(stor7[_19743].field_0))
                        mem[_19744 + 256] = bool(uint8(stor7[_19743].field_8))
                        if stor3[_19743] > !compoundDelay:
                            revert with 0, 17
                        if block.timestamp >= stor3[_19743] + compoundDelay:
                            _19804 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_19804] = stor[_19743]
                            if bool(stor1[_19743].field_0):
                                if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                    revert with 0, 34
                                _19824 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor1[_19743].field_0) * 0.5) + 32
                                mem[_19824] = uint255(stor1[_19743].field_0) * 0.5
                                if bool(stor1[_19743].field_0):
                                    if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    if not Mask(256, -1, stor1[_19743].field_0):
                                        mem[_19804 + 32] = _19824
                                        mem[_19804 + 64] = stor2[_19743]
                                        mem[_19804 + 96] = stor3[_19743]
                                        mem[_19804 + 128] = stor4[_19743]
                                        mem[_19804 + 160] = stor5[_19743]
                                        mem[_19804 + 192] = stor6[_19743]
                                        mem[_19804 + 224] = bool(uint8(stor7[_19743].field_0))
                                        mem[_19804 + 256] = bool(uint8(stor7[_19743].field_8))
                                        if block.timestamp < stor3[_19743]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                            revert with 0, 17
                                        if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                            revert with 0, 17
                                        stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                        if tierLevel.length != stor4[_19743]:
                                            if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19743]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19743]].field_512):
                                                if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _23412 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_23412] = tierLevel.length
                                                    mem[_23412 + 32] = stor5[_19743]
                                                    mem[_23412 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19743] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _20852 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_20852] = stor4[_19743]
                                                mem[_20852 + 32] = -stor5[_19743]
                                                mem[_20852 + 64] = 1
                                                stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                uint8(stor553[stor4[_19743]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21376 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21376] = tierLevel.length
                                                    mem[_21376 + 32] = stor5[_19743]
                                                    mem[_21376 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                            mem[_19824 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                            mem[_19804 + 32] = _19824
                                            mem[_19804 + 64] = stor2[_19743]
                                            mem[_19804 + 96] = stor3[_19743]
                                            mem[_19804 + 128] = stor4[_19743]
                                            mem[_19804 + 160] = stor5[_19743]
                                            mem[_19804 + 192] = stor6[_19743]
                                            mem[_19804 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19804 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24787 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24787] = tierLevel.length
                                                        mem[_24787 + 32] = stor5[_19743]
                                                        mem[_24787 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _20968 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_20968] = stor4[_19743]
                                                    mem[_20968 + 32] = -stor5[_19743]
                                                    mem[_20968 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22192 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22192] = tierLevel.length
                                                        mem[_22192 + 32] = stor5[_19743]
                                                        mem[_22192 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19743 + 1
                                            mem[_19824 + 32] = stor[sha3(_19743 + 1)]
                                            s = _19824 + 32
                                            t = sha3(_19743 + 1)
                                            while _19824 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19804 + 32] = _19824
                                            mem[_19804 + 64] = stor2[_19743]
                                            mem[_19804 + 96] = stor3[_19743]
                                            mem[_19804 + 128] = stor4[_19743]
                                            mem[_19804 + 160] = stor5[_19743]
                                            mem[_19804 + 192] = stor6[_19743]
                                            mem[_19804 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19804 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31370 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31370] = tierLevel.length
                                                        mem[_31370 + 32] = stor5[_19743]
                                                        mem[_31370 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30090 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30090] = stor4[_19743]
                                                    mem[_30090 + 32] = -stor5[_19743]
                                                    mem[_30090 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30730 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30730] = tierLevel.length
                                                        mem[_30730 + 32] = stor5[_19743]
                                                        mem[_30730 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                        revert with 0, 34
                                    if not stor1[_19743].field_1 % 128:
                                        mem[_19804 + 32] = _19824
                                        mem[_19804 + 64] = stor2[_19743]
                                        mem[_19804 + 96] = stor3[_19743]
                                        mem[_19804 + 128] = stor4[_19743]
                                        mem[_19804 + 160] = stor5[_19743]
                                        mem[_19804 + 192] = stor6[_19743]
                                        mem[_19804 + 224] = bool(uint8(stor7[_19743].field_0))
                                        mem[_19804 + 256] = bool(uint8(stor7[_19743].field_8))
                                        if block.timestamp < stor3[_19743]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                            revert with 0, 17
                                        if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                            revert with 0, 17
                                        stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                        if tierLevel.length != stor4[_19743]:
                                            if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19743]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19743]].field_512):
                                                if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _24082 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_24082] = tierLevel.length
                                                    mem[_24082 + 32] = stor5[_19743]
                                                    mem[_24082 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19743] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _20884 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_20884] = stor4[_19743]
                                                mem[_20884 + 32] = -stor5[_19743]
                                                mem[_20884 + 64] = 1
                                                stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                uint8(stor553[stor4[_19743]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21726 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21726] = tierLevel.length
                                                    mem[_21726 + 32] = stor5[_19743]
                                                    mem[_21726 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= stor1[_19743].field_1 % 128:
                                            mem[_19824 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                            mem[_19804 + 32] = _19824
                                            mem[_19804 + 64] = stor2[_19743]
                                            mem[_19804 + 96] = stor3[_19743]
                                            mem[_19804 + 128] = stor4[_19743]
                                            mem[_19804 + 160] = stor5[_19743]
                                            mem[_19804 + 192] = stor6[_19743]
                                            mem[_19804 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19804 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25531 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25531] = tierLevel.length
                                                        mem[_25531 + 32] = stor5[_19743]
                                                        mem[_25531 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21132 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21132] = stor4[_19743]
                                                    mem[_21132 + 32] = -stor5[_19743]
                                                    mem[_21132 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22776 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22776] = tierLevel.length
                                                        mem[_22776 + 32] = stor5[_19743]
                                                        mem[_22776 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19743 + 1
                                            mem[_19824 + 32] = stor[sha3(_19743 + 1)]
                                            s = _19824 + 32
                                            t = sha3(_19743 + 1)
                                            while _19824 + stor1[_19743].field_1 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19804 + 32] = _19824
                                            mem[_19804 + 64] = stor2[_19743]
                                            mem[_19804 + 96] = stor3[_19743]
                                            mem[_19804 + 128] = stor4[_19743]
                                            mem[_19804 + 160] = stor5[_19743]
                                            mem[_19804 + 192] = stor6[_19743]
                                            mem[_19804 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19804 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31377 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31377] = tierLevel.length
                                                        mem[_31377 + 32] = stor5[_19743]
                                                        mem[_31377 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30097 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30097] = stor4[_19743]
                                                    mem[_30097 + 32] = -stor5[_19743]
                                                    mem[_30097 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30737 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30737] = tierLevel.length
                                                        mem[_30737 + 32] = stor5[_19743]
                                                        mem[_30737 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                            else:
                                if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                    revert with 0, 34
                                _19830 = mem[64]
                                mem[64] = mem[64] + ceil32(stor1[_19743].field_1 % 128) + 32
                                mem[_19830] = stor1[_19743].field_1 % 128
                                if bool(stor1[_19743].field_0):
                                    if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    if not Mask(256, -1, stor1[_19743].field_0):
                                        mem[_19804 + 32] = _19830
                                        mem[_19804 + 64] = stor2[_19743]
                                        mem[_19804 + 96] = stor3[_19743]
                                        mem[_19804 + 128] = stor4[_19743]
                                        mem[_19804 + 160] = stor5[_19743]
                                        mem[_19804 + 192] = stor6[_19743]
                                        mem[_19804 + 224] = bool(uint8(stor7[_19743].field_0))
                                        mem[_19804 + 256] = bool(uint8(stor7[_19743].field_8))
                                        if block.timestamp < stor3[_19743]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                            revert with 0, 17
                                        if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                            revert with 0, 17
                                        stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                        if tierLevel.length != stor4[_19743]:
                                            if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19743]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19743]].field_512):
                                                if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _24097 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_24097] = tierLevel.length
                                                    mem[_24097 + 32] = stor5[_19743]
                                                    mem[_24097 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19743] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _20892 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_20892] = stor4[_19743]
                                                mem[_20892 + 32] = -stor5[_19743]
                                                mem[_20892 + 64] = 1
                                                stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                uint8(stor553[stor4[_19743]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21741 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21741] = tierLevel.length
                                                    mem[_21741 + 32] = stor5[_19743]
                                                    mem[_21741 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                            mem[_19830 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                            mem[_19804 + 32] = _19830
                                            mem[_19804 + 64] = stor2[_19743]
                                            mem[_19804 + 96] = stor3[_19743]
                                            mem[_19804 + 128] = stor4[_19743]
                                            mem[_19804 + 160] = stor5[_19743]
                                            mem[_19804 + 192] = stor6[_19743]
                                            mem[_19804 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19804 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25539 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25539] = tierLevel.length
                                                        mem[_25539 + 32] = stor5[_19743]
                                                        mem[_25539 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21141 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21141] = stor4[_19743]
                                                    mem[_21141 + 32] = -stor5[_19743]
                                                    mem[_21141 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22785 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22785] = tierLevel.length
                                                        mem[_22785 + 32] = stor5[_19743]
                                                        mem[_22785 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19743 + 1
                                            mem[_19830 + 32] = stor[sha3(_19743 + 1)]
                                            s = _19830 + 32
                                            t = sha3(_19743 + 1)
                                            while _19830 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19804 + 32] = _19830
                                            mem[_19804 + 64] = stor2[_19743]
                                            mem[_19804 + 96] = stor3[_19743]
                                            mem[_19804 + 128] = stor4[_19743]
                                            mem[_19804 + 160] = stor5[_19743]
                                            mem[_19804 + 192] = stor6[_19743]
                                            mem[_19804 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19804 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31384 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31384] = tierLevel.length
                                                        mem[_31384 + 32] = stor5[_19743]
                                                        mem[_31384 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30104 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30104] = stor4[_19743]
                                                    mem[_30104 + 32] = -stor5[_19743]
                                                    mem[_30104 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30744 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30744] = tierLevel.length
                                                        mem[_30744 + 32] = stor5[_19743]
                                                        mem[_30744 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                        revert with 0, 34
                                    if not stor1[_19743].field_1 % 128:
                                        mem[_19804 + 32] = _19830
                                        mem[_19804 + 64] = stor2[_19743]
                                        mem[_19804 + 96] = stor3[_19743]
                                        mem[_19804 + 128] = stor4[_19743]
                                        mem[_19804 + 160] = stor5[_19743]
                                        mem[_19804 + 192] = stor6[_19743]
                                        mem[_19804 + 224] = bool(uint8(stor7[_19743].field_0))
                                        mem[_19804 + 256] = bool(uint8(stor7[_19743].field_8))
                                        if block.timestamp < stor3[_19743]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                            revert with 0, 17
                                        if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                            revert with 0, 17
                                        stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                        if tierLevel.length != stor4[_19743]:
                                            if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19743]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19743]].field_512):
                                                if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _24802 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_24802] = tierLevel.length
                                                    mem[_24802 + 32] = stor5[_19743]
                                                    mem[_24802 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19743] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _20979 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_20979] = stor4[_19743]
                                                mem[_20979 + 32] = -stor5[_19743]
                                                mem[_20979 + 64] = 1
                                                stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                uint8(stor553[stor4[_19743]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22207 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22207] = tierLevel.length
                                                    mem[_22207 + 32] = stor5[_19743]
                                                    mem[_22207 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= stor1[_19743].field_1 % 128:
                                            mem[_19830 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                            mem[_19804 + 32] = _19830
                                            mem[_19804 + 64] = stor2[_19743]
                                            mem[_19804 + 96] = stor3[_19743]
                                            mem[_19804 + 128] = stor4[_19743]
                                            mem[_19804 + 160] = stor5[_19743]
                                            mem[_19804 + 192] = stor6[_19743]
                                            mem[_19804 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19804 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26260 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26260] = tierLevel.length
                                                        mem[_26260 + 32] = stor5[_19743]
                                                        mem[_26260 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21397 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21397] = stor4[_19743]
                                                    mem[_21397 + 32] = -stor5[_19743]
                                                    mem[_21397 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23433 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23433] = tierLevel.length
                                                        mem[_23433 + 32] = stor5[_19743]
                                                        mem[_23433 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19743 + 1
                                            mem[_19830 + 32] = stor[sha3(_19743 + 1)]
                                            s = _19830 + 32
                                            t = sha3(_19743 + 1)
                                            while _19830 + stor1[_19743].field_1 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19804 + 32] = _19830
                                            mem[_19804 + 64] = stor2[_19743]
                                            mem[_19804 + 96] = stor3[_19743]
                                            mem[_19804 + 128] = stor4[_19743]
                                            mem[_19804 + 160] = stor5[_19743]
                                            mem[_19804 + 192] = stor6[_19743]
                                            mem[_19804 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19804 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31391 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31391] = tierLevel.length
                                                        mem[_31391 + 32] = stor5[_19743]
                                                        mem[_31391 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30111 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30111] = stor4[_19743]
                                                    mem[_30111 + 32] = -stor5[_19743]
                                                    mem[_30111 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30751 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30751] = tierLevel.length
                                                        mem[_30751 + 32] = stor5[_19743]
                                                        mem[_30751 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                            stor4[_19743] = tierLevel.length
                            stor3[_19743] = block.timestamp
                            if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                revert with 0, 17
                    else:
                        if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                            mem[_19766 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                            mem[_19744 + 32] = _19766
                            mem[_19744 + 64] = stor2[_19743]
                            mem[_19744 + 96] = stor3[_19743]
                            mem[_19744 + 128] = stor4[_19743]
                            mem[_19744 + 160] = stor5[_19743]
                            mem[_19744 + 192] = stor6[_19743]
                            mem[_19744 + 224] = bool(uint8(stor7[_19743].field_0))
                            mem[_19744 + 256] = bool(uint8(stor7[_19743].field_8))
                            if stor3[_19743] > !compoundDelay:
                                revert with 0, 17
                            if block.timestamp >= stor3[_19743] + compoundDelay:
                                _19816 = mem[64]
                                mem[64] = mem[64] + 288
                                mem[_19816] = stor[_19743]
                                if bool(stor1[_19743].field_0):
                                    if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    _19840 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor1[_19743].field_0) * 0.5) + 32
                                    mem[_19840] = uint255(stor1[_19743].field_0) * 0.5
                                    if bool(stor1[_19743].field_0):
                                        if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19743].field_0):
                                            mem[_19816 + 32] = _19840
                                            mem[_19816 + 64] = stor2[_19743]
                                            mem[_19816 + 96] = stor3[_19743]
                                            mem[_19816 + 128] = stor4[_19743]
                                            mem[_19816 + 160] = stor5[_19743]
                                            mem[_19816 + 192] = stor6[_19743]
                                            mem[_19816 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19816 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24849 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24849] = tierLevel.length
                                                        mem[_24849 + 32] = stor5[_19743]
                                                        mem[_24849 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _20988 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_20988] = stor4[_19743]
                                                    mem[_20988 + 32] = -stor5[_19743]
                                                    mem[_20988 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22243 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22243] = tierLevel.length
                                                        mem[_22243 + 32] = stor5[_19743]
                                                        mem[_22243 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                                mem[_19840 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_19816 + 32] = _19840
                                                mem[_19816 + 64] = stor2[_19743]
                                                mem[_19816 + 96] = stor3[_19743]
                                                mem[_19816 + 128] = stor4[_19743]
                                                mem[_19816 + 160] = stor5[_19743]
                                                mem[_19816 + 192] = stor6[_19743]
                                                mem[_19816 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19816 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _26296 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_26296] = tierLevel.length
                                                            mem[_26296 + 32] = stor5[_19743]
                                                            mem[_26296 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _21415 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_21415] = stor4[_19743]
                                                        mem[_21415 + 32] = -stor5[_19743]
                                                        mem[_21415 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _23470 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_23470] = tierLevel.length
                                                            mem[_23470 + 32] = stor5[_19743]
                                                            mem[_23470 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_19840 + 32] = stor[sha3(_19743 + 1)]
                                                s = _19840 + 32
                                                t = sha3(_19743 + 1)
                                                while _19840 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19816 + 32] = _19840
                                                mem[_19816 + 64] = stor2[_19743]
                                                mem[_19816 + 96] = stor3[_19743]
                                                mem[_19816 + 128] = stor4[_19743]
                                                mem[_19816 + 160] = stor5[_19743]
                                                mem[_19816 + 192] = stor6[_19743]
                                                mem[_19816 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19816 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31398 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31398] = tierLevel.length
                                                            mem[_31398 + 32] = stor5[_19743]
                                                            mem[_31398 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30118 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30118] = stor4[_19743]
                                                        mem[_30118 + 32] = -stor5[_19743]
                                                        mem[_30118 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30758 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30758] = tierLevel.length
                                                            mem[_30758 + 32] = stor5[_19743]
                                                            mem[_30758 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19743].field_1 % 128:
                                            mem[_19816 + 32] = _19840
                                            mem[_19816 + 64] = stor2[_19743]
                                            mem[_19816 + 96] = stor3[_19743]
                                            mem[_19816 + 128] = stor4[_19743]
                                            mem[_19816 + 160] = stor5[_19743]
                                            mem[_19816 + 192] = stor6[_19743]
                                            mem[_19816 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19816 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25578 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25578] = tierLevel.length
                                                        mem[_25578 + 32] = stor5[_19743]
                                                        mem[_25578 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21154 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21154] = stor4[_19743]
                                                    mem[_21154 + 32] = -stor5[_19743]
                                                    mem[_21154 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22822 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22822] = tierLevel.length
                                                        mem[_22822 + 32] = stor5[_19743]
                                                        mem[_22822 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19743].field_1 % 128:
                                                mem[_19840 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_19816 + 32] = _19840
                                                mem[_19816 + 64] = stor2[_19743]
                                                mem[_19816 + 96] = stor3[_19743]
                                                mem[_19816 + 128] = stor4[_19743]
                                                mem[_19816 + 160] = stor5[_19743]
                                                mem[_19816 + 192] = stor6[_19743]
                                                mem[_19816 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19816 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _26971 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_26971] = tierLevel.length
                                                            mem[_26971 + 32] = stor5[_19743]
                                                            mem[_26971 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _21780 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_21780] = stor4[_19743]
                                                        mem[_21780 + 32] = -stor5[_19743]
                                                        mem[_21780 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _24154 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_24154] = tierLevel.length
                                                            mem[_24154 + 32] = stor5[_19743]
                                                            mem[_24154 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_19840 + 32] = stor[sha3(_19743 + 1)]
                                                s = _19840 + 32
                                                t = sha3(_19743 + 1)
                                                while _19840 + stor1[_19743].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19816 + 32] = _19840
                                                mem[_19816 + 64] = stor2[_19743]
                                                mem[_19816 + 96] = stor3[_19743]
                                                mem[_19816 + 128] = stor4[_19743]
                                                mem[_19816 + 160] = stor5[_19743]
                                                mem[_19816 + 192] = stor6[_19743]
                                                mem[_19816 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19816 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31405 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31405] = tierLevel.length
                                                            mem[_31405 + 32] = stor5[_19743]
                                                            mem[_31405 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30125 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30125] = stor4[_19743]
                                                        mem[_30125 + 32] = -stor5[_19743]
                                                        mem[_30125 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30765 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30765] = tierLevel.length
                                                            mem[_30765 + 32] = stor5[_19743]
                                                            mem[_30765 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                        revert with 0, 34
                                    _19850 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor1[_19743].field_1 % 128) + 32
                                    mem[_19850] = stor1[_19743].field_1 % 128
                                    if bool(stor1[_19743].field_0):
                                        if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19743].field_0):
                                            mem[_19816 + 32] = _19850
                                            mem[_19816 + 64] = stor2[_19743]
                                            mem[_19816 + 96] = stor3[_19743]
                                            mem[_19816 + 128] = stor4[_19743]
                                            mem[_19816 + 160] = stor5[_19743]
                                            mem[_19816 + 192] = stor6[_19743]
                                            mem[_19816 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19816 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25593 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25593] = tierLevel.length
                                                        mem[_25593 + 32] = stor5[_19743]
                                                        mem[_25593 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21162 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21162] = stor4[_19743]
                                                    mem[_21162 + 32] = -stor5[_19743]
                                                    mem[_21162 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22837 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22837] = tierLevel.length
                                                        mem[_22837 + 32] = stor5[_19743]
                                                        mem[_22837 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                                mem[_19850 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_19816 + 32] = _19850
                                                mem[_19816 + 64] = stor2[_19743]
                                                mem[_19816 + 96] = stor3[_19743]
                                                mem[_19816 + 128] = stor4[_19743]
                                                mem[_19816 + 160] = stor5[_19743]
                                                mem[_19816 + 192] = stor6[_19743]
                                                mem[_19816 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19816 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _26979 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_26979] = tierLevel.length
                                                            mem[_26979 + 32] = stor5[_19743]
                                                            mem[_26979 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _21789 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_21789] = stor4[_19743]
                                                        mem[_21789 + 32] = -stor5[_19743]
                                                        mem[_21789 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _24163 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_24163] = tierLevel.length
                                                            mem[_24163 + 32] = stor5[_19743]
                                                            mem[_24163 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_19850 + 32] = stor[sha3(_19743 + 1)]
                                                s = _19850 + 32
                                                t = sha3(_19743 + 1)
                                                while _19850 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19816 + 32] = _19850
                                                mem[_19816 + 64] = stor2[_19743]
                                                mem[_19816 + 96] = stor3[_19743]
                                                mem[_19816 + 128] = stor4[_19743]
                                                mem[_19816 + 160] = stor5[_19743]
                                                mem[_19816 + 192] = stor6[_19743]
                                                mem[_19816 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19816 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31412 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31412] = tierLevel.length
                                                            mem[_31412 + 32] = stor5[_19743]
                                                            mem[_31412 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30132 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30132] = stor4[_19743]
                                                        mem[_30132 + 32] = -stor5[_19743]
                                                        mem[_30132 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30772 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30772] = tierLevel.length
                                                            mem[_30772 + 32] = stor5[_19743]
                                                            mem[_30772 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19743].field_1 % 128:
                                            mem[_19816 + 32] = _19850
                                            mem[_19816 + 64] = stor2[_19743]
                                            mem[_19816 + 96] = stor3[_19743]
                                            mem[_19816 + 128] = stor4[_19743]
                                            mem[_19816 + 160] = stor5[_19743]
                                            mem[_19816 + 192] = stor6[_19743]
                                            mem[_19816 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19816 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26311 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26311] = tierLevel.length
                                                        mem[_26311 + 32] = stor5[_19743]
                                                        mem[_26311 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21426 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21426] = stor4[_19743]
                                                    mem[_21426 + 32] = -stor5[_19743]
                                                    mem[_21426 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23485 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23485] = tierLevel.length
                                                        mem[_23485 + 32] = stor5[_19743]
                                                        mem[_23485 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19743].field_1 % 128:
                                                mem[_19850 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_19816 + 32] = _19850
                                                mem[_19816 + 64] = stor2[_19743]
                                                mem[_19816 + 96] = stor3[_19743]
                                                mem[_19816 + 128] = stor4[_19743]
                                                mem[_19816 + 160] = stor5[_19743]
                                                mem[_19816 + 192] = stor6[_19743]
                                                mem[_19816 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19816 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _27596 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_27596] = tierLevel.length
                                                            mem[_27596 + 32] = stor5[_19743]
                                                            mem[_27596 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22264 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22264] = stor4[_19743]
                                                        mem[_22264 + 32] = -stor5[_19743]
                                                        mem[_22264 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _24870 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_24870] = tierLevel.length
                                                            mem[_24870 + 32] = stor5[_19743]
                                                            mem[_24870 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_19850 + 32] = stor[sha3(_19743 + 1)]
                                                s = _19850 + 32
                                                t = sha3(_19743 + 1)
                                                while _19850 + stor1[_19743].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19816 + 32] = _19850
                                                mem[_19816 + 64] = stor2[_19743]
                                                mem[_19816 + 96] = stor3[_19743]
                                                mem[_19816 + 128] = stor4[_19743]
                                                mem[_19816 + 160] = stor5[_19743]
                                                mem[_19816 + 192] = stor6[_19743]
                                                mem[_19816 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19816 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31419 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31419] = tierLevel.length
                                                            mem[_31419 + 32] = stor5[_19743]
                                                            mem[_31419 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30139 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30139] = stor4[_19743]
                                                        mem[_30139 + 32] = -stor5[_19743]
                                                        mem[_30139 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30779 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30779] = tierLevel.length
                                                            mem[_30779 + 32] = stor5[_19743]
                                                            mem[_30779 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                stor4[_19743] = tierLevel.length
                                stor3[_19743] = block.timestamp
                                if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                    revert with 0, 17
                        else:
                            mem[0] = _19743 + 1
                            mem[_19766 + 32] = stor[sha3(_19743 + 1)]
                            s = _19766 + 32
                            t = sha3(_19743 + 1)
                            while _19766 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_19744 + 32] = _19766
                            mem[_19744 + 64] = stor2[_19743]
                            mem[_19744 + 96] = stor3[_19743]
                            mem[_19744 + 128] = stor4[_19743]
                            mem[_19744 + 160] = stor5[_19743]
                            mem[_19744 + 192] = stor6[_19743]
                            mem[_19744 + 224] = bool(uint8(stor7[_19743].field_0))
                            mem[_19744 + 256] = bool(uint8(stor7[_19743].field_8))
                            if stor3[_19743] > !compoundDelay:
                                revert with 0, 17
                            if block.timestamp >= stor3[_19743] + compoundDelay:
                                _29682 = mem[64]
                                mem[64] = mem[64] + 288
                                mem[_29682] = stor[_19743]
                                if bool(stor1[_19743].field_0):
                                    if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    _29690 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor1[_19743].field_0) * 0.5) + 32
                                    mem[_29690] = uint255(stor1[_19743].field_0) * 0.5
                                    if bool(stor1[_19743].field_0):
                                        if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19743].field_0):
                                            mem[_29682 + 32] = _29690
                                            mem[_29682 + 64] = stor2[_19743]
                                            mem[_29682 + 96] = stor3[_19743]
                                            mem[_29682 + 128] = stor4[_19743]
                                            mem[_29682 + 160] = stor5[_19743]
                                            mem[_29682 + 192] = stor6[_19743]
                                            mem[_29682 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_29682 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33490 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33490] = tierLevel.length
                                                        mem[_33490 + 32] = stor5[_19743]
                                                        mem[_33490 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _31970 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_31970] = stor4[_19743]
                                                    mem[_31970 + 32] = -stor5[_19743]
                                                    mem[_31970 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32530 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32530] = tierLevel.length
                                                        mem[_32530 + 32] = stor5[_19743]
                                                        mem[_32530 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                                mem[_29690 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_29682 + 32] = _29690
                                                mem[_29682 + 64] = stor2[_19743]
                                                mem[_29682 + 96] = stor3[_19743]
                                                mem[_29682 + 128] = stor4[_19743]
                                                mem[_29682 + 160] = stor5[_19743]
                                                mem[_29682 + 192] = stor6[_19743]
                                                mem[_29682 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29682 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34003 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34003] = tierLevel.length
                                                            mem[_34003 + 32] = stor5[_19743]
                                                            mem[_34003 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32188 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32188] = stor4[_19743]
                                                        mem[_32188 + 32] = -stor5[_19743]
                                                        mem[_32188 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33044 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33044] = tierLevel.length
                                                            mem[_33044 + 32] = stor5[_19743]
                                                            mem[_33044 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_29690 + 32] = stor[sha3(_19743 + 1)]
                                                s = _29690 + 32
                                                t = sha3(_19743 + 1)
                                                while _29690 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29682 + 32] = _29690
                                                mem[_29682 + 64] = stor2[_19743]
                                                mem[_29682 + 96] = stor3[_19743]
                                                mem[_29682 + 128] = stor4[_19743]
                                                mem[_29682 + 160] = stor5[_19743]
                                                mem[_29682 + 192] = stor6[_19743]
                                                mem[_29682 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29682 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35594 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35594] = tierLevel.length
                                                            mem[_35594 + 32] = stor5[_19743]
                                                            mem[_35594 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _34954 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_34954] = stor4[_19743]
                                                        mem[_34954 + 32] = -stor5[_19743]
                                                        mem[_34954 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35274 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35274] = tierLevel.length
                                                            mem[_35274 + 32] = stor5[_19743]
                                                            mem[_35274 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19743].field_1 % 128:
                                            mem[_29682 + 32] = _29690
                                            mem[_29682 + 64] = stor2[_19743]
                                            mem[_29682 + 96] = stor3[_19743]
                                            mem[_29682 + 128] = stor4[_19743]
                                            mem[_29682 + 160] = stor5[_19743]
                                            mem[_29682 + 192] = stor6[_19743]
                                            mem[_29682 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_29682 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33718 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33718] = tierLevel.length
                                                        mem[_33718 + 32] = stor5[_19743]
                                                        mem[_33718 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32044 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32044] = stor4[_19743]
                                                    mem[_32044 + 32] = -stor5[_19743]
                                                    mem[_32044 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32758 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32758] = tierLevel.length
                                                        mem[_32758 + 32] = stor5[_19743]
                                                        mem[_32758 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19743].field_1 % 128:
                                                mem[_29690 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_29682 + 32] = _29690
                                                mem[_29682 + 64] = stor2[_19743]
                                                mem[_29682 + 96] = stor3[_19743]
                                                mem[_29682 + 128] = stor4[_19743]
                                                mem[_29682 + 160] = stor5[_19743]
                                                mem[_29682 + 192] = stor6[_19743]
                                                mem[_29682 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29682 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34253 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34253] = tierLevel.length
                                                            mem[_34253 + 32] = stor5[_19743]
                                                            mem[_34253 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32358 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32358] = stor4[_19743]
                                                        mem[_32358 + 32] = -stor5[_19743]
                                                        mem[_32358 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33302 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33302] = tierLevel.length
                                                            mem[_33302 + 32] = stor5[_19743]
                                                            mem[_33302 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_29690 + 32] = stor[sha3(_19743 + 1)]
                                                s = _29690 + 32
                                                t = sha3(_19743 + 1)
                                                while _29690 + stor1[_19743].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29682 + 32] = _29690
                                                mem[_29682 + 64] = stor2[_19743]
                                                mem[_29682 + 96] = stor3[_19743]
                                                mem[_29682 + 128] = stor4[_19743]
                                                mem[_29682 + 160] = stor5[_19743]
                                                mem[_29682 + 192] = stor6[_19743]
                                                mem[_29682 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29682 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35601 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35601] = tierLevel.length
                                                            mem[_35601 + 32] = stor5[_19743]
                                                            mem[_35601 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _34961 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_34961] = stor4[_19743]
                                                        mem[_34961 + 32] = -stor5[_19743]
                                                        mem[_34961 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35281 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35281] = tierLevel.length
                                                            mem[_35281 + 32] = stor5[_19743]
                                                            mem[_35281 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                        revert with 0, 34
                                    _29698 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor1[_19743].field_1 % 128) + 32
                                    mem[_29698] = stor1[_19743].field_1 % 128
                                    if bool(stor1[_19743].field_0):
                                        if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19743].field_0):
                                            mem[_29682 + 32] = _29698
                                            mem[_29682 + 64] = stor2[_19743]
                                            mem[_29682 + 96] = stor3[_19743]
                                            mem[_29682 + 128] = stor4[_19743]
                                            mem[_29682 + 160] = stor5[_19743]
                                            mem[_29682 + 192] = stor6[_19743]
                                            mem[_29682 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_29682 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33733 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33733] = tierLevel.length
                                                        mem[_33733 + 32] = stor5[_19743]
                                                        mem[_33733 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32052 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32052] = stor4[_19743]
                                                    mem[_32052 + 32] = -stor5[_19743]
                                                    mem[_32052 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32773 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32773] = tierLevel.length
                                                        mem[_32773 + 32] = stor5[_19743]
                                                        mem[_32773 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                                mem[_29698 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_29682 + 32] = _29698
                                                mem[_29682 + 64] = stor2[_19743]
                                                mem[_29682 + 96] = stor3[_19743]
                                                mem[_29682 + 128] = stor4[_19743]
                                                mem[_29682 + 160] = stor5[_19743]
                                                mem[_29682 + 192] = stor6[_19743]
                                                mem[_29682 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29682 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34261 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34261] = tierLevel.length
                                                            mem[_34261 + 32] = stor5[_19743]
                                                            mem[_34261 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32367 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32367] = stor4[_19743]
                                                        mem[_32367 + 32] = -stor5[_19743]
                                                        mem[_32367 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33311 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33311] = tierLevel.length
                                                            mem[_33311 + 32] = stor5[_19743]
                                                            mem[_33311 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_29698 + 32] = stor[sha3(_19743 + 1)]
                                                s = _29698 + 32
                                                t = sha3(_19743 + 1)
                                                while _29698 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29682 + 32] = _29698
                                                mem[_29682 + 64] = stor2[_19743]
                                                mem[_29682 + 96] = stor3[_19743]
                                                mem[_29682 + 128] = stor4[_19743]
                                                mem[_29682 + 160] = stor5[_19743]
                                                mem[_29682 + 192] = stor6[_19743]
                                                mem[_29682 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29682 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35608 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35608] = tierLevel.length
                                                            mem[_35608 + 32] = stor5[_19743]
                                                            mem[_35608 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _34968 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_34968] = stor4[_19743]
                                                        mem[_34968 + 32] = -stor5[_19743]
                                                        mem[_34968 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35288 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35288] = tierLevel.length
                                                            mem[_35288 + 32] = stor5[_19743]
                                                            mem[_35288 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19743].field_1 % 128:
                                            mem[_29682 + 32] = _29698
                                            mem[_29682 + 64] = stor2[_19743]
                                            mem[_29682 + 96] = stor3[_19743]
                                            mem[_29682 + 128] = stor4[_19743]
                                            mem[_29682 + 160] = stor5[_19743]
                                            mem[_29682 + 192] = stor6[_19743]
                                            mem[_29682 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_29682 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _34018 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_34018] = tierLevel.length
                                                        mem[_34018 + 32] = stor5[_19743]
                                                        mem[_34018 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32199 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32199] = stor4[_19743]
                                                    mem[_32199 + 32] = -stor5[_19743]
                                                    mem[_32199 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33059 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33059] = tierLevel.length
                                                        mem[_33059 + 32] = stor5[_19743]
                                                        mem[_33059 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19743].field_1 % 128:
                                                mem[_29698 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_29682 + 32] = _29698
                                                mem[_29682 + 64] = stor2[_19743]
                                                mem[_29682 + 96] = stor3[_19743]
                                                mem[_29682 + 128] = stor4[_19743]
                                                mem[_29682 + 160] = stor5[_19743]
                                                mem[_29682 + 192] = stor6[_19743]
                                                mem[_29682 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29682 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34438 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34438] = tierLevel.length
                                                            mem[_34438 + 32] = stor5[_19743]
                                                            mem[_34438 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32551 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32551] = stor4[_19743]
                                                        mem[_32551 + 32] = -stor5[_19743]
                                                        mem[_32551 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33511 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33511] = tierLevel.length
                                                            mem[_33511 + 32] = stor5[_19743]
                                                            mem[_33511 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_29698 + 32] = stor[sha3(_19743 + 1)]
                                                s = _29698 + 32
                                                t = sha3(_19743 + 1)
                                                while _29698 + stor1[_19743].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29682 + 32] = _29698
                                                mem[_29682 + 64] = stor2[_19743]
                                                mem[_29682 + 96] = stor3[_19743]
                                                mem[_29682 + 128] = stor4[_19743]
                                                mem[_29682 + 160] = stor5[_19743]
                                                mem[_29682 + 192] = stor6[_19743]
                                                mem[_29682 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29682 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35615 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35615] = tierLevel.length
                                                            mem[_35615 + 32] = stor5[_19743]
                                                            mem[_35615 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _34975 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_34975] = stor4[_19743]
                                                        mem[_34975 + 32] = -stor5[_19743]
                                                        mem[_34975 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35295 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35295] = tierLevel.length
                                                            mem[_35295 + 32] = stor5[_19743]
                                                            mem[_35295 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                stor4[_19743] = tierLevel.length
                                stor3[_19743] = block.timestamp
                                if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                    revert with 0, 17
                else:
                    if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                        revert with 0, 34
                    if not stor1[_19743].field_1 % 128:
                        mem[_19744 + 32] = _19766
                        mem[_19744 + 64] = stor2[_19743]
                        mem[_19744 + 96] = stor3[_19743]
                        mem[_19744 + 128] = stor4[_19743]
                        mem[_19744 + 160] = stor5[_19743]
                        mem[_19744 + 192] = stor6[_19743]
                        mem[_19744 + 224] = bool(uint8(stor7[_19743].field_0))
                        mem[_19744 + 256] = bool(uint8(stor7[_19743].field_8))
                        if stor3[_19743] > !compoundDelay:
                            revert with 0, 17
                        if block.timestamp >= stor3[_19743] + compoundDelay:
                            _19810 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_19810] = stor[_19743]
                            if bool(stor1[_19743].field_0):
                                if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                    revert with 0, 34
                                _19831 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor1[_19743].field_0) * 0.5) + 32
                                mem[_19831] = uint255(stor1[_19743].field_0) * 0.5
                                if bool(stor1[_19743].field_0):
                                    if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    if not Mask(256, -1, stor1[_19743].field_0):
                                        mem[_19810 + 32] = _19831
                                        mem[_19810 + 64] = stor2[_19743]
                                        mem[_19810 + 96] = stor3[_19743]
                                        mem[_19810 + 128] = stor4[_19743]
                                        mem[_19810 + 160] = stor5[_19743]
                                        mem[_19810 + 192] = stor6[_19743]
                                        mem[_19810 + 224] = bool(uint8(stor7[_19743].field_0))
                                        mem[_19810 + 256] = bool(uint8(stor7[_19743].field_8))
                                        if block.timestamp < stor3[_19743]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                            revert with 0, 17
                                        if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                            revert with 0, 17
                                        stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                        if tierLevel.length != stor4[_19743]:
                                            if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19743]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19743]].field_512):
                                                if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _24174 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_24174] = tierLevel.length
                                                    mem[_24174 + 32] = stor5[_19743]
                                                    mem[_24174 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19743] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _20902 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_20902] = stor4[_19743]
                                                mem[_20902 + 32] = -stor5[_19743]
                                                mem[_20902 + 64] = 1
                                                stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                uint8(stor553[stor4[_19743]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21798 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21798] = tierLevel.length
                                                    mem[_21798 + 32] = stor5[_19743]
                                                    mem[_21798 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                            mem[_19831 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                            mem[_19810 + 32] = _19831
                                            mem[_19810 + 64] = stor2[_19743]
                                            mem[_19810 + 96] = stor3[_19743]
                                            mem[_19810 + 128] = stor4[_19743]
                                            mem[_19810 + 160] = stor5[_19743]
                                            mem[_19810 + 192] = stor6[_19743]
                                            mem[_19810 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19810 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25611 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25611] = tierLevel.length
                                                        mem[_25611 + 32] = stor5[_19743]
                                                        mem[_25611 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21172 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21172] = stor4[_19743]
                                                    mem[_21172 + 32] = -stor5[_19743]
                                                    mem[_21172 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22856 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22856] = tierLevel.length
                                                        mem[_22856 + 32] = stor5[_19743]
                                                        mem[_22856 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19743 + 1
                                            mem[_19831 + 32] = stor[sha3(_19743 + 1)]
                                            s = _19831 + 32
                                            t = sha3(_19743 + 1)
                                            while _19831 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19810 + 32] = _19831
                                            mem[_19810 + 64] = stor2[_19743]
                                            mem[_19810 + 96] = stor3[_19743]
                                            mem[_19810 + 128] = stor4[_19743]
                                            mem[_19810 + 160] = stor5[_19743]
                                            mem[_19810 + 192] = stor6[_19743]
                                            mem[_19810 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19810 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31426 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31426] = tierLevel.length
                                                        mem[_31426 + 32] = stor5[_19743]
                                                        mem[_31426 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30146 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30146] = stor4[_19743]
                                                    mem[_30146 + 32] = -stor5[_19743]
                                                    mem[_30146 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30786 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30786] = tierLevel.length
                                                        mem[_30786 + 32] = stor5[_19743]
                                                        mem[_30786 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                        revert with 0, 34
                                    if not stor1[_19743].field_1 % 128:
                                        mem[_19810 + 32] = _19831
                                        mem[_19810 + 64] = stor2[_19743]
                                        mem[_19810 + 96] = stor3[_19743]
                                        mem[_19810 + 128] = stor4[_19743]
                                        mem[_19810 + 160] = stor5[_19743]
                                        mem[_19810 + 192] = stor6[_19743]
                                        mem[_19810 + 224] = bool(uint8(stor7[_19743].field_0))
                                        mem[_19810 + 256] = bool(uint8(stor7[_19743].field_8))
                                        if block.timestamp < stor3[_19743]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                            revert with 0, 17
                                        if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                            revert with 0, 17
                                        stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                        if tierLevel.length != stor4[_19743]:
                                            if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19743]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19743]].field_512):
                                                if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _24881 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_24881] = tierLevel.length
                                                    mem[_24881 + 32] = stor5[_19743]
                                                    mem[_24881 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19743] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _20999 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_20999] = stor4[_19743]
                                                mem[_20999 + 32] = -stor5[_19743]
                                                mem[_20999 + 64] = 1
                                                stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                uint8(stor553[stor4[_19743]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22275 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22275] = tierLevel.length
                                                    mem[_22275 + 32] = stor5[_19743]
                                                    mem[_22275 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= stor1[_19743].field_1 % 128:
                                            mem[_19831 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                            mem[_19810 + 32] = _19831
                                            mem[_19810 + 64] = stor2[_19743]
                                            mem[_19810 + 96] = stor3[_19743]
                                            mem[_19810 + 128] = stor4[_19743]
                                            mem[_19810 + 160] = stor5[_19743]
                                            mem[_19810 + 192] = stor6[_19743]
                                            mem[_19810 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19810 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26329 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26329] = tierLevel.length
                                                        mem[_26329 + 32] = stor5[_19743]
                                                        mem[_26329 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21438 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21438] = stor4[_19743]
                                                    mem[_21438 + 32] = -stor5[_19743]
                                                    mem[_21438 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23504 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23504] = tierLevel.length
                                                        mem[_23504 + 32] = stor5[_19743]
                                                        mem[_23504 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19743 + 1
                                            mem[_19831 + 32] = stor[sha3(_19743 + 1)]
                                            s = _19831 + 32
                                            t = sha3(_19743 + 1)
                                            while _19831 + stor1[_19743].field_1 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19810 + 32] = _19831
                                            mem[_19810 + 64] = stor2[_19743]
                                            mem[_19810 + 96] = stor3[_19743]
                                            mem[_19810 + 128] = stor4[_19743]
                                            mem[_19810 + 160] = stor5[_19743]
                                            mem[_19810 + 192] = stor6[_19743]
                                            mem[_19810 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19810 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31433 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31433] = tierLevel.length
                                                        mem[_31433 + 32] = stor5[_19743]
                                                        mem[_31433 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30153 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30153] = stor4[_19743]
                                                    mem[_30153 + 32] = -stor5[_19743]
                                                    mem[_30153 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30793 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30793] = tierLevel.length
                                                        mem[_30793 + 32] = stor5[_19743]
                                                        mem[_30793 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                            else:
                                if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                    revert with 0, 34
                                _19841 = mem[64]
                                mem[64] = mem[64] + ceil32(stor1[_19743].field_1 % 128) + 32
                                mem[_19841] = stor1[_19743].field_1 % 128
                                if bool(stor1[_19743].field_0):
                                    if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    if not Mask(256, -1, stor1[_19743].field_0):
                                        mem[_19810 + 32] = _19841
                                        mem[_19810 + 64] = stor2[_19743]
                                        mem[_19810 + 96] = stor3[_19743]
                                        mem[_19810 + 128] = stor4[_19743]
                                        mem[_19810 + 160] = stor5[_19743]
                                        mem[_19810 + 192] = stor6[_19743]
                                        mem[_19810 + 224] = bool(uint8(stor7[_19743].field_0))
                                        mem[_19810 + 256] = bool(uint8(stor7[_19743].field_8))
                                        if block.timestamp < stor3[_19743]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                            revert with 0, 17
                                        if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                            revert with 0, 17
                                        stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                        if tierLevel.length != stor4[_19743]:
                                            if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19743]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19743]].field_512):
                                                if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _24896 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_24896] = tierLevel.length
                                                    mem[_24896 + 32] = stor5[_19743]
                                                    mem[_24896 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19743] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21007 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21007] = stor4[_19743]
                                                mem[_21007 + 32] = -stor5[_19743]
                                                mem[_21007 + 64] = 1
                                                stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                uint8(stor553[stor4[_19743]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22290 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22290] = tierLevel.length
                                                    mem[_22290 + 32] = stor5[_19743]
                                                    mem[_22290 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                            mem[_19841 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                            mem[_19810 + 32] = _19841
                                            mem[_19810 + 64] = stor2[_19743]
                                            mem[_19810 + 96] = stor3[_19743]
                                            mem[_19810 + 128] = stor4[_19743]
                                            mem[_19810 + 160] = stor5[_19743]
                                            mem[_19810 + 192] = stor6[_19743]
                                            mem[_19810 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19810 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26337 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26337] = tierLevel.length
                                                        mem[_26337 + 32] = stor5[_19743]
                                                        mem[_26337 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21447 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21447] = stor4[_19743]
                                                    mem[_21447 + 32] = -stor5[_19743]
                                                    mem[_21447 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23513 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23513] = tierLevel.length
                                                        mem[_23513 + 32] = stor5[_19743]
                                                        mem[_23513 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19743 + 1
                                            mem[_19841 + 32] = stor[sha3(_19743 + 1)]
                                            s = _19841 + 32
                                            t = sha3(_19743 + 1)
                                            while _19841 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19810 + 32] = _19841
                                            mem[_19810 + 64] = stor2[_19743]
                                            mem[_19810 + 96] = stor3[_19743]
                                            mem[_19810 + 128] = stor4[_19743]
                                            mem[_19810 + 160] = stor5[_19743]
                                            mem[_19810 + 192] = stor6[_19743]
                                            mem[_19810 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19810 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31440 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31440] = tierLevel.length
                                                        mem[_31440 + 32] = stor5[_19743]
                                                        mem[_31440 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30160 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30160] = stor4[_19743]
                                                    mem[_30160 + 32] = -stor5[_19743]
                                                    mem[_30160 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30800 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30800] = tierLevel.length
                                                        mem[_30800 + 32] = stor5[_19743]
                                                        mem[_30800 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                        revert with 0, 34
                                    if not stor1[_19743].field_1 % 128:
                                        mem[_19810 + 32] = _19841
                                        mem[_19810 + 64] = stor2[_19743]
                                        mem[_19810 + 96] = stor3[_19743]
                                        mem[_19810 + 128] = stor4[_19743]
                                        mem[_19810 + 160] = stor5[_19743]
                                        mem[_19810 + 192] = stor6[_19743]
                                        mem[_19810 + 224] = bool(uint8(stor7[_19743].field_0))
                                        mem[_19810 + 256] = bool(uint8(stor7[_19743].field_8))
                                        if block.timestamp < stor3[_19743]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                            revert with 0, 17
                                        if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                            revert with 0, 17
                                        stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                        if tierLevel.length != stor4[_19743]:
                                            if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19743]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19743]].field_512):
                                                if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _25626 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_25626] = tierLevel.length
                                                    mem[_25626 + 32] = stor5[_19743]
                                                    mem[_25626 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19743] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21183 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21183] = stor4[_19743]
                                                mem[_21183 + 32] = -stor5[_19743]
                                                mem[_21183 + 64] = 1
                                                stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                uint8(stor553[stor4[_19743]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22871 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22871] = tierLevel.length
                                                    mem[_22871 + 32] = stor5[_19743]
                                                    mem[_22871 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= stor1[_19743].field_1 % 128:
                                            mem[_19841 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                            mem[_19810 + 32] = _19841
                                            mem[_19810 + 64] = stor2[_19743]
                                            mem[_19810 + 96] = stor3[_19743]
                                            mem[_19810 + 128] = stor4[_19743]
                                            mem[_19810 + 160] = stor5[_19743]
                                            mem[_19810 + 192] = stor6[_19743]
                                            mem[_19810 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19810 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _27002 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_27002] = tierLevel.length
                                                        mem[_27002 + 32] = stor5[_19743]
                                                        mem[_27002 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21819 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21819] = stor4[_19743]
                                                    mem[_21819 + 32] = -stor5[_19743]
                                                    mem[_21819 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24195 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24195] = tierLevel.length
                                                        mem[_24195 + 32] = stor5[_19743]
                                                        mem[_24195 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19743 + 1
                                            mem[_19841 + 32] = stor[sha3(_19743 + 1)]
                                            s = _19841 + 32
                                            t = sha3(_19743 + 1)
                                            while _19841 + stor1[_19743].field_1 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19810 + 32] = _19841
                                            mem[_19810 + 64] = stor2[_19743]
                                            mem[_19810 + 96] = stor3[_19743]
                                            mem[_19810 + 128] = stor4[_19743]
                                            mem[_19810 + 160] = stor5[_19743]
                                            mem[_19810 + 192] = stor6[_19743]
                                            mem[_19810 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19810 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31447 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31447] = tierLevel.length
                                                        mem[_31447 + 32] = stor5[_19743]
                                                        mem[_31447 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30167 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30167] = stor4[_19743]
                                                    mem[_30167 + 32] = -stor5[_19743]
                                                    mem[_30167 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30807 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30807] = tierLevel.length
                                                        mem[_30807 + 32] = stor5[_19743]
                                                        mem[_30807 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                            stor4[_19743] = tierLevel.length
                            stor3[_19743] = block.timestamp
                            if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                revert with 0, 17
                    else:
                        if 31 >= stor1[_19743].field_1 % 128:
                            mem[_19766 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                            mem[_19744 + 32] = _19766
                            mem[_19744 + 64] = stor2[_19743]
                            mem[_19744 + 96] = stor3[_19743]
                            mem[_19744 + 128] = stor4[_19743]
                            mem[_19744 + 160] = stor5[_19743]
                            mem[_19744 + 192] = stor6[_19743]
                            mem[_19744 + 224] = bool(uint8(stor7[_19743].field_0))
                            mem[_19744 + 256] = bool(uint8(stor7[_19743].field_8))
                            if stor3[_19743] > !compoundDelay:
                                revert with 0, 17
                            if block.timestamp >= stor3[_19743] + compoundDelay:
                                _19820 = mem[64]
                                mem[64] = mem[64] + 288
                                mem[_19820] = stor[_19743]
                                if bool(stor1[_19743].field_0):
                                    if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    _19851 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor1[_19743].field_0) * 0.5) + 32
                                    mem[_19851] = uint255(stor1[_19743].field_0) * 0.5
                                    if bool(stor1[_19743].field_0):
                                        if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19743].field_0):
                                            mem[_19820 + 32] = _19851
                                            mem[_19820 + 64] = stor2[_19743]
                                            mem[_19820 + 96] = stor3[_19743]
                                            mem[_19820 + 128] = stor4[_19743]
                                            mem[_19820 + 160] = stor5[_19743]
                                            mem[_19820 + 192] = stor6[_19743]
                                            mem[_19820 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19820 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25673 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25673] = tierLevel.length
                                                        mem[_25673 + 32] = stor5[_19743]
                                                        mem[_25673 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21192 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21192] = stor4[_19743]
                                                    mem[_21192 + 32] = -stor5[_19743]
                                                    mem[_21192 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22907 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22907] = tierLevel.length
                                                        mem[_22907 + 32] = stor5[_19743]
                                                        mem[_22907 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                                mem[_19851 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_19820 + 32] = _19851
                                                mem[_19820 + 64] = stor2[_19743]
                                                mem[_19820 + 96] = stor3[_19743]
                                                mem[_19820 + 128] = stor4[_19743]
                                                mem[_19820 + 160] = stor5[_19743]
                                                mem[_19820 + 192] = stor6[_19743]
                                                mem[_19820 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19820 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _27038 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_27038] = tierLevel.length
                                                            mem[_27038 + 32] = stor5[_19743]
                                                            mem[_27038 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _21837 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_21837] = stor4[_19743]
                                                        mem[_21837 + 32] = -stor5[_19743]
                                                        mem[_21837 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _24232 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_24232] = tierLevel.length
                                                            mem[_24232 + 32] = stor5[_19743]
                                                            mem[_24232 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_19851 + 32] = stor[sha3(_19743 + 1)]
                                                s = _19851 + 32
                                                t = sha3(_19743 + 1)
                                                while _19851 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19820 + 32] = _19851
                                                mem[_19820 + 64] = stor2[_19743]
                                                mem[_19820 + 96] = stor3[_19743]
                                                mem[_19820 + 128] = stor4[_19743]
                                                mem[_19820 + 160] = stor5[_19743]
                                                mem[_19820 + 192] = stor6[_19743]
                                                mem[_19820 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19820 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31454 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31454] = tierLevel.length
                                                            mem[_31454 + 32] = stor5[_19743]
                                                            mem[_31454 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30174 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30174] = stor4[_19743]
                                                        mem[_30174 + 32] = -stor5[_19743]
                                                        mem[_30174 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30814 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30814] = tierLevel.length
                                                            mem[_30814 + 32] = stor5[_19743]
                                                            mem[_30814 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19743].field_1 % 128:
                                            mem[_19820 + 32] = _19851
                                            mem[_19820 + 64] = stor2[_19743]
                                            mem[_19820 + 96] = stor3[_19743]
                                            mem[_19820 + 128] = stor4[_19743]
                                            mem[_19820 + 160] = stor5[_19743]
                                            mem[_19820 + 192] = stor6[_19743]
                                            mem[_19820 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19820 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26376 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26376] = tierLevel.length
                                                        mem[_26376 + 32] = stor5[_19743]
                                                        mem[_26376 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21460 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21460] = stor4[_19743]
                                                    mem[_21460 + 32] = -stor5[_19743]
                                                    mem[_21460 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23550 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23550] = tierLevel.length
                                                        mem[_23550 + 32] = stor5[_19743]
                                                        mem[_23550 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19743].field_1 % 128:
                                                mem[_19851 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_19820 + 32] = _19851
                                                mem[_19820 + 64] = stor2[_19743]
                                                mem[_19820 + 96] = stor3[_19743]
                                                mem[_19820 + 128] = stor4[_19743]
                                                mem[_19820 + 160] = stor5[_19743]
                                                mem[_19820 + 192] = stor6[_19743]
                                                mem[_19820 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19820 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _27660 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_27660] = tierLevel.length
                                                            mem[_27660 + 32] = stor5[_19743]
                                                            mem[_27660 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22329 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22329] = stor4[_19743]
                                                        mem[_22329 + 32] = -stor5[_19743]
                                                        mem[_22329 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _24953 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_24953] = tierLevel.length
                                                            mem[_24953 + 32] = stor5[_19743]
                                                            mem[_24953 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_19851 + 32] = stor[sha3(_19743 + 1)]
                                                s = _19851 + 32
                                                t = sha3(_19743 + 1)
                                                while _19851 + stor1[_19743].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19820 + 32] = _19851
                                                mem[_19820 + 64] = stor2[_19743]
                                                mem[_19820 + 96] = stor3[_19743]
                                                mem[_19820 + 128] = stor4[_19743]
                                                mem[_19820 + 160] = stor5[_19743]
                                                mem[_19820 + 192] = stor6[_19743]
                                                mem[_19820 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19820 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31461 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31461] = tierLevel.length
                                                            mem[_31461 + 32] = stor5[_19743]
                                                            mem[_31461 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30181 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30181] = stor4[_19743]
                                                        mem[_30181 + 32] = -stor5[_19743]
                                                        mem[_30181 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30821 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30821] = tierLevel.length
                                                            mem[_30821 + 32] = stor5[_19743]
                                                            mem[_30821 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                        revert with 0, 34
                                    _19859 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor1[_19743].field_1 % 128) + 32
                                    mem[_19859] = stor1[_19743].field_1 % 128
                                    if bool(stor1[_19743].field_0):
                                        if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19743].field_0):
                                            mem[_19820 + 32] = _19859
                                            mem[_19820 + 64] = stor2[_19743]
                                            mem[_19820 + 96] = stor3[_19743]
                                            mem[_19820 + 128] = stor4[_19743]
                                            mem[_19820 + 160] = stor5[_19743]
                                            mem[_19820 + 192] = stor6[_19743]
                                            mem[_19820 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19820 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26391 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26391] = tierLevel.length
                                                        mem[_26391 + 32] = stor5[_19743]
                                                        mem[_26391 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21468 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21468] = stor4[_19743]
                                                    mem[_21468 + 32] = -stor5[_19743]
                                                    mem[_21468 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23565 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23565] = tierLevel.length
                                                        mem[_23565 + 32] = stor5[_19743]
                                                        mem[_23565 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                                mem[_19859 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_19820 + 32] = _19859
                                                mem[_19820 + 64] = stor2[_19743]
                                                mem[_19820 + 96] = stor3[_19743]
                                                mem[_19820 + 128] = stor4[_19743]
                                                mem[_19820 + 160] = stor5[_19743]
                                                mem[_19820 + 192] = stor6[_19743]
                                                mem[_19820 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19820 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _27668 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_27668] = tierLevel.length
                                                            mem[_27668 + 32] = stor5[_19743]
                                                            mem[_27668 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22338 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22338] = stor4[_19743]
                                                        mem[_22338 + 32] = -stor5[_19743]
                                                        mem[_22338 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _24962 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_24962] = tierLevel.length
                                                            mem[_24962 + 32] = stor5[_19743]
                                                            mem[_24962 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_19859 + 32] = stor[sha3(_19743 + 1)]
                                                s = _19859 + 32
                                                t = sha3(_19743 + 1)
                                                while _19859 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19820 + 32] = _19859
                                                mem[_19820 + 64] = stor2[_19743]
                                                mem[_19820 + 96] = stor3[_19743]
                                                mem[_19820 + 128] = stor4[_19743]
                                                mem[_19820 + 160] = stor5[_19743]
                                                mem[_19820 + 192] = stor6[_19743]
                                                mem[_19820 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19820 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31468 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31468] = tierLevel.length
                                                            mem[_31468 + 32] = stor5[_19743]
                                                            mem[_31468 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30188 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30188] = stor4[_19743]
                                                        mem[_30188 + 32] = -stor5[_19743]
                                                        mem[_30188 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30828 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30828] = tierLevel.length
                                                            mem[_30828 + 32] = stor5[_19743]
                                                            mem[_30828 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19743].field_1 % 128:
                                            mem[_19820 + 32] = _19859
                                            mem[_19820 + 64] = stor2[_19743]
                                            mem[_19820 + 96] = stor3[_19743]
                                            mem[_19820 + 128] = stor4[_19743]
                                            mem[_19820 + 160] = stor5[_19743]
                                            mem[_19820 + 192] = stor6[_19743]
                                            mem[_19820 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19820 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _27053 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_27053] = tierLevel.length
                                                        mem[_27053 + 32] = stor5[_19743]
                                                        mem[_27053 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21848 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21848] = stor4[_19743]
                                                    mem[_21848 + 32] = -stor5[_19743]
                                                    mem[_21848 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24247 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24247] = tierLevel.length
                                                        mem[_24247 + 32] = stor5[_19743]
                                                        mem[_24247 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19743].field_1 % 128:
                                                mem[_19859 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_19820 + 32] = _19859
                                                mem[_19820 + 64] = stor2[_19743]
                                                mem[_19820 + 96] = stor3[_19743]
                                                mem[_19820 + 128] = stor4[_19743]
                                                mem[_19820 + 160] = stor5[_19743]
                                                mem[_19820 + 192] = stor6[_19743]
                                                mem[_19820 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19820 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _28220 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_28220] = tierLevel.length
                                                            mem[_28220 + 32] = stor5[_19743]
                                                            mem[_28220 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22928 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22928] = stor4[_19743]
                                                        mem[_22928 + 32] = -stor5[_19743]
                                                        mem[_22928 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _25694 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_25694] = tierLevel.length
                                                            mem[_25694 + 32] = stor5[_19743]
                                                            mem[_25694 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_19859 + 32] = stor[sha3(_19743 + 1)]
                                                s = _19859 + 32
                                                t = sha3(_19743 + 1)
                                                while _19859 + stor1[_19743].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19820 + 32] = _19859
                                                mem[_19820 + 64] = stor2[_19743]
                                                mem[_19820 + 96] = stor3[_19743]
                                                mem[_19820 + 128] = stor4[_19743]
                                                mem[_19820 + 160] = stor5[_19743]
                                                mem[_19820 + 192] = stor6[_19743]
                                                mem[_19820 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19820 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31475 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31475] = tierLevel.length
                                                            mem[_31475 + 32] = stor5[_19743]
                                                            mem[_31475 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30195 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30195] = stor4[_19743]
                                                        mem[_30195 + 32] = -stor5[_19743]
                                                        mem[_30195 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30835 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30835] = tierLevel.length
                                                            mem[_30835 + 32] = stor5[_19743]
                                                            mem[_30835 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                stor4[_19743] = tierLevel.length
                                stor3[_19743] = block.timestamp
                                if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                    revert with 0, 17
                        else:
                            mem[0] = _19743 + 1
                            mem[_19766 + 32] = stor[sha3(_19743 + 1)]
                            s = _19766 + 32
                            t = sha3(_19743 + 1)
                            while _19766 + stor1[_19743].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_19744 + 32] = _19766
                            mem[_19744 + 64] = stor2[_19743]
                            mem[_19744 + 96] = stor3[_19743]
                            mem[_19744 + 128] = stor4[_19743]
                            mem[_19744 + 160] = stor5[_19743]
                            mem[_19744 + 192] = stor6[_19743]
                            mem[_19744 + 224] = bool(uint8(stor7[_19743].field_0))
                            mem[_19744 + 256] = bool(uint8(stor7[_19743].field_8))
                            if stor3[_19743] > !compoundDelay:
                                revert with 0, 17
                            if block.timestamp >= stor3[_19743] + compoundDelay:
                                _29683 = mem[64]
                                mem[64] = mem[64] + 288
                                mem[_29683] = stor[_19743]
                                if bool(stor1[_19743].field_0):
                                    if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    _29691 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor1[_19743].field_0) * 0.5) + 32
                                    mem[_29691] = uint255(stor1[_19743].field_0) * 0.5
                                    if bool(stor1[_19743].field_0):
                                        if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19743].field_0):
                                            mem[_29683 + 32] = _29691
                                            mem[_29683 + 64] = stor2[_19743]
                                            mem[_29683 + 96] = stor3[_19743]
                                            mem[_29683 + 128] = stor4[_19743]
                                            mem[_29683 + 160] = stor5[_19743]
                                            mem[_29683 + 192] = stor6[_19743]
                                            mem[_29683 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_29683 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33518 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33518] = tierLevel.length
                                                        mem[_33518 + 32] = stor5[_19743]
                                                        mem[_33518 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _31979 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_31979] = stor4[_19743]
                                                    mem[_31979 + 32] = -stor5[_19743]
                                                    mem[_31979 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32558 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32558] = tierLevel.length
                                                        mem[_32558 + 32] = stor5[_19743]
                                                        mem[_32558 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                                mem[_29691 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_29683 + 32] = _29691
                                                mem[_29683 + 64] = stor2[_19743]
                                                mem[_29683 + 96] = stor3[_19743]
                                                mem[_29683 + 128] = stor4[_19743]
                                                mem[_29683 + 160] = stor5[_19743]
                                                mem[_29683 + 192] = stor6[_19743]
                                                mem[_29683 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29683 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34034 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34034] = tierLevel.length
                                                            mem[_34034 + 32] = stor5[_19743]
                                                            mem[_34034 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32209 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32209] = stor4[_19743]
                                                        mem[_32209 + 32] = -stor5[_19743]
                                                        mem[_32209 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33076 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33076] = tierLevel.length
                                                            mem[_33076 + 32] = stor5[_19743]
                                                            mem[_33076 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_29691 + 32] = stor[sha3(_19743 + 1)]
                                                s = _29691 + 32
                                                t = sha3(_19743 + 1)
                                                while _29691 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29683 + 32] = _29691
                                                mem[_29683 + 64] = stor2[_19743]
                                                mem[_29683 + 96] = stor3[_19743]
                                                mem[_29683 + 128] = stor4[_19743]
                                                mem[_29683 + 160] = stor5[_19743]
                                                mem[_29683 + 192] = stor6[_19743]
                                                mem[_29683 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29683 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35622 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35622] = tierLevel.length
                                                            mem[_35622 + 32] = stor5[_19743]
                                                            mem[_35622 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _34982 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_34982] = stor4[_19743]
                                                        mem[_34982 + 32] = -stor5[_19743]
                                                        mem[_34982 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35302 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35302] = tierLevel.length
                                                            mem[_35302 + 32] = stor5[_19743]
                                                            mem[_35302 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19743].field_1 % 128:
                                            mem[_29683 + 32] = _29691
                                            mem[_29683 + 64] = stor2[_19743]
                                            mem[_29683 + 96] = stor3[_19743]
                                            mem[_29683 + 128] = stor4[_19743]
                                            mem[_29683 + 160] = stor5[_19743]
                                            mem[_29683 + 192] = stor6[_19743]
                                            mem[_29683 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_29683 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33754 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33754] = tierLevel.length
                                                        mem[_33754 + 32] = stor5[_19743]
                                                        mem[_33754 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32062 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32062] = stor4[_19743]
                                                    mem[_32062 + 32] = -stor5[_19743]
                                                    mem[_32062 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32794 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32794] = tierLevel.length
                                                        mem[_32794 + 32] = stor5[_19743]
                                                        mem[_32794 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19743].field_1 % 128:
                                                mem[_29691 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_29683 + 32] = _29691
                                                mem[_29683 + 64] = stor2[_19743]
                                                mem[_29683 + 96] = stor3[_19743]
                                                mem[_29683 + 128] = stor4[_19743]
                                                mem[_29683 + 160] = stor5[_19743]
                                                mem[_29683 + 192] = stor6[_19743]
                                                mem[_29683 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29683 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34275 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34275] = tierLevel.length
                                                            mem[_34275 + 32] = stor5[_19743]
                                                            mem[_34275 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32380 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32380] = stor4[_19743]
                                                        mem[_32380 + 32] = -stor5[_19743]
                                                        mem[_32380 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33326 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33326] = tierLevel.length
                                                            mem[_33326 + 32] = stor5[_19743]
                                                            mem[_33326 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_29691 + 32] = stor[sha3(_19743 + 1)]
                                                s = _29691 + 32
                                                t = sha3(_19743 + 1)
                                                while _29691 + stor1[_19743].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29683 + 32] = _29691
                                                mem[_29683 + 64] = stor2[_19743]
                                                mem[_29683 + 96] = stor3[_19743]
                                                mem[_29683 + 128] = stor4[_19743]
                                                mem[_29683 + 160] = stor5[_19743]
                                                mem[_29683 + 192] = stor6[_19743]
                                                mem[_29683 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29683 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35629 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35629] = tierLevel.length
                                                            mem[_35629 + 32] = stor5[_19743]
                                                            mem[_35629 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _34989 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_34989] = stor4[_19743]
                                                        mem[_34989 + 32] = -stor5[_19743]
                                                        mem[_34989 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35309 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35309] = tierLevel.length
                                                            mem[_35309 + 32] = stor5[_19743]
                                                            mem[_35309 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                        revert with 0, 34
                                    _29699 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor1[_19743].field_1 % 128) + 32
                                    mem[_29699] = stor1[_19743].field_1 % 128
                                    if bool(stor1[_19743].field_0):
                                        if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19743].field_0):
                                            mem[_29683 + 32] = _29699
                                            mem[_29683 + 64] = stor2[_19743]
                                            mem[_29683 + 96] = stor3[_19743]
                                            mem[_29683 + 128] = stor4[_19743]
                                            mem[_29683 + 160] = stor5[_19743]
                                            mem[_29683 + 192] = stor6[_19743]
                                            mem[_29683 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_29683 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33769 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33769] = tierLevel.length
                                                        mem[_33769 + 32] = stor5[_19743]
                                                        mem[_33769 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32070 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32070] = stor4[_19743]
                                                    mem[_32070 + 32] = -stor5[_19743]
                                                    mem[_32070 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32809 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32809] = tierLevel.length
                                                        mem[_32809 + 32] = stor5[_19743]
                                                        mem[_32809 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                                mem[_29699 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_29683 + 32] = _29699
                                                mem[_29683 + 64] = stor2[_19743]
                                                mem[_29683 + 96] = stor3[_19743]
                                                mem[_29683 + 128] = stor4[_19743]
                                                mem[_29683 + 160] = stor5[_19743]
                                                mem[_29683 + 192] = stor6[_19743]
                                                mem[_29683 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29683 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34283 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34283] = tierLevel.length
                                                            mem[_34283 + 32] = stor5[_19743]
                                                            mem[_34283 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32389 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32389] = stor4[_19743]
                                                        mem[_32389 + 32] = -stor5[_19743]
                                                        mem[_32389 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33335 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33335] = tierLevel.length
                                                            mem[_33335 + 32] = stor5[_19743]
                                                            mem[_33335 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_29699 + 32] = stor[sha3(_19743 + 1)]
                                                s = _29699 + 32
                                                t = sha3(_19743 + 1)
                                                while _29699 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29683 + 32] = _29699
                                                mem[_29683 + 64] = stor2[_19743]
                                                mem[_29683 + 96] = stor3[_19743]
                                                mem[_29683 + 128] = stor4[_19743]
                                                mem[_29683 + 160] = stor5[_19743]
                                                mem[_29683 + 192] = stor6[_19743]
                                                mem[_29683 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29683 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35636 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35636] = tierLevel.length
                                                            mem[_35636 + 32] = stor5[_19743]
                                                            mem[_35636 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _34996 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_34996] = stor4[_19743]
                                                        mem[_34996 + 32] = -stor5[_19743]
                                                        mem[_34996 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35316 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35316] = tierLevel.length
                                                            mem[_35316 + 32] = stor5[_19743]
                                                            mem[_35316 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19743].field_1 % 128:
                                            mem[_29683 + 32] = _29699
                                            mem[_29683 + 64] = stor2[_19743]
                                            mem[_29683 + 96] = stor3[_19743]
                                            mem[_29683 + 128] = stor4[_19743]
                                            mem[_29683 + 160] = stor5[_19743]
                                            mem[_29683 + 192] = stor6[_19743]
                                            mem[_29683 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_29683 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _34049 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_34049] = tierLevel.length
                                                        mem[_34049 + 32] = stor5[_19743]
                                                        mem[_34049 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32220 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32220] = stor4[_19743]
                                                    mem[_32220 + 32] = -stor5[_19743]
                                                    mem[_32220 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33091 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33091] = tierLevel.length
                                                        mem[_33091 + 32] = stor5[_19743]
                                                        mem[_33091 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19743].field_1 % 128:
                                                mem[_29699 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_29683 + 32] = _29699
                                                mem[_29683 + 64] = stor2[_19743]
                                                mem[_29683 + 96] = stor3[_19743]
                                                mem[_29683 + 128] = stor4[_19743]
                                                mem[_29683 + 160] = stor5[_19743]
                                                mem[_29683 + 192] = stor6[_19743]
                                                mem[_29683 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29683 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34457 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34457] = tierLevel.length
                                                            mem[_34457 + 32] = stor5[_19743]
                                                            mem[_34457 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32579 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32579] = stor4[_19743]
                                                        mem[_32579 + 32] = -stor5[_19743]
                                                        mem[_32579 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33539 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33539] = tierLevel.length
                                                            mem[_33539 + 32] = stor5[_19743]
                                                            mem[_33539 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_29699 + 32] = stor[sha3(_19743 + 1)]
                                                s = _29699 + 32
                                                t = sha3(_19743 + 1)
                                                while _29699 + stor1[_19743].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29683 + 32] = _29699
                                                mem[_29683 + 64] = stor2[_19743]
                                                mem[_29683 + 96] = stor3[_19743]
                                                mem[_29683 + 128] = stor4[_19743]
                                                mem[_29683 + 160] = stor5[_19743]
                                                mem[_29683 + 192] = stor6[_19743]
                                                mem[_29683 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29683 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35643 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35643] = tierLevel.length
                                                            mem[_35643 + 32] = stor5[_19743]
                                                            mem[_35643 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35003 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35003] = stor4[_19743]
                                                        mem[_35003 + 32] = -stor5[_19743]
                                                        mem[_35003 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35323 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35323] = tierLevel.length
                                                            mem[_35323 + 32] = stor5[_19743]
                                                            mem[_35323 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                stor4[_19743] = tierLevel.length
                                stor3[_19743] = block.timestamp
                                if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                    revert with 0, 17
            else:
                if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                    revert with 0, 34
                _19776 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_19743].field_1 % 128) + 32
                mem[_19776] = stor1[_19743].field_1 % 128
                if bool(stor1[_19743].field_0):
                    if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if not Mask(256, -1, stor1[_19743].field_0):
                        mem[_19744 + 32] = _19776
                        mem[_19744 + 64] = stor2[_19743]
                        mem[_19744 + 96] = stor3[_19743]
                        mem[_19744 + 128] = stor4[_19743]
                        mem[_19744 + 160] = stor5[_19743]
                        mem[_19744 + 192] = stor6[_19743]
                        mem[_19744 + 224] = bool(uint8(stor7[_19743].field_0))
                        mem[_19744 + 256] = bool(uint8(stor7[_19743].field_8))
                        if stor3[_19743] > !compoundDelay:
                            revert with 0, 17
                        if block.timestamp >= stor3[_19743] + compoundDelay:
                            _19811 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_19811] = stor[_19743]
                            if bool(stor1[_19743].field_0):
                                if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                    revert with 0, 34
                                _19833 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor1[_19743].field_0) * 0.5) + 32
                                mem[_19833] = uint255(stor1[_19743].field_0) * 0.5
                                if bool(stor1[_19743].field_0):
                                    if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    if not Mask(256, -1, stor1[_19743].field_0):
                                        mem[_19811 + 32] = _19833
                                        mem[_19811 + 64] = stor2[_19743]
                                        mem[_19811 + 96] = stor3[_19743]
                                        mem[_19811 + 128] = stor4[_19743]
                                        mem[_19811 + 160] = stor5[_19743]
                                        mem[_19811 + 192] = stor6[_19743]
                                        mem[_19811 + 224] = bool(uint8(stor7[_19743].field_0))
                                        mem[_19811 + 256] = bool(uint8(stor7[_19743].field_8))
                                        if block.timestamp < stor3[_19743]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                            revert with 0, 17
                                        if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                            revert with 0, 17
                                        stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                        if tierLevel.length != stor4[_19743]:
                                            if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19743]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19743]].field_512):
                                                if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _24262 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_24262] = tierLevel.length
                                                    mem[_24262 + 32] = stor5[_19743]
                                                    mem[_24262 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19743] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _20912 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_20912] = stor4[_19743]
                                                mem[_20912 + 32] = -stor5[_19743]
                                                mem[_20912 + 64] = 1
                                                stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                uint8(stor553[stor4[_19743]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21856 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21856] = tierLevel.length
                                                    mem[_21856 + 32] = stor5[_19743]
                                                    mem[_21856 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                            mem[_19833 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                            mem[_19811 + 32] = _19833
                                            mem[_19811 + 64] = stor2[_19743]
                                            mem[_19811 + 96] = stor3[_19743]
                                            mem[_19811 + 128] = stor4[_19743]
                                            mem[_19811 + 160] = stor5[_19743]
                                            mem[_19811 + 192] = stor6[_19743]
                                            mem[_19811 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19811 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25702 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25702] = tierLevel.length
                                                        mem[_25702 + 32] = stor5[_19743]
                                                        mem[_25702 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21203 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21203] = stor4[_19743]
                                                    mem[_21203 + 32] = -stor5[_19743]
                                                    mem[_21203 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22937 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22937] = tierLevel.length
                                                        mem[_22937 + 32] = stor5[_19743]
                                                        mem[_22937 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19743 + 1
                                            mem[_19833 + 32] = stor[sha3(_19743 + 1)]
                                            s = _19833 + 32
                                            t = sha3(_19743 + 1)
                                            while _19833 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19811 + 32] = _19833
                                            mem[_19811 + 64] = stor2[_19743]
                                            mem[_19811 + 96] = stor3[_19743]
                                            mem[_19811 + 128] = stor4[_19743]
                                            mem[_19811 + 160] = stor5[_19743]
                                            mem[_19811 + 192] = stor6[_19743]
                                            mem[_19811 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19811 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31482 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31482] = tierLevel.length
                                                        mem[_31482 + 32] = stor5[_19743]
                                                        mem[_31482 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30202 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30202] = stor4[_19743]
                                                    mem[_30202 + 32] = -stor5[_19743]
                                                    mem[_30202 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30842 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30842] = tierLevel.length
                                                        mem[_30842 + 32] = stor5[_19743]
                                                        mem[_30842 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                        revert with 0, 34
                                    if not stor1[_19743].field_1 % 128:
                                        mem[_19811 + 32] = _19833
                                        mem[_19811 + 64] = stor2[_19743]
                                        mem[_19811 + 96] = stor3[_19743]
                                        mem[_19811 + 128] = stor4[_19743]
                                        mem[_19811 + 160] = stor5[_19743]
                                        mem[_19811 + 192] = stor6[_19743]
                                        mem[_19811 + 224] = bool(uint8(stor7[_19743].field_0))
                                        mem[_19811 + 256] = bool(uint8(stor7[_19743].field_8))
                                        if block.timestamp < stor3[_19743]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                            revert with 0, 17
                                        if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                            revert with 0, 17
                                        stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                        if tierLevel.length != stor4[_19743]:
                                            if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19743]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19743]].field_512):
                                                if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _24977 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_24977] = tierLevel.length
                                                    mem[_24977 + 32] = stor5[_19743]
                                                    mem[_24977 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19743] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21019 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21019] = stor4[_19743]
                                                mem[_21019 + 32] = -stor5[_19743]
                                                mem[_21019 + 64] = 1
                                                stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                uint8(stor553[stor4[_19743]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22351 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22351] = tierLevel.length
                                                    mem[_22351 + 32] = stor5[_19743]
                                                    mem[_22351 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= stor1[_19743].field_1 % 128:
                                            mem[_19833 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                            mem[_19811 + 32] = _19833
                                            mem[_19811 + 64] = stor2[_19743]
                                            mem[_19811 + 96] = stor3[_19743]
                                            mem[_19811 + 128] = stor4[_19743]
                                            mem[_19811 + 160] = stor5[_19743]
                                            mem[_19811 + 192] = stor6[_19743]
                                            mem[_19811 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19811 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26411 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26411] = tierLevel.length
                                                        mem[_26411 + 32] = stor5[_19743]
                                                        mem[_26411 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21480 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21480] = stor4[_19743]
                                                    mem[_21480 + 32] = -stor5[_19743]
                                                    mem[_21480 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23586 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23586] = tierLevel.length
                                                        mem[_23586 + 32] = stor5[_19743]
                                                        mem[_23586 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19743 + 1
                                            mem[_19833 + 32] = stor[sha3(_19743 + 1)]
                                            s = _19833 + 32
                                            t = sha3(_19743 + 1)
                                            while _19833 + stor1[_19743].field_1 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19811 + 32] = _19833
                                            mem[_19811 + 64] = stor2[_19743]
                                            mem[_19811 + 96] = stor3[_19743]
                                            mem[_19811 + 128] = stor4[_19743]
                                            mem[_19811 + 160] = stor5[_19743]
                                            mem[_19811 + 192] = stor6[_19743]
                                            mem[_19811 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19811 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31489 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31489] = tierLevel.length
                                                        mem[_31489 + 32] = stor5[_19743]
                                                        mem[_31489 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30209 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30209] = stor4[_19743]
                                                    mem[_30209 + 32] = -stor5[_19743]
                                                    mem[_30209 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30849 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30849] = tierLevel.length
                                                        mem[_30849 + 32] = stor5[_19743]
                                                        mem[_30849 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                            else:
                                if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                    revert with 0, 34
                                _19842 = mem[64]
                                mem[64] = mem[64] + ceil32(stor1[_19743].field_1 % 128) + 32
                                mem[_19842] = stor1[_19743].field_1 % 128
                                if bool(stor1[_19743].field_0):
                                    if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    if not Mask(256, -1, stor1[_19743].field_0):
                                        mem[_19811 + 32] = _19842
                                        mem[_19811 + 64] = stor2[_19743]
                                        mem[_19811 + 96] = stor3[_19743]
                                        mem[_19811 + 128] = stor4[_19743]
                                        mem[_19811 + 160] = stor5[_19743]
                                        mem[_19811 + 192] = stor6[_19743]
                                        mem[_19811 + 224] = bool(uint8(stor7[_19743].field_0))
                                        mem[_19811 + 256] = bool(uint8(stor7[_19743].field_8))
                                        if block.timestamp < stor3[_19743]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                            revert with 0, 17
                                        if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                            revert with 0, 17
                                        stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                        if tierLevel.length != stor4[_19743]:
                                            if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19743]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19743]].field_512):
                                                if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _24992 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_24992] = tierLevel.length
                                                    mem[_24992 + 32] = stor5[_19743]
                                                    mem[_24992 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19743] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21027 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21027] = stor4[_19743]
                                                mem[_21027 + 32] = -stor5[_19743]
                                                mem[_21027 + 64] = 1
                                                stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                uint8(stor553[stor4[_19743]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22366 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22366] = tierLevel.length
                                                    mem[_22366 + 32] = stor5[_19743]
                                                    mem[_22366 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                            mem[_19842 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                            mem[_19811 + 32] = _19842
                                            mem[_19811 + 64] = stor2[_19743]
                                            mem[_19811 + 96] = stor3[_19743]
                                            mem[_19811 + 128] = stor4[_19743]
                                            mem[_19811 + 160] = stor5[_19743]
                                            mem[_19811 + 192] = stor6[_19743]
                                            mem[_19811 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19811 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26419 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26419] = tierLevel.length
                                                        mem[_26419 + 32] = stor5[_19743]
                                                        mem[_26419 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21489 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21489] = stor4[_19743]
                                                    mem[_21489 + 32] = -stor5[_19743]
                                                    mem[_21489 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23595 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23595] = tierLevel.length
                                                        mem[_23595 + 32] = stor5[_19743]
                                                        mem[_23595 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19743 + 1
                                            mem[_19842 + 32] = stor[sha3(_19743 + 1)]
                                            s = _19842 + 32
                                            t = sha3(_19743 + 1)
                                            while _19842 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19811 + 32] = _19842
                                            mem[_19811 + 64] = stor2[_19743]
                                            mem[_19811 + 96] = stor3[_19743]
                                            mem[_19811 + 128] = stor4[_19743]
                                            mem[_19811 + 160] = stor5[_19743]
                                            mem[_19811 + 192] = stor6[_19743]
                                            mem[_19811 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19811 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31496 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31496] = tierLevel.length
                                                        mem[_31496 + 32] = stor5[_19743]
                                                        mem[_31496 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30216 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30216] = stor4[_19743]
                                                    mem[_30216 + 32] = -stor5[_19743]
                                                    mem[_30216 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30856 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30856] = tierLevel.length
                                                        mem[_30856 + 32] = stor5[_19743]
                                                        mem[_30856 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                        revert with 0, 34
                                    if not stor1[_19743].field_1 % 128:
                                        mem[_19811 + 32] = _19842
                                        mem[_19811 + 64] = stor2[_19743]
                                        mem[_19811 + 96] = stor3[_19743]
                                        mem[_19811 + 128] = stor4[_19743]
                                        mem[_19811 + 160] = stor5[_19743]
                                        mem[_19811 + 192] = stor6[_19743]
                                        mem[_19811 + 224] = bool(uint8(stor7[_19743].field_0))
                                        mem[_19811 + 256] = bool(uint8(stor7[_19743].field_8))
                                        if block.timestamp < stor3[_19743]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                            revert with 0, 17
                                        if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                            revert with 0, 17
                                        stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                        if tierLevel.length != stor4[_19743]:
                                            if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19743]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19743]].field_512):
                                                if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _25717 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_25717] = tierLevel.length
                                                    mem[_25717 + 32] = stor5[_19743]
                                                    mem[_25717 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19743] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21214 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21214] = stor4[_19743]
                                                mem[_21214 + 32] = -stor5[_19743]
                                                mem[_21214 + 64] = 1
                                                stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                uint8(stor553[stor4[_19743]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22952 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22952] = tierLevel.length
                                                    mem[_22952 + 32] = stor5[_19743]
                                                    mem[_22952 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= stor1[_19743].field_1 % 128:
                                            mem[_19842 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                            mem[_19811 + 32] = _19842
                                            mem[_19811 + 64] = stor2[_19743]
                                            mem[_19811 + 96] = stor3[_19743]
                                            mem[_19811 + 128] = stor4[_19743]
                                            mem[_19811 + 160] = stor5[_19743]
                                            mem[_19811 + 192] = stor6[_19743]
                                            mem[_19811 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19811 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _27080 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_27080] = tierLevel.length
                                                        mem[_27080 + 32] = stor5[_19743]
                                                        mem[_27080 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21877 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21877] = stor4[_19743]
                                                    mem[_21877 + 32] = -stor5[_19743]
                                                    mem[_21877 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24283 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24283] = tierLevel.length
                                                        mem[_24283 + 32] = stor5[_19743]
                                                        mem[_24283 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19743 + 1
                                            mem[_19842 + 32] = stor[sha3(_19743 + 1)]
                                            s = _19842 + 32
                                            t = sha3(_19743 + 1)
                                            while _19842 + stor1[_19743].field_1 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19811 + 32] = _19842
                                            mem[_19811 + 64] = stor2[_19743]
                                            mem[_19811 + 96] = stor3[_19743]
                                            mem[_19811 + 128] = stor4[_19743]
                                            mem[_19811 + 160] = stor5[_19743]
                                            mem[_19811 + 192] = stor6[_19743]
                                            mem[_19811 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19811 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31503 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31503] = tierLevel.length
                                                        mem[_31503 + 32] = stor5[_19743]
                                                        mem[_31503 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30223 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30223] = stor4[_19743]
                                                    mem[_30223 + 32] = -stor5[_19743]
                                                    mem[_30223 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30863 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30863] = tierLevel.length
                                                        mem[_30863 + 32] = stor5[_19743]
                                                        mem[_30863 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                            stor4[_19743] = tierLevel.length
                            stor3[_19743] = block.timestamp
                            if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                revert with 0, 17
                    else:
                        if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                            mem[_19776 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                            mem[_19744 + 32] = _19776
                            mem[_19744 + 64] = stor2[_19743]
                            mem[_19744 + 96] = stor3[_19743]
                            mem[_19744 + 128] = stor4[_19743]
                            mem[_19744 + 160] = stor5[_19743]
                            mem[_19744 + 192] = stor6[_19743]
                            mem[_19744 + 224] = bool(uint8(stor7[_19743].field_0))
                            mem[_19744 + 256] = bool(uint8(stor7[_19743].field_8))
                            if stor3[_19743] > !compoundDelay:
                                revert with 0, 17
                            if block.timestamp >= stor3[_19743] + compoundDelay:
                                _19821 = mem[64]
                                mem[64] = mem[64] + 288
                                mem[_19821] = stor[_19743]
                                if bool(stor1[_19743].field_0):
                                    if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    _19852 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor1[_19743].field_0) * 0.5) + 32
                                    mem[_19852] = uint255(stor1[_19743].field_0) * 0.5
                                    if bool(stor1[_19743].field_0):
                                        if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19743].field_0):
                                            mem[_19821 + 32] = _19852
                                            mem[_19821 + 64] = stor2[_19743]
                                            mem[_19821 + 96] = stor3[_19743]
                                            mem[_19821 + 128] = stor4[_19743]
                                            mem[_19821 + 160] = stor5[_19743]
                                            mem[_19821 + 192] = stor6[_19743]
                                            mem[_19821 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19821 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25764 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25764] = tierLevel.length
                                                        mem[_25764 + 32] = stor5[_19743]
                                                        mem[_25764 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21223 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21223] = stor4[_19743]
                                                    mem[_21223 + 32] = -stor5[_19743]
                                                    mem[_21223 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22988 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22988] = tierLevel.length
                                                        mem[_22988 + 32] = stor5[_19743]
                                                        mem[_22988 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                                mem[_19852 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_19821 + 32] = _19852
                                                mem[_19821 + 64] = stor2[_19743]
                                                mem[_19821 + 96] = stor3[_19743]
                                                mem[_19821 + 128] = stor4[_19743]
                                                mem[_19821 + 160] = stor5[_19743]
                                                mem[_19821 + 192] = stor6[_19743]
                                                mem[_19821 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19821 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _27116 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_27116] = tierLevel.length
                                                            mem[_27116 + 32] = stor5[_19743]
                                                            mem[_27116 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _21895 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_21895] = stor4[_19743]
                                                        mem[_21895 + 32] = -stor5[_19743]
                                                        mem[_21895 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _24320 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_24320] = tierLevel.length
                                                            mem[_24320 + 32] = stor5[_19743]
                                                            mem[_24320 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_19852 + 32] = stor[sha3(_19743 + 1)]
                                                s = _19852 + 32
                                                t = sha3(_19743 + 1)
                                                while _19852 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19821 + 32] = _19852
                                                mem[_19821 + 64] = stor2[_19743]
                                                mem[_19821 + 96] = stor3[_19743]
                                                mem[_19821 + 128] = stor4[_19743]
                                                mem[_19821 + 160] = stor5[_19743]
                                                mem[_19821 + 192] = stor6[_19743]
                                                mem[_19821 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19821 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31510 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31510] = tierLevel.length
                                                            mem[_31510 + 32] = stor5[_19743]
                                                            mem[_31510 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30230 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30230] = stor4[_19743]
                                                        mem[_30230 + 32] = -stor5[_19743]
                                                        mem[_30230 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30870 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30870] = tierLevel.length
                                                            mem[_30870 + 32] = stor5[_19743]
                                                            mem[_30870 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19743].field_1 % 128:
                                            mem[_19821 + 32] = _19852
                                            mem[_19821 + 64] = stor2[_19743]
                                            mem[_19821 + 96] = stor3[_19743]
                                            mem[_19821 + 128] = stor4[_19743]
                                            mem[_19821 + 160] = stor5[_19743]
                                            mem[_19821 + 192] = stor6[_19743]
                                            mem[_19821 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19821 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26458 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26458] = tierLevel.length
                                                        mem[_26458 + 32] = stor5[_19743]
                                                        mem[_26458 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21502 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21502] = stor4[_19743]
                                                    mem[_21502 + 32] = -stor5[_19743]
                                                    mem[_21502 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23632 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23632] = tierLevel.length
                                                        mem[_23632 + 32] = stor5[_19743]
                                                        mem[_23632 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19743].field_1 % 128:
                                                mem[_19852 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_19821 + 32] = _19852
                                                mem[_19821 + 64] = stor2[_19743]
                                                mem[_19821 + 96] = stor3[_19743]
                                                mem[_19821 + 128] = stor4[_19743]
                                                mem[_19821 + 160] = stor5[_19743]
                                                mem[_19821 + 192] = stor6[_19743]
                                                mem[_19821 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19821 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _27736 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_27736] = tierLevel.length
                                                            mem[_27736 + 32] = stor5[_19743]
                                                            mem[_27736 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22405 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22405] = stor4[_19743]
                                                        mem[_22405 + 32] = -stor5[_19743]
                                                        mem[_22405 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _25049 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_25049] = tierLevel.length
                                                            mem[_25049 + 32] = stor5[_19743]
                                                            mem[_25049 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_19852 + 32] = stor[sha3(_19743 + 1)]
                                                s = _19852 + 32
                                                t = sha3(_19743 + 1)
                                                while _19852 + stor1[_19743].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19821 + 32] = _19852
                                                mem[_19821 + 64] = stor2[_19743]
                                                mem[_19821 + 96] = stor3[_19743]
                                                mem[_19821 + 128] = stor4[_19743]
                                                mem[_19821 + 160] = stor5[_19743]
                                                mem[_19821 + 192] = stor6[_19743]
                                                mem[_19821 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19821 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31517 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31517] = tierLevel.length
                                                            mem[_31517 + 32] = stor5[_19743]
                                                            mem[_31517 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30237 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30237] = stor4[_19743]
                                                        mem[_30237 + 32] = -stor5[_19743]
                                                        mem[_30237 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30877 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30877] = tierLevel.length
                                                            mem[_30877 + 32] = stor5[_19743]
                                                            mem[_30877 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                        revert with 0, 34
                                    _19860 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor1[_19743].field_1 % 128) + 32
                                    mem[_19860] = stor1[_19743].field_1 % 128
                                    if bool(stor1[_19743].field_0):
                                        if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19743].field_0):
                                            mem[_19821 + 32] = _19860
                                            mem[_19821 + 64] = stor2[_19743]
                                            mem[_19821 + 96] = stor3[_19743]
                                            mem[_19821 + 128] = stor4[_19743]
                                            mem[_19821 + 160] = stor5[_19743]
                                            mem[_19821 + 192] = stor6[_19743]
                                            mem[_19821 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19821 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26473 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26473] = tierLevel.length
                                                        mem[_26473 + 32] = stor5[_19743]
                                                        mem[_26473 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21510 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21510] = stor4[_19743]
                                                    mem[_21510 + 32] = -stor5[_19743]
                                                    mem[_21510 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23647 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23647] = tierLevel.length
                                                        mem[_23647 + 32] = stor5[_19743]
                                                        mem[_23647 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                                mem[_19860 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_19821 + 32] = _19860
                                                mem[_19821 + 64] = stor2[_19743]
                                                mem[_19821 + 96] = stor3[_19743]
                                                mem[_19821 + 128] = stor4[_19743]
                                                mem[_19821 + 160] = stor5[_19743]
                                                mem[_19821 + 192] = stor6[_19743]
                                                mem[_19821 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19821 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _27744 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_27744] = tierLevel.length
                                                            mem[_27744 + 32] = stor5[_19743]
                                                            mem[_27744 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22414 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22414] = stor4[_19743]
                                                        mem[_22414 + 32] = -stor5[_19743]
                                                        mem[_22414 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _25058 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_25058] = tierLevel.length
                                                            mem[_25058 + 32] = stor5[_19743]
                                                            mem[_25058 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_19860 + 32] = stor[sha3(_19743 + 1)]
                                                s = _19860 + 32
                                                t = sha3(_19743 + 1)
                                                while _19860 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19821 + 32] = _19860
                                                mem[_19821 + 64] = stor2[_19743]
                                                mem[_19821 + 96] = stor3[_19743]
                                                mem[_19821 + 128] = stor4[_19743]
                                                mem[_19821 + 160] = stor5[_19743]
                                                mem[_19821 + 192] = stor6[_19743]
                                                mem[_19821 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19821 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31524 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31524] = tierLevel.length
                                                            mem[_31524 + 32] = stor5[_19743]
                                                            mem[_31524 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30244 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30244] = stor4[_19743]
                                                        mem[_30244 + 32] = -stor5[_19743]
                                                        mem[_30244 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30884 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30884] = tierLevel.length
                                                            mem[_30884 + 32] = stor5[_19743]
                                                            mem[_30884 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19743].field_1 % 128:
                                            mem[_19821 + 32] = _19860
                                            mem[_19821 + 64] = stor2[_19743]
                                            mem[_19821 + 96] = stor3[_19743]
                                            mem[_19821 + 128] = stor4[_19743]
                                            mem[_19821 + 160] = stor5[_19743]
                                            mem[_19821 + 192] = stor6[_19743]
                                            mem[_19821 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19821 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _27131 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_27131] = tierLevel.length
                                                        mem[_27131 + 32] = stor5[_19743]
                                                        mem[_27131 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21906 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21906] = stor4[_19743]
                                                    mem[_21906 + 32] = -stor5[_19743]
                                                    mem[_21906 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24335 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24335] = tierLevel.length
                                                        mem[_24335 + 32] = stor5[_19743]
                                                        mem[_24335 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19743].field_1 % 128:
                                                mem[_19860 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_19821 + 32] = _19860
                                                mem[_19821 + 64] = stor2[_19743]
                                                mem[_19821 + 96] = stor3[_19743]
                                                mem[_19821 + 128] = stor4[_19743]
                                                mem[_19821 + 160] = stor5[_19743]
                                                mem[_19821 + 192] = stor6[_19743]
                                                mem[_19821 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19821 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _28281 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_28281] = tierLevel.length
                                                            mem[_28281 + 32] = stor5[_19743]
                                                            mem[_28281 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23009 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23009] = stor4[_19743]
                                                        mem[_23009 + 32] = -stor5[_19743]
                                                        mem[_23009 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _25785 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_25785] = tierLevel.length
                                                            mem[_25785 + 32] = stor5[_19743]
                                                            mem[_25785 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_19860 + 32] = stor[sha3(_19743 + 1)]
                                                s = _19860 + 32
                                                t = sha3(_19743 + 1)
                                                while _19860 + stor1[_19743].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19821 + 32] = _19860
                                                mem[_19821 + 64] = stor2[_19743]
                                                mem[_19821 + 96] = stor3[_19743]
                                                mem[_19821 + 128] = stor4[_19743]
                                                mem[_19821 + 160] = stor5[_19743]
                                                mem[_19821 + 192] = stor6[_19743]
                                                mem[_19821 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19821 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31531 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31531] = tierLevel.length
                                                            mem[_31531 + 32] = stor5[_19743]
                                                            mem[_31531 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30251 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30251] = stor4[_19743]
                                                        mem[_30251 + 32] = -stor5[_19743]
                                                        mem[_30251 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30891 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30891] = tierLevel.length
                                                            mem[_30891 + 32] = stor5[_19743]
                                                            mem[_30891 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                stor4[_19743] = tierLevel.length
                                stor3[_19743] = block.timestamp
                                if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                    revert with 0, 17
                        else:
                            mem[0] = _19743 + 1
                            mem[_19776 + 32] = stor[sha3(_19743 + 1)]
                            s = _19776 + 32
                            t = sha3(_19743 + 1)
                            while _19776 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_19744 + 32] = _19776
                            mem[_19744 + 64] = stor2[_19743]
                            mem[_19744 + 96] = stor3[_19743]
                            mem[_19744 + 128] = stor4[_19743]
                            mem[_19744 + 160] = stor5[_19743]
                            mem[_19744 + 192] = stor6[_19743]
                            mem[_19744 + 224] = bool(uint8(stor7[_19743].field_0))
                            mem[_19744 + 256] = bool(uint8(stor7[_19743].field_8))
                            if stor3[_19743] > !compoundDelay:
                                revert with 0, 17
                            if block.timestamp >= stor3[_19743] + compoundDelay:
                                _29684 = mem[64]
                                mem[64] = mem[64] + 288
                                mem[_29684] = stor[_19743]
                                if bool(stor1[_19743].field_0):
                                    if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    _29692 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor1[_19743].field_0) * 0.5) + 32
                                    mem[_29692] = uint255(stor1[_19743].field_0) * 0.5
                                    if bool(stor1[_19743].field_0):
                                        if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19743].field_0):
                                            mem[_29684 + 32] = _29692
                                            mem[_29684 + 64] = stor2[_19743]
                                            mem[_29684 + 96] = stor3[_19743]
                                            mem[_29684 + 128] = stor4[_19743]
                                            mem[_29684 + 160] = stor5[_19743]
                                            mem[_29684 + 192] = stor6[_19743]
                                            mem[_29684 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_29684 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33546 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33546] = tierLevel.length
                                                        mem[_33546 + 32] = stor5[_19743]
                                                        mem[_33546 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _31988 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_31988] = stor4[_19743]
                                                    mem[_31988 + 32] = -stor5[_19743]
                                                    mem[_31988 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32586 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32586] = tierLevel.length
                                                        mem[_32586 + 32] = stor5[_19743]
                                                        mem[_32586 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                                mem[_29692 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_29684 + 32] = _29692
                                                mem[_29684 + 64] = stor2[_19743]
                                                mem[_29684 + 96] = stor3[_19743]
                                                mem[_29684 + 128] = stor4[_19743]
                                                mem[_29684 + 160] = stor5[_19743]
                                                mem[_29684 + 192] = stor6[_19743]
                                                mem[_29684 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29684 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34065 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34065] = tierLevel.length
                                                            mem[_34065 + 32] = stor5[_19743]
                                                            mem[_34065 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32230 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32230] = stor4[_19743]
                                                        mem[_32230 + 32] = -stor5[_19743]
                                                        mem[_32230 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33108 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33108] = tierLevel.length
                                                            mem[_33108 + 32] = stor5[_19743]
                                                            mem[_33108 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_29692 + 32] = stor[sha3(_19743 + 1)]
                                                s = _29692 + 32
                                                t = sha3(_19743 + 1)
                                                while _29692 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29684 + 32] = _29692
                                                mem[_29684 + 64] = stor2[_19743]
                                                mem[_29684 + 96] = stor3[_19743]
                                                mem[_29684 + 128] = stor4[_19743]
                                                mem[_29684 + 160] = stor5[_19743]
                                                mem[_29684 + 192] = stor6[_19743]
                                                mem[_29684 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29684 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35650 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35650] = tierLevel.length
                                                            mem[_35650 + 32] = stor5[_19743]
                                                            mem[_35650 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35010 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35010] = stor4[_19743]
                                                        mem[_35010 + 32] = -stor5[_19743]
                                                        mem[_35010 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35330 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35330] = tierLevel.length
                                                            mem[_35330 + 32] = stor5[_19743]
                                                            mem[_35330 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19743].field_1 % 128:
                                            mem[_29684 + 32] = _29692
                                            mem[_29684 + 64] = stor2[_19743]
                                            mem[_29684 + 96] = stor3[_19743]
                                            mem[_29684 + 128] = stor4[_19743]
                                            mem[_29684 + 160] = stor5[_19743]
                                            mem[_29684 + 192] = stor6[_19743]
                                            mem[_29684 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_29684 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33790 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33790] = tierLevel.length
                                                        mem[_33790 + 32] = stor5[_19743]
                                                        mem[_33790 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32080 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32080] = stor4[_19743]
                                                    mem[_32080 + 32] = -stor5[_19743]
                                                    mem[_32080 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32830 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32830] = tierLevel.length
                                                        mem[_32830 + 32] = stor5[_19743]
                                                        mem[_32830 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19743].field_1 % 128:
                                                mem[_29692 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_29684 + 32] = _29692
                                                mem[_29684 + 64] = stor2[_19743]
                                                mem[_29684 + 96] = stor3[_19743]
                                                mem[_29684 + 128] = stor4[_19743]
                                                mem[_29684 + 160] = stor5[_19743]
                                                mem[_29684 + 192] = stor6[_19743]
                                                mem[_29684 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29684 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34297 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34297] = tierLevel.length
                                                            mem[_34297 + 32] = stor5[_19743]
                                                            mem[_34297 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32402 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32402] = stor4[_19743]
                                                        mem[_32402 + 32] = -stor5[_19743]
                                                        mem[_32402 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33350 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33350] = tierLevel.length
                                                            mem[_33350 + 32] = stor5[_19743]
                                                            mem[_33350 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_29692 + 32] = stor[sha3(_19743 + 1)]
                                                s = _29692 + 32
                                                t = sha3(_19743 + 1)
                                                while _29692 + stor1[_19743].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29684 + 32] = _29692
                                                mem[_29684 + 64] = stor2[_19743]
                                                mem[_29684 + 96] = stor3[_19743]
                                                mem[_29684 + 128] = stor4[_19743]
                                                mem[_29684 + 160] = stor5[_19743]
                                                mem[_29684 + 192] = stor6[_19743]
                                                mem[_29684 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29684 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35657 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35657] = tierLevel.length
                                                            mem[_35657 + 32] = stor5[_19743]
                                                            mem[_35657 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35017 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35017] = stor4[_19743]
                                                        mem[_35017 + 32] = -stor5[_19743]
                                                        mem[_35017 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35337 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35337] = tierLevel.length
                                                            mem[_35337 + 32] = stor5[_19743]
                                                            mem[_35337 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                        revert with 0, 34
                                    _29700 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor1[_19743].field_1 % 128) + 32
                                    mem[_29700] = stor1[_19743].field_1 % 128
                                    if bool(stor1[_19743].field_0):
                                        if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19743].field_0):
                                            mem[_29684 + 32] = _29700
                                            mem[_29684 + 64] = stor2[_19743]
                                            mem[_29684 + 96] = stor3[_19743]
                                            mem[_29684 + 128] = stor4[_19743]
                                            mem[_29684 + 160] = stor5[_19743]
                                            mem[_29684 + 192] = stor6[_19743]
                                            mem[_29684 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_29684 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33805 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33805] = tierLevel.length
                                                        mem[_33805 + 32] = stor5[_19743]
                                                        mem[_33805 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32088 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32088] = stor4[_19743]
                                                    mem[_32088 + 32] = -stor5[_19743]
                                                    mem[_32088 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32845 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32845] = tierLevel.length
                                                        mem[_32845 + 32] = stor5[_19743]
                                                        mem[_32845 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                                mem[_29700 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_29684 + 32] = _29700
                                                mem[_29684 + 64] = stor2[_19743]
                                                mem[_29684 + 96] = stor3[_19743]
                                                mem[_29684 + 128] = stor4[_19743]
                                                mem[_29684 + 160] = stor5[_19743]
                                                mem[_29684 + 192] = stor6[_19743]
                                                mem[_29684 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29684 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34305 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34305] = tierLevel.length
                                                            mem[_34305 + 32] = stor5[_19743]
                                                            mem[_34305 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32411 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32411] = stor4[_19743]
                                                        mem[_32411 + 32] = -stor5[_19743]
                                                        mem[_32411 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33359 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33359] = tierLevel.length
                                                            mem[_33359 + 32] = stor5[_19743]
                                                            mem[_33359 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_29700 + 32] = stor[sha3(_19743 + 1)]
                                                s = _29700 + 32
                                                t = sha3(_19743 + 1)
                                                while _29700 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29684 + 32] = _29700
                                                mem[_29684 + 64] = stor2[_19743]
                                                mem[_29684 + 96] = stor3[_19743]
                                                mem[_29684 + 128] = stor4[_19743]
                                                mem[_29684 + 160] = stor5[_19743]
                                                mem[_29684 + 192] = stor6[_19743]
                                                mem[_29684 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29684 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35664 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35664] = tierLevel.length
                                                            mem[_35664 + 32] = stor5[_19743]
                                                            mem[_35664 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35024 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35024] = stor4[_19743]
                                                        mem[_35024 + 32] = -stor5[_19743]
                                                        mem[_35024 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35344 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35344] = tierLevel.length
                                                            mem[_35344 + 32] = stor5[_19743]
                                                            mem[_35344 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19743].field_1 % 128:
                                            mem[_29684 + 32] = _29700
                                            mem[_29684 + 64] = stor2[_19743]
                                            mem[_29684 + 96] = stor3[_19743]
                                            mem[_29684 + 128] = stor4[_19743]
                                            mem[_29684 + 160] = stor5[_19743]
                                            mem[_29684 + 192] = stor6[_19743]
                                            mem[_29684 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_29684 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _34080 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_34080] = tierLevel.length
                                                        mem[_34080 + 32] = stor5[_19743]
                                                        mem[_34080 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32241 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32241] = stor4[_19743]
                                                    mem[_32241 + 32] = -stor5[_19743]
                                                    mem[_32241 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33123 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33123] = tierLevel.length
                                                        mem[_33123 + 32] = stor5[_19743]
                                                        mem[_33123 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19743].field_1 % 128:
                                                mem[_29700 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_29684 + 32] = _29700
                                                mem[_29684 + 64] = stor2[_19743]
                                                mem[_29684 + 96] = stor3[_19743]
                                                mem[_29684 + 128] = stor4[_19743]
                                                mem[_29684 + 160] = stor5[_19743]
                                                mem[_29684 + 192] = stor6[_19743]
                                                mem[_29684 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29684 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34476 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34476] = tierLevel.length
                                                            mem[_34476 + 32] = stor5[_19743]
                                                            mem[_34476 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32607 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32607] = stor4[_19743]
                                                        mem[_32607 + 32] = -stor5[_19743]
                                                        mem[_32607 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33567 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33567] = tierLevel.length
                                                            mem[_33567 + 32] = stor5[_19743]
                                                            mem[_33567 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_29700 + 32] = stor[sha3(_19743 + 1)]
                                                s = _29700 + 32
                                                t = sha3(_19743 + 1)
                                                while _29700 + stor1[_19743].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29684 + 32] = _29700
                                                mem[_29684 + 64] = stor2[_19743]
                                                mem[_29684 + 96] = stor3[_19743]
                                                mem[_29684 + 128] = stor4[_19743]
                                                mem[_29684 + 160] = stor5[_19743]
                                                mem[_29684 + 192] = stor6[_19743]
                                                mem[_29684 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29684 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35671 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35671] = tierLevel.length
                                                            mem[_35671 + 32] = stor5[_19743]
                                                            mem[_35671 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35031 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35031] = stor4[_19743]
                                                        mem[_35031 + 32] = -stor5[_19743]
                                                        mem[_35031 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35351 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35351] = tierLevel.length
                                                            mem[_35351 + 32] = stor5[_19743]
                                                            mem[_35351 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                stor4[_19743] = tierLevel.length
                                stor3[_19743] = block.timestamp
                                if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                    revert with 0, 17
                else:
                    if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                        revert with 0, 34
                    if not stor1[_19743].field_1 % 128:
                        mem[_19744 + 32] = _19776
                        mem[_19744 + 64] = stor2[_19743]
                        mem[_19744 + 96] = stor3[_19743]
                        mem[_19744 + 128] = stor4[_19743]
                        mem[_19744 + 160] = stor5[_19743]
                        mem[_19744 + 192] = stor6[_19743]
                        mem[_19744 + 224] = bool(uint8(stor7[_19743].field_0))
                        mem[_19744 + 256] = bool(uint8(stor7[_19743].field_8))
                        if stor3[_19743] > !compoundDelay:
                            revert with 0, 17
                        if block.timestamp >= stor3[_19743] + compoundDelay:
                            _19817 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_19817] = stor[_19743]
                            if bool(stor1[_19743].field_0):
                                if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                    revert with 0, 34
                                _19843 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor1[_19743].field_0) * 0.5) + 32
                                mem[_19843] = uint255(stor1[_19743].field_0) * 0.5
                                if bool(stor1[_19743].field_0):
                                    if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    if not Mask(256, -1, stor1[_19743].field_0):
                                        mem[_19817 + 32] = _19843
                                        mem[_19817 + 64] = stor2[_19743]
                                        mem[_19817 + 96] = stor3[_19743]
                                        mem[_19817 + 128] = stor4[_19743]
                                        mem[_19817 + 160] = stor5[_19743]
                                        mem[_19817 + 192] = stor6[_19743]
                                        mem[_19817 + 224] = bool(uint8(stor7[_19743].field_0))
                                        mem[_19817 + 256] = bool(uint8(stor7[_19743].field_8))
                                        if block.timestamp < stor3[_19743]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                            revert with 0, 17
                                        if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                            revert with 0, 17
                                        stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                        if tierLevel.length != stor4[_19743]:
                                            if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19743]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19743]].field_512):
                                                if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _25069 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_25069] = tierLevel.length
                                                    mem[_25069 + 32] = stor5[_19743]
                                                    mem[_25069 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19743] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21037 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21037] = stor4[_19743]
                                                mem[_21037 + 32] = -stor5[_19743]
                                                mem[_21037 + 64] = 1
                                                stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                uint8(stor553[stor4[_19743]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22423 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22423] = tierLevel.length
                                                    mem[_22423 + 32] = stor5[_19743]
                                                    mem[_22423 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                            mem[_19843 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                            mem[_19817 + 32] = _19843
                                            mem[_19817 + 64] = stor2[_19743]
                                            mem[_19817 + 96] = stor3[_19743]
                                            mem[_19817 + 128] = stor4[_19743]
                                            mem[_19817 + 160] = stor5[_19743]
                                            mem[_19817 + 192] = stor6[_19743]
                                            mem[_19817 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19817 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26491 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26491] = tierLevel.length
                                                        mem[_26491 + 32] = stor5[_19743]
                                                        mem[_26491 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21520 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21520] = stor4[_19743]
                                                    mem[_21520 + 32] = -stor5[_19743]
                                                    mem[_21520 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23666 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23666] = tierLevel.length
                                                        mem[_23666 + 32] = stor5[_19743]
                                                        mem[_23666 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19743 + 1
                                            mem[_19843 + 32] = stor[sha3(_19743 + 1)]
                                            s = _19843 + 32
                                            t = sha3(_19743 + 1)
                                            while _19843 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19817 + 32] = _19843
                                            mem[_19817 + 64] = stor2[_19743]
                                            mem[_19817 + 96] = stor3[_19743]
                                            mem[_19817 + 128] = stor4[_19743]
                                            mem[_19817 + 160] = stor5[_19743]
                                            mem[_19817 + 192] = stor6[_19743]
                                            mem[_19817 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19817 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31538 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31538] = tierLevel.length
                                                        mem[_31538 + 32] = stor5[_19743]
                                                        mem[_31538 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30258 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30258] = stor4[_19743]
                                                    mem[_30258 + 32] = -stor5[_19743]
                                                    mem[_30258 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30898 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30898] = tierLevel.length
                                                        mem[_30898 + 32] = stor5[_19743]
                                                        mem[_30898 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                        revert with 0, 34
                                    if not stor1[_19743].field_1 % 128:
                                        mem[_19817 + 32] = _19843
                                        mem[_19817 + 64] = stor2[_19743]
                                        mem[_19817 + 96] = stor3[_19743]
                                        mem[_19817 + 128] = stor4[_19743]
                                        mem[_19817 + 160] = stor5[_19743]
                                        mem[_19817 + 192] = stor6[_19743]
                                        mem[_19817 + 224] = bool(uint8(stor7[_19743].field_0))
                                        mem[_19817 + 256] = bool(uint8(stor7[_19743].field_8))
                                        if block.timestamp < stor3[_19743]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                            revert with 0, 17
                                        if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                            revert with 0, 17
                                        stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                        if tierLevel.length != stor4[_19743]:
                                            if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19743]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19743]].field_512):
                                                if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _25796 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_25796] = tierLevel.length
                                                    mem[_25796 + 32] = stor5[_19743]
                                                    mem[_25796 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19743] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21234 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21234] = stor4[_19743]
                                                mem[_21234 + 32] = -stor5[_19743]
                                                mem[_21234 + 64] = 1
                                                stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                uint8(stor553[stor4[_19743]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _23020 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_23020] = tierLevel.length
                                                    mem[_23020 + 32] = stor5[_19743]
                                                    mem[_23020 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= stor1[_19743].field_1 % 128:
                                            mem[_19843 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                            mem[_19817 + 32] = _19843
                                            mem[_19817 + 64] = stor2[_19743]
                                            mem[_19817 + 96] = stor3[_19743]
                                            mem[_19817 + 128] = stor4[_19743]
                                            mem[_19817 + 160] = stor5[_19743]
                                            mem[_19817 + 192] = stor6[_19743]
                                            mem[_19817 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19817 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _27149 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_27149] = tierLevel.length
                                                        mem[_27149 + 32] = stor5[_19743]
                                                        mem[_27149 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21918 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21918] = stor4[_19743]
                                                    mem[_21918 + 32] = -stor5[_19743]
                                                    mem[_21918 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24354 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24354] = tierLevel.length
                                                        mem[_24354 + 32] = stor5[_19743]
                                                        mem[_24354 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19743 + 1
                                            mem[_19843 + 32] = stor[sha3(_19743 + 1)]
                                            s = _19843 + 32
                                            t = sha3(_19743 + 1)
                                            while _19843 + stor1[_19743].field_1 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19817 + 32] = _19843
                                            mem[_19817 + 64] = stor2[_19743]
                                            mem[_19817 + 96] = stor3[_19743]
                                            mem[_19817 + 128] = stor4[_19743]
                                            mem[_19817 + 160] = stor5[_19743]
                                            mem[_19817 + 192] = stor6[_19743]
                                            mem[_19817 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19817 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31545 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31545] = tierLevel.length
                                                        mem[_31545 + 32] = stor5[_19743]
                                                        mem[_31545 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30265 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30265] = stor4[_19743]
                                                    mem[_30265 + 32] = -stor5[_19743]
                                                    mem[_30265 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30905 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30905] = tierLevel.length
                                                        mem[_30905 + 32] = stor5[_19743]
                                                        mem[_30905 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                            else:
                                if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                    revert with 0, 34
                                _19853 = mem[64]
                                mem[64] = mem[64] + ceil32(stor1[_19743].field_1 % 128) + 32
                                mem[_19853] = stor1[_19743].field_1 % 128
                                if bool(stor1[_19743].field_0):
                                    if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    if not Mask(256, -1, stor1[_19743].field_0):
                                        mem[_19817 + 32] = _19853
                                        mem[_19817 + 64] = stor2[_19743]
                                        mem[_19817 + 96] = stor3[_19743]
                                        mem[_19817 + 128] = stor4[_19743]
                                        mem[_19817 + 160] = stor5[_19743]
                                        mem[_19817 + 192] = stor6[_19743]
                                        mem[_19817 + 224] = bool(uint8(stor7[_19743].field_0))
                                        mem[_19817 + 256] = bool(uint8(stor7[_19743].field_8))
                                        if block.timestamp < stor3[_19743]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                            revert with 0, 17
                                        if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                            revert with 0, 17
                                        stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                        if tierLevel.length != stor4[_19743]:
                                            if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19743]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19743]].field_512):
                                                if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _25811 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_25811] = tierLevel.length
                                                    mem[_25811 + 32] = stor5[_19743]
                                                    mem[_25811 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19743] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21242 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21242] = stor4[_19743]
                                                mem[_21242 + 32] = -stor5[_19743]
                                                mem[_21242 + 64] = 1
                                                stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                uint8(stor553[stor4[_19743]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _23035 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_23035] = tierLevel.length
                                                    mem[_23035 + 32] = stor5[_19743]
                                                    mem[_23035 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                            mem[_19853 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                            mem[_19817 + 32] = _19853
                                            mem[_19817 + 64] = stor2[_19743]
                                            mem[_19817 + 96] = stor3[_19743]
                                            mem[_19817 + 128] = stor4[_19743]
                                            mem[_19817 + 160] = stor5[_19743]
                                            mem[_19817 + 192] = stor6[_19743]
                                            mem[_19817 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19817 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _27157 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_27157] = tierLevel.length
                                                        mem[_27157 + 32] = stor5[_19743]
                                                        mem[_27157 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21927 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21927] = stor4[_19743]
                                                    mem[_21927 + 32] = -stor5[_19743]
                                                    mem[_21927 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24363 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24363] = tierLevel.length
                                                        mem[_24363 + 32] = stor5[_19743]
                                                        mem[_24363 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19743 + 1
                                            mem[_19853 + 32] = stor[sha3(_19743 + 1)]
                                            s = _19853 + 32
                                            t = sha3(_19743 + 1)
                                            while _19853 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19817 + 32] = _19853
                                            mem[_19817 + 64] = stor2[_19743]
                                            mem[_19817 + 96] = stor3[_19743]
                                            mem[_19817 + 128] = stor4[_19743]
                                            mem[_19817 + 160] = stor5[_19743]
                                            mem[_19817 + 192] = stor6[_19743]
                                            mem[_19817 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19817 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31552 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31552] = tierLevel.length
                                                        mem[_31552 + 32] = stor5[_19743]
                                                        mem[_31552 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30272 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30272] = stor4[_19743]
                                                    mem[_30272 + 32] = -stor5[_19743]
                                                    mem[_30272 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30912 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30912] = tierLevel.length
                                                        mem[_30912 + 32] = stor5[_19743]
                                                        mem[_30912 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                        revert with 0, 34
                                    if not stor1[_19743].field_1 % 128:
                                        mem[_19817 + 32] = _19853
                                        mem[_19817 + 64] = stor2[_19743]
                                        mem[_19817 + 96] = stor3[_19743]
                                        mem[_19817 + 128] = stor4[_19743]
                                        mem[_19817 + 160] = stor5[_19743]
                                        mem[_19817 + 192] = stor6[_19743]
                                        mem[_19817 + 224] = bool(uint8(stor7[_19743].field_0))
                                        mem[_19817 + 256] = bool(uint8(stor7[_19743].field_8))
                                        if block.timestamp < stor3[_19743]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                            revert with 0, 17
                                        if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                            revert with 0, 17
                                        stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                        if tierLevel.length != stor4[_19743]:
                                            if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19743]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19743]].field_512):
                                                if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _26506 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_26506] = tierLevel.length
                                                    mem[_26506 + 32] = stor5[_19743]
                                                    mem[_26506 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19743] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21531 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21531] = stor4[_19743]
                                                mem[_21531 + 32] = -stor5[_19743]
                                                mem[_21531 + 64] = 1
                                                stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                uint8(stor553[stor4[_19743]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19743]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19743]
                                                else:
                                                    if stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _23681 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_23681] = tierLevel.length
                                                    mem[_23681 + 32] = stor5[_19743]
                                                    mem[_23681 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19743]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= stor1[_19743].field_1 % 128:
                                            mem[_19853 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                            mem[_19817 + 32] = _19853
                                            mem[_19817 + 64] = stor2[_19743]
                                            mem[_19817 + 96] = stor3[_19743]
                                            mem[_19817 + 128] = stor4[_19743]
                                            mem[_19817 + 160] = stor5[_19743]
                                            mem[_19817 + 192] = stor6[_19743]
                                            mem[_19817 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19817 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _27767 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_27767] = tierLevel.length
                                                        mem[_27767 + 32] = stor5[_19743]
                                                        mem[_27767 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22444 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22444] = stor4[_19743]
                                                    mem[_22444 + 32] = -stor5[_19743]
                                                    mem[_22444 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25090 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25090] = tierLevel.length
                                                        mem[_25090 + 32] = stor5[_19743]
                                                        mem[_25090 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19743 + 1
                                            mem[_19853 + 32] = stor[sha3(_19743 + 1)]
                                            s = _19853 + 32
                                            t = sha3(_19743 + 1)
                                            while _19853 + stor1[_19743].field_1 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19817 + 32] = _19853
                                            mem[_19817 + 64] = stor2[_19743]
                                            mem[_19817 + 96] = stor3[_19743]
                                            mem[_19817 + 128] = stor4[_19743]
                                            mem[_19817 + 160] = stor5[_19743]
                                            mem[_19817 + 192] = stor6[_19743]
                                            mem[_19817 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19817 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31559 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31559] = tierLevel.length
                                                        mem[_31559 + 32] = stor5[_19743]
                                                        mem[_31559 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30279 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30279] = stor4[_19743]
                                                    mem[_30279 + 32] = -stor5[_19743]
                                                    mem[_30279 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30919 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30919] = tierLevel.length
                                                        mem[_30919 + 32] = stor5[_19743]
                                                        mem[_30919 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                            stor4[_19743] = tierLevel.length
                            stor3[_19743] = block.timestamp
                            if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                revert with 0, 17
                    else:
                        if 31 >= stor1[_19743].field_1 % 128:
                            mem[_19776 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                            mem[_19744 + 32] = _19776
                            mem[_19744 + 64] = stor2[_19743]
                            mem[_19744 + 96] = stor3[_19743]
                            mem[_19744 + 128] = stor4[_19743]
                            mem[_19744 + 160] = stor5[_19743]
                            mem[_19744 + 192] = stor6[_19743]
                            mem[_19744 + 224] = bool(uint8(stor7[_19743].field_0))
                            mem[_19744 + 256] = bool(uint8(stor7[_19743].field_8))
                            if stor3[_19743] > !compoundDelay:
                                revert with 0, 17
                            if block.timestamp >= stor3[_19743] + compoundDelay:
                                _19826 = mem[64]
                                mem[64] = mem[64] + 288
                                mem[_19826] = stor[_19743]
                                if bool(stor1[_19743].field_0):
                                    if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    _19861 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor1[_19743].field_0) * 0.5) + 32
                                    mem[_19861] = uint255(stor1[_19743].field_0) * 0.5
                                    if bool(stor1[_19743].field_0):
                                        if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19743].field_0):
                                            mem[_19826 + 32] = _19861
                                            mem[_19826 + 64] = stor2[_19743]
                                            mem[_19826 + 96] = stor3[_19743]
                                            mem[_19826 + 128] = stor4[_19743]
                                            mem[_19826 + 160] = stor5[_19743]
                                            mem[_19826 + 192] = stor6[_19743]
                                            mem[_19826 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19826 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26553 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26553] = tierLevel.length
                                                        mem[_26553 + 32] = stor5[_19743]
                                                        mem[_26553 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21540 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21540] = stor4[_19743]
                                                    mem[_21540 + 32] = -stor5[_19743]
                                                    mem[_21540 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23717 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23717] = tierLevel.length
                                                        mem[_23717 + 32] = stor5[_19743]
                                                        mem[_23717 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                                mem[_19861 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_19826 + 32] = _19861
                                                mem[_19826 + 64] = stor2[_19743]
                                                mem[_19826 + 96] = stor3[_19743]
                                                mem[_19826 + 128] = stor4[_19743]
                                                mem[_19826 + 160] = stor5[_19743]
                                                mem[_19826 + 192] = stor6[_19743]
                                                mem[_19826 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19826 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _27803 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_27803] = tierLevel.length
                                                            mem[_27803 + 32] = stor5[_19743]
                                                            mem[_27803 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22462 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22462] = stor4[_19743]
                                                        mem[_22462 + 32] = -stor5[_19743]
                                                        mem[_22462 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _25127 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_25127] = tierLevel.length
                                                            mem[_25127 + 32] = stor5[_19743]
                                                            mem[_25127 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_19861 + 32] = stor[sha3(_19743 + 1)]
                                                s = _19861 + 32
                                                t = sha3(_19743 + 1)
                                                while _19861 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19826 + 32] = _19861
                                                mem[_19826 + 64] = stor2[_19743]
                                                mem[_19826 + 96] = stor3[_19743]
                                                mem[_19826 + 128] = stor4[_19743]
                                                mem[_19826 + 160] = stor5[_19743]
                                                mem[_19826 + 192] = stor6[_19743]
                                                mem[_19826 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19826 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31566 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31566] = tierLevel.length
                                                            mem[_31566 + 32] = stor5[_19743]
                                                            mem[_31566 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30286 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30286] = stor4[_19743]
                                                        mem[_30286 + 32] = -stor5[_19743]
                                                        mem[_30286 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30926 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30926] = tierLevel.length
                                                            mem[_30926 + 32] = stor5[_19743]
                                                            mem[_30926 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19743].field_1 % 128:
                                            mem[_19826 + 32] = _19861
                                            mem[_19826 + 64] = stor2[_19743]
                                            mem[_19826 + 96] = stor3[_19743]
                                            mem[_19826 + 128] = stor4[_19743]
                                            mem[_19826 + 160] = stor5[_19743]
                                            mem[_19826 + 192] = stor6[_19743]
                                            mem[_19826 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19826 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _27196 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_27196] = tierLevel.length
                                                        mem[_27196 + 32] = stor5[_19743]
                                                        mem[_27196 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21940 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21940] = stor4[_19743]
                                                    mem[_21940 + 32] = -stor5[_19743]
                                                    mem[_21940 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24400 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24400] = tierLevel.length
                                                        mem[_24400 + 32] = stor5[_19743]
                                                        mem[_24400 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19743].field_1 % 128:
                                                mem[_19861 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_19826 + 32] = _19861
                                                mem[_19826 + 64] = stor2[_19743]
                                                mem[_19826 + 96] = stor3[_19743]
                                                mem[_19826 + 128] = stor4[_19743]
                                                mem[_19826 + 160] = stor5[_19743]
                                                mem[_19826 + 192] = stor6[_19743]
                                                mem[_19826 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19826 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _28345 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_28345] = tierLevel.length
                                                            mem[_28345 + 32] = stor5[_19743]
                                                            mem[_28345 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23074 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23074] = stor4[_19743]
                                                        mem[_23074 + 32] = -stor5[_19743]
                                                        mem[_23074 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _25868 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_25868] = tierLevel.length
                                                            mem[_25868 + 32] = stor5[_19743]
                                                            mem[_25868 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_19861 + 32] = stor[sha3(_19743 + 1)]
                                                s = _19861 + 32
                                                t = sha3(_19743 + 1)
                                                while _19861 + stor1[_19743].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19826 + 32] = _19861
                                                mem[_19826 + 64] = stor2[_19743]
                                                mem[_19826 + 96] = stor3[_19743]
                                                mem[_19826 + 128] = stor4[_19743]
                                                mem[_19826 + 160] = stor5[_19743]
                                                mem[_19826 + 192] = stor6[_19743]
                                                mem[_19826 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19826 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31573 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31573] = tierLevel.length
                                                            mem[_31573 + 32] = stor5[_19743]
                                                            mem[_31573 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30293 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30293] = stor4[_19743]
                                                        mem[_30293 + 32] = -stor5[_19743]
                                                        mem[_30293 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30933 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30933] = tierLevel.length
                                                            mem[_30933 + 32] = stor5[_19743]
                                                            mem[_30933 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                        revert with 0, 34
                                    _19869 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor1[_19743].field_1 % 128) + 32
                                    mem[_19869] = stor1[_19743].field_1 % 128
                                    if bool(stor1[_19743].field_0):
                                        if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19743].field_0):
                                            mem[_19826 + 32] = _19869
                                            mem[_19826 + 64] = stor2[_19743]
                                            mem[_19826 + 96] = stor3[_19743]
                                            mem[_19826 + 128] = stor4[_19743]
                                            mem[_19826 + 160] = stor5[_19743]
                                            mem[_19826 + 192] = stor6[_19743]
                                            mem[_19826 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19826 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _27211 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_27211] = tierLevel.length
                                                        mem[_27211 + 32] = stor5[_19743]
                                                        mem[_27211 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21948 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21948] = stor4[_19743]
                                                    mem[_21948 + 32] = -stor5[_19743]
                                                    mem[_21948 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24415 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24415] = tierLevel.length
                                                        mem[_24415 + 32] = stor5[_19743]
                                                        mem[_24415 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                                mem[_19869 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_19826 + 32] = _19869
                                                mem[_19826 + 64] = stor2[_19743]
                                                mem[_19826 + 96] = stor3[_19743]
                                                mem[_19826 + 128] = stor4[_19743]
                                                mem[_19826 + 160] = stor5[_19743]
                                                mem[_19826 + 192] = stor6[_19743]
                                                mem[_19826 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19826 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _28353 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_28353] = tierLevel.length
                                                            mem[_28353 + 32] = stor5[_19743]
                                                            mem[_28353 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23083 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23083] = stor4[_19743]
                                                        mem[_23083 + 32] = -stor5[_19743]
                                                        mem[_23083 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _25877 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_25877] = tierLevel.length
                                                            mem[_25877 + 32] = stor5[_19743]
                                                            mem[_25877 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_19869 + 32] = stor[sha3(_19743 + 1)]
                                                s = _19869 + 32
                                                t = sha3(_19743 + 1)
                                                while _19869 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19826 + 32] = _19869
                                                mem[_19826 + 64] = stor2[_19743]
                                                mem[_19826 + 96] = stor3[_19743]
                                                mem[_19826 + 128] = stor4[_19743]
                                                mem[_19826 + 160] = stor5[_19743]
                                                mem[_19826 + 192] = stor6[_19743]
                                                mem[_19826 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19826 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31580 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31580] = tierLevel.length
                                                            mem[_31580 + 32] = stor5[_19743]
                                                            mem[_31580 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30300 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30300] = stor4[_19743]
                                                        mem[_30300 + 32] = -stor5[_19743]
                                                        mem[_30300 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30940 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30940] = tierLevel.length
                                                            mem[_30940 + 32] = stor5[_19743]
                                                            mem[_30940 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19743].field_1 % 128:
                                            mem[_19826 + 32] = _19869
                                            mem[_19826 + 64] = stor2[_19743]
                                            mem[_19826 + 96] = stor3[_19743]
                                            mem[_19826 + 128] = stor4[_19743]
                                            mem[_19826 + 160] = stor5[_19743]
                                            mem[_19826 + 192] = stor6[_19743]
                                            mem[_19826 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_19826 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _27818 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_27818] = tierLevel.length
                                                        mem[_27818 + 32] = stor5[_19743]
                                                        mem[_27818 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22473 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22473] = stor4[_19743]
                                                    mem[_22473 + 32] = -stor5[_19743]
                                                    mem[_22473 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25142 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25142] = tierLevel.length
                                                        mem[_25142 + 32] = stor5[_19743]
                                                        mem[_25142 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19743].field_1 % 128:
                                                mem[_19869 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_19826 + 32] = _19869
                                                mem[_19826 + 64] = stor2[_19743]
                                                mem[_19826 + 96] = stor3[_19743]
                                                mem[_19826 + 128] = stor4[_19743]
                                                mem[_19826 + 160] = stor5[_19743]
                                                mem[_19826 + 192] = stor6[_19743]
                                                mem[_19826 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19826 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _28772 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_28772] = tierLevel.length
                                                            mem[_28772 + 32] = stor5[_19743]
                                                            mem[_28772 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23738 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23738] = stor4[_19743]
                                                        mem[_23738 + 32] = -stor5[_19743]
                                                        mem[_23738 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _26574 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_26574] = tierLevel.length
                                                            mem[_26574 + 32] = stor5[_19743]
                                                            mem[_26574 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_19869 + 32] = stor[sha3(_19743 + 1)]
                                                s = _19869 + 32
                                                t = sha3(_19743 + 1)
                                                while _19869 + stor1[_19743].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19826 + 32] = _19869
                                                mem[_19826 + 64] = stor2[_19743]
                                                mem[_19826 + 96] = stor3[_19743]
                                                mem[_19826 + 128] = stor4[_19743]
                                                mem[_19826 + 160] = stor5[_19743]
                                                mem[_19826 + 192] = stor6[_19743]
                                                mem[_19826 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_19826 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31587 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31587] = tierLevel.length
                                                            mem[_31587 + 32] = stor5[_19743]
                                                            mem[_31587 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30307 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30307] = stor4[_19743]
                                                        mem[_30307 + 32] = -stor5[_19743]
                                                        mem[_30307 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30947 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30947] = tierLevel.length
                                                            mem[_30947 + 32] = stor5[_19743]
                                                            mem[_30947 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                stor4[_19743] = tierLevel.length
                                stor3[_19743] = block.timestamp
                                if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                    revert with 0, 17
                        else:
                            mem[0] = _19743 + 1
                            mem[_19776 + 32] = stor[sha3(_19743 + 1)]
                            s = _19776 + 32
                            t = sha3(_19743 + 1)
                            while _19776 + stor1[_19743].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_19744 + 32] = _19776
                            mem[_19744 + 64] = stor2[_19743]
                            mem[_19744 + 96] = stor3[_19743]
                            mem[_19744 + 128] = stor4[_19743]
                            mem[_19744 + 160] = stor5[_19743]
                            mem[_19744 + 192] = stor6[_19743]
                            mem[_19744 + 224] = bool(uint8(stor7[_19743].field_0))
                            mem[_19744 + 256] = bool(uint8(stor7[_19743].field_8))
                            if stor3[_19743] > !compoundDelay:
                                revert with 0, 17
                            if block.timestamp >= stor3[_19743] + compoundDelay:
                                _29685 = mem[64]
                                mem[64] = mem[64] + 288
                                mem[_29685] = stor[_19743]
                                if bool(stor1[_19743].field_0):
                                    if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    _29693 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor1[_19743].field_0) * 0.5) + 32
                                    mem[_29693] = uint255(stor1[_19743].field_0) * 0.5
                                    if bool(stor1[_19743].field_0):
                                        if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19743].field_0):
                                            mem[_29685 + 32] = _29693
                                            mem[_29685 + 64] = stor2[_19743]
                                            mem[_29685 + 96] = stor3[_19743]
                                            mem[_29685 + 128] = stor4[_19743]
                                            mem[_29685 + 160] = stor5[_19743]
                                            mem[_29685 + 192] = stor6[_19743]
                                            mem[_29685 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_29685 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33574 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33574] = tierLevel.length
                                                        mem[_33574 + 32] = stor5[_19743]
                                                        mem[_33574 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _31997 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_31997] = stor4[_19743]
                                                    mem[_31997 + 32] = -stor5[_19743]
                                                    mem[_31997 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32614 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32614] = tierLevel.length
                                                        mem[_32614 + 32] = stor5[_19743]
                                                        mem[_32614 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                                mem[_29693 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_29685 + 32] = _29693
                                                mem[_29685 + 64] = stor2[_19743]
                                                mem[_29685 + 96] = stor3[_19743]
                                                mem[_29685 + 128] = stor4[_19743]
                                                mem[_29685 + 160] = stor5[_19743]
                                                mem[_29685 + 192] = stor6[_19743]
                                                mem[_29685 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29685 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34096 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34096] = tierLevel.length
                                                            mem[_34096 + 32] = stor5[_19743]
                                                            mem[_34096 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32251 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32251] = stor4[_19743]
                                                        mem[_32251 + 32] = -stor5[_19743]
                                                        mem[_32251 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33140 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33140] = tierLevel.length
                                                            mem[_33140 + 32] = stor5[_19743]
                                                            mem[_33140 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_29693 + 32] = stor[sha3(_19743 + 1)]
                                                s = _29693 + 32
                                                t = sha3(_19743 + 1)
                                                while _29693 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29685 + 32] = _29693
                                                mem[_29685 + 64] = stor2[_19743]
                                                mem[_29685 + 96] = stor3[_19743]
                                                mem[_29685 + 128] = stor4[_19743]
                                                mem[_29685 + 160] = stor5[_19743]
                                                mem[_29685 + 192] = stor6[_19743]
                                                mem[_29685 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29685 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35678 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35678] = tierLevel.length
                                                            mem[_35678 + 32] = stor5[_19743]
                                                            mem[_35678 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35038 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35038] = stor4[_19743]
                                                        mem[_35038 + 32] = -stor5[_19743]
                                                        mem[_35038 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35358 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35358] = tierLevel.length
                                                            mem[_35358 + 32] = stor5[_19743]
                                                            mem[_35358 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19743].field_1 % 128:
                                            mem[_29685 + 32] = _29693
                                            mem[_29685 + 64] = stor2[_19743]
                                            mem[_29685 + 96] = stor3[_19743]
                                            mem[_29685 + 128] = stor4[_19743]
                                            mem[_29685 + 160] = stor5[_19743]
                                            mem[_29685 + 192] = stor6[_19743]
                                            mem[_29685 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_29685 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33826 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33826] = tierLevel.length
                                                        mem[_33826 + 32] = stor5[_19743]
                                                        mem[_33826 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32098 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32098] = stor4[_19743]
                                                    mem[_32098 + 32] = -stor5[_19743]
                                                    mem[_32098 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32866 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32866] = tierLevel.length
                                                        mem[_32866 + 32] = stor5[_19743]
                                                        mem[_32866 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19743].field_1 % 128:
                                                mem[_29693 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_29685 + 32] = _29693
                                                mem[_29685 + 64] = stor2[_19743]
                                                mem[_29685 + 96] = stor3[_19743]
                                                mem[_29685 + 128] = stor4[_19743]
                                                mem[_29685 + 160] = stor5[_19743]
                                                mem[_29685 + 192] = stor6[_19743]
                                                mem[_29685 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29685 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34319 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34319] = tierLevel.length
                                                            mem[_34319 + 32] = stor5[_19743]
                                                            mem[_34319 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32424 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32424] = stor4[_19743]
                                                        mem[_32424 + 32] = -stor5[_19743]
                                                        mem[_32424 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33374 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33374] = tierLevel.length
                                                            mem[_33374 + 32] = stor5[_19743]
                                                            mem[_33374 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_29693 + 32] = stor[sha3(_19743 + 1)]
                                                s = _29693 + 32
                                                t = sha3(_19743 + 1)
                                                while _29693 + stor1[_19743].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29685 + 32] = _29693
                                                mem[_29685 + 64] = stor2[_19743]
                                                mem[_29685 + 96] = stor3[_19743]
                                                mem[_29685 + 128] = stor4[_19743]
                                                mem[_29685 + 160] = stor5[_19743]
                                                mem[_29685 + 192] = stor6[_19743]
                                                mem[_29685 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29685 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35685 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35685] = tierLevel.length
                                                            mem[_35685 + 32] = stor5[_19743]
                                                            mem[_35685 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35045 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35045] = stor4[_19743]
                                                        mem[_35045 + 32] = -stor5[_19743]
                                                        mem[_35045 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35365 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35365] = tierLevel.length
                                                            mem[_35365 + 32] = stor5[_19743]
                                                            mem[_35365 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                        revert with 0, 34
                                    _29701 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor1[_19743].field_1 % 128) + 32
                                    mem[_29701] = stor1[_19743].field_1 % 128
                                    if bool(stor1[_19743].field_0):
                                        if not bool(stor1[_19743].field_0) - (uint255(stor1[_19743].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19743].field_0):
                                            mem[_29685 + 32] = _29701
                                            mem[_29685 + 64] = stor2[_19743]
                                            mem[_29685 + 96] = stor3[_19743]
                                            mem[_29685 + 128] = stor4[_19743]
                                            mem[_29685 + 160] = stor5[_19743]
                                            mem[_29685 + 192] = stor6[_19743]
                                            mem[_29685 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_29685 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33841 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33841] = tierLevel.length
                                                        mem[_33841 + 32] = stor5[_19743]
                                                        mem[_33841 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32106 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32106] = stor4[_19743]
                                                    mem[_32106 + 32] = -stor5[_19743]
                                                    mem[_32106 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32881 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32881] = tierLevel.length
                                                        mem[_32881 + 32] = stor5[_19743]
                                                        mem[_32881 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19743].field_0) * 0.5:
                                                mem[_29701 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_29685 + 32] = _29701
                                                mem[_29685 + 64] = stor2[_19743]
                                                mem[_29685 + 96] = stor3[_19743]
                                                mem[_29685 + 128] = stor4[_19743]
                                                mem[_29685 + 160] = stor5[_19743]
                                                mem[_29685 + 192] = stor6[_19743]
                                                mem[_29685 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29685 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34327 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34327] = tierLevel.length
                                                            mem[_34327 + 32] = stor5[_19743]
                                                            mem[_34327 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32433 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32433] = stor4[_19743]
                                                        mem[_32433 + 32] = -stor5[_19743]
                                                        mem[_32433 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33383 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33383] = tierLevel.length
                                                            mem[_33383 + 32] = stor5[_19743]
                                                            mem[_33383 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_29701 + 32] = stor[sha3(_19743 + 1)]
                                                s = _29701 + 32
                                                t = sha3(_19743 + 1)
                                                while _29701 + (uint255(stor1[_19743].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29685 + 32] = _29701
                                                mem[_29685 + 64] = stor2[_19743]
                                                mem[_29685 + 96] = stor3[_19743]
                                                mem[_29685 + 128] = stor4[_19743]
                                                mem[_29685 + 160] = stor5[_19743]
                                                mem[_29685 + 192] = stor6[_19743]
                                                mem[_29685 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29685 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35692 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35692] = tierLevel.length
                                                            mem[_35692 + 32] = stor5[_19743]
                                                            mem[_35692 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35052 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35052] = stor4[_19743]
                                                        mem[_35052 + 32] = -stor5[_19743]
                                                        mem[_35052 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35372 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35372] = tierLevel.length
                                                            mem[_35372 + 32] = stor5[_19743]
                                                            mem[_35372 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19743].field_0) - (stor1[_19743].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19743].field_1 % 128:
                                            mem[_29685 + 32] = _29701
                                            mem[_29685 + 64] = stor2[_19743]
                                            mem[_29685 + 96] = stor3[_19743]
                                            mem[_29685 + 128] = stor4[_19743]
                                            mem[_29685 + 160] = stor5[_19743]
                                            mem[_29685 + 192] = stor6[_19743]
                                            mem[_29685 + 224] = bool(uint8(stor7[_19743].field_0))
                                            mem[_29685 + 256] = bool(uint8(stor7[_19743].field_8))
                                            if block.timestamp < stor3[_19743]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                revert with 0, 17
                                            if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                revert with 0, 17
                                            stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                            if tierLevel.length != stor4[_19743]:
                                                if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19743]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19743]].field_512):
                                                    if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _34111 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_34111] = tierLevel.length
                                                        mem[_34111 + 32] = stor5[_19743]
                                                        mem[_34111 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19743] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32262 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32262] = stor4[_19743]
                                                    mem[_32262 + 32] = -stor5[_19743]
                                                    mem[_32262 + 64] = 1
                                                    stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                    stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                    uint8(stor553[stor4[_19743]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19743]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19743]
                                                    else:
                                                        if stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33155 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33155] = tierLevel.length
                                                        mem[_33155 + 32] = stor5[_19743]
                                                        mem[_33155 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19743]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19743].field_1 % 128:
                                                mem[_29701 + 32] = 256 * Mask(248, 0, stor1[_19743].field_8)
                                                mem[_29685 + 32] = _29701
                                                mem[_29685 + 64] = stor2[_19743]
                                                mem[_29685 + 96] = stor3[_19743]
                                                mem[_29685 + 128] = stor4[_19743]
                                                mem[_29685 + 160] = stor5[_19743]
                                                mem[_29685 + 192] = stor6[_19743]
                                                mem[_29685 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29685 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34495 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34495] = tierLevel.length
                                                            mem[_34495 + 32] = stor5[_19743]
                                                            mem[_34495 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32635 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32635] = stor4[_19743]
                                                        mem[_32635 + 32] = -stor5[_19743]
                                                        mem[_32635 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33595 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33595] = tierLevel.length
                                                            mem[_33595 + 32] = stor5[_19743]
                                                            mem[_33595 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19743 + 1
                                                mem[_29701 + 32] = stor[sha3(_19743 + 1)]
                                                s = _29701 + 32
                                                t = sha3(_19743 + 1)
                                                while _29701 + stor1[_19743].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29685 + 32] = _29701
                                                mem[_29685 + 64] = stor2[_19743]
                                                mem[_29685 + 96] = stor3[_19743]
                                                mem[_29685 + 128] = stor4[_19743]
                                                mem[_29685 + 160] = stor5[_19743]
                                                mem[_29685 + 192] = stor6[_19743]
                                                mem[_29685 + 224] = bool(uint8(stor7[_19743].field_0))
                                                mem[_29685 + 256] = bool(uint8(stor7[_19743].field_8))
                                                if block.timestamp < stor3[_19743]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19743] and rewardPerDay > -1 / block.timestamp - stor3[_19743]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 and stor4[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 and stor5[_19743] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19743] > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                                    revert with 0, 17
                                                stor6[_19743] += (block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000
                                                if tierLevel.length != stor4[_19743]:
                                                    if not stor5[_19743] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19743]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19743]].field_512):
                                                        if stor4[_19743] != stor553[stor4[_19743]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19743] > -stor553[stor4[_19743]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19743]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19743]].field_256 < 0 and -stor5[_19743] < -stor553[stor4[_19743]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19743]].field_256 -= stor5[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35699 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35699] = tierLevel.length
                                                            mem[_35699 + 32] = stor5[_19743]
                                                            mem[_35699 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19743] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35059 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35059] = stor4[_19743]
                                                        mem[_35059 + 32] = -stor5[_19743]
                                                        mem[_35059 + 64] = 1
                                                        stor553[stor4[_19743]].field_0 = stor4[_19743]
                                                        stor553[stor4[_19743]].field_256 = -stor5[_19743]
                                                        uint8(stor553[stor4[_19743]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19743]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19743] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19743] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19743]
                                                        else:
                                                            if stor5[_19743] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35379 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35379] = tierLevel.length
                                                            mem[_35379 + 32] = stor5[_19743]
                                                            mem[_35379 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19743]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                stor4[_19743] = tierLevel.length
                                stor3[_19743] = block.timestamp
                                if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19743] * rewardPerDay) / 10^6 * stor4[_19743] / 100000 * stor5[_19743] / 100000):
                                    revert with 0, 17
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
    else:
        mem[ceil32(return_data.size) + 128 len 32 * balanceOf[address(msg.sender)]] = call.data[calldata.size len 32 * balanceOf[address(msg.sender)]]
        idx = 0
        while idx < balanceOf[address(msg.sender)]:
            if not msg.sender:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(msg.sender)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                revert with 0, 'Planets: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
            mem[32] = 552
            _9908 = mem[64]
            mem[64] = mem[64] + 288
            mem[_9908] = stor552[stor151[address(msg.sender)][idx]].field_0
            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                    revert with 0, 34
                _9917 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                mem[_9917] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                            mem[_9917 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_9917 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _9917 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _9917 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                            mem[_9917 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_9917 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _9917 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _9917 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_9908 + 32] = _9917
            else:
                if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                    revert with 0, 34
                _9919 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                mem[_9919] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32):
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                            mem[_9919 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_9919 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _9919 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _9919 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if not bool(stor552[stor151[address(msg.sender)][idx]].field_256) - (stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32):
                        revert with 0, 34
                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                            mem[_9919 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_9919 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _9919 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _9919 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_9908 + 32] = _9919
            mem[_9908 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
            mem[_9908 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
            mem[_9908 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
            mem[_9908 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
            mem[_9908 + 192] = stor552[stor151[address(msg.sender)][idx]].field_1536
            mem[_9908 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1792))
            mem[_9908 + 256] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1800))
            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1792):
                revert with 0, 'Planets: This planet doesn't exist'
            if idx >= mem[ceil32(return_data.size) + 96]:
                revert with 0, 50
            mem[(32 * idx) + ceil32(return_data.size) + 128] = tokenOfOwnerByIndex[address(msg.sender)][idx]
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _19729 = mem[ceil32(return_data.size) + 96]
        idx = 0
        while idx < _19729:
            if idx >= mem[ceil32(return_data.size) + 96]:
                revert with 0, 50
            mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 128]
            mem[32] = 552
            _19746 = sha3(mem[(32 * idx) + ceil32(return_data.size) + 128], 552)
            _19747 = mem[64]
            mem[64] = mem[64] + 288
            mem[_19747] = stor552[mem[(32 * idx) + ceil32(return_data.size) + 128]].field_0
            if bool(stor1[_19746].field_0):
                if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                    revert with 0, 34
                _19771 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_19746].field_0) * 0.5) + 32
                mem[_19771] = uint255(stor1[_19746].field_0) * 0.5
                if bool(stor1[_19746].field_0):
                    if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if not Mask(256, -1, stor1[_19746].field_0):
                        mem[_19747 + 32] = _19771
                        mem[_19747 + 64] = stor2[_19746]
                        mem[_19747 + 96] = stor3[_19746]
                        mem[_19747 + 128] = stor4[_19746]
                        mem[_19747 + 160] = stor5[_19746]
                        mem[_19747 + 192] = stor6[_19746]
                        mem[_19747 + 224] = bool(uint8(stor7[_19746].field_0))
                        mem[_19747 + 256] = bool(uint8(stor7[_19746].field_8))
                        if stor3[_19746] > !compoundDelay:
                            revert with 0, 17
                        if block.timestamp >= stor3[_19746] + compoundDelay:
                            _19807 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_19807] = stor[_19746]
                            if bool(stor1[_19746].field_0):
                                if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                    revert with 0, 34
                                _19827 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor1[_19746].field_0) * 0.5) + 32
                                mem[_19827] = uint255(stor1[_19746].field_0) * 0.5
                                if bool(stor1[_19746].field_0):
                                    if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    if not Mask(256, -1, stor1[_19746].field_0):
                                        mem[_19807 + 32] = _19827
                                        mem[_19807 + 64] = stor2[_19746]
                                        mem[_19807 + 96] = stor3[_19746]
                                        mem[_19807 + 128] = stor4[_19746]
                                        mem[_19807 + 160] = stor5[_19746]
                                        mem[_19807 + 192] = stor6[_19746]
                                        mem[_19807 + 224] = bool(uint8(stor7[_19746].field_0))
                                        mem[_19807 + 256] = bool(uint8(stor7[_19746].field_8))
                                        if block.timestamp < stor3[_19746]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                            revert with 0, 17
                                        if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                            revert with 0, 17
                                        stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                        if tierLevel.length != stor4[_19746]:
                                            if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19746]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19746]].field_512):
                                                if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _23745 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_23745] = tierLevel.length
                                                    mem[_23745 + 32] = stor5[_19746]
                                                    mem[_23745 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19746] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _20867 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_20867] = stor4[_19746]
                                                mem[_20867 + 32] = -stor5[_19746]
                                                mem[_20867 + 64] = 1
                                                stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                uint8(stor553[stor4[_19746]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21549 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21549] = tierLevel.length
                                                    mem[_21549 + 32] = stor5[_19746]
                                                    mem[_21549 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                            mem[_19827 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                            mem[_19807 + 32] = _19827
                                            mem[_19807 + 64] = stor2[_19746]
                                            mem[_19807 + 96] = stor3[_19746]
                                            mem[_19807 + 128] = stor4[_19746]
                                            mem[_19807 + 160] = stor5[_19746]
                                            mem[_19807 + 192] = stor6[_19746]
                                            mem[_19807 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19807 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25158 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25158] = tierLevel.length
                                                        mem[_25158 + 32] = stor5[_19746]
                                                        mem[_25158 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21049 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21049] = stor4[_19746]
                                                    mem[_21049 + 32] = -stor5[_19746]
                                                    mem[_21049 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22483 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22483] = tierLevel.length
                                                        mem[_22483 + 32] = stor5[_19746]
                                                        mem[_22483 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19746 + 1
                                            mem[_19827 + 32] = stor[sha3(_19746 + 1)]
                                            s = _19827 + 32
                                            t = sha3(_19746 + 1)
                                            while _19827 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19807 + 32] = _19827
                                            mem[_19807 + 64] = stor2[_19746]
                                            mem[_19807 + 96] = stor3[_19746]
                                            mem[_19807 + 128] = stor4[_19746]
                                            mem[_19807 + 160] = stor5[_19746]
                                            mem[_19807 + 192] = stor6[_19746]
                                            mem[_19807 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19807 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31594 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31594] = tierLevel.length
                                                        mem[_31594 + 32] = stor5[_19746]
                                                        mem[_31594 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30314 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30314] = stor4[_19746]
                                                    mem[_30314 + 32] = -stor5[_19746]
                                                    mem[_30314 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30954 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30954] = tierLevel.length
                                                        mem[_30954 + 32] = stor5[_19746]
                                                        mem[_30954 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                        revert with 0, 34
                                    if not stor1[_19746].field_1 % 128:
                                        mem[_19807 + 32] = _19827
                                        mem[_19807 + 64] = stor2[_19746]
                                        mem[_19807 + 96] = stor3[_19746]
                                        mem[_19807 + 128] = stor4[_19746]
                                        mem[_19807 + 160] = stor5[_19746]
                                        mem[_19807 + 192] = stor6[_19746]
                                        mem[_19807 + 224] = bool(uint8(stor7[_19746].field_0))
                                        mem[_19807 + 256] = bool(uint8(stor7[_19746].field_8))
                                        if block.timestamp < stor3[_19746]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                            revert with 0, 17
                                        if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                            revert with 0, 17
                                        stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                        if tierLevel.length != stor4[_19746]:
                                            if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19746]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19746]].field_512):
                                                if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _24436 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_24436] = tierLevel.length
                                                    mem[_24436 + 32] = stor5[_19746]
                                                    mem[_24436 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19746] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _20926 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_20926] = stor4[_19746]
                                                mem[_20926 + 32] = -stor5[_19746]
                                                mem[_20926 + 64] = 1
                                                stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                uint8(stor553[stor4[_19746]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21960 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21960] = tierLevel.length
                                                    mem[_21960 + 32] = stor5[_19746]
                                                    mem[_21960 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= stor1[_19746].field_1 % 128:
                                            mem[_19827 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                            mem[_19807 + 32] = _19827
                                            mem[_19807 + 64] = stor2[_19746]
                                            mem[_19807 + 96] = stor3[_19746]
                                            mem[_19807 + 128] = stor4[_19746]
                                            mem[_19807 + 160] = stor5[_19746]
                                            mem[_19807 + 192] = stor6[_19746]
                                            mem[_19807 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19807 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25891 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25891] = tierLevel.length
                                                        mem[_25891 + 32] = stor5[_19746]
                                                        mem[_25891 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21256 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21256] = stor4[_19746]
                                                    mem[_21256 + 32] = -stor5[_19746]
                                                    mem[_21256 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23096 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23096] = tierLevel.length
                                                        mem[_23096 + 32] = stor5[_19746]
                                                        mem[_23096 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19746 + 1
                                            mem[_19827 + 32] = stor[sha3(_19746 + 1)]
                                            s = _19827 + 32
                                            t = sha3(_19746 + 1)
                                            while _19827 + stor1[_19746].field_1 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19807 + 32] = _19827
                                            mem[_19807 + 64] = stor2[_19746]
                                            mem[_19807 + 96] = stor3[_19746]
                                            mem[_19807 + 128] = stor4[_19746]
                                            mem[_19807 + 160] = stor5[_19746]
                                            mem[_19807 + 192] = stor6[_19746]
                                            mem[_19807 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19807 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31601 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31601] = tierLevel.length
                                                        mem[_31601 + 32] = stor5[_19746]
                                                        mem[_31601 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30321 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30321] = stor4[_19746]
                                                    mem[_30321 + 32] = -stor5[_19746]
                                                    mem[_30321 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30961 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30961] = tierLevel.length
                                                        mem[_30961 + 32] = stor5[_19746]
                                                        mem[_30961 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                            else:
                                if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                    revert with 0, 34
                                _19835 = mem[64]
                                mem[64] = mem[64] + ceil32(stor1[_19746].field_1 % 128) + 32
                                mem[_19835] = stor1[_19746].field_1 % 128
                                if bool(stor1[_19746].field_0):
                                    if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    if not Mask(256, -1, stor1[_19746].field_0):
                                        mem[_19807 + 32] = _19835
                                        mem[_19807 + 64] = stor2[_19746]
                                        mem[_19807 + 96] = stor3[_19746]
                                        mem[_19807 + 128] = stor4[_19746]
                                        mem[_19807 + 160] = stor5[_19746]
                                        mem[_19807 + 192] = stor6[_19746]
                                        mem[_19807 + 224] = bool(uint8(stor7[_19746].field_0))
                                        mem[_19807 + 256] = bool(uint8(stor7[_19746].field_8))
                                        if block.timestamp < stor3[_19746]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                            revert with 0, 17
                                        if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                            revert with 0, 17
                                        stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                        if tierLevel.length != stor4[_19746]:
                                            if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19746]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19746]].field_512):
                                                if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _24451 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_24451] = tierLevel.length
                                                    mem[_24451 + 32] = stor5[_19746]
                                                    mem[_24451 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19746] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _20934 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_20934] = stor4[_19746]
                                                mem[_20934 + 32] = -stor5[_19746]
                                                mem[_20934 + 64] = 1
                                                stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                uint8(stor553[stor4[_19746]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21975 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21975] = tierLevel.length
                                                    mem[_21975 + 32] = stor5[_19746]
                                                    mem[_21975 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                            mem[_19835 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                            mem[_19807 + 32] = _19835
                                            mem[_19807 + 64] = stor2[_19746]
                                            mem[_19807 + 96] = stor3[_19746]
                                            mem[_19807 + 128] = stor4[_19746]
                                            mem[_19807 + 160] = stor5[_19746]
                                            mem[_19807 + 192] = stor6[_19746]
                                            mem[_19807 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19807 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25899 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25899] = tierLevel.length
                                                        mem[_25899 + 32] = stor5[_19746]
                                                        mem[_25899 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21265 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21265] = stor4[_19746]
                                                    mem[_21265 + 32] = -stor5[_19746]
                                                    mem[_21265 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23105 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23105] = tierLevel.length
                                                        mem[_23105 + 32] = stor5[_19746]
                                                        mem[_23105 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19746 + 1
                                            mem[_19835 + 32] = stor[sha3(_19746 + 1)]
                                            s = _19835 + 32
                                            t = sha3(_19746 + 1)
                                            while _19835 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19807 + 32] = _19835
                                            mem[_19807 + 64] = stor2[_19746]
                                            mem[_19807 + 96] = stor3[_19746]
                                            mem[_19807 + 128] = stor4[_19746]
                                            mem[_19807 + 160] = stor5[_19746]
                                            mem[_19807 + 192] = stor6[_19746]
                                            mem[_19807 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19807 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31608 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31608] = tierLevel.length
                                                        mem[_31608 + 32] = stor5[_19746]
                                                        mem[_31608 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30328 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30328] = stor4[_19746]
                                                    mem[_30328 + 32] = -stor5[_19746]
                                                    mem[_30328 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30968 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30968] = tierLevel.length
                                                        mem[_30968 + 32] = stor5[_19746]
                                                        mem[_30968 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                        revert with 0, 34
                                    if not stor1[_19746].field_1 % 128:
                                        mem[_19807 + 32] = _19835
                                        mem[_19807 + 64] = stor2[_19746]
                                        mem[_19807 + 96] = stor3[_19746]
                                        mem[_19807 + 128] = stor4[_19746]
                                        mem[_19807 + 160] = stor5[_19746]
                                        mem[_19807 + 192] = stor6[_19746]
                                        mem[_19807 + 224] = bool(uint8(stor7[_19746].field_0))
                                        mem[_19807 + 256] = bool(uint8(stor7[_19746].field_8))
                                        if block.timestamp < stor3[_19746]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                            revert with 0, 17
                                        if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                            revert with 0, 17
                                        stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                        if tierLevel.length != stor4[_19746]:
                                            if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19746]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19746]].field_512):
                                                if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _25173 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_25173] = tierLevel.length
                                                    mem[_25173 + 32] = stor5[_19746]
                                                    mem[_25173 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19746] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21060 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21060] = stor4[_19746]
                                                mem[_21060 + 32] = -stor5[_19746]
                                                mem[_21060 + 64] = 1
                                                stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                uint8(stor553[stor4[_19746]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22498 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22498] = tierLevel.length
                                                    mem[_22498 + 32] = stor5[_19746]
                                                    mem[_22498 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= stor1[_19746].field_1 % 128:
                                            mem[_19835 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                            mem[_19807 + 32] = _19835
                                            mem[_19807 + 64] = stor2[_19746]
                                            mem[_19807 + 96] = stor3[_19746]
                                            mem[_19807 + 128] = stor4[_19746]
                                            mem[_19807 + 160] = stor5[_19746]
                                            mem[_19807 + 192] = stor6[_19746]
                                            mem[_19807 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19807 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26593 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26593] = tierLevel.length
                                                        mem[_26593 + 32] = stor5[_19746]
                                                        mem[_26593 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21570 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21570] = stor4[_19746]
                                                    mem[_21570 + 32] = -stor5[_19746]
                                                    mem[_21570 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23766 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23766] = tierLevel.length
                                                        mem[_23766 + 32] = stor5[_19746]
                                                        mem[_23766 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19746 + 1
                                            mem[_19835 + 32] = stor[sha3(_19746 + 1)]
                                            s = _19835 + 32
                                            t = sha3(_19746 + 1)
                                            while _19835 + stor1[_19746].field_1 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19807 + 32] = _19835
                                            mem[_19807 + 64] = stor2[_19746]
                                            mem[_19807 + 96] = stor3[_19746]
                                            mem[_19807 + 128] = stor4[_19746]
                                            mem[_19807 + 160] = stor5[_19746]
                                            mem[_19807 + 192] = stor6[_19746]
                                            mem[_19807 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19807 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31615 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31615] = tierLevel.length
                                                        mem[_31615 + 32] = stor5[_19746]
                                                        mem[_31615 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30335 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30335] = stor4[_19746]
                                                    mem[_30335 + 32] = -stor5[_19746]
                                                    mem[_30335 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30975 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30975] = tierLevel.length
                                                        mem[_30975 + 32] = stor5[_19746]
                                                        mem[_30975 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                            stor4[_19746] = tierLevel.length
                            stor3[_19746] = block.timestamp
                            if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                revert with 0, 17
                    else:
                        if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                            mem[_19771 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                            mem[_19747 + 32] = _19771
                            mem[_19747 + 64] = stor2[_19746]
                            mem[_19747 + 96] = stor3[_19746]
                            mem[_19747 + 128] = stor4[_19746]
                            mem[_19747 + 160] = stor5[_19746]
                            mem[_19747 + 192] = stor6[_19746]
                            mem[_19747 + 224] = bool(uint8(stor7[_19746].field_0))
                            mem[_19747 + 256] = bool(uint8(stor7[_19746].field_8))
                            if stor3[_19746] > !compoundDelay:
                                revert with 0, 17
                            if block.timestamp >= stor3[_19746] + compoundDelay:
                                _19818 = mem[64]
                                mem[64] = mem[64] + 288
                                mem[_19818] = stor[_19746]
                                if bool(stor1[_19746].field_0):
                                    if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    _19845 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor1[_19746].field_0) * 0.5) + 32
                                    mem[_19845] = uint255(stor1[_19746].field_0) * 0.5
                                    if bool(stor1[_19746].field_0):
                                        if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19746].field_0):
                                            mem[_19818 + 32] = _19845
                                            mem[_19818 + 64] = stor2[_19746]
                                            mem[_19818 + 96] = stor3[_19746]
                                            mem[_19818 + 128] = stor4[_19746]
                                            mem[_19818 + 160] = stor5[_19746]
                                            mem[_19818 + 192] = stor6[_19746]
                                            mem[_19818 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19818 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25220 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25220] = tierLevel.length
                                                        mem[_25220 + 32] = stor5[_19746]
                                                        mem[_25220 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21069 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21069] = stor4[_19746]
                                                    mem[_21069 + 32] = -stor5[_19746]
                                                    mem[_21069 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22534 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22534] = tierLevel.length
                                                        mem[_22534 + 32] = stor5[_19746]
                                                        mem[_22534 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                                mem[_19845 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_19818 + 32] = _19845
                                                mem[_19818 + 64] = stor2[_19746]
                                                mem[_19818 + 96] = stor3[_19746]
                                                mem[_19818 + 128] = stor4[_19746]
                                                mem[_19818 + 160] = stor5[_19746]
                                                mem[_19818 + 192] = stor6[_19746]
                                                mem[_19818 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19818 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _26629 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_26629] = tierLevel.length
                                                            mem[_26629 + 32] = stor5[_19746]
                                                            mem[_26629 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _21588 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_21588] = stor4[_19746]
                                                        mem[_21588 + 32] = -stor5[_19746]
                                                        mem[_21588 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _23803 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_23803] = tierLevel.length
                                                            mem[_23803 + 32] = stor5[_19746]
                                                            mem[_23803 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_19845 + 32] = stor[sha3(_19746 + 1)]
                                                s = _19845 + 32
                                                t = sha3(_19746 + 1)
                                                while _19845 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19818 + 32] = _19845
                                                mem[_19818 + 64] = stor2[_19746]
                                                mem[_19818 + 96] = stor3[_19746]
                                                mem[_19818 + 128] = stor4[_19746]
                                                mem[_19818 + 160] = stor5[_19746]
                                                mem[_19818 + 192] = stor6[_19746]
                                                mem[_19818 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19818 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31622 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31622] = tierLevel.length
                                                            mem[_31622 + 32] = stor5[_19746]
                                                            mem[_31622 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30342 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30342] = stor4[_19746]
                                                        mem[_30342 + 32] = -stor5[_19746]
                                                        mem[_30342 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30982 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30982] = tierLevel.length
                                                            mem[_30982 + 32] = stor5[_19746]
                                                            mem[_30982 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19746].field_1 % 128:
                                            mem[_19818 + 32] = _19845
                                            mem[_19818 + 64] = stor2[_19746]
                                            mem[_19818 + 96] = stor3[_19746]
                                            mem[_19818 + 128] = stor4[_19746]
                                            mem[_19818 + 160] = stor5[_19746]
                                            mem[_19818 + 192] = stor6[_19746]
                                            mem[_19818 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19818 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25938 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25938] = tierLevel.length
                                                        mem[_25938 + 32] = stor5[_19746]
                                                        mem[_25938 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21278 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21278] = stor4[_19746]
                                                    mem[_21278 + 32] = -stor5[_19746]
                                                    mem[_21278 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23142 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23142] = tierLevel.length
                                                        mem[_23142 + 32] = stor5[_19746]
                                                        mem[_23142 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19746].field_1 % 128:
                                                mem[_19845 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_19818 + 32] = _19845
                                                mem[_19818 + 64] = stor2[_19746]
                                                mem[_19818 + 96] = stor3[_19746]
                                                mem[_19818 + 128] = stor4[_19746]
                                                mem[_19818 + 160] = stor5[_19746]
                                                mem[_19818 + 192] = stor6[_19746]
                                                mem[_19818 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19818 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _27285 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_27285] = tierLevel.length
                                                            mem[_27285 + 32] = stor5[_19746]
                                                            mem[_27285 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22014 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22014] = stor4[_19746]
                                                        mem[_22014 + 32] = -stor5[_19746]
                                                        mem[_22014 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _24508 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_24508] = tierLevel.length
                                                            mem[_24508 + 32] = stor5[_19746]
                                                            mem[_24508 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_19845 + 32] = stor[sha3(_19746 + 1)]
                                                s = _19845 + 32
                                                t = sha3(_19746 + 1)
                                                while _19845 + stor1[_19746].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19818 + 32] = _19845
                                                mem[_19818 + 64] = stor2[_19746]
                                                mem[_19818 + 96] = stor3[_19746]
                                                mem[_19818 + 128] = stor4[_19746]
                                                mem[_19818 + 160] = stor5[_19746]
                                                mem[_19818 + 192] = stor6[_19746]
                                                mem[_19818 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19818 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31629 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31629] = tierLevel.length
                                                            mem[_31629 + 32] = stor5[_19746]
                                                            mem[_31629 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30349 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30349] = stor4[_19746]
                                                        mem[_30349 + 32] = -stor5[_19746]
                                                        mem[_30349 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30989 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30989] = tierLevel.length
                                                            mem[_30989 + 32] = stor5[_19746]
                                                            mem[_30989 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                        revert with 0, 34
                                    _19854 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor1[_19746].field_1 % 128) + 32
                                    mem[_19854] = stor1[_19746].field_1 % 128
                                    if bool(stor1[_19746].field_0):
                                        if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19746].field_0):
                                            mem[_19818 + 32] = _19854
                                            mem[_19818 + 64] = stor2[_19746]
                                            mem[_19818 + 96] = stor3[_19746]
                                            mem[_19818 + 128] = stor4[_19746]
                                            mem[_19818 + 160] = stor5[_19746]
                                            mem[_19818 + 192] = stor6[_19746]
                                            mem[_19818 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19818 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25953 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25953] = tierLevel.length
                                                        mem[_25953 + 32] = stor5[_19746]
                                                        mem[_25953 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21286 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21286] = stor4[_19746]
                                                    mem[_21286 + 32] = -stor5[_19746]
                                                    mem[_21286 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23157 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23157] = tierLevel.length
                                                        mem[_23157 + 32] = stor5[_19746]
                                                        mem[_23157 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                                mem[_19854 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_19818 + 32] = _19854
                                                mem[_19818 + 64] = stor2[_19746]
                                                mem[_19818 + 96] = stor3[_19746]
                                                mem[_19818 + 128] = stor4[_19746]
                                                mem[_19818 + 160] = stor5[_19746]
                                                mem[_19818 + 192] = stor6[_19746]
                                                mem[_19818 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19818 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _27293 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_27293] = tierLevel.length
                                                            mem[_27293 + 32] = stor5[_19746]
                                                            mem[_27293 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22023 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22023] = stor4[_19746]
                                                        mem[_22023 + 32] = -stor5[_19746]
                                                        mem[_22023 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _24517 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_24517] = tierLevel.length
                                                            mem[_24517 + 32] = stor5[_19746]
                                                            mem[_24517 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_19854 + 32] = stor[sha3(_19746 + 1)]
                                                s = _19854 + 32
                                                t = sha3(_19746 + 1)
                                                while _19854 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19818 + 32] = _19854
                                                mem[_19818 + 64] = stor2[_19746]
                                                mem[_19818 + 96] = stor3[_19746]
                                                mem[_19818 + 128] = stor4[_19746]
                                                mem[_19818 + 160] = stor5[_19746]
                                                mem[_19818 + 192] = stor6[_19746]
                                                mem[_19818 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19818 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31636 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31636] = tierLevel.length
                                                            mem[_31636 + 32] = stor5[_19746]
                                                            mem[_31636 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30356 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30356] = stor4[_19746]
                                                        mem[_30356 + 32] = -stor5[_19746]
                                                        mem[_30356 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _30996 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_30996] = tierLevel.length
                                                            mem[_30996 + 32] = stor5[_19746]
                                                            mem[_30996 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19746].field_1 % 128:
                                            mem[_19818 + 32] = _19854
                                            mem[_19818 + 64] = stor2[_19746]
                                            mem[_19818 + 96] = stor3[_19746]
                                            mem[_19818 + 128] = stor4[_19746]
                                            mem[_19818 + 160] = stor5[_19746]
                                            mem[_19818 + 192] = stor6[_19746]
                                            mem[_19818 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19818 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26644 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26644] = tierLevel.length
                                                        mem[_26644 + 32] = stor5[_19746]
                                                        mem[_26644 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21599 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21599] = stor4[_19746]
                                                    mem[_21599 + 32] = -stor5[_19746]
                                                    mem[_21599 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23818 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23818] = tierLevel.length
                                                        mem[_23818 + 32] = stor5[_19746]
                                                        mem[_23818 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19746].field_1 % 128:
                                                mem[_19854 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_19818 + 32] = _19854
                                                mem[_19818 + 64] = stor2[_19746]
                                                mem[_19818 + 96] = stor3[_19746]
                                                mem[_19818 + 128] = stor4[_19746]
                                                mem[_19818 + 160] = stor5[_19746]
                                                mem[_19818 + 192] = stor6[_19746]
                                                mem[_19818 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19818 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _27887 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_27887] = tierLevel.length
                                                            mem[_27887 + 32] = stor5[_19746]
                                                            mem[_27887 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22555 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22555] = stor4[_19746]
                                                        mem[_22555 + 32] = -stor5[_19746]
                                                        mem[_22555 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _25241 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_25241] = tierLevel.length
                                                            mem[_25241 + 32] = stor5[_19746]
                                                            mem[_25241 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_19854 + 32] = stor[sha3(_19746 + 1)]
                                                s = _19854 + 32
                                                t = sha3(_19746 + 1)
                                                while _19854 + stor1[_19746].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19818 + 32] = _19854
                                                mem[_19818 + 64] = stor2[_19746]
                                                mem[_19818 + 96] = stor3[_19746]
                                                mem[_19818 + 128] = stor4[_19746]
                                                mem[_19818 + 160] = stor5[_19746]
                                                mem[_19818 + 192] = stor6[_19746]
                                                mem[_19818 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19818 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31643 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31643] = tierLevel.length
                                                            mem[_31643 + 32] = stor5[_19746]
                                                            mem[_31643 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30363 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30363] = stor4[_19746]
                                                        mem[_30363 + 32] = -stor5[_19746]
                                                        mem[_30363 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31003 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31003] = tierLevel.length
                                                            mem[_31003 + 32] = stor5[_19746]
                                                            mem[_31003 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                stor4[_19746] = tierLevel.length
                                stor3[_19746] = block.timestamp
                                if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                    revert with 0, 17
                        else:
                            mem[0] = _19746 + 1
                            mem[_19771 + 32] = stor[sha3(_19746 + 1)]
                            s = _19771 + 32
                            t = sha3(_19746 + 1)
                            while _19771 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_19747 + 32] = _19771
                            mem[_19747 + 64] = stor2[_19746]
                            mem[_19747 + 96] = stor3[_19746]
                            mem[_19747 + 128] = stor4[_19746]
                            mem[_19747 + 160] = stor5[_19746]
                            mem[_19747 + 192] = stor6[_19746]
                            mem[_19747 + 224] = bool(uint8(stor7[_19746].field_0))
                            mem[_19747 + 256] = bool(uint8(stor7[_19746].field_8))
                            if stor3[_19746] > !compoundDelay:
                                revert with 0, 17
                            if block.timestamp >= stor3[_19746] + compoundDelay:
                                _29686 = mem[64]
                                mem[64] = mem[64] + 288
                                mem[_29686] = stor[_19746]
                                if bool(stor1[_19746].field_0):
                                    if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    _29694 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor1[_19746].field_0) * 0.5) + 32
                                    mem[_29694] = uint255(stor1[_19746].field_0) * 0.5
                                    if bool(stor1[_19746].field_0):
                                        if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19746].field_0):
                                            mem[_29686 + 32] = _29694
                                            mem[_29686 + 64] = stor2[_19746]
                                            mem[_29686 + 96] = stor3[_19746]
                                            mem[_29686 + 128] = stor4[_19746]
                                            mem[_29686 + 160] = stor5[_19746]
                                            mem[_29686 + 192] = stor6[_19746]
                                            mem[_29686 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_29686 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33602 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33602] = tierLevel.length
                                                        mem[_33602 + 32] = stor5[_19746]
                                                        mem[_33602 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32006 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32006] = stor4[_19746]
                                                    mem[_32006 + 32] = -stor5[_19746]
                                                    mem[_32006 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32642 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32642] = tierLevel.length
                                                        mem[_32642 + 32] = stor5[_19746]
                                                        mem[_32642 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                                mem[_29694 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_29686 + 32] = _29694
                                                mem[_29686 + 64] = stor2[_19746]
                                                mem[_29686 + 96] = stor3[_19746]
                                                mem[_29686 + 128] = stor4[_19746]
                                                mem[_29686 + 160] = stor5[_19746]
                                                mem[_29686 + 192] = stor6[_19746]
                                                mem[_29686 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29686 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34127 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34127] = tierLevel.length
                                                            mem[_34127 + 32] = stor5[_19746]
                                                            mem[_34127 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32272 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32272] = stor4[_19746]
                                                        mem[_32272 + 32] = -stor5[_19746]
                                                        mem[_32272 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33172 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33172] = tierLevel.length
                                                            mem[_33172 + 32] = stor5[_19746]
                                                            mem[_33172 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_29694 + 32] = stor[sha3(_19746 + 1)]
                                                s = _29694 + 32
                                                t = sha3(_19746 + 1)
                                                while _29694 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29686 + 32] = _29694
                                                mem[_29686 + 64] = stor2[_19746]
                                                mem[_29686 + 96] = stor3[_19746]
                                                mem[_29686 + 128] = stor4[_19746]
                                                mem[_29686 + 160] = stor5[_19746]
                                                mem[_29686 + 192] = stor6[_19746]
                                                mem[_29686 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29686 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35706 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35706] = tierLevel.length
                                                            mem[_35706 + 32] = stor5[_19746]
                                                            mem[_35706 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35066 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35066] = stor4[_19746]
                                                        mem[_35066 + 32] = -stor5[_19746]
                                                        mem[_35066 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35386 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35386] = tierLevel.length
                                                            mem[_35386 + 32] = stor5[_19746]
                                                            mem[_35386 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19746].field_1 % 128:
                                            mem[_29686 + 32] = _29694
                                            mem[_29686 + 64] = stor2[_19746]
                                            mem[_29686 + 96] = stor3[_19746]
                                            mem[_29686 + 128] = stor4[_19746]
                                            mem[_29686 + 160] = stor5[_19746]
                                            mem[_29686 + 192] = stor6[_19746]
                                            mem[_29686 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_29686 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33862 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33862] = tierLevel.length
                                                        mem[_33862 + 32] = stor5[_19746]
                                                        mem[_33862 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32116 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32116] = stor4[_19746]
                                                    mem[_32116 + 32] = -stor5[_19746]
                                                    mem[_32116 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32902 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32902] = tierLevel.length
                                                        mem[_32902 + 32] = stor5[_19746]
                                                        mem[_32902 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19746].field_1 % 128:
                                                mem[_29694 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_29686 + 32] = _29694
                                                mem[_29686 + 64] = stor2[_19746]
                                                mem[_29686 + 96] = stor3[_19746]
                                                mem[_29686 + 128] = stor4[_19746]
                                                mem[_29686 + 160] = stor5[_19746]
                                                mem[_29686 + 192] = stor6[_19746]
                                                mem[_29686 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29686 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34341 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34341] = tierLevel.length
                                                            mem[_34341 + 32] = stor5[_19746]
                                                            mem[_34341 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32446 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32446] = stor4[_19746]
                                                        mem[_32446 + 32] = -stor5[_19746]
                                                        mem[_32446 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33398 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33398] = tierLevel.length
                                                            mem[_33398 + 32] = stor5[_19746]
                                                            mem[_33398 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_29694 + 32] = stor[sha3(_19746 + 1)]
                                                s = _29694 + 32
                                                t = sha3(_19746 + 1)
                                                while _29694 + stor1[_19746].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29686 + 32] = _29694
                                                mem[_29686 + 64] = stor2[_19746]
                                                mem[_29686 + 96] = stor3[_19746]
                                                mem[_29686 + 128] = stor4[_19746]
                                                mem[_29686 + 160] = stor5[_19746]
                                                mem[_29686 + 192] = stor6[_19746]
                                                mem[_29686 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29686 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35713 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35713] = tierLevel.length
                                                            mem[_35713 + 32] = stor5[_19746]
                                                            mem[_35713 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35073 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35073] = stor4[_19746]
                                                        mem[_35073 + 32] = -stor5[_19746]
                                                        mem[_35073 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35393 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35393] = tierLevel.length
                                                            mem[_35393 + 32] = stor5[_19746]
                                                            mem[_35393 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                        revert with 0, 34
                                    _29702 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor1[_19746].field_1 % 128) + 32
                                    mem[_29702] = stor1[_19746].field_1 % 128
                                    if bool(stor1[_19746].field_0):
                                        if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19746].field_0):
                                            mem[_29686 + 32] = _29702
                                            mem[_29686 + 64] = stor2[_19746]
                                            mem[_29686 + 96] = stor3[_19746]
                                            mem[_29686 + 128] = stor4[_19746]
                                            mem[_29686 + 160] = stor5[_19746]
                                            mem[_29686 + 192] = stor6[_19746]
                                            mem[_29686 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_29686 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33877 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33877] = tierLevel.length
                                                        mem[_33877 + 32] = stor5[_19746]
                                                        mem[_33877 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32124 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32124] = stor4[_19746]
                                                    mem[_32124 + 32] = -stor5[_19746]
                                                    mem[_32124 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32917 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32917] = tierLevel.length
                                                        mem[_32917 + 32] = stor5[_19746]
                                                        mem[_32917 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                                mem[_29702 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_29686 + 32] = _29702
                                                mem[_29686 + 64] = stor2[_19746]
                                                mem[_29686 + 96] = stor3[_19746]
                                                mem[_29686 + 128] = stor4[_19746]
                                                mem[_29686 + 160] = stor5[_19746]
                                                mem[_29686 + 192] = stor6[_19746]
                                                mem[_29686 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29686 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34349 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34349] = tierLevel.length
                                                            mem[_34349 + 32] = stor5[_19746]
                                                            mem[_34349 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32455 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32455] = stor4[_19746]
                                                        mem[_32455 + 32] = -stor5[_19746]
                                                        mem[_32455 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33407 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33407] = tierLevel.length
                                                            mem[_33407 + 32] = stor5[_19746]
                                                            mem[_33407 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_29702 + 32] = stor[sha3(_19746 + 1)]
                                                s = _29702 + 32
                                                t = sha3(_19746 + 1)
                                                while _29702 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29686 + 32] = _29702
                                                mem[_29686 + 64] = stor2[_19746]
                                                mem[_29686 + 96] = stor3[_19746]
                                                mem[_29686 + 128] = stor4[_19746]
                                                mem[_29686 + 160] = stor5[_19746]
                                                mem[_29686 + 192] = stor6[_19746]
                                                mem[_29686 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29686 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35720 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35720] = tierLevel.length
                                                            mem[_35720 + 32] = stor5[_19746]
                                                            mem[_35720 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35080 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35080] = stor4[_19746]
                                                        mem[_35080 + 32] = -stor5[_19746]
                                                        mem[_35080 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35400 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35400] = tierLevel.length
                                                            mem[_35400 + 32] = stor5[_19746]
                                                            mem[_35400 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19746].field_1 % 128:
                                            mem[_29686 + 32] = _29702
                                            mem[_29686 + 64] = stor2[_19746]
                                            mem[_29686 + 96] = stor3[_19746]
                                            mem[_29686 + 128] = stor4[_19746]
                                            mem[_29686 + 160] = stor5[_19746]
                                            mem[_29686 + 192] = stor6[_19746]
                                            mem[_29686 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_29686 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _34142 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_34142] = tierLevel.length
                                                        mem[_34142 + 32] = stor5[_19746]
                                                        mem[_34142 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32283 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32283] = stor4[_19746]
                                                    mem[_32283 + 32] = -stor5[_19746]
                                                    mem[_32283 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33187 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33187] = tierLevel.length
                                                        mem[_33187 + 32] = stor5[_19746]
                                                        mem[_33187 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19746].field_1 % 128:
                                                mem[_29702 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_29686 + 32] = _29702
                                                mem[_29686 + 64] = stor2[_19746]
                                                mem[_29686 + 96] = stor3[_19746]
                                                mem[_29686 + 128] = stor4[_19746]
                                                mem[_29686 + 160] = stor5[_19746]
                                                mem[_29686 + 192] = stor6[_19746]
                                                mem[_29686 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29686 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34514 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34514] = tierLevel.length
                                                            mem[_34514 + 32] = stor5[_19746]
                                                            mem[_34514 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32663 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32663] = stor4[_19746]
                                                        mem[_32663 + 32] = -stor5[_19746]
                                                        mem[_32663 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33623 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33623] = tierLevel.length
                                                            mem[_33623 + 32] = stor5[_19746]
                                                            mem[_33623 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_29702 + 32] = stor[sha3(_19746 + 1)]
                                                s = _29702 + 32
                                                t = sha3(_19746 + 1)
                                                while _29702 + stor1[_19746].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29686 + 32] = _29702
                                                mem[_29686 + 64] = stor2[_19746]
                                                mem[_29686 + 96] = stor3[_19746]
                                                mem[_29686 + 128] = stor4[_19746]
                                                mem[_29686 + 160] = stor5[_19746]
                                                mem[_29686 + 192] = stor6[_19746]
                                                mem[_29686 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29686 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35727 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35727] = tierLevel.length
                                                            mem[_35727 + 32] = stor5[_19746]
                                                            mem[_35727 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35087 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35087] = stor4[_19746]
                                                        mem[_35087 + 32] = -stor5[_19746]
                                                        mem[_35087 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35407 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35407] = tierLevel.length
                                                            mem[_35407 + 32] = stor5[_19746]
                                                            mem[_35407 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                stor4[_19746] = tierLevel.length
                                stor3[_19746] = block.timestamp
                                if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                    revert with 0, 17
                else:
                    if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                        revert with 0, 34
                    if not stor1[_19746].field_1 % 128:
                        mem[_19747 + 32] = _19771
                        mem[_19747 + 64] = stor2[_19746]
                        mem[_19747 + 96] = stor3[_19746]
                        mem[_19747 + 128] = stor4[_19746]
                        mem[_19747 + 160] = stor5[_19746]
                        mem[_19747 + 192] = stor6[_19746]
                        mem[_19747 + 224] = bool(uint8(stor7[_19746].field_0))
                        mem[_19747 + 256] = bool(uint8(stor7[_19746].field_8))
                        if stor3[_19746] > !compoundDelay:
                            revert with 0, 17
                        if block.timestamp >= stor3[_19746] + compoundDelay:
                            _19813 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_19813] = stor[_19746]
                            if bool(stor1[_19746].field_0):
                                if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                    revert with 0, 34
                                _19836 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor1[_19746].field_0) * 0.5) + 32
                                mem[_19836] = uint255(stor1[_19746].field_0) * 0.5
                                if bool(stor1[_19746].field_0):
                                    if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    if not Mask(256, -1, stor1[_19746].field_0):
                                        mem[_19813 + 32] = _19836
                                        mem[_19813 + 64] = stor2[_19746]
                                        mem[_19813 + 96] = stor3[_19746]
                                        mem[_19813 + 128] = stor4[_19746]
                                        mem[_19813 + 160] = stor5[_19746]
                                        mem[_19813 + 192] = stor6[_19746]
                                        mem[_19813 + 224] = bool(uint8(stor7[_19746].field_0))
                                        mem[_19813 + 256] = bool(uint8(stor7[_19746].field_8))
                                        if block.timestamp < stor3[_19746]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                            revert with 0, 17
                                        if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                            revert with 0, 17
                                        stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                        if tierLevel.length != stor4[_19746]:
                                            if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19746]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19746]].field_512):
                                                if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _24528 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_24528] = tierLevel.length
                                                    mem[_24528 + 32] = stor5[_19746]
                                                    mem[_24528 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19746] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _20944 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_20944] = stor4[_19746]
                                                mem[_20944 + 32] = -stor5[_19746]
                                                mem[_20944 + 64] = 1
                                                stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                uint8(stor553[stor4[_19746]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22032 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22032] = tierLevel.length
                                                    mem[_22032 + 32] = stor5[_19746]
                                                    mem[_22032 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                            mem[_19836 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                            mem[_19813 + 32] = _19836
                                            mem[_19813 + 64] = stor2[_19746]
                                            mem[_19813 + 96] = stor3[_19746]
                                            mem[_19813 + 128] = stor4[_19746]
                                            mem[_19813 + 160] = stor5[_19746]
                                            mem[_19813 + 192] = stor6[_19746]
                                            mem[_19813 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19813 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25971 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25971] = tierLevel.length
                                                        mem[_25971 + 32] = stor5[_19746]
                                                        mem[_25971 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21296 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21296] = stor4[_19746]
                                                    mem[_21296 + 32] = -stor5[_19746]
                                                    mem[_21296 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23176 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23176] = tierLevel.length
                                                        mem[_23176 + 32] = stor5[_19746]
                                                        mem[_23176 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19746 + 1
                                            mem[_19836 + 32] = stor[sha3(_19746 + 1)]
                                            s = _19836 + 32
                                            t = sha3(_19746 + 1)
                                            while _19836 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19813 + 32] = _19836
                                            mem[_19813 + 64] = stor2[_19746]
                                            mem[_19813 + 96] = stor3[_19746]
                                            mem[_19813 + 128] = stor4[_19746]
                                            mem[_19813 + 160] = stor5[_19746]
                                            mem[_19813 + 192] = stor6[_19746]
                                            mem[_19813 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19813 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31650 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31650] = tierLevel.length
                                                        mem[_31650 + 32] = stor5[_19746]
                                                        mem[_31650 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30370 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30370] = stor4[_19746]
                                                    mem[_30370 + 32] = -stor5[_19746]
                                                    mem[_30370 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31010 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31010] = tierLevel.length
                                                        mem[_31010 + 32] = stor5[_19746]
                                                        mem[_31010 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                        revert with 0, 34
                                    if not stor1[_19746].field_1 % 128:
                                        mem[_19813 + 32] = _19836
                                        mem[_19813 + 64] = stor2[_19746]
                                        mem[_19813 + 96] = stor3[_19746]
                                        mem[_19813 + 128] = stor4[_19746]
                                        mem[_19813 + 160] = stor5[_19746]
                                        mem[_19813 + 192] = stor6[_19746]
                                        mem[_19813 + 224] = bool(uint8(stor7[_19746].field_0))
                                        mem[_19813 + 256] = bool(uint8(stor7[_19746].field_8))
                                        if block.timestamp < stor3[_19746]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                            revert with 0, 17
                                        if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                            revert with 0, 17
                                        stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                        if tierLevel.length != stor4[_19746]:
                                            if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19746]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19746]].field_512):
                                                if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _25252 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_25252] = tierLevel.length
                                                    mem[_25252 + 32] = stor5[_19746]
                                                    mem[_25252 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19746] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21080 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21080] = stor4[_19746]
                                                mem[_21080 + 32] = -stor5[_19746]
                                                mem[_21080 + 64] = 1
                                                stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                uint8(stor553[stor4[_19746]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22566 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22566] = tierLevel.length
                                                    mem[_22566 + 32] = stor5[_19746]
                                                    mem[_22566 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= stor1[_19746].field_1 % 128:
                                            mem[_19836 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                            mem[_19813 + 32] = _19836
                                            mem[_19813 + 64] = stor2[_19746]
                                            mem[_19813 + 96] = stor3[_19746]
                                            mem[_19813 + 128] = stor4[_19746]
                                            mem[_19813 + 160] = stor5[_19746]
                                            mem[_19813 + 192] = stor6[_19746]
                                            mem[_19813 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19813 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26662 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26662] = tierLevel.length
                                                        mem[_26662 + 32] = stor5[_19746]
                                                        mem[_26662 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21611 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21611] = stor4[_19746]
                                                    mem[_21611 + 32] = -stor5[_19746]
                                                    mem[_21611 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23837 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23837] = tierLevel.length
                                                        mem[_23837 + 32] = stor5[_19746]
                                                        mem[_23837 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19746 + 1
                                            mem[_19836 + 32] = stor[sha3(_19746 + 1)]
                                            s = _19836 + 32
                                            t = sha3(_19746 + 1)
                                            while _19836 + stor1[_19746].field_1 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19813 + 32] = _19836
                                            mem[_19813 + 64] = stor2[_19746]
                                            mem[_19813 + 96] = stor3[_19746]
                                            mem[_19813 + 128] = stor4[_19746]
                                            mem[_19813 + 160] = stor5[_19746]
                                            mem[_19813 + 192] = stor6[_19746]
                                            mem[_19813 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19813 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31657 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31657] = tierLevel.length
                                                        mem[_31657 + 32] = stor5[_19746]
                                                        mem[_31657 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30377 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30377] = stor4[_19746]
                                                    mem[_30377 + 32] = -stor5[_19746]
                                                    mem[_30377 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31017 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31017] = tierLevel.length
                                                        mem[_31017 + 32] = stor5[_19746]
                                                        mem[_31017 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                            else:
                                if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                    revert with 0, 34
                                _19846 = mem[64]
                                mem[64] = mem[64] + ceil32(stor1[_19746].field_1 % 128) + 32
                                mem[_19846] = stor1[_19746].field_1 % 128
                                if bool(stor1[_19746].field_0):
                                    if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    if not Mask(256, -1, stor1[_19746].field_0):
                                        mem[_19813 + 32] = _19846
                                        mem[_19813 + 64] = stor2[_19746]
                                        mem[_19813 + 96] = stor3[_19746]
                                        mem[_19813 + 128] = stor4[_19746]
                                        mem[_19813 + 160] = stor5[_19746]
                                        mem[_19813 + 192] = stor6[_19746]
                                        mem[_19813 + 224] = bool(uint8(stor7[_19746].field_0))
                                        mem[_19813 + 256] = bool(uint8(stor7[_19746].field_8))
                                        if block.timestamp < stor3[_19746]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                            revert with 0, 17
                                        if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                            revert with 0, 17
                                        stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                        if tierLevel.length != stor4[_19746]:
                                            if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19746]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19746]].field_512):
                                                if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _25267 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_25267] = tierLevel.length
                                                    mem[_25267 + 32] = stor5[_19746]
                                                    mem[_25267 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19746] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21088 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21088] = stor4[_19746]
                                                mem[_21088 + 32] = -stor5[_19746]
                                                mem[_21088 + 64] = 1
                                                stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                uint8(stor553[stor4[_19746]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22581 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22581] = tierLevel.length
                                                    mem[_22581 + 32] = stor5[_19746]
                                                    mem[_22581 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                            mem[_19846 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                            mem[_19813 + 32] = _19846
                                            mem[_19813 + 64] = stor2[_19746]
                                            mem[_19813 + 96] = stor3[_19746]
                                            mem[_19813 + 128] = stor4[_19746]
                                            mem[_19813 + 160] = stor5[_19746]
                                            mem[_19813 + 192] = stor6[_19746]
                                            mem[_19813 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19813 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26670 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26670] = tierLevel.length
                                                        mem[_26670 + 32] = stor5[_19746]
                                                        mem[_26670 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21620 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21620] = stor4[_19746]
                                                    mem[_21620 + 32] = -stor5[_19746]
                                                    mem[_21620 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23846 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23846] = tierLevel.length
                                                        mem[_23846 + 32] = stor5[_19746]
                                                        mem[_23846 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19746 + 1
                                            mem[_19846 + 32] = stor[sha3(_19746 + 1)]
                                            s = _19846 + 32
                                            t = sha3(_19746 + 1)
                                            while _19846 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19813 + 32] = _19846
                                            mem[_19813 + 64] = stor2[_19746]
                                            mem[_19813 + 96] = stor3[_19746]
                                            mem[_19813 + 128] = stor4[_19746]
                                            mem[_19813 + 160] = stor5[_19746]
                                            mem[_19813 + 192] = stor6[_19746]
                                            mem[_19813 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19813 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31664 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31664] = tierLevel.length
                                                        mem[_31664 + 32] = stor5[_19746]
                                                        mem[_31664 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30384 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30384] = stor4[_19746]
                                                    mem[_30384 + 32] = -stor5[_19746]
                                                    mem[_30384 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31024 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31024] = tierLevel.length
                                                        mem[_31024 + 32] = stor5[_19746]
                                                        mem[_31024 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                        revert with 0, 34
                                    if not stor1[_19746].field_1 % 128:
                                        mem[_19813 + 32] = _19846
                                        mem[_19813 + 64] = stor2[_19746]
                                        mem[_19813 + 96] = stor3[_19746]
                                        mem[_19813 + 128] = stor4[_19746]
                                        mem[_19813 + 160] = stor5[_19746]
                                        mem[_19813 + 192] = stor6[_19746]
                                        mem[_19813 + 224] = bool(uint8(stor7[_19746].field_0))
                                        mem[_19813 + 256] = bool(uint8(stor7[_19746].field_8))
                                        if block.timestamp < stor3[_19746]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                            revert with 0, 17
                                        if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                            revert with 0, 17
                                        stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                        if tierLevel.length != stor4[_19746]:
                                            if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19746]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19746]].field_512):
                                                if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _25986 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_25986] = tierLevel.length
                                                    mem[_25986 + 32] = stor5[_19746]
                                                    mem[_25986 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19746] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21307 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21307] = stor4[_19746]
                                                mem[_21307 + 32] = -stor5[_19746]
                                                mem[_21307 + 64] = 1
                                                stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                uint8(stor553[stor4[_19746]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _23191 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_23191] = tierLevel.length
                                                    mem[_23191 + 32] = stor5[_19746]
                                                    mem[_23191 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= stor1[_19746].field_1 % 128:
                                            mem[_19846 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                            mem[_19813 + 32] = _19846
                                            mem[_19813 + 64] = stor2[_19746]
                                            mem[_19813 + 96] = stor3[_19746]
                                            mem[_19813 + 128] = stor4[_19746]
                                            mem[_19813 + 160] = stor5[_19746]
                                            mem[_19813 + 192] = stor6[_19746]
                                            mem[_19813 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19813 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _27316 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_27316] = tierLevel.length
                                                        mem[_27316 + 32] = stor5[_19746]
                                                        mem[_27316 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22053 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22053] = stor4[_19746]
                                                    mem[_22053 + 32] = -stor5[_19746]
                                                    mem[_22053 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24549 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24549] = tierLevel.length
                                                        mem[_24549 + 32] = stor5[_19746]
                                                        mem[_24549 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19746 + 1
                                            mem[_19846 + 32] = stor[sha3(_19746 + 1)]
                                            s = _19846 + 32
                                            t = sha3(_19746 + 1)
                                            while _19846 + stor1[_19746].field_1 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19813 + 32] = _19846
                                            mem[_19813 + 64] = stor2[_19746]
                                            mem[_19813 + 96] = stor3[_19746]
                                            mem[_19813 + 128] = stor4[_19746]
                                            mem[_19813 + 160] = stor5[_19746]
                                            mem[_19813 + 192] = stor6[_19746]
                                            mem[_19813 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19813 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31671 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31671] = tierLevel.length
                                                        mem[_31671 + 32] = stor5[_19746]
                                                        mem[_31671 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30391 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30391] = stor4[_19746]
                                                    mem[_30391 + 32] = -stor5[_19746]
                                                    mem[_30391 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31031 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31031] = tierLevel.length
                                                        mem[_31031 + 32] = stor5[_19746]
                                                        mem[_31031 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                            stor4[_19746] = tierLevel.length
                            stor3[_19746] = block.timestamp
                            if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                revert with 0, 17
                    else:
                        if 31 >= stor1[_19746].field_1 % 128:
                            mem[_19771 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                            mem[_19747 + 32] = _19771
                            mem[_19747 + 64] = stor2[_19746]
                            mem[_19747 + 96] = stor3[_19746]
                            mem[_19747 + 128] = stor4[_19746]
                            mem[_19747 + 160] = stor5[_19746]
                            mem[_19747 + 192] = stor6[_19746]
                            mem[_19747 + 224] = bool(uint8(stor7[_19746].field_0))
                            mem[_19747 + 256] = bool(uint8(stor7[_19746].field_8))
                            if stor3[_19746] > !compoundDelay:
                                revert with 0, 17
                            if block.timestamp >= stor3[_19746] + compoundDelay:
                                _19822 = mem[64]
                                mem[64] = mem[64] + 288
                                mem[_19822] = stor[_19746]
                                if bool(stor1[_19746].field_0):
                                    if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    _19855 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor1[_19746].field_0) * 0.5) + 32
                                    mem[_19855] = uint255(stor1[_19746].field_0) * 0.5
                                    if bool(stor1[_19746].field_0):
                                        if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19746].field_0):
                                            mem[_19822 + 32] = _19855
                                            mem[_19822 + 64] = stor2[_19746]
                                            mem[_19822 + 96] = stor3[_19746]
                                            mem[_19822 + 128] = stor4[_19746]
                                            mem[_19822 + 160] = stor5[_19746]
                                            mem[_19822 + 192] = stor6[_19746]
                                            mem[_19822 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19822 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26033 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26033] = tierLevel.length
                                                        mem[_26033 + 32] = stor5[_19746]
                                                        mem[_26033 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21316 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21316] = stor4[_19746]
                                                    mem[_21316 + 32] = -stor5[_19746]
                                                    mem[_21316 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23227 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23227] = tierLevel.length
                                                        mem[_23227 + 32] = stor5[_19746]
                                                        mem[_23227 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                                mem[_19855 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_19822 + 32] = _19855
                                                mem[_19822 + 64] = stor2[_19746]
                                                mem[_19822 + 96] = stor3[_19746]
                                                mem[_19822 + 128] = stor4[_19746]
                                                mem[_19822 + 160] = stor5[_19746]
                                                mem[_19822 + 192] = stor6[_19746]
                                                mem[_19822 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19822 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _27352 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_27352] = tierLevel.length
                                                            mem[_27352 + 32] = stor5[_19746]
                                                            mem[_27352 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22071 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22071] = stor4[_19746]
                                                        mem[_22071 + 32] = -stor5[_19746]
                                                        mem[_22071 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _24586 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_24586] = tierLevel.length
                                                            mem[_24586 + 32] = stor5[_19746]
                                                            mem[_24586 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_19855 + 32] = stor[sha3(_19746 + 1)]
                                                s = _19855 + 32
                                                t = sha3(_19746 + 1)
                                                while _19855 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19822 + 32] = _19855
                                                mem[_19822 + 64] = stor2[_19746]
                                                mem[_19822 + 96] = stor3[_19746]
                                                mem[_19822 + 128] = stor4[_19746]
                                                mem[_19822 + 160] = stor5[_19746]
                                                mem[_19822 + 192] = stor6[_19746]
                                                mem[_19822 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19822 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31678 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31678] = tierLevel.length
                                                            mem[_31678 + 32] = stor5[_19746]
                                                            mem[_31678 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30398 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30398] = stor4[_19746]
                                                        mem[_30398 + 32] = -stor5[_19746]
                                                        mem[_30398 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31038 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31038] = tierLevel.length
                                                            mem[_31038 + 32] = stor5[_19746]
                                                            mem[_31038 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19746].field_1 % 128:
                                            mem[_19822 + 32] = _19855
                                            mem[_19822 + 64] = stor2[_19746]
                                            mem[_19822 + 96] = stor3[_19746]
                                            mem[_19822 + 128] = stor4[_19746]
                                            mem[_19822 + 160] = stor5[_19746]
                                            mem[_19822 + 192] = stor6[_19746]
                                            mem[_19822 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19822 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26709 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26709] = tierLevel.length
                                                        mem[_26709 + 32] = stor5[_19746]
                                                        mem[_26709 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21633 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21633] = stor4[_19746]
                                                    mem[_21633 + 32] = -stor5[_19746]
                                                    mem[_21633 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23883 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23883] = tierLevel.length
                                                        mem[_23883 + 32] = stor5[_19746]
                                                        mem[_23883 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19746].field_1 % 128:
                                                mem[_19855 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_19822 + 32] = _19855
                                                mem[_19822 + 64] = stor2[_19746]
                                                mem[_19822 + 96] = stor3[_19746]
                                                mem[_19822 + 128] = stor4[_19746]
                                                mem[_19822 + 160] = stor5[_19746]
                                                mem[_19822 + 192] = stor6[_19746]
                                                mem[_19822 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19822 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _27951 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_27951] = tierLevel.length
                                                            mem[_27951 + 32] = stor5[_19746]
                                                            mem[_27951 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22620 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22620] = stor4[_19746]
                                                        mem[_22620 + 32] = -stor5[_19746]
                                                        mem[_22620 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _25324 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_25324] = tierLevel.length
                                                            mem[_25324 + 32] = stor5[_19746]
                                                            mem[_25324 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_19855 + 32] = stor[sha3(_19746 + 1)]
                                                s = _19855 + 32
                                                t = sha3(_19746 + 1)
                                                while _19855 + stor1[_19746].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19822 + 32] = _19855
                                                mem[_19822 + 64] = stor2[_19746]
                                                mem[_19822 + 96] = stor3[_19746]
                                                mem[_19822 + 128] = stor4[_19746]
                                                mem[_19822 + 160] = stor5[_19746]
                                                mem[_19822 + 192] = stor6[_19746]
                                                mem[_19822 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19822 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31685 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31685] = tierLevel.length
                                                            mem[_31685 + 32] = stor5[_19746]
                                                            mem[_31685 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30405 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30405] = stor4[_19746]
                                                        mem[_30405 + 32] = -stor5[_19746]
                                                        mem[_30405 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31045 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31045] = tierLevel.length
                                                            mem[_31045 + 32] = stor5[_19746]
                                                            mem[_31045 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                        revert with 0, 34
                                    _19863 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor1[_19746].field_1 % 128) + 32
                                    mem[_19863] = stor1[_19746].field_1 % 128
                                    if bool(stor1[_19746].field_0):
                                        if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19746].field_0):
                                            mem[_19822 + 32] = _19863
                                            mem[_19822 + 64] = stor2[_19746]
                                            mem[_19822 + 96] = stor3[_19746]
                                            mem[_19822 + 128] = stor4[_19746]
                                            mem[_19822 + 160] = stor5[_19746]
                                            mem[_19822 + 192] = stor6[_19746]
                                            mem[_19822 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19822 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26724 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26724] = tierLevel.length
                                                        mem[_26724 + 32] = stor5[_19746]
                                                        mem[_26724 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21641 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21641] = stor4[_19746]
                                                    mem[_21641 + 32] = -stor5[_19746]
                                                    mem[_21641 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23898 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23898] = tierLevel.length
                                                        mem[_23898 + 32] = stor5[_19746]
                                                        mem[_23898 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                                mem[_19863 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_19822 + 32] = _19863
                                                mem[_19822 + 64] = stor2[_19746]
                                                mem[_19822 + 96] = stor3[_19746]
                                                mem[_19822 + 128] = stor4[_19746]
                                                mem[_19822 + 160] = stor5[_19746]
                                                mem[_19822 + 192] = stor6[_19746]
                                                mem[_19822 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19822 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _27959 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_27959] = tierLevel.length
                                                            mem[_27959 + 32] = stor5[_19746]
                                                            mem[_27959 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22629 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22629] = stor4[_19746]
                                                        mem[_22629 + 32] = -stor5[_19746]
                                                        mem[_22629 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _25333 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_25333] = tierLevel.length
                                                            mem[_25333 + 32] = stor5[_19746]
                                                            mem[_25333 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_19863 + 32] = stor[sha3(_19746 + 1)]
                                                s = _19863 + 32
                                                t = sha3(_19746 + 1)
                                                while _19863 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19822 + 32] = _19863
                                                mem[_19822 + 64] = stor2[_19746]
                                                mem[_19822 + 96] = stor3[_19746]
                                                mem[_19822 + 128] = stor4[_19746]
                                                mem[_19822 + 160] = stor5[_19746]
                                                mem[_19822 + 192] = stor6[_19746]
                                                mem[_19822 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19822 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31692 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31692] = tierLevel.length
                                                            mem[_31692 + 32] = stor5[_19746]
                                                            mem[_31692 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30412 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30412] = stor4[_19746]
                                                        mem[_30412 + 32] = -stor5[_19746]
                                                        mem[_30412 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31052 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31052] = tierLevel.length
                                                            mem[_31052 + 32] = stor5[_19746]
                                                            mem[_31052 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19746].field_1 % 128:
                                            mem[_19822 + 32] = _19863
                                            mem[_19822 + 64] = stor2[_19746]
                                            mem[_19822 + 96] = stor3[_19746]
                                            mem[_19822 + 128] = stor4[_19746]
                                            mem[_19822 + 160] = stor5[_19746]
                                            mem[_19822 + 192] = stor6[_19746]
                                            mem[_19822 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19822 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _27367 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_27367] = tierLevel.length
                                                        mem[_27367 + 32] = stor5[_19746]
                                                        mem[_27367 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22082 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22082] = stor4[_19746]
                                                    mem[_22082 + 32] = -stor5[_19746]
                                                    mem[_22082 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24601 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24601] = tierLevel.length
                                                        mem[_24601 + 32] = stor5[_19746]
                                                        mem[_24601 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19746].field_1 % 128:
                                                mem[_19863 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_19822 + 32] = _19863
                                                mem[_19822 + 64] = stor2[_19746]
                                                mem[_19822 + 96] = stor3[_19746]
                                                mem[_19822 + 128] = stor4[_19746]
                                                mem[_19822 + 160] = stor5[_19746]
                                                mem[_19822 + 192] = stor6[_19746]
                                                mem[_19822 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19822 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _28460 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_28460] = tierLevel.length
                                                            mem[_28460 + 32] = stor5[_19746]
                                                            mem[_28460 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23248 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23248] = stor4[_19746]
                                                        mem[_23248 + 32] = -stor5[_19746]
                                                        mem[_23248 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _26054 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_26054] = tierLevel.length
                                                            mem[_26054 + 32] = stor5[_19746]
                                                            mem[_26054 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_19863 + 32] = stor[sha3(_19746 + 1)]
                                                s = _19863 + 32
                                                t = sha3(_19746 + 1)
                                                while _19863 + stor1[_19746].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19822 + 32] = _19863
                                                mem[_19822 + 64] = stor2[_19746]
                                                mem[_19822 + 96] = stor3[_19746]
                                                mem[_19822 + 128] = stor4[_19746]
                                                mem[_19822 + 160] = stor5[_19746]
                                                mem[_19822 + 192] = stor6[_19746]
                                                mem[_19822 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19822 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31699 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31699] = tierLevel.length
                                                            mem[_31699 + 32] = stor5[_19746]
                                                            mem[_31699 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30419 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30419] = stor4[_19746]
                                                        mem[_30419 + 32] = -stor5[_19746]
                                                        mem[_30419 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31059 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31059] = tierLevel.length
                                                            mem[_31059 + 32] = stor5[_19746]
                                                            mem[_31059 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                stor4[_19746] = tierLevel.length
                                stor3[_19746] = block.timestamp
                                if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                    revert with 0, 17
                        else:
                            mem[0] = _19746 + 1
                            mem[_19771 + 32] = stor[sha3(_19746 + 1)]
                            s = _19771 + 32
                            t = sha3(_19746 + 1)
                            while _19771 + stor1[_19746].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_19747 + 32] = _19771
                            mem[_19747 + 64] = stor2[_19746]
                            mem[_19747 + 96] = stor3[_19746]
                            mem[_19747 + 128] = stor4[_19746]
                            mem[_19747 + 160] = stor5[_19746]
                            mem[_19747 + 192] = stor6[_19746]
                            mem[_19747 + 224] = bool(uint8(stor7[_19746].field_0))
                            mem[_19747 + 256] = bool(uint8(stor7[_19746].field_8))
                            if stor3[_19746] > !compoundDelay:
                                revert with 0, 17
                            if block.timestamp >= stor3[_19746] + compoundDelay:
                                _29687 = mem[64]
                                mem[64] = mem[64] + 288
                                mem[_29687] = stor[_19746]
                                if bool(stor1[_19746].field_0):
                                    if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    _29695 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor1[_19746].field_0) * 0.5) + 32
                                    mem[_29695] = uint255(stor1[_19746].field_0) * 0.5
                                    if bool(stor1[_19746].field_0):
                                        if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19746].field_0):
                                            mem[_29687 + 32] = _29695
                                            mem[_29687 + 64] = stor2[_19746]
                                            mem[_29687 + 96] = stor3[_19746]
                                            mem[_29687 + 128] = stor4[_19746]
                                            mem[_29687 + 160] = stor5[_19746]
                                            mem[_29687 + 192] = stor6[_19746]
                                            mem[_29687 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_29687 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33630 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33630] = tierLevel.length
                                                        mem[_33630 + 32] = stor5[_19746]
                                                        mem[_33630 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32015 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32015] = stor4[_19746]
                                                    mem[_32015 + 32] = -stor5[_19746]
                                                    mem[_32015 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32670 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32670] = tierLevel.length
                                                        mem[_32670 + 32] = stor5[_19746]
                                                        mem[_32670 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                                mem[_29695 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_29687 + 32] = _29695
                                                mem[_29687 + 64] = stor2[_19746]
                                                mem[_29687 + 96] = stor3[_19746]
                                                mem[_29687 + 128] = stor4[_19746]
                                                mem[_29687 + 160] = stor5[_19746]
                                                mem[_29687 + 192] = stor6[_19746]
                                                mem[_29687 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29687 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34158 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34158] = tierLevel.length
                                                            mem[_34158 + 32] = stor5[_19746]
                                                            mem[_34158 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32293 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32293] = stor4[_19746]
                                                        mem[_32293 + 32] = -stor5[_19746]
                                                        mem[_32293 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33204 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33204] = tierLevel.length
                                                            mem[_33204 + 32] = stor5[_19746]
                                                            mem[_33204 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_29695 + 32] = stor[sha3(_19746 + 1)]
                                                s = _29695 + 32
                                                t = sha3(_19746 + 1)
                                                while _29695 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29687 + 32] = _29695
                                                mem[_29687 + 64] = stor2[_19746]
                                                mem[_29687 + 96] = stor3[_19746]
                                                mem[_29687 + 128] = stor4[_19746]
                                                mem[_29687 + 160] = stor5[_19746]
                                                mem[_29687 + 192] = stor6[_19746]
                                                mem[_29687 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29687 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35734 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35734] = tierLevel.length
                                                            mem[_35734 + 32] = stor5[_19746]
                                                            mem[_35734 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35094 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35094] = stor4[_19746]
                                                        mem[_35094 + 32] = -stor5[_19746]
                                                        mem[_35094 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35414 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35414] = tierLevel.length
                                                            mem[_35414 + 32] = stor5[_19746]
                                                            mem[_35414 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19746].field_1 % 128:
                                            mem[_29687 + 32] = _29695
                                            mem[_29687 + 64] = stor2[_19746]
                                            mem[_29687 + 96] = stor3[_19746]
                                            mem[_29687 + 128] = stor4[_19746]
                                            mem[_29687 + 160] = stor5[_19746]
                                            mem[_29687 + 192] = stor6[_19746]
                                            mem[_29687 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_29687 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33898 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33898] = tierLevel.length
                                                        mem[_33898 + 32] = stor5[_19746]
                                                        mem[_33898 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32134 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32134] = stor4[_19746]
                                                    mem[_32134 + 32] = -stor5[_19746]
                                                    mem[_32134 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32938 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32938] = tierLevel.length
                                                        mem[_32938 + 32] = stor5[_19746]
                                                        mem[_32938 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19746].field_1 % 128:
                                                mem[_29695 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_29687 + 32] = _29695
                                                mem[_29687 + 64] = stor2[_19746]
                                                mem[_29687 + 96] = stor3[_19746]
                                                mem[_29687 + 128] = stor4[_19746]
                                                mem[_29687 + 160] = stor5[_19746]
                                                mem[_29687 + 192] = stor6[_19746]
                                                mem[_29687 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29687 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34363 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34363] = tierLevel.length
                                                            mem[_34363 + 32] = stor5[_19746]
                                                            mem[_34363 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32468 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32468] = stor4[_19746]
                                                        mem[_32468 + 32] = -stor5[_19746]
                                                        mem[_32468 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33422 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33422] = tierLevel.length
                                                            mem[_33422 + 32] = stor5[_19746]
                                                            mem[_33422 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_29695 + 32] = stor[sha3(_19746 + 1)]
                                                s = _29695 + 32
                                                t = sha3(_19746 + 1)
                                                while _29695 + stor1[_19746].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29687 + 32] = _29695
                                                mem[_29687 + 64] = stor2[_19746]
                                                mem[_29687 + 96] = stor3[_19746]
                                                mem[_29687 + 128] = stor4[_19746]
                                                mem[_29687 + 160] = stor5[_19746]
                                                mem[_29687 + 192] = stor6[_19746]
                                                mem[_29687 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29687 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35741 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35741] = tierLevel.length
                                                            mem[_35741 + 32] = stor5[_19746]
                                                            mem[_35741 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35101 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35101] = stor4[_19746]
                                                        mem[_35101 + 32] = -stor5[_19746]
                                                        mem[_35101 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35421 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35421] = tierLevel.length
                                                            mem[_35421 + 32] = stor5[_19746]
                                                            mem[_35421 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                        revert with 0, 34
                                    _29703 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor1[_19746].field_1 % 128) + 32
                                    mem[_29703] = stor1[_19746].field_1 % 128
                                    if bool(stor1[_19746].field_0):
                                        if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19746].field_0):
                                            mem[_29687 + 32] = _29703
                                            mem[_29687 + 64] = stor2[_19746]
                                            mem[_29687 + 96] = stor3[_19746]
                                            mem[_29687 + 128] = stor4[_19746]
                                            mem[_29687 + 160] = stor5[_19746]
                                            mem[_29687 + 192] = stor6[_19746]
                                            mem[_29687 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_29687 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33913 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33913] = tierLevel.length
                                                        mem[_33913 + 32] = stor5[_19746]
                                                        mem[_33913 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32142 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32142] = stor4[_19746]
                                                    mem[_32142 + 32] = -stor5[_19746]
                                                    mem[_32142 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32953 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32953] = tierLevel.length
                                                        mem[_32953 + 32] = stor5[_19746]
                                                        mem[_32953 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                                mem[_29703 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_29687 + 32] = _29703
                                                mem[_29687 + 64] = stor2[_19746]
                                                mem[_29687 + 96] = stor3[_19746]
                                                mem[_29687 + 128] = stor4[_19746]
                                                mem[_29687 + 160] = stor5[_19746]
                                                mem[_29687 + 192] = stor6[_19746]
                                                mem[_29687 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29687 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34371 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34371] = tierLevel.length
                                                            mem[_34371 + 32] = stor5[_19746]
                                                            mem[_34371 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32477 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32477] = stor4[_19746]
                                                        mem[_32477 + 32] = -stor5[_19746]
                                                        mem[_32477 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33431 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33431] = tierLevel.length
                                                            mem[_33431 + 32] = stor5[_19746]
                                                            mem[_33431 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_29703 + 32] = stor[sha3(_19746 + 1)]
                                                s = _29703 + 32
                                                t = sha3(_19746 + 1)
                                                while _29703 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29687 + 32] = _29703
                                                mem[_29687 + 64] = stor2[_19746]
                                                mem[_29687 + 96] = stor3[_19746]
                                                mem[_29687 + 128] = stor4[_19746]
                                                mem[_29687 + 160] = stor5[_19746]
                                                mem[_29687 + 192] = stor6[_19746]
                                                mem[_29687 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29687 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35748 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35748] = tierLevel.length
                                                            mem[_35748 + 32] = stor5[_19746]
                                                            mem[_35748 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35108 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35108] = stor4[_19746]
                                                        mem[_35108 + 32] = -stor5[_19746]
                                                        mem[_35108 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35428 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35428] = tierLevel.length
                                                            mem[_35428 + 32] = stor5[_19746]
                                                            mem[_35428 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19746].field_1 % 128:
                                            mem[_29687 + 32] = _29703
                                            mem[_29687 + 64] = stor2[_19746]
                                            mem[_29687 + 96] = stor3[_19746]
                                            mem[_29687 + 128] = stor4[_19746]
                                            mem[_29687 + 160] = stor5[_19746]
                                            mem[_29687 + 192] = stor6[_19746]
                                            mem[_29687 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_29687 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _34173 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_34173] = tierLevel.length
                                                        mem[_34173 + 32] = stor5[_19746]
                                                        mem[_34173 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32304 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32304] = stor4[_19746]
                                                    mem[_32304 + 32] = -stor5[_19746]
                                                    mem[_32304 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33219 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33219] = tierLevel.length
                                                        mem[_33219 + 32] = stor5[_19746]
                                                        mem[_33219 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19746].field_1 % 128:
                                                mem[_29703 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_29687 + 32] = _29703
                                                mem[_29687 + 64] = stor2[_19746]
                                                mem[_29687 + 96] = stor3[_19746]
                                                mem[_29687 + 128] = stor4[_19746]
                                                mem[_29687 + 160] = stor5[_19746]
                                                mem[_29687 + 192] = stor6[_19746]
                                                mem[_29687 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29687 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34533 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34533] = tierLevel.length
                                                            mem[_34533 + 32] = stor5[_19746]
                                                            mem[_34533 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32691 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32691] = stor4[_19746]
                                                        mem[_32691 + 32] = -stor5[_19746]
                                                        mem[_32691 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33651 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33651] = tierLevel.length
                                                            mem[_33651 + 32] = stor5[_19746]
                                                            mem[_33651 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_29703 + 32] = stor[sha3(_19746 + 1)]
                                                s = _29703 + 32
                                                t = sha3(_19746 + 1)
                                                while _29703 + stor1[_19746].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29687 + 32] = _29703
                                                mem[_29687 + 64] = stor2[_19746]
                                                mem[_29687 + 96] = stor3[_19746]
                                                mem[_29687 + 128] = stor4[_19746]
                                                mem[_29687 + 160] = stor5[_19746]
                                                mem[_29687 + 192] = stor6[_19746]
                                                mem[_29687 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29687 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35755 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35755] = tierLevel.length
                                                            mem[_35755 + 32] = stor5[_19746]
                                                            mem[_35755 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35115 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35115] = stor4[_19746]
                                                        mem[_35115 + 32] = -stor5[_19746]
                                                        mem[_35115 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35435 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35435] = tierLevel.length
                                                            mem[_35435 + 32] = stor5[_19746]
                                                            mem[_35435 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                stor4[_19746] = tierLevel.length
                                stor3[_19746] = block.timestamp
                                if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                    revert with 0, 17
            else:
                if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                    revert with 0, 34
                _19777 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_19746].field_1 % 128) + 32
                mem[_19777] = stor1[_19746].field_1 % 128
                if bool(stor1[_19746].field_0):
                    if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                        revert with 0, 34
                    if not Mask(256, -1, stor1[_19746].field_0):
                        mem[_19747 + 32] = _19777
                        mem[_19747 + 64] = stor2[_19746]
                        mem[_19747 + 96] = stor3[_19746]
                        mem[_19747 + 128] = stor4[_19746]
                        mem[_19747 + 160] = stor5[_19746]
                        mem[_19747 + 192] = stor6[_19746]
                        mem[_19747 + 224] = bool(uint8(stor7[_19746].field_0))
                        mem[_19747 + 256] = bool(uint8(stor7[_19746].field_8))
                        if stor3[_19746] > !compoundDelay:
                            revert with 0, 17
                        if block.timestamp >= stor3[_19746] + compoundDelay:
                            _19814 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_19814] = stor[_19746]
                            if bool(stor1[_19746].field_0):
                                if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                    revert with 0, 34
                                _19838 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor1[_19746].field_0) * 0.5) + 32
                                mem[_19838] = uint255(stor1[_19746].field_0) * 0.5
                                if bool(stor1[_19746].field_0):
                                    if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    if not Mask(256, -1, stor1[_19746].field_0):
                                        mem[_19814 + 32] = _19838
                                        mem[_19814 + 64] = stor2[_19746]
                                        mem[_19814 + 96] = stor3[_19746]
                                        mem[_19814 + 128] = stor4[_19746]
                                        mem[_19814 + 160] = stor5[_19746]
                                        mem[_19814 + 192] = stor6[_19746]
                                        mem[_19814 + 224] = bool(uint8(stor7[_19746].field_0))
                                        mem[_19814 + 256] = bool(uint8(stor7[_19746].field_8))
                                        if block.timestamp < stor3[_19746]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                            revert with 0, 17
                                        if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                            revert with 0, 17
                                        stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                        if tierLevel.length != stor4[_19746]:
                                            if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19746]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19746]].field_512):
                                                if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _24616 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_24616] = tierLevel.length
                                                    mem[_24616 + 32] = stor5[_19746]
                                                    mem[_24616 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19746] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _20954 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_20954] = stor4[_19746]
                                                mem[_20954 + 32] = -stor5[_19746]
                                                mem[_20954 + 64] = 1
                                                stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                uint8(stor553[stor4[_19746]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22090 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22090] = tierLevel.length
                                                    mem[_22090 + 32] = stor5[_19746]
                                                    mem[_22090 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                            mem[_19838 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                            mem[_19814 + 32] = _19838
                                            mem[_19814 + 64] = stor2[_19746]
                                            mem[_19814 + 96] = stor3[_19746]
                                            mem[_19814 + 128] = stor4[_19746]
                                            mem[_19814 + 160] = stor5[_19746]
                                            mem[_19814 + 192] = stor6[_19746]
                                            mem[_19814 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19814 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26062 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26062] = tierLevel.length
                                                        mem[_26062 + 32] = stor5[_19746]
                                                        mem[_26062 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21327 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21327] = stor4[_19746]
                                                    mem[_21327 + 32] = -stor5[_19746]
                                                    mem[_21327 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23257 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23257] = tierLevel.length
                                                        mem[_23257 + 32] = stor5[_19746]
                                                        mem[_23257 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19746 + 1
                                            mem[_19838 + 32] = stor[sha3(_19746 + 1)]
                                            s = _19838 + 32
                                            t = sha3(_19746 + 1)
                                            while _19838 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19814 + 32] = _19838
                                            mem[_19814 + 64] = stor2[_19746]
                                            mem[_19814 + 96] = stor3[_19746]
                                            mem[_19814 + 128] = stor4[_19746]
                                            mem[_19814 + 160] = stor5[_19746]
                                            mem[_19814 + 192] = stor6[_19746]
                                            mem[_19814 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19814 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31706 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31706] = tierLevel.length
                                                        mem[_31706 + 32] = stor5[_19746]
                                                        mem[_31706 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30426 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30426] = stor4[_19746]
                                                    mem[_30426 + 32] = -stor5[_19746]
                                                    mem[_30426 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31066 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31066] = tierLevel.length
                                                        mem[_31066 + 32] = stor5[_19746]
                                                        mem[_31066 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                        revert with 0, 34
                                    if not stor1[_19746].field_1 % 128:
                                        mem[_19814 + 32] = _19838
                                        mem[_19814 + 64] = stor2[_19746]
                                        mem[_19814 + 96] = stor3[_19746]
                                        mem[_19814 + 128] = stor4[_19746]
                                        mem[_19814 + 160] = stor5[_19746]
                                        mem[_19814 + 192] = stor6[_19746]
                                        mem[_19814 + 224] = bool(uint8(stor7[_19746].field_0))
                                        mem[_19814 + 256] = bool(uint8(stor7[_19746].field_8))
                                        if block.timestamp < stor3[_19746]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                            revert with 0, 17
                                        if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                            revert with 0, 17
                                        stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                        if tierLevel.length != stor4[_19746]:
                                            if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19746]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19746]].field_512):
                                                if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _25348 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_25348] = tierLevel.length
                                                    mem[_25348 + 32] = stor5[_19746]
                                                    mem[_25348 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19746] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21100 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21100] = stor4[_19746]
                                                mem[_21100 + 32] = -stor5[_19746]
                                                mem[_21100 + 64] = 1
                                                stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                uint8(stor553[stor4[_19746]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22642 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22642] = tierLevel.length
                                                    mem[_22642 + 32] = stor5[_19746]
                                                    mem[_22642 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= stor1[_19746].field_1 % 128:
                                            mem[_19838 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                            mem[_19814 + 32] = _19838
                                            mem[_19814 + 64] = stor2[_19746]
                                            mem[_19814 + 96] = stor3[_19746]
                                            mem[_19814 + 128] = stor4[_19746]
                                            mem[_19814 + 160] = stor5[_19746]
                                            mem[_19814 + 192] = stor6[_19746]
                                            mem[_19814 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19814 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26744 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26744] = tierLevel.length
                                                        mem[_26744 + 32] = stor5[_19746]
                                                        mem[_26744 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21653 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21653] = stor4[_19746]
                                                    mem[_21653 + 32] = -stor5[_19746]
                                                    mem[_21653 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23919 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23919] = tierLevel.length
                                                        mem[_23919 + 32] = stor5[_19746]
                                                        mem[_23919 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19746 + 1
                                            mem[_19838 + 32] = stor[sha3(_19746 + 1)]
                                            s = _19838 + 32
                                            t = sha3(_19746 + 1)
                                            while _19838 + stor1[_19746].field_1 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19814 + 32] = _19838
                                            mem[_19814 + 64] = stor2[_19746]
                                            mem[_19814 + 96] = stor3[_19746]
                                            mem[_19814 + 128] = stor4[_19746]
                                            mem[_19814 + 160] = stor5[_19746]
                                            mem[_19814 + 192] = stor6[_19746]
                                            mem[_19814 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19814 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31713 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31713] = tierLevel.length
                                                        mem[_31713 + 32] = stor5[_19746]
                                                        mem[_31713 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30433 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30433] = stor4[_19746]
                                                    mem[_30433 + 32] = -stor5[_19746]
                                                    mem[_30433 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31073 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31073] = tierLevel.length
                                                        mem[_31073 + 32] = stor5[_19746]
                                                        mem[_31073 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                            else:
                                if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                    revert with 0, 34
                                _19847 = mem[64]
                                mem[64] = mem[64] + ceil32(stor1[_19746].field_1 % 128) + 32
                                mem[_19847] = stor1[_19746].field_1 % 128
                                if bool(stor1[_19746].field_0):
                                    if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    if not Mask(256, -1, stor1[_19746].field_0):
                                        mem[_19814 + 32] = _19847
                                        mem[_19814 + 64] = stor2[_19746]
                                        mem[_19814 + 96] = stor3[_19746]
                                        mem[_19814 + 128] = stor4[_19746]
                                        mem[_19814 + 160] = stor5[_19746]
                                        mem[_19814 + 192] = stor6[_19746]
                                        mem[_19814 + 224] = bool(uint8(stor7[_19746].field_0))
                                        mem[_19814 + 256] = bool(uint8(stor7[_19746].field_8))
                                        if block.timestamp < stor3[_19746]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                            revert with 0, 17
                                        if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                            revert with 0, 17
                                        stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                        if tierLevel.length != stor4[_19746]:
                                            if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19746]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19746]].field_512):
                                                if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _25363 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_25363] = tierLevel.length
                                                    mem[_25363 + 32] = stor5[_19746]
                                                    mem[_25363 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19746] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21108 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21108] = stor4[_19746]
                                                mem[_21108 + 32] = -stor5[_19746]
                                                mem[_21108 + 64] = 1
                                                stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                uint8(stor553[stor4[_19746]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22657 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22657] = tierLevel.length
                                                    mem[_22657 + 32] = stor5[_19746]
                                                    mem[_22657 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                            mem[_19847 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                            mem[_19814 + 32] = _19847
                                            mem[_19814 + 64] = stor2[_19746]
                                            mem[_19814 + 96] = stor3[_19746]
                                            mem[_19814 + 128] = stor4[_19746]
                                            mem[_19814 + 160] = stor5[_19746]
                                            mem[_19814 + 192] = stor6[_19746]
                                            mem[_19814 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19814 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26752 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26752] = tierLevel.length
                                                        mem[_26752 + 32] = stor5[_19746]
                                                        mem[_26752 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21662 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21662] = stor4[_19746]
                                                    mem[_21662 + 32] = -stor5[_19746]
                                                    mem[_21662 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23928 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23928] = tierLevel.length
                                                        mem[_23928 + 32] = stor5[_19746]
                                                        mem[_23928 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19746 + 1
                                            mem[_19847 + 32] = stor[sha3(_19746 + 1)]
                                            s = _19847 + 32
                                            t = sha3(_19746 + 1)
                                            while _19847 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19814 + 32] = _19847
                                            mem[_19814 + 64] = stor2[_19746]
                                            mem[_19814 + 96] = stor3[_19746]
                                            mem[_19814 + 128] = stor4[_19746]
                                            mem[_19814 + 160] = stor5[_19746]
                                            mem[_19814 + 192] = stor6[_19746]
                                            mem[_19814 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19814 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31720 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31720] = tierLevel.length
                                                        mem[_31720 + 32] = stor5[_19746]
                                                        mem[_31720 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30440 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30440] = stor4[_19746]
                                                    mem[_30440 + 32] = -stor5[_19746]
                                                    mem[_30440 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31080 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31080] = tierLevel.length
                                                        mem[_31080 + 32] = stor5[_19746]
                                                        mem[_31080 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                        revert with 0, 34
                                    if not stor1[_19746].field_1 % 128:
                                        mem[_19814 + 32] = _19847
                                        mem[_19814 + 64] = stor2[_19746]
                                        mem[_19814 + 96] = stor3[_19746]
                                        mem[_19814 + 128] = stor4[_19746]
                                        mem[_19814 + 160] = stor5[_19746]
                                        mem[_19814 + 192] = stor6[_19746]
                                        mem[_19814 + 224] = bool(uint8(stor7[_19746].field_0))
                                        mem[_19814 + 256] = bool(uint8(stor7[_19746].field_8))
                                        if block.timestamp < stor3[_19746]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                            revert with 0, 17
                                        if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                            revert with 0, 17
                                        stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                        if tierLevel.length != stor4[_19746]:
                                            if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19746]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19746]].field_512):
                                                if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _26077 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_26077] = tierLevel.length
                                                    mem[_26077 + 32] = stor5[_19746]
                                                    mem[_26077 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19746] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21338 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21338] = stor4[_19746]
                                                mem[_21338 + 32] = -stor5[_19746]
                                                mem[_21338 + 64] = 1
                                                stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                uint8(stor553[stor4[_19746]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _23272 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_23272] = tierLevel.length
                                                    mem[_23272 + 32] = stor5[_19746]
                                                    mem[_23272 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= stor1[_19746].field_1 % 128:
                                            mem[_19847 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                            mem[_19814 + 32] = _19847
                                            mem[_19814 + 64] = stor2[_19746]
                                            mem[_19814 + 96] = stor3[_19746]
                                            mem[_19814 + 128] = stor4[_19746]
                                            mem[_19814 + 160] = stor5[_19746]
                                            mem[_19814 + 192] = stor6[_19746]
                                            mem[_19814 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19814 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _27394 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_27394] = tierLevel.length
                                                        mem[_27394 + 32] = stor5[_19746]
                                                        mem[_27394 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22111 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22111] = stor4[_19746]
                                                    mem[_22111 + 32] = -stor5[_19746]
                                                    mem[_22111 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24637 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24637] = tierLevel.length
                                                        mem[_24637 + 32] = stor5[_19746]
                                                        mem[_24637 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19746 + 1
                                            mem[_19847 + 32] = stor[sha3(_19746 + 1)]
                                            s = _19847 + 32
                                            t = sha3(_19746 + 1)
                                            while _19847 + stor1[_19746].field_1 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19814 + 32] = _19847
                                            mem[_19814 + 64] = stor2[_19746]
                                            mem[_19814 + 96] = stor3[_19746]
                                            mem[_19814 + 128] = stor4[_19746]
                                            mem[_19814 + 160] = stor5[_19746]
                                            mem[_19814 + 192] = stor6[_19746]
                                            mem[_19814 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19814 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31727 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31727] = tierLevel.length
                                                        mem[_31727 + 32] = stor5[_19746]
                                                        mem[_31727 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30447 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30447] = stor4[_19746]
                                                    mem[_30447 + 32] = -stor5[_19746]
                                                    mem[_30447 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31087 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31087] = tierLevel.length
                                                        mem[_31087 + 32] = stor5[_19746]
                                                        mem[_31087 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                            stor4[_19746] = tierLevel.length
                            stor3[_19746] = block.timestamp
                            if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                revert with 0, 17
                    else:
                        if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                            mem[_19777 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                            mem[_19747 + 32] = _19777
                            mem[_19747 + 64] = stor2[_19746]
                            mem[_19747 + 96] = stor3[_19746]
                            mem[_19747 + 128] = stor4[_19746]
                            mem[_19747 + 160] = stor5[_19746]
                            mem[_19747 + 192] = stor6[_19746]
                            mem[_19747 + 224] = bool(uint8(stor7[_19746].field_0))
                            mem[_19747 + 256] = bool(uint8(stor7[_19746].field_8))
                            if stor3[_19746] > !compoundDelay:
                                revert with 0, 17
                            if block.timestamp >= stor3[_19746] + compoundDelay:
                                _19823 = mem[64]
                                mem[64] = mem[64] + 288
                                mem[_19823] = stor[_19746]
                                if bool(stor1[_19746].field_0):
                                    if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    _19856 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor1[_19746].field_0) * 0.5) + 32
                                    mem[_19856] = uint255(stor1[_19746].field_0) * 0.5
                                    if bool(stor1[_19746].field_0):
                                        if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19746].field_0):
                                            mem[_19823 + 32] = _19856
                                            mem[_19823 + 64] = stor2[_19746]
                                            mem[_19823 + 96] = stor3[_19746]
                                            mem[_19823 + 128] = stor4[_19746]
                                            mem[_19823 + 160] = stor5[_19746]
                                            mem[_19823 + 192] = stor6[_19746]
                                            mem[_19823 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19823 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26124 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26124] = tierLevel.length
                                                        mem[_26124 + 32] = stor5[_19746]
                                                        mem[_26124 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21347 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21347] = stor4[_19746]
                                                    mem[_21347 + 32] = -stor5[_19746]
                                                    mem[_21347 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23308 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23308] = tierLevel.length
                                                        mem[_23308 + 32] = stor5[_19746]
                                                        mem[_23308 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                                mem[_19856 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_19823 + 32] = _19856
                                                mem[_19823 + 64] = stor2[_19746]
                                                mem[_19823 + 96] = stor3[_19746]
                                                mem[_19823 + 128] = stor4[_19746]
                                                mem[_19823 + 160] = stor5[_19746]
                                                mem[_19823 + 192] = stor6[_19746]
                                                mem[_19823 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19823 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _27430 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_27430] = tierLevel.length
                                                            mem[_27430 + 32] = stor5[_19746]
                                                            mem[_27430 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22129 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22129] = stor4[_19746]
                                                        mem[_22129 + 32] = -stor5[_19746]
                                                        mem[_22129 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _24674 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_24674] = tierLevel.length
                                                            mem[_24674 + 32] = stor5[_19746]
                                                            mem[_24674 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_19856 + 32] = stor[sha3(_19746 + 1)]
                                                s = _19856 + 32
                                                t = sha3(_19746 + 1)
                                                while _19856 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19823 + 32] = _19856
                                                mem[_19823 + 64] = stor2[_19746]
                                                mem[_19823 + 96] = stor3[_19746]
                                                mem[_19823 + 128] = stor4[_19746]
                                                mem[_19823 + 160] = stor5[_19746]
                                                mem[_19823 + 192] = stor6[_19746]
                                                mem[_19823 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19823 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31734 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31734] = tierLevel.length
                                                            mem[_31734 + 32] = stor5[_19746]
                                                            mem[_31734 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30454 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30454] = stor4[_19746]
                                                        mem[_30454 + 32] = -stor5[_19746]
                                                        mem[_30454 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31094 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31094] = tierLevel.length
                                                            mem[_31094 + 32] = stor5[_19746]
                                                            mem[_31094 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19746].field_1 % 128:
                                            mem[_19823 + 32] = _19856
                                            mem[_19823 + 64] = stor2[_19746]
                                            mem[_19823 + 96] = stor3[_19746]
                                            mem[_19823 + 128] = stor4[_19746]
                                            mem[_19823 + 160] = stor5[_19746]
                                            mem[_19823 + 192] = stor6[_19746]
                                            mem[_19823 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19823 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26791 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26791] = tierLevel.length
                                                        mem[_26791 + 32] = stor5[_19746]
                                                        mem[_26791 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21675 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21675] = stor4[_19746]
                                                    mem[_21675 + 32] = -stor5[_19746]
                                                    mem[_21675 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23965 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23965] = tierLevel.length
                                                        mem[_23965 + 32] = stor5[_19746]
                                                        mem[_23965 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19746].field_1 % 128:
                                                mem[_19856 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_19823 + 32] = _19856
                                                mem[_19823 + 64] = stor2[_19746]
                                                mem[_19823 + 96] = stor3[_19746]
                                                mem[_19823 + 128] = stor4[_19746]
                                                mem[_19823 + 160] = stor5[_19746]
                                                mem[_19823 + 192] = stor6[_19746]
                                                mem[_19823 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19823 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _28027 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_28027] = tierLevel.length
                                                            mem[_28027 + 32] = stor5[_19746]
                                                            mem[_28027 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22696 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22696] = stor4[_19746]
                                                        mem[_22696 + 32] = -stor5[_19746]
                                                        mem[_22696 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _25420 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_25420] = tierLevel.length
                                                            mem[_25420 + 32] = stor5[_19746]
                                                            mem[_25420 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_19856 + 32] = stor[sha3(_19746 + 1)]
                                                s = _19856 + 32
                                                t = sha3(_19746 + 1)
                                                while _19856 + stor1[_19746].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19823 + 32] = _19856
                                                mem[_19823 + 64] = stor2[_19746]
                                                mem[_19823 + 96] = stor3[_19746]
                                                mem[_19823 + 128] = stor4[_19746]
                                                mem[_19823 + 160] = stor5[_19746]
                                                mem[_19823 + 192] = stor6[_19746]
                                                mem[_19823 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19823 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31741 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31741] = tierLevel.length
                                                            mem[_31741 + 32] = stor5[_19746]
                                                            mem[_31741 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30461 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30461] = stor4[_19746]
                                                        mem[_30461 + 32] = -stor5[_19746]
                                                        mem[_30461 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31101 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31101] = tierLevel.length
                                                            mem[_31101 + 32] = stor5[_19746]
                                                            mem[_31101 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                        revert with 0, 34
                                    _19864 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor1[_19746].field_1 % 128) + 32
                                    mem[_19864] = stor1[_19746].field_1 % 128
                                    if bool(stor1[_19746].field_0):
                                        if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19746].field_0):
                                            mem[_19823 + 32] = _19864
                                            mem[_19823 + 64] = stor2[_19746]
                                            mem[_19823 + 96] = stor3[_19746]
                                            mem[_19823 + 128] = stor4[_19746]
                                            mem[_19823 + 160] = stor5[_19746]
                                            mem[_19823 + 192] = stor6[_19746]
                                            mem[_19823 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19823 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26806 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26806] = tierLevel.length
                                                        mem[_26806 + 32] = stor5[_19746]
                                                        mem[_26806 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21683 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21683] = stor4[_19746]
                                                    mem[_21683 + 32] = -stor5[_19746]
                                                    mem[_21683 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23980 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23980] = tierLevel.length
                                                        mem[_23980 + 32] = stor5[_19746]
                                                        mem[_23980 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                                mem[_19864 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_19823 + 32] = _19864
                                                mem[_19823 + 64] = stor2[_19746]
                                                mem[_19823 + 96] = stor3[_19746]
                                                mem[_19823 + 128] = stor4[_19746]
                                                mem[_19823 + 160] = stor5[_19746]
                                                mem[_19823 + 192] = stor6[_19746]
                                                mem[_19823 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19823 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _28035 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_28035] = tierLevel.length
                                                            mem[_28035 + 32] = stor5[_19746]
                                                            mem[_28035 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22705 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22705] = stor4[_19746]
                                                        mem[_22705 + 32] = -stor5[_19746]
                                                        mem[_22705 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _25429 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_25429] = tierLevel.length
                                                            mem[_25429 + 32] = stor5[_19746]
                                                            mem[_25429 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_19864 + 32] = stor[sha3(_19746 + 1)]
                                                s = _19864 + 32
                                                t = sha3(_19746 + 1)
                                                while _19864 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19823 + 32] = _19864
                                                mem[_19823 + 64] = stor2[_19746]
                                                mem[_19823 + 96] = stor3[_19746]
                                                mem[_19823 + 128] = stor4[_19746]
                                                mem[_19823 + 160] = stor5[_19746]
                                                mem[_19823 + 192] = stor6[_19746]
                                                mem[_19823 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19823 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31748 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31748] = tierLevel.length
                                                            mem[_31748 + 32] = stor5[_19746]
                                                            mem[_31748 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30468 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30468] = stor4[_19746]
                                                        mem[_30468 + 32] = -stor5[_19746]
                                                        mem[_30468 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31108 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31108] = tierLevel.length
                                                            mem[_31108 + 32] = stor5[_19746]
                                                            mem[_31108 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19746].field_1 % 128:
                                            mem[_19823 + 32] = _19864
                                            mem[_19823 + 64] = stor2[_19746]
                                            mem[_19823 + 96] = stor3[_19746]
                                            mem[_19823 + 128] = stor4[_19746]
                                            mem[_19823 + 160] = stor5[_19746]
                                            mem[_19823 + 192] = stor6[_19746]
                                            mem[_19823 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19823 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _27445 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_27445] = tierLevel.length
                                                        mem[_27445 + 32] = stor5[_19746]
                                                        mem[_27445 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22140 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22140] = stor4[_19746]
                                                    mem[_22140 + 32] = -stor5[_19746]
                                                    mem[_22140 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24689 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24689] = tierLevel.length
                                                        mem[_24689 + 32] = stor5[_19746]
                                                        mem[_24689 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19746].field_1 % 128:
                                                mem[_19864 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_19823 + 32] = _19864
                                                mem[_19823 + 64] = stor2[_19746]
                                                mem[_19823 + 96] = stor3[_19746]
                                                mem[_19823 + 128] = stor4[_19746]
                                                mem[_19823 + 160] = stor5[_19746]
                                                mem[_19823 + 192] = stor6[_19746]
                                                mem[_19823 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19823 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _28521 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_28521] = tierLevel.length
                                                            mem[_28521 + 32] = stor5[_19746]
                                                            mem[_28521 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23329 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23329] = stor4[_19746]
                                                        mem[_23329 + 32] = -stor5[_19746]
                                                        mem[_23329 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _26145 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_26145] = tierLevel.length
                                                            mem[_26145 + 32] = stor5[_19746]
                                                            mem[_26145 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_19864 + 32] = stor[sha3(_19746 + 1)]
                                                s = _19864 + 32
                                                t = sha3(_19746 + 1)
                                                while _19864 + stor1[_19746].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19823 + 32] = _19864
                                                mem[_19823 + 64] = stor2[_19746]
                                                mem[_19823 + 96] = stor3[_19746]
                                                mem[_19823 + 128] = stor4[_19746]
                                                mem[_19823 + 160] = stor5[_19746]
                                                mem[_19823 + 192] = stor6[_19746]
                                                mem[_19823 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19823 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31755 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31755] = tierLevel.length
                                                            mem[_31755 + 32] = stor5[_19746]
                                                            mem[_31755 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30475 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30475] = stor4[_19746]
                                                        mem[_30475 + 32] = -stor5[_19746]
                                                        mem[_30475 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31115 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31115] = tierLevel.length
                                                            mem[_31115 + 32] = stor5[_19746]
                                                            mem[_31115 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                stor4[_19746] = tierLevel.length
                                stor3[_19746] = block.timestamp
                                if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                    revert with 0, 17
                        else:
                            mem[0] = _19746 + 1
                            mem[_19777 + 32] = stor[sha3(_19746 + 1)]
                            s = _19777 + 32
                            t = sha3(_19746 + 1)
                            while _19777 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_19747 + 32] = _19777
                            mem[_19747 + 64] = stor2[_19746]
                            mem[_19747 + 96] = stor3[_19746]
                            mem[_19747 + 128] = stor4[_19746]
                            mem[_19747 + 160] = stor5[_19746]
                            mem[_19747 + 192] = stor6[_19746]
                            mem[_19747 + 224] = bool(uint8(stor7[_19746].field_0))
                            mem[_19747 + 256] = bool(uint8(stor7[_19746].field_8))
                            if stor3[_19746] > !compoundDelay:
                                revert with 0, 17
                            if block.timestamp >= stor3[_19746] + compoundDelay:
                                _29688 = mem[64]
                                mem[64] = mem[64] + 288
                                mem[_29688] = stor[_19746]
                                if bool(stor1[_19746].field_0):
                                    if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    _29696 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor1[_19746].field_0) * 0.5) + 32
                                    mem[_29696] = uint255(stor1[_19746].field_0) * 0.5
                                    if bool(stor1[_19746].field_0):
                                        if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19746].field_0):
                                            mem[_29688 + 32] = _29696
                                            mem[_29688 + 64] = stor2[_19746]
                                            mem[_29688 + 96] = stor3[_19746]
                                            mem[_29688 + 128] = stor4[_19746]
                                            mem[_29688 + 160] = stor5[_19746]
                                            mem[_29688 + 192] = stor6[_19746]
                                            mem[_29688 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_29688 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33658 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33658] = tierLevel.length
                                                        mem[_33658 + 32] = stor5[_19746]
                                                        mem[_33658 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32024 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32024] = stor4[_19746]
                                                    mem[_32024 + 32] = -stor5[_19746]
                                                    mem[_32024 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32698 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32698] = tierLevel.length
                                                        mem[_32698 + 32] = stor5[_19746]
                                                        mem[_32698 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                                mem[_29696 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_29688 + 32] = _29696
                                                mem[_29688 + 64] = stor2[_19746]
                                                mem[_29688 + 96] = stor3[_19746]
                                                mem[_29688 + 128] = stor4[_19746]
                                                mem[_29688 + 160] = stor5[_19746]
                                                mem[_29688 + 192] = stor6[_19746]
                                                mem[_29688 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29688 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34189 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34189] = tierLevel.length
                                                            mem[_34189 + 32] = stor5[_19746]
                                                            mem[_34189 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32314 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32314] = stor4[_19746]
                                                        mem[_32314 + 32] = -stor5[_19746]
                                                        mem[_32314 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33236 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33236] = tierLevel.length
                                                            mem[_33236 + 32] = stor5[_19746]
                                                            mem[_33236 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_29696 + 32] = stor[sha3(_19746 + 1)]
                                                s = _29696 + 32
                                                t = sha3(_19746 + 1)
                                                while _29696 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29688 + 32] = _29696
                                                mem[_29688 + 64] = stor2[_19746]
                                                mem[_29688 + 96] = stor3[_19746]
                                                mem[_29688 + 128] = stor4[_19746]
                                                mem[_29688 + 160] = stor5[_19746]
                                                mem[_29688 + 192] = stor6[_19746]
                                                mem[_29688 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29688 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35762 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35762] = tierLevel.length
                                                            mem[_35762 + 32] = stor5[_19746]
                                                            mem[_35762 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35122 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35122] = stor4[_19746]
                                                        mem[_35122 + 32] = -stor5[_19746]
                                                        mem[_35122 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35442 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35442] = tierLevel.length
                                                            mem[_35442 + 32] = stor5[_19746]
                                                            mem[_35442 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19746].field_1 % 128:
                                            mem[_29688 + 32] = _29696
                                            mem[_29688 + 64] = stor2[_19746]
                                            mem[_29688 + 96] = stor3[_19746]
                                            mem[_29688 + 128] = stor4[_19746]
                                            mem[_29688 + 160] = stor5[_19746]
                                            mem[_29688 + 192] = stor6[_19746]
                                            mem[_29688 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_29688 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33934 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33934] = tierLevel.length
                                                        mem[_33934 + 32] = stor5[_19746]
                                                        mem[_33934 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32152 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32152] = stor4[_19746]
                                                    mem[_32152 + 32] = -stor5[_19746]
                                                    mem[_32152 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32974 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32974] = tierLevel.length
                                                        mem[_32974 + 32] = stor5[_19746]
                                                        mem[_32974 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19746].field_1 % 128:
                                                mem[_29696 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_29688 + 32] = _29696
                                                mem[_29688 + 64] = stor2[_19746]
                                                mem[_29688 + 96] = stor3[_19746]
                                                mem[_29688 + 128] = stor4[_19746]
                                                mem[_29688 + 160] = stor5[_19746]
                                                mem[_29688 + 192] = stor6[_19746]
                                                mem[_29688 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29688 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34385 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34385] = tierLevel.length
                                                            mem[_34385 + 32] = stor5[_19746]
                                                            mem[_34385 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32490 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32490] = stor4[_19746]
                                                        mem[_32490 + 32] = -stor5[_19746]
                                                        mem[_32490 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33446 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33446] = tierLevel.length
                                                            mem[_33446 + 32] = stor5[_19746]
                                                            mem[_33446 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_29696 + 32] = stor[sha3(_19746 + 1)]
                                                s = _29696 + 32
                                                t = sha3(_19746 + 1)
                                                while _29696 + stor1[_19746].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29688 + 32] = _29696
                                                mem[_29688 + 64] = stor2[_19746]
                                                mem[_29688 + 96] = stor3[_19746]
                                                mem[_29688 + 128] = stor4[_19746]
                                                mem[_29688 + 160] = stor5[_19746]
                                                mem[_29688 + 192] = stor6[_19746]
                                                mem[_29688 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29688 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35769 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35769] = tierLevel.length
                                                            mem[_35769 + 32] = stor5[_19746]
                                                            mem[_35769 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35129 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35129] = stor4[_19746]
                                                        mem[_35129 + 32] = -stor5[_19746]
                                                        mem[_35129 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35449 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35449] = tierLevel.length
                                                            mem[_35449 + 32] = stor5[_19746]
                                                            mem[_35449 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                        revert with 0, 34
                                    _29704 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor1[_19746].field_1 % 128) + 32
                                    mem[_29704] = stor1[_19746].field_1 % 128
                                    if bool(stor1[_19746].field_0):
                                        if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19746].field_0):
                                            mem[_29688 + 32] = _29704
                                            mem[_29688 + 64] = stor2[_19746]
                                            mem[_29688 + 96] = stor3[_19746]
                                            mem[_29688 + 128] = stor4[_19746]
                                            mem[_29688 + 160] = stor5[_19746]
                                            mem[_29688 + 192] = stor6[_19746]
                                            mem[_29688 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_29688 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33949 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33949] = tierLevel.length
                                                        mem[_33949 + 32] = stor5[_19746]
                                                        mem[_33949 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32160 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32160] = stor4[_19746]
                                                    mem[_32160 + 32] = -stor5[_19746]
                                                    mem[_32160 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32989 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32989] = tierLevel.length
                                                        mem[_32989 + 32] = stor5[_19746]
                                                        mem[_32989 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                                mem[_29704 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_29688 + 32] = _29704
                                                mem[_29688 + 64] = stor2[_19746]
                                                mem[_29688 + 96] = stor3[_19746]
                                                mem[_29688 + 128] = stor4[_19746]
                                                mem[_29688 + 160] = stor5[_19746]
                                                mem[_29688 + 192] = stor6[_19746]
                                                mem[_29688 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29688 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34393 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34393] = tierLevel.length
                                                            mem[_34393 + 32] = stor5[_19746]
                                                            mem[_34393 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32499 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32499] = stor4[_19746]
                                                        mem[_32499 + 32] = -stor5[_19746]
                                                        mem[_32499 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33455 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33455] = tierLevel.length
                                                            mem[_33455 + 32] = stor5[_19746]
                                                            mem[_33455 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_29704 + 32] = stor[sha3(_19746 + 1)]
                                                s = _29704 + 32
                                                t = sha3(_19746 + 1)
                                                while _29704 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29688 + 32] = _29704
                                                mem[_29688 + 64] = stor2[_19746]
                                                mem[_29688 + 96] = stor3[_19746]
                                                mem[_29688 + 128] = stor4[_19746]
                                                mem[_29688 + 160] = stor5[_19746]
                                                mem[_29688 + 192] = stor6[_19746]
                                                mem[_29688 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29688 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35776 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35776] = tierLevel.length
                                                            mem[_35776 + 32] = stor5[_19746]
                                                            mem[_35776 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35136 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35136] = stor4[_19746]
                                                        mem[_35136 + 32] = -stor5[_19746]
                                                        mem[_35136 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35456 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35456] = tierLevel.length
                                                            mem[_35456 + 32] = stor5[_19746]
                                                            mem[_35456 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19746].field_1 % 128:
                                            mem[_29688 + 32] = _29704
                                            mem[_29688 + 64] = stor2[_19746]
                                            mem[_29688 + 96] = stor3[_19746]
                                            mem[_29688 + 128] = stor4[_19746]
                                            mem[_29688 + 160] = stor5[_19746]
                                            mem[_29688 + 192] = stor6[_19746]
                                            mem[_29688 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_29688 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _34204 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_34204] = tierLevel.length
                                                        mem[_34204 + 32] = stor5[_19746]
                                                        mem[_34204 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32325 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32325] = stor4[_19746]
                                                    mem[_32325 + 32] = -stor5[_19746]
                                                    mem[_32325 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33251 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33251] = tierLevel.length
                                                        mem[_33251 + 32] = stor5[_19746]
                                                        mem[_33251 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19746].field_1 % 128:
                                                mem[_29704 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_29688 + 32] = _29704
                                                mem[_29688 + 64] = stor2[_19746]
                                                mem[_29688 + 96] = stor3[_19746]
                                                mem[_29688 + 128] = stor4[_19746]
                                                mem[_29688 + 160] = stor5[_19746]
                                                mem[_29688 + 192] = stor6[_19746]
                                                mem[_29688 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29688 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34552 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34552] = tierLevel.length
                                                            mem[_34552 + 32] = stor5[_19746]
                                                            mem[_34552 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32719 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32719] = stor4[_19746]
                                                        mem[_32719 + 32] = -stor5[_19746]
                                                        mem[_32719 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33679 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33679] = tierLevel.length
                                                            mem[_33679 + 32] = stor5[_19746]
                                                            mem[_33679 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_29704 + 32] = stor[sha3(_19746 + 1)]
                                                s = _29704 + 32
                                                t = sha3(_19746 + 1)
                                                while _29704 + stor1[_19746].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29688 + 32] = _29704
                                                mem[_29688 + 64] = stor2[_19746]
                                                mem[_29688 + 96] = stor3[_19746]
                                                mem[_29688 + 128] = stor4[_19746]
                                                mem[_29688 + 160] = stor5[_19746]
                                                mem[_29688 + 192] = stor6[_19746]
                                                mem[_29688 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29688 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35783 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35783] = tierLevel.length
                                                            mem[_35783 + 32] = stor5[_19746]
                                                            mem[_35783 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35143 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35143] = stor4[_19746]
                                                        mem[_35143 + 32] = -stor5[_19746]
                                                        mem[_35143 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35463 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35463] = tierLevel.length
                                                            mem[_35463 + 32] = stor5[_19746]
                                                            mem[_35463 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                stor4[_19746] = tierLevel.length
                                stor3[_19746] = block.timestamp
                                if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                    revert with 0, 17
                else:
                    if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                        revert with 0, 34
                    if not stor1[_19746].field_1 % 128:
                        mem[_19747 + 32] = _19777
                        mem[_19747 + 64] = stor2[_19746]
                        mem[_19747 + 96] = stor3[_19746]
                        mem[_19747 + 128] = stor4[_19746]
                        mem[_19747 + 160] = stor5[_19746]
                        mem[_19747 + 192] = stor6[_19746]
                        mem[_19747 + 224] = bool(uint8(stor7[_19746].field_0))
                        mem[_19747 + 256] = bool(uint8(stor7[_19746].field_8))
                        if stor3[_19746] > !compoundDelay:
                            revert with 0, 17
                        if block.timestamp >= stor3[_19746] + compoundDelay:
                            _19819 = mem[64]
                            mem[64] = mem[64] + 288
                            mem[_19819] = stor[_19746]
                            if bool(stor1[_19746].field_0):
                                if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                    revert with 0, 34
                                _19848 = mem[64]
                                mem[64] = mem[64] + ceil32(uint255(stor1[_19746].field_0) * 0.5) + 32
                                mem[_19848] = uint255(stor1[_19746].field_0) * 0.5
                                if bool(stor1[_19746].field_0):
                                    if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    if not Mask(256, -1, stor1[_19746].field_0):
                                        mem[_19819 + 32] = _19848
                                        mem[_19819 + 64] = stor2[_19746]
                                        mem[_19819 + 96] = stor3[_19746]
                                        mem[_19819 + 128] = stor4[_19746]
                                        mem[_19819 + 160] = stor5[_19746]
                                        mem[_19819 + 192] = stor6[_19746]
                                        mem[_19819 + 224] = bool(uint8(stor7[_19746].field_0))
                                        mem[_19819 + 256] = bool(uint8(stor7[_19746].field_8))
                                        if block.timestamp < stor3[_19746]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                            revert with 0, 17
                                        if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                            revert with 0, 17
                                        stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                        if tierLevel.length != stor4[_19746]:
                                            if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19746]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19746]].field_512):
                                                if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _25440 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_25440] = tierLevel.length
                                                    mem[_25440 + 32] = stor5[_19746]
                                                    mem[_25440 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19746] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21118 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21118] = stor4[_19746]
                                                mem[_21118 + 32] = -stor5[_19746]
                                                mem[_21118 + 64] = 1
                                                stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                uint8(stor553[stor4[_19746]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22714 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22714] = tierLevel.length
                                                    mem[_22714 + 32] = stor5[_19746]
                                                    mem[_22714 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                            mem[_19848 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                            mem[_19819 + 32] = _19848
                                            mem[_19819 + 64] = stor2[_19746]
                                            mem[_19819 + 96] = stor3[_19746]
                                            mem[_19819 + 128] = stor4[_19746]
                                            mem[_19819 + 160] = stor5[_19746]
                                            mem[_19819 + 192] = stor6[_19746]
                                            mem[_19819 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19819 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26824 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26824] = tierLevel.length
                                                        mem[_26824 + 32] = stor5[_19746]
                                                        mem[_26824 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21693 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21693] = stor4[_19746]
                                                    mem[_21693 + 32] = -stor5[_19746]
                                                    mem[_21693 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23999 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23999] = tierLevel.length
                                                        mem[_23999 + 32] = stor5[_19746]
                                                        mem[_23999 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19746 + 1
                                            mem[_19848 + 32] = stor[sha3(_19746 + 1)]
                                            s = _19848 + 32
                                            t = sha3(_19746 + 1)
                                            while _19848 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19819 + 32] = _19848
                                            mem[_19819 + 64] = stor2[_19746]
                                            mem[_19819 + 96] = stor3[_19746]
                                            mem[_19819 + 128] = stor4[_19746]
                                            mem[_19819 + 160] = stor5[_19746]
                                            mem[_19819 + 192] = stor6[_19746]
                                            mem[_19819 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19819 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31762 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31762] = tierLevel.length
                                                        mem[_31762 + 32] = stor5[_19746]
                                                        mem[_31762 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30482 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30482] = stor4[_19746]
                                                    mem[_30482 + 32] = -stor5[_19746]
                                                    mem[_30482 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31122 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31122] = tierLevel.length
                                                        mem[_31122 + 32] = stor5[_19746]
                                                        mem[_31122 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                        revert with 0, 34
                                    if not stor1[_19746].field_1 % 128:
                                        mem[_19819 + 32] = _19848
                                        mem[_19819 + 64] = stor2[_19746]
                                        mem[_19819 + 96] = stor3[_19746]
                                        mem[_19819 + 128] = stor4[_19746]
                                        mem[_19819 + 160] = stor5[_19746]
                                        mem[_19819 + 192] = stor6[_19746]
                                        mem[_19819 + 224] = bool(uint8(stor7[_19746].field_0))
                                        mem[_19819 + 256] = bool(uint8(stor7[_19746].field_8))
                                        if block.timestamp < stor3[_19746]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                            revert with 0, 17
                                        if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                            revert with 0, 17
                                        stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                        if tierLevel.length != stor4[_19746]:
                                            if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19746]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19746]].field_512):
                                                if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _26156 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_26156] = tierLevel.length
                                                    mem[_26156 + 32] = stor5[_19746]
                                                    mem[_26156 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19746] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21358 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21358] = stor4[_19746]
                                                mem[_21358 + 32] = -stor5[_19746]
                                                mem[_21358 + 64] = 1
                                                stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                uint8(stor553[stor4[_19746]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _23340 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_23340] = tierLevel.length
                                                    mem[_23340 + 32] = stor5[_19746]
                                                    mem[_23340 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= stor1[_19746].field_1 % 128:
                                            mem[_19848 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                            mem[_19819 + 32] = _19848
                                            mem[_19819 + 64] = stor2[_19746]
                                            mem[_19819 + 96] = stor3[_19746]
                                            mem[_19819 + 128] = stor4[_19746]
                                            mem[_19819 + 160] = stor5[_19746]
                                            mem[_19819 + 192] = stor6[_19746]
                                            mem[_19819 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19819 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _27463 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_27463] = tierLevel.length
                                                        mem[_27463 + 32] = stor5[_19746]
                                                        mem[_27463 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22152 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22152] = stor4[_19746]
                                                    mem[_22152 + 32] = -stor5[_19746]
                                                    mem[_22152 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24708 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24708] = tierLevel.length
                                                        mem[_24708 + 32] = stor5[_19746]
                                                        mem[_24708 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19746 + 1
                                            mem[_19848 + 32] = stor[sha3(_19746 + 1)]
                                            s = _19848 + 32
                                            t = sha3(_19746 + 1)
                                            while _19848 + stor1[_19746].field_1 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19819 + 32] = _19848
                                            mem[_19819 + 64] = stor2[_19746]
                                            mem[_19819 + 96] = stor3[_19746]
                                            mem[_19819 + 128] = stor4[_19746]
                                            mem[_19819 + 160] = stor5[_19746]
                                            mem[_19819 + 192] = stor6[_19746]
                                            mem[_19819 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19819 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31769 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31769] = tierLevel.length
                                                        mem[_31769 + 32] = stor5[_19746]
                                                        mem[_31769 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30489 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30489] = stor4[_19746]
                                                    mem[_30489 + 32] = -stor5[_19746]
                                                    mem[_30489 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31129 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31129] = tierLevel.length
                                                        mem[_31129 + 32] = stor5[_19746]
                                                        mem[_31129 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                            else:
                                if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                    revert with 0, 34
                                _19857 = mem[64]
                                mem[64] = mem[64] + ceil32(stor1[_19746].field_1 % 128) + 32
                                mem[_19857] = stor1[_19746].field_1 % 128
                                if bool(stor1[_19746].field_0):
                                    if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    if not Mask(256, -1, stor1[_19746].field_0):
                                        mem[_19819 + 32] = _19857
                                        mem[_19819 + 64] = stor2[_19746]
                                        mem[_19819 + 96] = stor3[_19746]
                                        mem[_19819 + 128] = stor4[_19746]
                                        mem[_19819 + 160] = stor5[_19746]
                                        mem[_19819 + 192] = stor6[_19746]
                                        mem[_19819 + 224] = bool(uint8(stor7[_19746].field_0))
                                        mem[_19819 + 256] = bool(uint8(stor7[_19746].field_8))
                                        if block.timestamp < stor3[_19746]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                            revert with 0, 17
                                        if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                            revert with 0, 17
                                        stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                        if tierLevel.length != stor4[_19746]:
                                            if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19746]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19746]].field_512):
                                                if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _26171 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_26171] = tierLevel.length
                                                    mem[_26171 + 32] = stor5[_19746]
                                                    mem[_26171 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19746] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21366 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21366] = stor4[_19746]
                                                mem[_21366 + 32] = -stor5[_19746]
                                                mem[_21366 + 64] = 1
                                                stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                uint8(stor553[stor4[_19746]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _23355 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_23355] = tierLevel.length
                                                    mem[_23355 + 32] = stor5[_19746]
                                                    mem[_23355 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                            mem[_19857 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                            mem[_19819 + 32] = _19857
                                            mem[_19819 + 64] = stor2[_19746]
                                            mem[_19819 + 96] = stor3[_19746]
                                            mem[_19819 + 128] = stor4[_19746]
                                            mem[_19819 + 160] = stor5[_19746]
                                            mem[_19819 + 192] = stor6[_19746]
                                            mem[_19819 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19819 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _27471 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_27471] = tierLevel.length
                                                        mem[_27471 + 32] = stor5[_19746]
                                                        mem[_27471 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22161 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22161] = stor4[_19746]
                                                    mem[_22161 + 32] = -stor5[_19746]
                                                    mem[_22161 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24717 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24717] = tierLevel.length
                                                        mem[_24717 + 32] = stor5[_19746]
                                                        mem[_24717 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19746 + 1
                                            mem[_19857 + 32] = stor[sha3(_19746 + 1)]
                                            s = _19857 + 32
                                            t = sha3(_19746 + 1)
                                            while _19857 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19819 + 32] = _19857
                                            mem[_19819 + 64] = stor2[_19746]
                                            mem[_19819 + 96] = stor3[_19746]
                                            mem[_19819 + 128] = stor4[_19746]
                                            mem[_19819 + 160] = stor5[_19746]
                                            mem[_19819 + 192] = stor6[_19746]
                                            mem[_19819 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19819 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31776 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31776] = tierLevel.length
                                                        mem[_31776 + 32] = stor5[_19746]
                                                        mem[_31776 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30496 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30496] = stor4[_19746]
                                                    mem[_30496 + 32] = -stor5[_19746]
                                                    mem[_30496 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31136 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31136] = tierLevel.length
                                                        mem[_31136 + 32] = stor5[_19746]
                                                        mem[_31136 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                        revert with 0, 34
                                    if not stor1[_19746].field_1 % 128:
                                        mem[_19819 + 32] = _19857
                                        mem[_19819 + 64] = stor2[_19746]
                                        mem[_19819 + 96] = stor3[_19746]
                                        mem[_19819 + 128] = stor4[_19746]
                                        mem[_19819 + 160] = stor5[_19746]
                                        mem[_19819 + 192] = stor6[_19746]
                                        mem[_19819 + 224] = bool(uint8(stor7[_19746].field_0))
                                        mem[_19819 + 256] = bool(uint8(stor7[_19746].field_8))
                                        if block.timestamp < stor3[_19746]:
                                            revert with 0, 17
                                        if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                            revert with 0, 17
                                        if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                            revert with 0, 17
                                        if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                            revert with 0, 17
                                        stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                        if tierLevel.length != stor4[_19746]:
                                            if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 17
                                            mem[0] = stor4[_19746]
                                            mem[32] = 553
                                            if uint8(stor553[stor4[_19746]].field_512):
                                                if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                    revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                    revert with 0, 17
                                                if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _26839 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_26839] = tierLevel.length
                                                    mem[_26839 + 32] = stor5[_19746]
                                                    mem[_26839 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                if -stor5[_19746] <= 0:
                                                    revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                _21704 = mem[64]
                                                mem[64] = mem[64] + 96
                                                mem[_21704] = stor4[_19746]
                                                mem[_21704 + 32] = -stor5[_19746]
                                                mem[_21704 + 64] = 1
                                                stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                uint8(stor553[stor4[_19746]].field_512) = 1
                                                stor554.length++
                                                storCCA5[stor554.length] = stor4[_19746]
                                                mem[0] = tierLevel.length
                                                mem[32] = 553
                                                if uint8(stor553[stor559.length].field_512):
                                                    if tierLevel.length != stor553[stor559.length].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor559.length].field_256 += stor5[_19746]
                                                else:
                                                    if stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _24014 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_24014] = tierLevel.length
                                                    mem[_24014 + 32] = stor5[_19746]
                                                    mem[_24014 + 64] = 1
                                                    mem[32] = 553
                                                    stor553[stor559.length].field_0 = tierLevel.length
                                                    stor553[stor559.length].field_256 = stor5[_19746]
                                                    uint8(stor553[stor559.length].field_512) = 1
                                                    stor554.length++
                                                    mem[0] = 554
                                                    storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if 31 >= stor1[_19746].field_1 % 128:
                                            mem[_19857 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                            mem[_19819 + 32] = _19857
                                            mem[_19819 + 64] = stor2[_19746]
                                            mem[_19819 + 96] = stor3[_19746]
                                            mem[_19819 + 128] = stor4[_19746]
                                            mem[_19819 + 160] = stor5[_19746]
                                            mem[_19819 + 192] = stor6[_19746]
                                            mem[_19819 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19819 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _28058 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_28058] = tierLevel.length
                                                        mem[_28058 + 32] = stor5[_19746]
                                                        mem[_28058 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22735 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22735] = stor4[_19746]
                                                    mem[_22735 + 32] = -stor5[_19746]
                                                    mem[_22735 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25461 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25461] = tierLevel.length
                                                        mem[_25461 + 32] = stor5[_19746]
                                                        mem[_25461 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            mem[0] = _19746 + 1
                                            mem[_19857 + 32] = stor[sha3(_19746 + 1)]
                                            s = _19857 + 32
                                            t = sha3(_19746 + 1)
                                            while _19857 + stor1[_19746].field_1 % 128 > s:
                                                mem[s + 32] = stor1[t].field_0
                                                s = s + 32
                                                t = t + 1
                                                continue 
                                            mem[_19819 + 32] = _19857
                                            mem[_19819 + 64] = stor2[_19746]
                                            mem[_19819 + 96] = stor3[_19746]
                                            mem[_19819 + 128] = stor4[_19746]
                                            mem[_19819 + 160] = stor5[_19746]
                                            mem[_19819 + 192] = stor6[_19746]
                                            mem[_19819 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19819 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31783 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31783] = tierLevel.length
                                                        mem[_31783 + 32] = stor5[_19746]
                                                        mem[_31783 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _30503 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_30503] = stor4[_19746]
                                                    mem[_30503 + 32] = -stor5[_19746]
                                                    mem[_30503 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _31143 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_31143] = tierLevel.length
                                                        mem[_31143 + 32] = stor5[_19746]
                                                        mem[_31143 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                            stor4[_19746] = tierLevel.length
                            stor3[_19746] = block.timestamp
                            if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                revert with 0, 17
                    else:
                        if 31 >= stor1[_19746].field_1 % 128:
                            mem[_19777 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                            mem[_19747 + 32] = _19777
                            mem[_19747 + 64] = stor2[_19746]
                            mem[_19747 + 96] = stor3[_19746]
                            mem[_19747 + 128] = stor4[_19746]
                            mem[_19747 + 160] = stor5[_19746]
                            mem[_19747 + 192] = stor6[_19746]
                            mem[_19747 + 224] = bool(uint8(stor7[_19746].field_0))
                            mem[_19747 + 256] = bool(uint8(stor7[_19746].field_8))
                            if stor3[_19746] > !compoundDelay:
                                revert with 0, 17
                            if block.timestamp >= stor3[_19746] + compoundDelay:
                                _19829 = mem[64]
                                mem[64] = mem[64] + 288
                                mem[_19829] = stor[_19746]
                                if bool(stor1[_19746].field_0):
                                    if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    _19865 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor1[_19746].field_0) * 0.5) + 32
                                    mem[_19865] = uint255(stor1[_19746].field_0) * 0.5
                                    if bool(stor1[_19746].field_0):
                                        if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19746].field_0):
                                            mem[_19829 + 32] = _19865
                                            mem[_19829 + 64] = stor2[_19746]
                                            mem[_19829 + 96] = stor3[_19746]
                                            mem[_19829 + 128] = stor4[_19746]
                                            mem[_19829 + 160] = stor5[_19746]
                                            mem[_19829 + 192] = stor6[_19746]
                                            mem[_19829 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19829 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _26886 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_26886] = tierLevel.length
                                                        mem[_26886 + 32] = stor5[_19746]
                                                        mem[_26886 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _21713 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_21713] = stor4[_19746]
                                                    mem[_21713 + 32] = -stor5[_19746]
                                                    mem[_21713 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24050 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24050] = tierLevel.length
                                                        mem[_24050 + 32] = stor5[_19746]
                                                        mem[_24050 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                                mem[_19865 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_19829 + 32] = _19865
                                                mem[_19829 + 64] = stor2[_19746]
                                                mem[_19829 + 96] = stor3[_19746]
                                                mem[_19829 + 128] = stor4[_19746]
                                                mem[_19829 + 160] = stor5[_19746]
                                                mem[_19829 + 192] = stor6[_19746]
                                                mem[_19829 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19829 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _28094 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_28094] = tierLevel.length
                                                            mem[_28094 + 32] = stor5[_19746]
                                                            mem[_28094 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _22753 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_22753] = stor4[_19746]
                                                        mem[_22753 + 32] = -stor5[_19746]
                                                        mem[_22753 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _25498 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_25498] = tierLevel.length
                                                            mem[_25498 + 32] = stor5[_19746]
                                                            mem[_25498 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_19865 + 32] = stor[sha3(_19746 + 1)]
                                                s = _19865 + 32
                                                t = sha3(_19746 + 1)
                                                while _19865 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19829 + 32] = _19865
                                                mem[_19829 + 64] = stor2[_19746]
                                                mem[_19829 + 96] = stor3[_19746]
                                                mem[_19829 + 128] = stor4[_19746]
                                                mem[_19829 + 160] = stor5[_19746]
                                                mem[_19829 + 192] = stor6[_19746]
                                                mem[_19829 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19829 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31790 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31790] = tierLevel.length
                                                            mem[_31790 + 32] = stor5[_19746]
                                                            mem[_31790 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30510 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30510] = stor4[_19746]
                                                        mem[_30510 + 32] = -stor5[_19746]
                                                        mem[_30510 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31150 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31150] = tierLevel.length
                                                            mem[_31150 + 32] = stor5[_19746]
                                                            mem[_31150 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19746].field_1 % 128:
                                            mem[_19829 + 32] = _19865
                                            mem[_19829 + 64] = stor2[_19746]
                                            mem[_19829 + 96] = stor3[_19746]
                                            mem[_19829 + 128] = stor4[_19746]
                                            mem[_19829 + 160] = stor5[_19746]
                                            mem[_19829 + 192] = stor6[_19746]
                                            mem[_19829 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19829 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _27510 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_27510] = tierLevel.length
                                                        mem[_27510 + 32] = stor5[_19746]
                                                        mem[_27510 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22174 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22174] = stor4[_19746]
                                                    mem[_22174 + 32] = -stor5[_19746]
                                                    mem[_22174 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24754 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24754] = tierLevel.length
                                                        mem[_24754 + 32] = stor5[_19746]
                                                        mem[_24754 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19746].field_1 % 128:
                                                mem[_19865 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_19829 + 32] = _19865
                                                mem[_19829 + 64] = stor2[_19746]
                                                mem[_19829 + 96] = stor3[_19746]
                                                mem[_19829 + 128] = stor4[_19746]
                                                mem[_19829 + 160] = stor5[_19746]
                                                mem[_19829 + 192] = stor6[_19746]
                                                mem[_19829 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19829 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _28585 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_28585] = tierLevel.length
                                                            mem[_28585 + 32] = stor5[_19746]
                                                            mem[_28585 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23394 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23394] = stor4[_19746]
                                                        mem[_23394 + 32] = -stor5[_19746]
                                                        mem[_23394 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _26228 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_26228] = tierLevel.length
                                                            mem[_26228 + 32] = stor5[_19746]
                                                            mem[_26228 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_19865 + 32] = stor[sha3(_19746 + 1)]
                                                s = _19865 + 32
                                                t = sha3(_19746 + 1)
                                                while _19865 + stor1[_19746].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19829 + 32] = _19865
                                                mem[_19829 + 64] = stor2[_19746]
                                                mem[_19829 + 96] = stor3[_19746]
                                                mem[_19829 + 128] = stor4[_19746]
                                                mem[_19829 + 160] = stor5[_19746]
                                                mem[_19829 + 192] = stor6[_19746]
                                                mem[_19829 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19829 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31797 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31797] = tierLevel.length
                                                            mem[_31797 + 32] = stor5[_19746]
                                                            mem[_31797 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30517 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30517] = stor4[_19746]
                                                        mem[_30517 + 32] = -stor5[_19746]
                                                        mem[_30517 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31157 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31157] = tierLevel.length
                                                            mem[_31157 + 32] = stor5[_19746]
                                                            mem[_31157 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                        revert with 0, 34
                                    _19873 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor1[_19746].field_1 % 128) + 32
                                    mem[_19873] = stor1[_19746].field_1 % 128
                                    if bool(stor1[_19746].field_0):
                                        if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19746].field_0):
                                            mem[_19829 + 32] = _19873
                                            mem[_19829 + 64] = stor2[_19746]
                                            mem[_19829 + 96] = stor3[_19746]
                                            mem[_19829 + 128] = stor4[_19746]
                                            mem[_19829 + 160] = stor5[_19746]
                                            mem[_19829 + 192] = stor6[_19746]
                                            mem[_19829 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19829 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _27525 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_27525] = tierLevel.length
                                                        mem[_27525 + 32] = stor5[_19746]
                                                        mem[_27525 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22182 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22182] = stor4[_19746]
                                                    mem[_22182 + 32] = -stor5[_19746]
                                                    mem[_22182 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24769 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24769] = tierLevel.length
                                                        mem[_24769 + 32] = stor5[_19746]
                                                        mem[_24769 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                                mem[_19873 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_19829 + 32] = _19873
                                                mem[_19829 + 64] = stor2[_19746]
                                                mem[_19829 + 96] = stor3[_19746]
                                                mem[_19829 + 128] = stor4[_19746]
                                                mem[_19829 + 160] = stor5[_19746]
                                                mem[_19829 + 192] = stor6[_19746]
                                                mem[_19829 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19829 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _28593 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_28593] = tierLevel.length
                                                            mem[_28593 + 32] = stor5[_19746]
                                                            mem[_28593 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _23403 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_23403] = stor4[_19746]
                                                        mem[_23403 + 32] = -stor5[_19746]
                                                        mem[_23403 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _26237 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_26237] = tierLevel.length
                                                            mem[_26237 + 32] = stor5[_19746]
                                                            mem[_26237 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_19873 + 32] = stor[sha3(_19746 + 1)]
                                                s = _19873 + 32
                                                t = sha3(_19746 + 1)
                                                while _19873 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19829 + 32] = _19873
                                                mem[_19829 + 64] = stor2[_19746]
                                                mem[_19829 + 96] = stor3[_19746]
                                                mem[_19829 + 128] = stor4[_19746]
                                                mem[_19829 + 160] = stor5[_19746]
                                                mem[_19829 + 192] = stor6[_19746]
                                                mem[_19829 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19829 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31804 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31804] = tierLevel.length
                                                            mem[_31804 + 32] = stor5[_19746]
                                                            mem[_31804 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30524 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30524] = stor4[_19746]
                                                        mem[_30524 + 32] = -stor5[_19746]
                                                        mem[_30524 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31164 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31164] = tierLevel.length
                                                            mem[_31164 + 32] = stor5[_19746]
                                                            mem[_31164 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19746].field_1 % 128:
                                            mem[_19829 + 32] = _19873
                                            mem[_19829 + 64] = stor2[_19746]
                                            mem[_19829 + 96] = stor3[_19746]
                                            mem[_19829 + 128] = stor4[_19746]
                                            mem[_19829 + 160] = stor5[_19746]
                                            mem[_19829 + 192] = stor6[_19746]
                                            mem[_19829 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_19829 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _28109 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_28109] = tierLevel.length
                                                        mem[_28109 + 32] = stor5[_19746]
                                                        mem[_28109 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _22764 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_22764] = stor4[_19746]
                                                    mem[_22764 + 32] = -stor5[_19746]
                                                    mem[_22764 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _25513 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_25513] = tierLevel.length
                                                        mem[_25513 + 32] = stor5[_19746]
                                                        mem[_25513 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19746].field_1 % 128:
                                                mem[_19873 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_19829 + 32] = _19873
                                                mem[_19829 + 64] = stor2[_19746]
                                                mem[_19829 + 96] = stor3[_19746]
                                                mem[_19829 + 128] = stor4[_19746]
                                                mem[_19829 + 160] = stor5[_19746]
                                                mem[_19829 + 192] = stor6[_19746]
                                                mem[_19829 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19829 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _28947 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_28947] = tierLevel.length
                                                            mem[_28947 + 32] = stor5[_19746]
                                                            mem[_28947 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _24071 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_24071] = stor4[_19746]
                                                        mem[_24071 + 32] = -stor5[_19746]
                                                        mem[_24071 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _26907 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_26907] = tierLevel.length
                                                            mem[_26907 + 32] = stor5[_19746]
                                                            mem[_26907 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_19873 + 32] = stor[sha3(_19746 + 1)]
                                                s = _19873 + 32
                                                t = sha3(_19746 + 1)
                                                while _19873 + stor1[_19746].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_19829 + 32] = _19873
                                                mem[_19829 + 64] = stor2[_19746]
                                                mem[_19829 + 96] = stor3[_19746]
                                                mem[_19829 + 128] = stor4[_19746]
                                                mem[_19829 + 160] = stor5[_19746]
                                                mem[_19829 + 192] = stor6[_19746]
                                                mem[_19829 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_19829 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31811 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31811] = tierLevel.length
                                                            mem[_31811 + 32] = stor5[_19746]
                                                            mem[_31811 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _30531 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_30531] = stor4[_19746]
                                                        mem[_30531 + 32] = -stor5[_19746]
                                                        mem[_30531 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _31171 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_31171] = tierLevel.length
                                                            mem[_31171 + 32] = stor5[_19746]
                                                            mem[_31171 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                stor4[_19746] = tierLevel.length
                                stor3[_19746] = block.timestamp
                                if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                    revert with 0, 17
                        else:
                            mem[0] = _19746 + 1
                            mem[_19777 + 32] = stor[sha3(_19746 + 1)]
                            s = _19777 + 32
                            t = sha3(_19746 + 1)
                            while _19777 + stor1[_19746].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                            mem[_19747 + 32] = _19777
                            mem[_19747 + 64] = stor2[_19746]
                            mem[_19747 + 96] = stor3[_19746]
                            mem[_19747 + 128] = stor4[_19746]
                            mem[_19747 + 160] = stor5[_19746]
                            mem[_19747 + 192] = stor6[_19746]
                            mem[_19747 + 224] = bool(uint8(stor7[_19746].field_0))
                            mem[_19747 + 256] = bool(uint8(stor7[_19746].field_8))
                            if stor3[_19746] > !compoundDelay:
                                revert with 0, 17
                            if block.timestamp >= stor3[_19746] + compoundDelay:
                                _29689 = mem[64]
                                mem[64] = mem[64] + 288
                                mem[_29689] = stor[_19746]
                                if bool(stor1[_19746].field_0):
                                    if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                        revert with 0, 34
                                    _29697 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor1[_19746].field_0) * 0.5) + 32
                                    mem[_29697] = uint255(stor1[_19746].field_0) * 0.5
                                    if bool(stor1[_19746].field_0):
                                        if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19746].field_0):
                                            mem[_29689 + 32] = _29697
                                            mem[_29689 + 64] = stor2[_19746]
                                            mem[_29689 + 96] = stor3[_19746]
                                            mem[_29689 + 128] = stor4[_19746]
                                            mem[_29689 + 160] = stor5[_19746]
                                            mem[_29689 + 192] = stor6[_19746]
                                            mem[_29689 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_29689 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33686 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33686] = tierLevel.length
                                                        mem[_33686 + 32] = stor5[_19746]
                                                        mem[_33686 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32033 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32033] = stor4[_19746]
                                                    mem[_32033 + 32] = -stor5[_19746]
                                                    mem[_32033 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32726 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32726] = tierLevel.length
                                                        mem[_32726 + 32] = stor5[_19746]
                                                        mem[_32726 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                                mem[_29697 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_29689 + 32] = _29697
                                                mem[_29689 + 64] = stor2[_19746]
                                                mem[_29689 + 96] = stor3[_19746]
                                                mem[_29689 + 128] = stor4[_19746]
                                                mem[_29689 + 160] = stor5[_19746]
                                                mem[_29689 + 192] = stor6[_19746]
                                                mem[_29689 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29689 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34220 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34220] = tierLevel.length
                                                            mem[_34220 + 32] = stor5[_19746]
                                                            mem[_34220 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32335 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32335] = stor4[_19746]
                                                        mem[_32335 + 32] = -stor5[_19746]
                                                        mem[_32335 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33268 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33268] = tierLevel.length
                                                            mem[_33268 + 32] = stor5[_19746]
                                                            mem[_33268 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_29697 + 32] = stor[sha3(_19746 + 1)]
                                                s = _29697 + 32
                                                t = sha3(_19746 + 1)
                                                while _29697 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29689 + 32] = _29697
                                                mem[_29689 + 64] = stor2[_19746]
                                                mem[_29689 + 96] = stor3[_19746]
                                                mem[_29689 + 128] = stor4[_19746]
                                                mem[_29689 + 160] = stor5[_19746]
                                                mem[_29689 + 192] = stor6[_19746]
                                                mem[_29689 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29689 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35790 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35790] = tierLevel.length
                                                            mem[_35790 + 32] = stor5[_19746]
                                                            mem[_35790 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35150 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35150] = stor4[_19746]
                                                        mem[_35150 + 32] = -stor5[_19746]
                                                        mem[_35150 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35470 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35470] = tierLevel.length
                                                            mem[_35470 + 32] = stor5[_19746]
                                                            mem[_35470 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19746].field_1 % 128:
                                            mem[_29689 + 32] = _29697
                                            mem[_29689 + 64] = stor2[_19746]
                                            mem[_29689 + 96] = stor3[_19746]
                                            mem[_29689 + 128] = stor4[_19746]
                                            mem[_29689 + 160] = stor5[_19746]
                                            mem[_29689 + 192] = stor6[_19746]
                                            mem[_29689 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_29689 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33970 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33970] = tierLevel.length
                                                        mem[_33970 + 32] = stor5[_19746]
                                                        mem[_33970 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32170 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32170] = stor4[_19746]
                                                    mem[_32170 + 32] = -stor5[_19746]
                                                    mem[_32170 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33010 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33010] = tierLevel.length
                                                        mem[_33010 + 32] = stor5[_19746]
                                                        mem[_33010 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19746].field_1 % 128:
                                                mem[_29697 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_29689 + 32] = _29697
                                                mem[_29689 + 64] = stor2[_19746]
                                                mem[_29689 + 96] = stor3[_19746]
                                                mem[_29689 + 128] = stor4[_19746]
                                                mem[_29689 + 160] = stor5[_19746]
                                                mem[_29689 + 192] = stor6[_19746]
                                                mem[_29689 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29689 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34407 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34407] = tierLevel.length
                                                            mem[_34407 + 32] = stor5[_19746]
                                                            mem[_34407 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32512 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32512] = stor4[_19746]
                                                        mem[_32512 + 32] = -stor5[_19746]
                                                        mem[_32512 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33470 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33470] = tierLevel.length
                                                            mem[_33470 + 32] = stor5[_19746]
                                                            mem[_33470 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_29697 + 32] = stor[sha3(_19746 + 1)]
                                                s = _29697 + 32
                                                t = sha3(_19746 + 1)
                                                while _29697 + stor1[_19746].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29689 + 32] = _29697
                                                mem[_29689 + 64] = stor2[_19746]
                                                mem[_29689 + 96] = stor3[_19746]
                                                mem[_29689 + 128] = stor4[_19746]
                                                mem[_29689 + 160] = stor5[_19746]
                                                mem[_29689 + 192] = stor6[_19746]
                                                mem[_29689 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29689 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35797 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35797] = tierLevel.length
                                                            mem[_35797 + 32] = stor5[_19746]
                                                            mem[_35797 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35157 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35157] = stor4[_19746]
                                                        mem[_35157 + 32] = -stor5[_19746]
                                                        mem[_35157 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35477 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35477] = tierLevel.length
                                                            mem[_35477 + 32] = stor5[_19746]
                                                            mem[_35477 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                else:
                                    if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                        revert with 0, 34
                                    _29705 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor1[_19746].field_1 % 128) + 32
                                    mem[_29705] = stor1[_19746].field_1 % 128
                                    if bool(stor1[_19746].field_0):
                                        if not bool(stor1[_19746].field_0) - (uint255(stor1[_19746].field_0) * 0.5 < 32):
                                            revert with 0, 34
                                        if not Mask(256, -1, stor1[_19746].field_0):
                                            mem[_29689 + 32] = _29705
                                            mem[_29689 + 64] = stor2[_19746]
                                            mem[_29689 + 96] = stor3[_19746]
                                            mem[_29689 + 128] = stor4[_19746]
                                            mem[_29689 + 160] = stor5[_19746]
                                            mem[_29689 + 192] = stor6[_19746]
                                            mem[_29689 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_29689 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33985 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33985] = tierLevel.length
                                                        mem[_33985 + 32] = stor5[_19746]
                                                        mem[_33985 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32178 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32178] = stor4[_19746]
                                                    mem[_32178 + 32] = -stor5[_19746]
                                                    mem[_32178 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33025 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33025] = tierLevel.length
                                                        mem[_33025 + 32] = stor5[_19746]
                                                        mem[_33025 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= uint255(stor1[_19746].field_0) * 0.5:
                                                mem[_29705 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_29689 + 32] = _29705
                                                mem[_29689 + 64] = stor2[_19746]
                                                mem[_29689 + 96] = stor3[_19746]
                                                mem[_29689 + 128] = stor4[_19746]
                                                mem[_29689 + 160] = stor5[_19746]
                                                mem[_29689 + 192] = stor6[_19746]
                                                mem[_29689 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29689 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34415 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34415] = tierLevel.length
                                                            mem[_34415 + 32] = stor5[_19746]
                                                            mem[_34415 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32521 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32521] = stor4[_19746]
                                                        mem[_32521 + 32] = -stor5[_19746]
                                                        mem[_32521 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33479 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33479] = tierLevel.length
                                                            mem[_33479 + 32] = stor5[_19746]
                                                            mem[_33479 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_29705 + 32] = stor[sha3(_19746 + 1)]
                                                s = _29705 + 32
                                                t = sha3(_19746 + 1)
                                                while _29705 + (uint255(stor1[_19746].field_0) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29689 + 32] = _29705
                                                mem[_29689 + 64] = stor2[_19746]
                                                mem[_29689 + 96] = stor3[_19746]
                                                mem[_29689 + 128] = stor4[_19746]
                                                mem[_29689 + 160] = stor5[_19746]
                                                mem[_29689 + 192] = stor6[_19746]
                                                mem[_29689 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29689 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35804 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35804] = tierLevel.length
                                                            mem[_35804 + 32] = stor5[_19746]
                                                            mem[_35804 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35164 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35164] = stor4[_19746]
                                                        mem[_35164 + 32] = -stor5[_19746]
                                                        mem[_35164 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35484 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35484] = tierLevel.length
                                                            mem[_35484 + 32] = stor5[_19746]
                                                            mem[_35484 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                    else:
                                        if not bool(stor1[_19746].field_0) - (stor1[_19746].field_1 % 128 < 32):
                                            revert with 0, 34
                                        if not stor1[_19746].field_1 % 128:
                                            mem[_29689 + 32] = _29705
                                            mem[_29689 + 64] = stor2[_19746]
                                            mem[_29689 + 96] = stor3[_19746]
                                            mem[_29689 + 128] = stor4[_19746]
                                            mem[_29689 + 160] = stor5[_19746]
                                            mem[_29689 + 192] = stor6[_19746]
                                            mem[_29689 + 224] = bool(uint8(stor7[_19746].field_0))
                                            mem[_29689 + 256] = bool(uint8(stor7[_19746].field_8))
                                            if block.timestamp < stor3[_19746]:
                                                revert with 0, 17
                                            if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                revert with 0, 17
                                            if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                revert with 0, 17
                                            if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                revert with 0, 17
                                            stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                            if tierLevel.length != stor4[_19746]:
                                                if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 17
                                                mem[0] = stor4[_19746]
                                                mem[32] = 553
                                                if uint8(stor553[stor4[_19746]].field_512):
                                                    if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                        revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                    if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                        revert with 0, 17
                                                    if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _34235 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_34235] = tierLevel.length
                                                        mem[_34235 + 32] = stor5[_19746]
                                                        mem[_34235 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                                else:
                                                    if -stor5[_19746] <= 0:
                                                        revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                    _32346 = mem[64]
                                                    mem[64] = mem[64] + 96
                                                    mem[_32346] = stor4[_19746]
                                                    mem[_32346 + 32] = -stor5[_19746]
                                                    mem[_32346 + 64] = 1
                                                    stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                    stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                    uint8(stor553[stor4[_19746]].field_512) = 1
                                                    stor554.length++
                                                    storCCA5[stor554.length] = stor4[_19746]
                                                    mem[0] = tierLevel.length
                                                    mem[32] = 553
                                                    if uint8(stor553[stor559.length].field_512):
                                                        if tierLevel.length != stor553[stor559.length].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor559.length].field_256 += stor5[_19746]
                                                    else:
                                                        if stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _33283 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_33283] = tierLevel.length
                                                        mem[_33283 + 32] = stor5[_19746]
                                                        mem[_33283 + 64] = 1
                                                        mem[32] = 553
                                                        stor553[stor559.length].field_0 = tierLevel.length
                                                        stor553[stor559.length].field_256 = stor5[_19746]
                                                        uint8(stor553[stor559.length].field_512) = 1
                                                        stor554.length++
                                                        mem[0] = 554
                                                        storCCA5[stor554.length] = tierLevel.length
                                        else:
                                            if 31 >= stor1[_19746].field_1 % 128:
                                                mem[_29705 + 32] = 256 * Mask(248, 0, stor1[_19746].field_8)
                                                mem[_29689 + 32] = _29705
                                                mem[_29689 + 64] = stor2[_19746]
                                                mem[_29689 + 96] = stor3[_19746]
                                                mem[_29689 + 128] = stor4[_19746]
                                                mem[_29689 + 160] = stor5[_19746]
                                                mem[_29689 + 192] = stor6[_19746]
                                                mem[_29689 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29689 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _34571 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_34571] = tierLevel.length
                                                            mem[_34571 + 32] = stor5[_19746]
                                                            mem[_34571 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _32747 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_32747] = stor4[_19746]
                                                        mem[_32747 + 32] = -stor5[_19746]
                                                        mem[_32747 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _33707 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_33707] = tierLevel.length
                                                            mem[_33707 + 32] = stor5[_19746]
                                                            mem[_33707 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                            else:
                                                mem[0] = _19746 + 1
                                                mem[_29705 + 32] = stor[sha3(_19746 + 1)]
                                                s = _29705 + 32
                                                t = sha3(_19746 + 1)
                                                while _29705 + stor1[_19746].field_1 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                                mem[_29689 + 32] = _29705
                                                mem[_29689 + 64] = stor2[_19746]
                                                mem[_29689 + 96] = stor3[_19746]
                                                mem[_29689 + 128] = stor4[_19746]
                                                mem[_29689 + 160] = stor5[_19746]
                                                mem[_29689 + 192] = stor6[_19746]
                                                mem[_29689 + 224] = bool(uint8(stor7[_19746].field_0))
                                                mem[_29689 + 256] = bool(uint8(stor7[_19746].field_8))
                                                if block.timestamp < stor3[_19746]:
                                                    revert with 0, 17
                                                if block.timestamp - stor3[_19746] and rewardPerDay > -1 / block.timestamp - stor3[_19746]:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 and stor4[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6:
                                                    revert with 0, 17
                                                if (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 and stor5[_19746] > -1 / (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000:
                                                    revert with 0, 17
                                                if stor6[_19746] > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                                    revert with 0, 17
                                                stor6[_19746] += (block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000
                                                if tierLevel.length != stor4[_19746]:
                                                    if not stor5[_19746] - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 17
                                                    mem[0] = stor4[_19746]
                                                    mem[32] = 553
                                                    if uint8(stor553[stor4[_19746]].field_512):
                                                        if stor4[_19746] != stor553[stor4[_19746]].field_0:
                                                            revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                        if -stor5[_19746] > -stor553[stor4[_19746]].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor4[_19746]].field_256 >= 0:
                                                            revert with 0, 17
                                                        if stor553[stor4[_19746]].field_256 < 0 and -stor5[_19746] < -stor553[stor4[_19746]].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 17
                                                        stor553[stor4[_19746]].field_256 -= stor5[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35811 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35811] = tierLevel.length
                                                            mem[_35811 + 32] = stor5[_19746]
                                                            mem[_35811 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                                    else:
                                                        if -stor5[_19746] <= 0:
                                                            revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                        _35171 = mem[64]
                                                        mem[64] = mem[64] + 96
                                                        mem[_35171] = stor4[_19746]
                                                        mem[_35171 + 32] = -stor5[_19746]
                                                        mem[_35171 + 64] = 1
                                                        stor553[stor4[_19746]].field_0 = stor4[_19746]
                                                        stor553[stor4[_19746]].field_256 = -stor5[_19746]
                                                        uint8(stor553[stor4[_19746]].field_512) = 1
                                                        stor554.length++
                                                        storCCA5[stor554.length] = stor4[_19746]
                                                        mem[0] = tierLevel.length
                                                        mem[32] = 553
                                                        if uint8(stor553[stor559.length].field_512):
                                                            if tierLevel.length != stor553[stor559.length].field_0:
                                                                revert with 0, 'Planets: rewardMult does not match in TierStorage'
                                                            if stor5[_19746] > -stor553[stor559.length].field_256 + 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff and stor553[stor559.length].field_256 >= 0:
                                                                revert with 0, 17
                                                            if stor553[stor559.length].field_256 < 0 and stor5[_19746] < -stor553[stor559.length].field_256 - 0x8000000000000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 17
                                                            stor553[stor559.length].field_256 += stor5[_19746]
                                                        else:
                                                            if stor5[_19746] <= 0:
                                                                revert with 0, 'Planets: Fatal error while creating new TierStorage. Amount cannot be below zero.'
                                                            _35491 = mem[64]
                                                            mem[64] = mem[64] + 96
                                                            mem[_35491] = tierLevel.length
                                                            mem[_35491 + 32] = stor5[_19746]
                                                            mem[_35491 + 64] = 1
                                                            mem[32] = 553
                                                            stor553[stor559.length].field_0 = tierLevel.length
                                                            stor553[stor559.length].field_256 = stor5[_19746]
                                                            uint8(stor553[stor559.length].field_512) = 1
                                                            stor554.length++
                                                            mem[0] = 554
                                                            storCCA5[stor554.length] = tierLevel.length
                                stor4[_19746] = tierLevel.length
                                stor3[_19746] = block.timestamp
                                if 0 > !((block.timestamp * rewardPerDay) - (stor3[_19746] * rewardPerDay) / 10^6 * stor4[_19746] / 100000 * stor5[_19746] / 100000):
                                    revert with 0, 17
            if not idx + 1:
                revert with 0, 17
            idx = idx + 1
            continue 
    revert with 0, 'Planets: You don't have enough reward to cash out'
}



}
