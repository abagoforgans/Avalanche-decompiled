contract main {




// =====================  Runtime code  =====================


address owner;

function owner() payable {
    return owner
}

function _fallback() payable {
    revert
}

function changeOwner(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Not owner'
    owner = arg1
}

function sub_de60b9c4(?) payable {
    require calldata.size - 4 >= 32
    mem[448] = 11
    mem[480] = '1 Rect Lips' << 168
    mem[96] = 448
    mem[512] = 12
    mem[544] = '2 Round lips' << 160
    mem[128] = 512
    mem[576] = 15
    mem[608] = '3 Triangle lips' << 136
    mem[160] = 576
    mem[640] = 11
    mem[672] = '4 Rect Lips' << 168
    mem[192] = 640
    mem[704] = 12
    mem[736] = '5 Round lips' << 160
    mem[224] = 704
    mem[768] = 15
    mem[800] = '6 Triangle lips' << 136
    mem[256] = 768
    mem[832] = 11
    mem[864] = '7 Rect Lips' << 168
    mem[288] = 832
    mem[896] = 12
    mem[928] = '8 Round lips' << 160
    mem[320] = 896
    mem[960] = 15
    mem[992] = '9 Triangle lips' << 136
    mem[352] = 960
    mem[1024] = 12
    mem[1056] = '10 Rect Lips' << 160
    mem[384] = 1024
    mem[64] = 1152
    mem[1088] = 13
    mem[1120] = '11 Round lips' << 152
    mem[416] = 1088
    if arg1 >= 11:
        revert with 0, 50
    _13 = mem[(32 * arg1) + 96]
    mem[1152] = 32
    _15 = mem[_13]
    mem[1184] = mem[_13]
    mem[1216 len ceil32(_15)] = mem[_13 + 32 len ceil32(_15)]
    if ceil32(_15) > _15:
        mem[_15 + 1216] = 0
    return 32, mem[1184 len ceil32(_15) + 32]
}

function sub_a2cc0845(?) payable {
    require calldata.size - 4 >= 32
    mem[512] = 11
    mem[544] = '1 Rect Eyes' << 168
    mem[96] = 512
    mem[576] = 12
    mem[608] = '2 Round Eyes' << 160
    mem[128] = 576
    mem[640] = 15
    mem[672] = '3 Triangle Eyes' << 136
    mem[160] = 640
    mem[704] = 11
    mem[736] = '4 Rect Eyes' << 168
    mem[192] = 704
    mem[768] = 12
    mem[800] = '5 Round Eyes' << 160
    mem[224] = 768
    mem[832] = 15
    mem[864] = '6 Triangle Eyes' << 136
    mem[256] = 832
    mem[896] = 11
    mem[928] = '7 Rect Eyes' << 168
    mem[288] = 896
    mem[960] = 12
    mem[992] = '8 Round Eyes' << 160
    mem[320] = 960
    mem[1024] = 15
    mem[1056] = '9 Triangle Eyes' << 136
    mem[352] = 1024
    mem[1088] = 12
    mem[1120] = '10 Rect Eyes' << 160
    mem[384] = 1088
    mem[1152] = 13
    mem[1184] = '11 Round Eyes' << 152
    mem[416] = 1152
    mem[1216] = 16
    mem[1248] = '12 Triangle Eyes' << 128
    mem[448] = 1216
    mem[64] = 1344
    mem[1280] = 7
    mem[1312] = '13 Eyes' << 200
    mem[480] = 1280
    if arg1 >= 13:
        revert with 0, 50
    _14 = mem[(32 * arg1) + 96]
    mem[1344] = 32
    _16 = mem[_14]
    mem[1376] = mem[_14]
    mem[1408 len ceil32(_16)] = mem[_14 + 32 len ceil32(_16)]
    if ceil32(_16) > _16:
        mem[_16 + 1408] = 0
    return 32, mem[1376 len ceil32(_16) + 32]
}

function getLips(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Not owner'
    mem[448] = 135
    mem[480 len 135] = 0x3e3c672069643d226c6970735f63756265223e3c7265637420783d223631362e36322220793d223339382e383832222077696474683d223334302e333322206865696768743d2235362e37323222207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c2f67
    mem[96] = 448
    mem[640] = 129
    mem[672 len 129] = 0x3e3c656c6c697073652069643d226c6970735f726f756e64222063783d223738342e393536222063793d223432332e353833222072783d223133332e353731222072793d2233302e31393122207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f
    mem[128] = 640
    mem[832] = 143
    mem[864 len 143] = 0x3e3c706174682069643d226c6970735f747269616e676c652220643d224d3738382e3631352c3439322e3139386c3139302e3239322c2d39312e3438366c2d3338302e3538342c2d306c3139302e3239322c39312e3438365a22207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f
    mem[160] = 832
    mem[1024] = 135
    mem[1056 len 135] = 0x3e3c672069643d226c6970735f63756265223e3c7265637420783d223631362e36322220793d223339382e383832222077696474683d223334302e333322206865696768743d2235362e37323222207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c2f67
    mem[192] = 1024
    mem[1216] = 129
    mem[1248 len 129] = 0x3e3c656c6c697073652069643d226c6970735f726f756e64222063783d223738342e393536222063793d223432332e353833222072783d223133332e353731222072793d2233302e31393122207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f
    mem[224] = 1216
    mem[1408] = 143
    mem[1440 len 143] = 0x3e3c706174682069643d226c6970735f747269616e676c652220643d224d3738382e3631352c3439322e3139386c3139302e3239322c2d39312e3438366c2d3338302e3538342c2d306c3139302e3239322c39312e3438365a22207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f
    mem[256] = 1408
    mem[1600] = 135
    mem[1632 len 135] = 0x3e3c672069643d226c6970735f63756265223e3c7265637420783d223631362e36322220793d223339382e383832222077696474683d223334302e333322206865696768743d2235362e37323222207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c2f67
    mem[288] = 1600
    mem[1792] = 129
    mem[1824 len 129] = 0x3e3c656c6c697073652069643d226c6970735f726f756e64222063783d223738342e393536222063793d223432332e353833222072783d223133332e353731222072793d2233302e31393122207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f
    mem[320] = 1792
    mem[1984] = 143
    mem[2016 len 143] = 0x3e3c706174682069643d226c6970735f747269616e676c652220643d224d3738382e3631352c3439322e3139386c3139302e3239322c2d39312e3438366c2d3338302e3538342c2d306c3139302e3239322c39312e3438365a22207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f
    mem[352] = 1984
    mem[2176] = 135
    mem[2208 len 135] = 0x3e3c672069643d226c6970735f63756265223e3c7265637420783d223631362e36322220793d223339382e383832222077696474683d223334302e333322206865696768743d2235362e37323222207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c2f67
    mem[384] = 2176
    mem[64] = 2560
    mem[2368] = 129
    mem[2400 len 129] = 0x3e3c656c6c697073652069643d226c6970735f726f756e64222063783d223738342e393536222063793d223432332e353833222072783d223133332e353731222072793d2233302e31393122207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f
    mem[416] = 2368
    if arg1 >= 11:
        revert with 0, 50
    _14 = mem[(32 * arg1) + 96]
    mem[2592] = 0x3c672069643d226c697073223e00000000000000000000000000000000000000
    _16 = mem[_14]
    mem[2605 len ceil32(mem[_14])] = mem[_14 + 32 len ceil32(mem[_14])]
    mem[_16 + 2605] = 0x3c2f673e00000000000000000000000000000000000000000000000000000000
    mem[_16 + 2609] = 32
    mem[_16 + 2641] = mem[2560]
    mem[_16 + 2673 len ceil32(mem[2560])] = mem[2592 len ceil32(mem[2560])]
    if ceil32(mem[2560]) > mem[2560]:
        mem[_16 + mem[2560] + 2673] = 0
    return Array(len=mem[2560], data=mem[_16 + 2673 len ceil32(mem[2560])])
}

function getEyes(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Not owner'
    mem[512] = 252
    mem[544 len 252] = 0x3e3c672069643d22657965735f63756265223e3c7265637420783d223630352e3634322220793d223235302e363733222077696474683d223131312e36313422206865696768743d2238302e35303822207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c7265637420783d223836392e3132332220793d223234382e383434222077696474683d223131312e36313422206865696768743d2238302e35303822207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c2f67
    mem[96] = 512
    mem[800] = 247
    mem[832 len 247] = 0xfe3c672069643d22657965735f726f756e64223e3c656c6c697073652063783d223636382e373637222063793d223238372e323638222072783d2234382e343838222072793d2234372e35373322207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c656c6c697073652063783d223931302e323932222063793d223238352e343338222072783d2234382e343838222072793d2234372e35373322207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c2f67
    mem[128] = 800
    mem[1088] = 270
    mem[1120 len 270] = 0x3e3c672069643d22657965735f747269616e676c65223e3c7061746820643d224d3730302e3738382c3235342e3333336c35332e3036322c38342e3136386c2d3130362e3132342c2d306c35332e3036322c2d38342e3136385a22207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c7061746820643d224d3836372e3239342c3235342e3333336c35332e3036322c38342e3136386c2d3130362e3132352c2d306c35332e3036332c2d38342e3136385a22207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c2f67
    mem[160] = 1088
    mem[1408] = 252
    mem[1440 len 252] = 0x3e3c672069643d22657965735f63756265223e3c7265637420783d223630352e3634322220793d223235302e363733222077696474683d223131312e36313422206865696768743d2238302e35303822207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c7265637420783d223836392e3132332220793d223234382e383434222077696474683d223131312e36313422206865696768743d2238302e35303822207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c2f67
    mem[192] = 1408
    mem[1696] = 247
    mem[1728 len 247] = 0xfe3c672069643d22657965735f726f756e64223e3c656c6c697073652063783d223636382e373637222063793d223238372e323638222072783d2234382e343838222072793d2234372e35373322207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c656c6c697073652063783d223931302e323932222063793d223238352e343338222072783d2234382e343838222072793d2234372e35373322207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c2f67
    mem[224] = 1696
    mem[1984] = 270
    mem[2016 len 270] = 0x3e3c672069643d22657965735f747269616e676c65223e3c7061746820643d224d3730302e3738382c3235342e3333336c35332e3036322c38342e3136386c2d3130362e3132342c2d306c35332e3036322c2d38342e3136385a22207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c7061746820643d224d3836372e3239342c3235342e3333336c35332e3036322c38342e3136386c2d3130362e3132352c2d306c35332e3036332c2d38342e3136385a22207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c2f67
    mem[256] = 1984
    mem[2304] = 252
    mem[2336 len 252] = 0x3e3c672069643d22657965735f63756265223e3c7265637420783d223630352e3634322220793d223235302e363733222077696474683d223131312e36313422206865696768743d2238302e35303822207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c7265637420783d223836392e3132332220793d223234382e383434222077696474683d223131312e36313422206865696768743d2238302e35303822207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c2f67
    mem[288] = 2304
    mem[2592] = 247
    mem[2624 len 247] = 0xfe3c672069643d22657965735f726f756e64223e3c656c6c697073652063783d223636382e373637222063793d223238372e323638222072783d2234382e343838222072793d2234372e35373322207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c656c6c697073652063783d223931302e323932222063793d223238352e343338222072783d2234382e343838222072793d2234372e35373322207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c2f67
    mem[320] = 2592
    mem[2880] = 270
    mem[2912 len 270] = 0x3e3c672069643d22657965735f747269616e676c65223e3c7061746820643d224d3730302e3738382c3235342e3333336c35332e3036322c38342e3136386c2d3130362e3132342c2d306c35332e3036322c2d38342e3136385a22207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c7061746820643d224d3836372e3239342c3235342e3333336c35332e3036322c38342e3136386c2d3130362e3132352c2d306c35332e3036332c2d38342e3136385a22207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c2f67
    mem[352] = 2880
    mem[3200] = 252
    mem[3232 len 252] = 0x3e3c672069643d22657965735f63756265223e3c7265637420783d223630352e3634322220793d223235302e363733222077696474683d223131312e36313422206865696768743d2238302e35303822207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c7265637420783d223836392e3132332220793d223234382e383434222077696474683d223131312e36313422206865696768743d2238302e35303822207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c2f67
    mem[384] = 3200
    mem[3488] = 247
    mem[3520 len 247] = 0xfe3c672069643d22657965735f726f756e64223e3c656c6c697073652063783d223636382e373637222063793d223238372e323638222072783d2234382e343838222072793d2234372e35373322207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c656c6c697073652063783d223931302e323932222063793d223238352e343338222072783d2234382e343838222072793d2234372e35373322207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c2f67
    mem[416] = 3488
    mem[3776] = 270
    mem[3808 len 270] = 0x3e3c672069643d22657965735f747269616e676c65223e3c7061746820643d224d3730302e3738382c3235342e3333336c35332e3036322c38342e3136386c2d3130362e3132342c2d306c35332e3036322c2d38342e3136385a22207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c7061746820643d224d3836372e3239342c3235342e3333336c35332e3036322c38342e3136386c2d3130362e3132352c2d306c35332e3036332c2d38342e3136385a22207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c2f67
    mem[448] = 3776
    mem[64] = 4384
    mem[4096] = 252
    mem[4128 len 252] = 0x3e3c672069643d22657965735f63756265223e3c7265637420783d223630352e3634322220793d223235302e363733222077696474683d223131312e36313422206865696768743d2238302e35303822207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c7265637420783d223836392e3132332220793d223234382e383434222077696474683d223131312e36313422206865696768743d2238302e35303822207374796c653d2266696c6c3a236666663b7374726f6b653a233030303b7374726f6b652d77696474683a33382e373370783b222f3e3c2f67
    mem[480] = 4096
    if arg1 >= 13:
        revert with 0, 50
    _16 = mem[(32 * arg1) + 96]
    mem[4416] = 0x3c672069643d2265796573223e00000000000000000000000000000000000000
    _18 = mem[_16]
    mem[4429 len ceil32(mem[_16])] = mem[_16 + 32 len ceil32(mem[_16])]
    mem[_18 + 4429] = 0x3c2f673e00000000000000000000000000000000000000000000000000000000
    mem[_18 + 4433] = 32
    mem[_18 + 4465] = mem[4384]
    mem[_18 + 4497 len ceil32(mem[4384])] = mem[4416 len ceil32(mem[4384])]
    if ceil32(mem[4384]) > mem[4384]:
        mem[_18 + mem[4384] + 4497] = 0
    return Array(len=mem[4384], data=mem[_18 + 4497 len ceil32(mem[4384])])
}



}
