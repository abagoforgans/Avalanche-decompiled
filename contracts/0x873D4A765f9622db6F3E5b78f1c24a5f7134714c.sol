contract main {




// =====================  Runtime code  =====================


#
#  - sub_3c8dc8ac(?)
#  - infoOfPool(address arg1, address arg2)
#
const priceCalculator = 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e

const MAXIMUS = 0x964ddc3f274e425c6f257c046161f956d8fa2652

const WAVAX = 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7


uint8 stor0;
uint8 stor0; offset 8
uint256 stor0; offset 8
address owner;
mapping of uint8 poolTypes;
mapping of uint8 stor102;

function poolTypes(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require uint8(poolTypes[arg1]) < 8
    return uint8(poolTypes[arg1])
}

function sub_652d0542(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return bool(stor102[arg1])
}

function owner() payable {
    return owner
}

function poolTypeOf(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require uint8(poolTypes[address(arg1)]) < 8
    return uint8(poolTypes[address(arg1)])
}

function _fallback() payable {
    revert
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function setPerfExemption(address arg1, bool arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor102[address(arg1)] = uint8(arg2)
}

function setPoolType(address arg1, uint8 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 < 8
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require arg2 <= 7
    uint256(poolTypes[address(arg1)]) = arg2 or Mask(248, 8, uint256(poolTypes[address(arg1)]))
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function sub_4ee629d3(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require uint8(poolTypes[address(arg1)]) <= 7
    if uint8(poolTypes[address(arg1)]) == 1:
        require ext_code.size(address(arg1))
        staticcall address(arg1).0x896471c8 with:
                gas gas_remaining wei
               args address(arg2)
    else:
        require uint8(poolTypes[address(arg1)]) <= 7
        require ext_code.size(address(arg1))
        if uint8(poolTypes[address(arg1)]) != 2:
            staticcall address(arg1).withdrawableBalanceOf(address rg1) with:
                    gas gas_remaining wei
                   args address(arg2)
        else:
            staticcall address(arg1).0x896471c8 with:
                    gas gas_remaining wei
                   args address(arg2)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function tvlOfPool(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require ext_code.size(arg1)
    staticcall arg1.stakingToken() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(arg1)
    staticcall arg1.balance() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
            gas gas_remaining wei
           args address(ext_call.return_data[0]), ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    return ext_call.return_data[32]
}

function initialize() payable {
    if uint8(stor0.field_8):
        owner = msg.sender
        emit OwnershipTransferred(0, msg.sender);
    else:
        if ext_code.size(this.address):
            if uint8(stor0.field_0):
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
        if uint8(stor0.field_8):
            owner = msg.sender
            emit OwnershipTransferred(0, msg.sender);
        else:
            uint8(stor0.field_0) = 1
            uint8(stor0.field_8) = 1
            Mask(248, 0, stor0.field_8) = 0
            if ext_code.size(this.address):
                if uint8(stor0.field_0):
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
            if uint8(stor0.field_8):
                owner = msg.sender
                emit OwnershipTransferred(0, msg.sender);
            else:
                uint8(stor0.field_0) = 1
                uint8(stor0.field_8) = 1
                Mask(248, 0, stor0.field_8) = 0
                if ext_code.size(this.address):
                    if uint8(stor0.field_0):
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
                if uint8(stor0.field_8):
                    owner = msg.sender
                    emit OwnershipTransferred(0, msg.sender);
                else:
                    uint8(stor0.field_0) = 1
                    uint8(stor0.field_8) = 1
                    Mask(248, 0, stor0.field_8) = 0
                    uint8(stor0.field_8) = 0
                    if ext_code.size(this.address):
                        if uint8(stor0.field_0):
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
                    if uint8(stor0.field_8):
                        owner = msg.sender
                        emit OwnershipTransferred(0, msg.sender);
                    else:
                        uint8(stor0.field_0) = 1
                        uint8(stor0.field_8) = 1
                        Mask(248, 0, stor0.field_8) = 0
                        owner = msg.sender
                        emit OwnershipTransferred(0, msg.sender);
                        uint8(stor0.field_8) = 0
                        uint8(stor0.field_8) = 0
                        uint8(stor0.field_8) = 0
}

function calculateProfit(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    require uint8(poolTypes[address(arg1)]) <= 7
    if uint8(poolTypes[address(arg1)]):
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) == 2:
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            return ext_call.return_data[0], ext_call.return_data[0]
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) == 3:
            require ext_code.size(arg1)
            staticcall arg1.earned(address rg1) with:
                    gas gas_remaining wei
                   args arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.stakingToken() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args address(ext_call.return_data[0]), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            return ext_call.return_data[0], ext_call.return_data[0]
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) == 1:
            require ext_code.size(arg1)
            staticcall arg1.earned(address rg1) with:
                    gas gas_remaining wei
                   args arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.stakingToken() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args address(ext_call.return_data[0]), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            return ext_call.return_data[0], ext_call.return_data[0]
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) == 7:
            require ext_code.size(arg1)
            staticcall arg1.earned(address rg1) with:
                    gas gas_remaining wei
                   args arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.stakingToken() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args address(ext_call.return_data[0]), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            return ext_call.return_data[0], ext_call.return_data[0]
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) != 4:
            return 0
    else:
        require ext_code.size(arg1)
        staticcall arg1.earned(address rg1) with:
                gas gas_remaining wei
               args arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(arg1)
        staticcall arg1.rewardsToken() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                gas gas_remaining wei
               args address(ext_call.return_data[0]), ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) == 2:
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            return ext_call.return_data[0], ext_call.return_data[0]
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) == 3:
            require ext_code.size(arg1)
            staticcall arg1.earned(address rg1) with:
                    gas gas_remaining wei
                   args arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.stakingToken() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args address(ext_call.return_data[0]), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            return ext_call.return_data[0], ext_call.return_data[0]
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) == 1:
            require ext_code.size(arg1)
            staticcall arg1.earned(address rg1) with:
                    gas gas_remaining wei
                   args arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.stakingToken() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args address(ext_call.return_data[0]), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            return ext_call.return_data[0], ext_call.return_data[0]
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) == 7:
            require ext_code.size(arg1)
            staticcall arg1.earned(address rg1) with:
                    gas gas_remaining wei
                   args arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.stakingToken() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args address(ext_call.return_data[0]), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            return ext_call.return_data[0], ext_call.return_data[0]
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) != 4:
            return ext_call.return_data[0], ext_call.return_data[0]
    ('eq', ('type', 8, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'poolTypes', 101)))), 4)
    require ext_code.size(arg1)
    staticcall arg1.rewardsToken() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).priceShare() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg1)
    staticcall arg1.earned(address rg1) with:
            gas gas_remaining wei
           args arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        require ext_code.size(arg1)
        staticcall arg1.rewardsToken() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).stakingToken() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                gas gas_remaining wei
               args address(ext_call.return_data[0]), 0
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        return 0, ext_call.return_data[0]
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0, 'SafeMath: multiplication overflow'
    require ext_code.size(arg1)
    staticcall arg1.rewardsToken() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).stakingToken() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
            gas gas_remaining wei
           args address(ext_call.return_data[0]), ext_call.return_data[0] * ext_call.return_data[0] / 10^18
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    return ext_call.return_data[0] * ext_call.return_data[0] / 10^18, ext_call.return_data[0]
}

function profitOfPool(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    require uint8(poolTypes[address(arg1)]) <= 7
    if uint8(poolTypes[address(arg1)]):
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) == 2:
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            if stor102[address(arg1)]:
                return ext_call.return_data[0], 0
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                require ext_code.size(arg1)
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return ext_call.return_data[0], 0
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                return ext_call.return_data[0], ext_call.return_data[0]
            if not ext_call.return_data[0]:
                require ext_code.size(arg1)
                staticcall arg1.minter() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[0]:
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                else:
                    if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                        revert with 0, 'SafeMath: multiplication overflow'
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (30 * ext_call.return_data[0] / 100)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(arg1)
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return 0, ext_call.return_data[0]
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                    revert with 0, 'SafeMath: addition overflow'
                return 0, 2 * ext_call.return_data[0]
            if 70 * ext_call.return_data[0] / ext_call.return_data[0] != 70:
                revert with 0, 'SafeMath: multiplication overflow'
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[0]:
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
            else:
                if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * ext_call.return_data[0] / 100)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.maximusChef() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                return 70 * ext_call.return_data[0] / 100, ext_call.return_data[0]
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                revert with 0, 'SafeMath: addition overflow'
            return 70 * ext_call.return_data[0] / 100, 2 * ext_call.return_data[0]
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) == 3:
            require ext_code.size(arg1)
            staticcall arg1.earned(address rg1) with:
                    gas gas_remaining wei
                   args arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.stakingToken() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args address(ext_call.return_data[0]), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            if stor102[address(arg1)]:
                return ext_call.return_data[0], 0
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                require ext_code.size(arg1)
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return ext_call.return_data[0], 0
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                return ext_call.return_data[0], ext_call.return_data[0]
            if not ext_call.return_data[0]:
                require ext_code.size(arg1)
                staticcall arg1.minter() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[0]:
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                else:
                    if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                        revert with 0, 'SafeMath: multiplication overflow'
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (30 * ext_call.return_data[0] / 100)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(arg1)
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return 0, ext_call.return_data[0]
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                    revert with 0, 'SafeMath: addition overflow'
                return 0, 2 * ext_call.return_data[0]
            if 70 * ext_call.return_data[0] / ext_call.return_data[0] != 70:
                revert with 0, 'SafeMath: multiplication overflow'
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[0]:
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
            else:
                if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * ext_call.return_data[0] / 100)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.maximusChef() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                return 70 * ext_call.return_data[0] / 100, ext_call.return_data[0]
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                revert with 0, 'SafeMath: addition overflow'
            return 70 * ext_call.return_data[0] / 100, 2 * ext_call.return_data[0]
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) == 1:
            require ext_code.size(arg1)
            staticcall arg1.earned(address rg1) with:
                    gas gas_remaining wei
                   args arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.stakingToken() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args address(ext_call.return_data[0]), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            if stor102[address(arg1)]:
                return ext_call.return_data[0], 0
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                require ext_code.size(arg1)
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return ext_call.return_data[0], 0
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                return ext_call.return_data[0], ext_call.return_data[0]
            if not ext_call.return_data[0]:
                require ext_code.size(arg1)
                staticcall arg1.minter() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[0]:
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                else:
                    if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                        revert with 0, 'SafeMath: multiplication overflow'
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (30 * ext_call.return_data[0] / 100)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(arg1)
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return 0, ext_call.return_data[0]
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                    revert with 0, 'SafeMath: addition overflow'
                return 0, 2 * ext_call.return_data[0]
            if 70 * ext_call.return_data[0] / ext_call.return_data[0] != 70:
                revert with 0, 'SafeMath: multiplication overflow'
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[0]:
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
            else:
                if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * ext_call.return_data[0] / 100)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.maximusChef() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                return 70 * ext_call.return_data[0] / 100, ext_call.return_data[0]
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                revert with 0, 'SafeMath: addition overflow'
            return 70 * ext_call.return_data[0] / 100, 2 * ext_call.return_data[0]
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) == 7:
            require ext_code.size(arg1)
            staticcall arg1.earned(address rg1) with:
                    gas gas_remaining wei
                   args arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.stakingToken() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args address(ext_call.return_data[0]), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            if stor102[address(arg1)]:
                return ext_call.return_data[0], 0
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                require ext_code.size(arg1)
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return ext_call.return_data[0], 0
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                return ext_call.return_data[0], ext_call.return_data[0]
            if not ext_call.return_data[0]:
                require ext_code.size(arg1)
                staticcall arg1.minter() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[0]:
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                else:
                    if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                        revert with 0, 'SafeMath: multiplication overflow'
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (30 * ext_call.return_data[0] / 100)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(arg1)
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return 0, ext_call.return_data[0]
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                    revert with 0, 'SafeMath: addition overflow'
                return 0, 2 * ext_call.return_data[0]
            if 70 * ext_call.return_data[0] / ext_call.return_data[0] != 70:
                revert with 0, 'SafeMath: multiplication overflow'
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[0]:
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
            else:
                if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * ext_call.return_data[0] / 100)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.maximusChef() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                return 70 * ext_call.return_data[0] / 100, ext_call.return_data[0]
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                revert with 0, 'SafeMath: addition overflow'
            return 70 * ext_call.return_data[0] / 100, 2 * ext_call.return_data[0]
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) != 4:
            if stor102[address(arg1)]:
                return 0
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(arg1)
            if not ext_call.return_data[12 len 20]:
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return 0
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                return 0, ext_call.return_data[0]
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.maximusChef() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                return 0, ext_call.return_data[0]
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                revert with 0, 'SafeMath: addition overflow'
            return 0, 2 * ext_call.return_data[0]
    else:
        require ext_code.size(arg1)
        staticcall arg1.earned(address rg1) with:
                gas gas_remaining wei
               args arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(arg1)
        staticcall arg1.rewardsToken() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                gas gas_remaining wei
               args address(ext_call.return_data[0]), ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) == 2:
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            if stor102[address(arg1)]:
                return ext_call.return_data[0], 0
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                require ext_code.size(arg1)
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return ext_call.return_data[0], 0
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                return ext_call.return_data[0], ext_call.return_data[0]
            if not ext_call.return_data[0]:
                require ext_code.size(arg1)
                staticcall arg1.minter() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[0]:
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                else:
                    if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                        revert with 0, 'SafeMath: multiplication overflow'
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (30 * ext_call.return_data[0] / 100)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(arg1)
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return 0, ext_call.return_data[0]
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                    revert with 0, 'SafeMath: addition overflow'
                return 0, 2 * ext_call.return_data[0]
            if 70 * ext_call.return_data[0] / ext_call.return_data[0] != 70:
                revert with 0, 'SafeMath: multiplication overflow'
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[0]:
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
            else:
                if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * ext_call.return_data[0] / 100)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.maximusChef() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                return 70 * ext_call.return_data[0] / 100, ext_call.return_data[0]
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                revert with 0, 'SafeMath: addition overflow'
            return 70 * ext_call.return_data[0] / 100, 2 * ext_call.return_data[0]
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) == 3:
            require ext_code.size(arg1)
            staticcall arg1.earned(address rg1) with:
                    gas gas_remaining wei
                   args arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.stakingToken() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args address(ext_call.return_data[0]), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            if stor102[address(arg1)]:
                return ext_call.return_data[0], 0
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                require ext_code.size(arg1)
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return ext_call.return_data[0], 0
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                return ext_call.return_data[0], ext_call.return_data[0]
            if not ext_call.return_data[0]:
                require ext_code.size(arg1)
                staticcall arg1.minter() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[0]:
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                else:
                    if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                        revert with 0, 'SafeMath: multiplication overflow'
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (30 * ext_call.return_data[0] / 100)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(arg1)
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return 0, ext_call.return_data[0]
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                    revert with 0, 'SafeMath: addition overflow'
                return 0, 2 * ext_call.return_data[0]
            if 70 * ext_call.return_data[0] / ext_call.return_data[0] != 70:
                revert with 0, 'SafeMath: multiplication overflow'
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[0]:
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
            else:
                if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * ext_call.return_data[0] / 100)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.maximusChef() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                return 70 * ext_call.return_data[0] / 100, ext_call.return_data[0]
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                revert with 0, 'SafeMath: addition overflow'
            return 70 * ext_call.return_data[0] / 100, 2 * ext_call.return_data[0]
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) == 1:
            require ext_code.size(arg1)
            staticcall arg1.earned(address rg1) with:
                    gas gas_remaining wei
                   args arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.stakingToken() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args address(ext_call.return_data[0]), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            if stor102[address(arg1)]:
                return ext_call.return_data[0], 0
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                require ext_code.size(arg1)
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return ext_call.return_data[0], 0
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                return ext_call.return_data[0], ext_call.return_data[0]
            if not ext_call.return_data[0]:
                require ext_code.size(arg1)
                staticcall arg1.minter() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[0]:
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                else:
                    if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                        revert with 0, 'SafeMath: multiplication overflow'
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (30 * ext_call.return_data[0] / 100)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(arg1)
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return 0, ext_call.return_data[0]
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                    revert with 0, 'SafeMath: addition overflow'
                return 0, 2 * ext_call.return_data[0]
            if 70 * ext_call.return_data[0] / ext_call.return_data[0] != 70:
                revert with 0, 'SafeMath: multiplication overflow'
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[0]:
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
            else:
                if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * ext_call.return_data[0] / 100)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.maximusChef() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                return 70 * ext_call.return_data[0] / 100, ext_call.return_data[0]
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                revert with 0, 'SafeMath: addition overflow'
            return 70 * ext_call.return_data[0] / 100, 2 * ext_call.return_data[0]
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) == 7:
            require ext_code.size(arg1)
            staticcall arg1.earned(address rg1) with:
                    gas gas_remaining wei
                   args arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.stakingToken() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args address(ext_call.return_data[0]), ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 64
            if stor102[address(arg1)]:
                return ext_call.return_data[0], 0
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                require ext_code.size(arg1)
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return ext_call.return_data[0], 0
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                return ext_call.return_data[0], ext_call.return_data[0]
            if not ext_call.return_data[0]:
                require ext_code.size(arg1)
                staticcall arg1.minter() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[0]:
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                else:
                    if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                        revert with 0, 'SafeMath: multiplication overflow'
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (30 * ext_call.return_data[0] / 100)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(arg1)
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return 0, ext_call.return_data[0]
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                    revert with 0, 'SafeMath: addition overflow'
                return 0, 2 * ext_call.return_data[0]
            if 70 * ext_call.return_data[0] / ext_call.return_data[0] != 70:
                revert with 0, 'SafeMath: multiplication overflow'
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[0]:
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
            else:
                if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * ext_call.return_data[0] / 100)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.maximusChef() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                return 70 * ext_call.return_data[0] / 100, ext_call.return_data[0]
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                revert with 0, 'SafeMath: addition overflow'
            return 70 * ext_call.return_data[0] / 100, 2 * ext_call.return_data[0]
        require uint8(poolTypes[address(arg1)]) <= 7
        if uint8(poolTypes[address(arg1)]) != 4:
            if stor102[address(arg1)]:
                return ext_call.return_data[0], 0
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                require ext_code.size(arg1)
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return ext_call.return_data[0], 0
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                return ext_call.return_data[0], ext_call.return_data[0]
            if not ext_call.return_data[0]:
                require ext_code.size(arg1)
                staticcall arg1.minter() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[0]:
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                else:
                    if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                        revert with 0, 'SafeMath: multiplication overflow'
                    require ext_code.size(address(ext_call.return_data[0]))
                    staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (30 * ext_call.return_data[0] / 100)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(arg1)
                staticcall arg1.maximusChef() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                if not ext_call.return_data[12 len 20]:
                    return 0, ext_call.return_data[0]
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(arg1), arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                    revert with 0, 'SafeMath: addition overflow'
                return 0, 2 * ext_call.return_data[0]
            if 70 * ext_call.return_data[0] / ext_call.return_data[0] != 70:
                revert with 0, 'SafeMath: multiplication overflow'
            require ext_code.size(arg1)
            staticcall arg1.minter() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[0]:
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
            else:
                if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * ext_call.return_data[0] / 100)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(arg1)
            staticcall arg1.maximusChef() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                return 70 * ext_call.return_data[0] / 100, ext_call.return_data[0]
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
                revert with 0, 'SafeMath: addition overflow'
            return 70 * ext_call.return_data[0] / 100, 2 * ext_call.return_data[0]
    ('eq', ('type', 8, ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'poolTypes', 101)))), 4)
    require ext_code.size(arg1)
    staticcall arg1.rewardsToken() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).priceShare() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg1)
    staticcall arg1.earned(address rg1) with:
            gas gas_remaining wei
           args arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        require ext_code.size(arg1)
        staticcall arg1.rewardsToken() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).stakingToken() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                gas gas_remaining wei
               args address(ext_call.return_data[0]), 0
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 64
        if stor102[address(arg1)]:
            return 0
        require ext_code.size(arg1)
        staticcall arg1.minter() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require ext_code.size(arg1)
        if not ext_call.return_data[12 len 20]:
            staticcall arg1.maximusChef() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            if not ext_call.return_data[12 len 20]:
                return 0
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] < 0:
                revert with 0, 'SafeMath: addition overflow'
            return 0, ext_call.return_data[0]
        staticcall arg1.minter() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if not ext_call.return_data[0]:
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args 0
        else:
            if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                revert with 0, 'SafeMath: multiplication overflow'
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args (30 * ext_call.return_data[0] / 100)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(arg1)
        staticcall arg1.maximusChef() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if not ext_call.return_data[12 len 20]:
            return 0, ext_call.return_data[0]
        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                gas gas_remaining wei
               args address(arg1), arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
            revert with 0, 'SafeMath: addition overflow'
        return 0, 2 * ext_call.return_data[0]
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0, 'SafeMath: multiplication overflow'
    require ext_code.size(arg1)
    staticcall arg1.rewardsToken() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).stakingToken() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
            gas gas_remaining wei
           args address(ext_call.return_data[0]), ext_call.return_data[0] * ext_call.return_data[0] / 10^18
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    if stor102[address(arg1)]:
        return ext_call.return_data[0] * ext_call.return_data[0] / 10^18, 0
    require ext_code.size(arg1)
    staticcall arg1.minter() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if not ext_call.return_data[12 len 20]:
        require ext_code.size(arg1)
        staticcall arg1.maximusChef() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if not ext_call.return_data[12 len 20]:
            return ext_call.return_data[0] * ext_call.return_data[0] / 10^18, 0
        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                gas gas_remaining wei
               args address(arg1), arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] < 0:
            revert with 0, 'SafeMath: addition overflow'
        return ext_call.return_data[0] * ext_call.return_data[0] / 10^18, ext_call.return_data[0]
    if not ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
        require ext_code.size(arg1)
        staticcall arg1.minter() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if not ext_call.return_data[0]:
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args 0
        else:
            if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
                revert with 0, 'SafeMath: multiplication overflow'
            require ext_code.size(address(ext_call.return_data[0]))
            staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args (30 * ext_call.return_data[0] / 100)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(arg1)
        staticcall arg1.maximusChef() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        if not ext_call.return_data[12 len 20]:
            return 0, ext_call.return_data[0]
        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                gas gas_remaining wei
               args address(arg1), arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
            revert with 0, 'SafeMath: addition overflow'
        return 0, 2 * ext_call.return_data[0]
    if 70 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18 != 70:
        revert with 0, 'SafeMath: multiplication overflow'
    require ext_code.size(arg1)
    staticcall arg1.minter() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if not ext_call.return_data[0]:
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                gas gas_remaining wei
               args 0
    else:
        if 30 * ext_call.return_data[0] / ext_call.return_data[0] != 30:
            revert with 0, 'SafeMath: multiplication overflow'
        require ext_code.size(address(ext_call.return_data[0]))
        staticcall address(ext_call.return_data[0]).amountMaximusToMint(uint256 rg1) with:
                gas gas_remaining wei
               args (30 * ext_call.return_data[0] / 100)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg1)
    staticcall arg1.maximusChef() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if not ext_call.return_data[12 len 20]:
        return 70 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 100, ext_call.return_data[0]
    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
            gas gas_remaining wei
           args address(arg1), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if 2 * ext_call.return_data[0] < ext_call.return_data[0]:
        revert with 0, 'SafeMath: addition overflow'
    return 70 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18 / 100, 2 * ext_call.return_data[0]
}

function sub_f0854de8(?) payable {
    require calldata.size - 4 >= 64
    require cd[4] == address(cd[4])
    require cd[36] <= test266151307()
    require calldata.size > cd[36] + 35
    require ('cd', 36).length <= test266151307()
    require (32 * ('cd', 36).length) + 128 >= 96 and (32 * ('cd', 36).length) + 128 <= test266151307()
    mem[64] = (32 * ('cd', 36).length) + 128
    mem[96] = ('cd', 36).length
    require calldata.size >= cd[36] + (32 * ('cd', 36).length) + 36
    s = cd[36] + 36
    t = 128
    idx = 0
    while idx < ('cd', 36).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        s = s + 32
        t = t + 32
        idx = idx + 1
        continue 
    idx = 0
    s = 0
    while idx < ('cd', 36).length:
        require idx < mem[96]
        _23598 = mem[(32 * idx) + 128]
        require ext_code.size(mem[(32 * idx) + 140 len 20])
        staticcall mem[(32 * idx) + 140 len 20].stakingToken() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _23602 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_23602] == mem[_23602 + 12 len 20]
        if not mem[_23602 + 12 len 20]:
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]):
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23617 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _23624 = mem[_23617]
                    mem[mem[64] + 36] = mem[_23617]
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _23624
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23643 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _23654 = mem[_23643]
                    mem[0] = address(_23598)
                    mem[32] = 102
                    if stor102[address(_23598)]:
                        mem[mem[64] + 36] = _23654
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23654
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23697 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _23709 = mem[_23697 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23749 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _23709 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_23749 + 32] + _23709 < _23709:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_23749 + 32] + _23709 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_23749 + 32] + _23709 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23687 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_23687] == mem[_23687 + 12 len 20]
                    if not mem[_23687 + 12 len 20]:
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) == 2:
                            require ext_code.size(address(_23598))
                            staticcall address(_23598).maximusChef() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23788 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_23788] == mem[_23788 + 12 len 20]
                            if not mem[_23788 + 12 len 20]:
                                mem[mem[64] + 36] = _23654
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23654
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24037 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                _24083 = mem[_24037 + 32]
                                mem[mem[64] + 36] = 0
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24232 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                if _24083 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_24232 + 32] + _24083 < _24083:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_24232 + 32] + _24083 + s < s:
                                    revert with 0, 'SafeMath: addition overflow'
                                idx = idx + 1
                                s = mem[_24232 + 32] + _24083 + s
                                continue 
                            mem[mem[64] + 4] = address(_23598)
                            mem[mem[64] + 36] = address(cd[4])
                            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                    gas gas_remaining wei
                                   args address(_23598), address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24013 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24062 = mem[_24013]
                            if mem[_24013] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64] + 36] = _23654
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23654
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24382 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _24469 = mem[_24382 + 32]
                            mem[mem[64] + 36] = _24062
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24062
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24680 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _24469 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24680 + 32] + _24469 < _24469:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24680 + 32] + _24469 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_24680 + 32] + _24469 + s
                            continue 
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) != 3:
                            mem[mem[64] + 36] = _23654
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23654
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23895 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _23930 = mem[_23895 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24038 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _23930 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24038 + 32] + _23930 < _23930:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24038 + 32] + _23930 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_24038 + 32] + _23930 + s
                            continue 
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23822 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_23822] == mem[_23822 + 12 len 20]
                        if not mem[_23822 + 12 len 20]:
                            mem[mem[64] + 36] = _23654
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23654
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24086 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _24139 = mem[_24086 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24307 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _24139 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24307 + 32] + _24139 < _24139:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24307 + 32] + _24139 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_24307 + 32] + _24139 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24063 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24115 = mem[_24063]
                        if mem[_24063] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = _23654
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23654
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24470 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _24551 = mem[_24470 + 32]
                        mem[mem[64] + 36] = _24115
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24115
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24771 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _24551 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_24771 + 32] + _24551 < _24551:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_24771 + 32] + _24551 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_24771 + 32] + _24551 + s
                        continue 
                    if not _23654:
                        _23791 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_23791] = 26
                        mem[_23791 + 32] = 'SafeMath: division by zero'
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).minter() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23914 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _23954 = mem[_23914]
                        require mem[_23914] == mem[_23914 + 12 len 20]
                        _24173 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_24173] = 26
                        mem[_24173 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = 0
                        require ext_code.size(address(_23954))
                        staticcall address(_23954).amountMaximusToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24512 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24594 = mem[_24512]
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) == 2:
                            require ext_code.size(address(_23598))
                            staticcall address(_23598).maximusChef() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24938 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_24938] == mem[_24938 + 12 len 20]
                            if not mem[_24938 + 12 len 20]:
                                mem[mem[64] + 36] = 0
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25795 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                _25953 = mem[_25795 + 32]
                                mem[mem[64] + 36] = _24594
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24594
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _26369 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                if _25953 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_26369 + 32] + _25953 < _25953:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_26369 + 32] + _25953 + s < s:
                                    revert with 0, 'SafeMath: addition overflow'
                                idx = idx + 1
                                s = mem[_26369 + 32] + _25953 + s
                                continue 
                            mem[mem[64] + 4] = address(_23598)
                            mem[mem[64] + 36] = address(cd[4])
                            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                    gas gas_remaining wei
                                   args address(_23598), address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25722 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25879 = mem[_25722]
                            if mem[_25722] + _24594 < _24594:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26762 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _26964 = mem[_26762 + 32]
                            mem[mem[64] + 36] = _25879 + _24594
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25879 + _24594
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27509 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _26964 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27509 + 32] + _26964 < _26964:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27509 + 32] + _26964 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_27509 + 32] + _26964 + s
                            continue 
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) != 3:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25302 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _25432 = mem[_25302 + 32]
                            mem[mem[64] + 36] = _24594
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24594
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25796 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _25432 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25796 + 32] + _25432 < _25432:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25796 + 32] + _25432 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_25796 + 32] + _25432 + s
                            continue 
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25053 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_25053] == mem[_25053 + 12 len 20]
                        if not mem[_25053 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25956 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _26121 = mem[_25956 + 32]
                            mem[mem[64] + 36] = _24594
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24594
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26560 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _26121 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26560 + 32] + _26121 < _26121:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26560 + 32] + _26121 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_26560 + 32] + _26121 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25880 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26039 = mem[_25880]
                        if mem[_25880] + _24594 < _24594:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26965 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _27177 = mem[_26965 + 32]
                        mem[mem[64] + 36] = _26039 + _24594
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26039 + _24594
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27744 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _27177 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27744 + 32] + _27177 < _27177:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27744 + 32] + _27177 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_27744 + 32] + _27177 + s
                        continue 
                    if 70 * _23654 / _23654 != 70:
                        revert with 0, 'SafeMath: multiplication overflow'
                    _23801 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_23801] = 26
                    mem[_23801 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23931 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _23972 = mem[_23931]
                    require mem[_23931] == mem[_23931 + 12 len 20]
                    if not 70 * _23654 / 100:
                        _24203 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_24203] = 26
                        mem[_24203 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = 0
                        require ext_code.size(address(_23972))
                        staticcall address(_23972).amountMaximusToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24552 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24638 = mem[_24552]
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) == 2:
                            require ext_code.size(address(_23598))
                            staticcall address(_23598).maximusChef() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24986 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_24986] == mem[_24986 + 12 len 20]
                            if not mem[_24986 + 12 len 20]:
                                mem[mem[64] + 36] = 70 * _23654 / 100
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23654 / 100
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25876 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                _26034 = mem[_25876 + 32]
                                mem[mem[64] + 36] = _24638
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24638
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _26463 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                if _26034 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_26463 + 32] + _26034 < _26034:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_26463 + 32] + _26034 + s < s:
                                    revert with 0, 'SafeMath: addition overflow'
                                idx = idx + 1
                                s = mem[_26463 + 32] + _26034 + s
                                continue 
                            mem[mem[64] + 4] = address(_23598)
                            mem[mem[64] + 36] = address(cd[4])
                            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                    gas gas_remaining wei
                                   args address(_23598), address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25793 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25950 = mem[_25793]
                            if mem[_25793] + _24638 < _24638:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64] + 36] = 70 * _23654 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23654 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26854 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _27059 = mem[_26854 + 32]
                            mem[mem[64] + 36] = _25950 + _24638
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25950 + _24638
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27618 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _27059 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27618 + 32] + _27059 < _27059:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27618 + 32] + _27059 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_27618 + 32] + _27059 + s
                            continue 
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) != 3:
                            mem[mem[64] + 36] = 70 * _23654 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23654 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25365 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _25495 = mem[_25365 + 32]
                            mem[mem[64] + 36] = _24638
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24638
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25877 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _25495 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25877 + 32] + _25495 < _25495:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25877 + 32] + _25495 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_25877 + 32] + _25495 + s
                            continue 
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25115 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_25115] == mem[_25115 + 12 len 20]
                        if not mem[_25115 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _23654 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23654 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26037 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _26198 = mem[_26037 + 32]
                            mem[mem[64] + 36] = _24638
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24638
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26659 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _26198 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26659 + 32] + _26198 < _26198:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26659 + 32] + _26198 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_26659 + 32] + _26198 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25951 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26118 = mem[_25951]
                        if mem[_25951] + _24638 < _24638:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _23654 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23654 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27060 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _27284 = mem[_27060 + 32]
                        mem[mem[64] + 36] = _26118 + _24638
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26118 + _24638
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27863 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _27284 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27863 + 32] + _27284 < _27284:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27863 + 32] + _27284 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_27863 + 32] + _27284 + s
                        continue 
                    if 30 * 70 * _23654 / 100 / 70 * _23654 / 100 != 30:
                        revert with 0, 'SafeMath: multiplication overflow'
                    _24236 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_24236] = 26
                    mem[_24236 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 30 * 70 * _23654 / 100 / 100
                    require ext_code.size(address(_23972))
                    staticcall address(_23972).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (30 * 70 * _23654 / 100 / 100)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24593 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _24682 = mem[_24593]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25048 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_25048] == mem[_25048 + 12 len 20]
                        if not mem[_25048 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _23654 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23654 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25947 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _26113 = mem[_25947 + 32]
                            mem[mem[64] + 36] = _24682
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24682
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26551 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _26113 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26551 + 32] + _26113 < _26113:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26551 + 32] + _26113 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_26551 + 32] + _26113 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25874 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26031 = mem[_25874]
                        if mem[_25874] + _24682 < _24682:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _23654 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23654 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26957 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _27169 = mem[_26957 + 32]
                        mem[mem[64] + 36] = _26031 + _24682
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26031 + _24682
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27738 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _27169 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27738 + 32] + _27169 < _27169:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27738 + 32] + _27169 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_27738 + 32] + _27169 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 70 * _23654 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23654 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25429 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25571 = mem[_25429 + 32]
                        mem[mem[64] + 36] = _24682
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24682
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25948 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25571 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25948 + 32] + _25571 < _25571:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25948 + 32] + _25571 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_25948 + 32] + _25571 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25172 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_25172] == mem[_25172 + 12 len 20]
                    if not mem[_25172 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _23654 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23654 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26116 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _26286 = mem[_26116 + 32]
                        mem[mem[64] + 36] = _24682
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24682
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26759 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _26286 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26759 + 32] + _26286 < _26286:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26759 + 32] + _26286 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_26759 + 32] + _26286 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26032 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26195 = mem[_26032]
                    if mem[_26032] + _24682 < _24682:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _23654 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23654 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27170 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _27393 = mem[_27170 + 32]
                    mem[mem[64] + 36] = _26195 + _24682
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26195 + _24682
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27992 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _27393 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27992 + 32] + _27393 < _27393:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27992 + 32] + _27393 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_27992 + 32] + _27393 + s
                    continue 
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 3:
                    mem[mem[64] + 4] = address(cd[4])
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).earned(address rg1) with:
                            gas gas_remaining wei
                           args address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23629 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _23635 = mem[_23629]
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).stakingToken() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23651 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_23651] == mem[_23651 + 12 len 20]
                    mem[mem[64] + 4] = mem[_23651 + 12 len 20]
                    mem[mem[64] + 36] = _23635
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], _23635
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23702 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _23717 = mem[_23702]
                    mem[0] = address(_23598)
                    mem[32] = 102
                    if stor102[address(_23598)]:
                        mem[mem[64] + 36] = _23717
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23717
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23810 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _23847 = mem[_23810 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23942 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _23847 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_23942 + 32] + _23847 < _23847:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_23942 + 32] + _23847 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_23942 + 32] + _23847 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23781 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_23781] == mem[_23781 + 12 len 20]
                    if not mem[_23781 + 12 len 20]:
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) == 2:
                            require ext_code.size(address(_23598))
                            staticcall address(_23598).maximusChef() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24003 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_24003] == mem[_24003 + 12 len 20]
                            if not mem[_24003 + 12 len 20]:
                                mem[mem[64] + 36] = _23717
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23717
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24413 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                _24493 = mem[_24413 + 32]
                                mem[mem[64] + 36] = 0
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24712 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                if _24493 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_24712 + 32] + _24493 < _24493:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_24712 + 32] + _24493 + s < s:
                                    revert with 0, 'SafeMath: addition overflow'
                                idx = idx + 1
                                s = mem[_24712 + 32] + _24493 + s
                                continue 
                            mem[mem[64] + 4] = address(_23598)
                            mem[mem[64] + 36] = address(cd[4])
                            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                    gas gas_remaining wei
                                   args address(_23598), address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24369 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24457 = mem[_24369]
                            if mem[_24369] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64] + 36] = _23717
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23717
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24913 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _25029 = mem[_24913 + 32]
                            mem[mem[64] + 36] = _24457
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24457
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25345 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _25029 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25345 + 32] + _25029 < _25029:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25345 + 32] + _25029 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_25345 + 32] + _25029 + s
                            continue 
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) != 3:
                            mem[mem[64] + 36] = _23717
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23717
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24155 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _24220 = mem[_24155 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24414 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _24220 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24414 + 32] + _24220 < _24220:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24414 + 32] + _24220 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_24414 + 32] + _24220 + s
                            continue 
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24052 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_24052] == mem[_24052 + 12 len 20]
                        if not mem[_24052 + 12 len 20]:
                            mem[mem[64] + 36] = _23717
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23717
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24496 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _24576 = mem[_24496 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24810 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _24576 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24810 + 32] + _24576 < _24576:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24810 + 32] + _24576 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_24810 + 32] + _24576 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24458 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24539 = mem[_24458]
                        if mem[_24458] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = _23717
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23717
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25030 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25152 = mem[_25030 + 32]
                        mem[mem[64] + 36] = _24539
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24539
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25475 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25152 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25475 + 32] + _25152 < _25152:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25475 + 32] + _25152 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_25475 + 32] + _25152 + s
                        continue 
                    if not _23717:
                        _24006 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_24006] = 26
                        mem[_24006 + 32] = 'SafeMath: division by zero'
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).minter() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24192 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24263 = mem[_24192]
                        require mem[_24192] == mem[_24192 + 12 len 20]
                        _24628 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_24628] = 26
                        mem[_24628 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = 0
                        require ext_code.size(address(_24263))
                        staticcall address(_24263).amountMaximusToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25100 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25221 = mem[_25100]
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) == 2:
                            require ext_code.size(address(_23598))
                            staticcall address(_23598).maximusChef() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25698 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_25698] == mem[_25698 + 12 len 20]
                            if not mem[_25698 + 12 len 20]:
                                mem[mem[64] + 36] = 0
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _26827 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                _27029 = mem[_26827 + 32]
                                mem[mem[64] + 36] = _25221
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25221
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27587 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                if _27029 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_27587 + 32] + _27029 < _27029:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_27587 + 32] + _27029 + s < s:
                                    revert with 0, 'SafeMath: addition overflow'
                                idx = idx + 1
                                s = mem[_27587 + 32] + _27029 + s
                                continue 
                            mem[mem[64] + 4] = address(_23598)
                            mem[mem[64] + 36] = address(cd[4])
                            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                    gas gas_remaining wei
                                   args address(_23598), address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26733 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _26934 = mem[_26733]
                            if mem[_26733] + _25221 < _25221:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28088 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _28350 = mem[_28088 + 32]
                            mem[mem[64] + 36] = _26934 + _25221
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26934 + _25221
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29013 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _28350 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_29013 + 32] + _28350 < _28350:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_29013 + 32] + _28350 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_29013 + 32] + _28350 + s
                            continue 
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) != 3:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26172 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _26347 = mem[_26172 + 32]
                            mem[mem[64] + 36] = _25221
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25221
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26828 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _26347 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26828 + 32] + _26347 < _26347:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26828 + 32] + _26347 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_26828 + 32] + _26347 + s
                            continue 
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25853 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_25853] == mem[_25853 + 12 len 20]
                        if not mem[_25853 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27032 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _27250 = mem[_27032 + 32]
                            mem[mem[64] + 36] = _25221
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25221
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27831 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _27250 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27831 + 32] + _27250 < _27250:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27831 + 32] + _27250 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_27831 + 32] + _27250 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26935 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27143 = mem[_26935]
                        if mem[_26935] + _25221 < _25221:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28351 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28617 = mem[_28351 + 32]
                        mem[mem[64] + 36] = _27143 + _25221
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27143 + _25221
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29276 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28617 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29276 + 32] + _28617 < _28617:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29276 + 32] + _28617 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29276 + 32] + _28617 + s
                        continue 
                    if 70 * _23717 / _23717 != 70:
                        revert with 0, 'SafeMath: multiplication overflow'
                    _24025 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_24025] = 26
                    mem[_24025 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24221 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _24290 = mem[_24221]
                    require mem[_24221] == mem[_24221 + 12 len 20]
                    if not 70 * _23717 / 100:
                        _24664 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_24664] = 26
                        mem[_24664 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = 0
                        require ext_code.size(address(_24290))
                        staticcall address(_24290).amountMaximusToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25153 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25284 = mem[_25153]
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) == 2:
                            require ext_code.size(address(_23598))
                            staticcall address(_23598).maximusChef() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25767 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_25767] == mem[_25767 + 12 len 20]
                            if not mem[_25767 + 12 len 20]:
                                mem[mem[64] + 36] = 70 * _23717 / 100
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23717 / 100
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _26931 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                _27138 = mem[_26931 + 32]
                                mem[mem[64] + 36] = _25284
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25284
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27703 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                if _27138 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_27703 + 32] + _27138 < _27138:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_27703 + 32] + _27138 + s < s:
                                    revert with 0, 'SafeMath: addition overflow'
                                idx = idx + 1
                                s = mem[_27703 + 32] + _27138 + s
                                continue 
                            mem[mem[64] + 4] = address(_23598)
                            mem[mem[64] + 36] = address(cd[4])
                            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                    gas gas_remaining wei
                                   args address(_23598), address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26825 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27026 = mem[_26825]
                            if mem[_26825] + _25284 < _25284:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64] + 36] = 70 * _23717 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23717 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28222 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _28484 = mem[_28222 + 32]
                            mem[mem[64] + 36] = _27026 + _25284
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27026 + _25284
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29148 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _28484 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_29148 + 32] + _28484 < _28484:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_29148 + 32] + _28484 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_29148 + 32] + _28484 + s
                            continue 
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) != 3:
                            mem[mem[64] + 36] = 70 * _23717 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23717 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26265 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _26442 = mem[_26265 + 32]
                            mem[mem[64] + 36] = _25284
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25284
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26932 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _26442 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26932 + 32] + _26442 < _26442:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26932 + 32] + _26442 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_26932 + 32] + _26442 + s
                            continue 
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25928 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_25928] == mem[_25928 + 12 len 20]
                        if not mem[_25928 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _23717 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23717 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27141 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _27364 = mem[_27141 + 32]
                            mem[mem[64] + 36] = _25284
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25284
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27963 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _27364 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27963 + 32] + _27364 < _27364:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27963 + 32] + _27364 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_27963 + 32] + _27364 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27027 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27247 = mem[_27027]
                        if mem[_27027] + _25284 < _25284:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _23717 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23717 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28485 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28744 = mem[_28485 + 32]
                        mem[mem[64] + 36] = _27247 + _25284
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27247 + _25284
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29416 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28744 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29416 + 32] + _28744 < _28744:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29416 + 32] + _28744 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29416 + 32] + _28744 + s
                        continue 
                    if 30 * 70 * _23717 / 100 / 70 * _23717 / 100 != 30:
                        revert with 0, 'SafeMath: multiplication overflow'
                    _24716 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_24716] = 26
                    mem[_24716 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 30 * 70 * _23717 / 100 / 100
                    require ext_code.size(address(_24290))
                    staticcall address(_24290).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (30 * 70 * _23717 / 100 / 100)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25220 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25347 = mem[_25220]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25848 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_25848] == mem[_25848 + 12 len 20]
                        if not mem[_25848 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _23717 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23717 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27023 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _27242 = mem[_27023 + 32]
                            mem[mem[64] + 36] = _25347
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25347
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27822 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _27242 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27822 + 32] + _27242 < _27242:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27822 + 32] + _27242 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_27822 + 32] + _27242 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26929 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27135 = mem[_26929]
                        if mem[_26929] + _25347 < _25347:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _23717 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23717 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28343 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28609 = mem[_28343 + 32]
                        mem[mem[64] + 36] = _27135 + _25347
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27135 + _25347
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29270 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28609 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29270 + 32] + _28609 < _28609:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29270 + 32] + _28609 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29270 + 32] + _28609 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 70 * _23717 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23717 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26344 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _26527 = mem[_26344 + 32]
                        mem[mem[64] + 36] = _25347
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25347
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27024 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _26527 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27024 + 32] + _26527 < _26527:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27024 + 32] + _26527 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_27024 + 32] + _26527 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26007 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26007] == mem[_26007 + 12 len 20]
                    if not mem[_26007 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _23717 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23717 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27245 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _27468 = mem[_27245 + 32]
                        mem[mem[64] + 36] = _25347
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25347
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28085 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _27468 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28085 + 32] + _27468 < _27468:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28085 + 32] + _27468 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_28085 + 32] + _27468 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27136 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27361 = mem[_27136]
                    if mem[_27136] + _25347 < _25347:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _23717 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23717 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28610 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _28876 = mem[_28610 + 32]
                    mem[mem[64] + 36] = _27361 + _25347
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27361 + _25347
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29547 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _28876 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29547 + 32] + _28876 < _28876:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29547 + 32] + _28876 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_29547 + 32] + _28876 + s
                    continue 
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 1:
                    mem[mem[64] + 4] = address(cd[4])
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).earned(address rg1) with:
                            gas gas_remaining wei
                           args address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23636 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _23645 = mem[_23636]
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).stakingToken() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23664 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_23664] == mem[_23664 + 12 len 20]
                    mem[mem[64] + 4] = mem[_23664 + 12 len 20]
                    mem[mem[64] + 36] = _23645
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], _23645
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23719 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _23736 = mem[_23719]
                    mem[0] = address(_23598)
                    mem[32] = 102
                    if stor102[address(_23598)]:
                        mem[mem[64] + 36] = _23736
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23736
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23848 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _23888 = mem[_23848 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23986 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _23888 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_23986 + 32] + _23888 < _23888:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_23986 + 32] + _23888 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_23986 + 32] + _23888 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23813 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_23813] == mem[_23813 + 12 len 20]
                    if not mem[_23813 + 12 len 20]:
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) == 2:
                            require ext_code.size(address(_23598))
                            staticcall address(_23598).maximusChef() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24053 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_24053] == mem[_24053 + 12 len 20]
                            if not mem[_24053 + 12 len 20]:
                                mem[mem[64] + 36] = _23736
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23736
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24497 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                _24578 = mem[_24497 + 32]
                                mem[mem[64] + 36] = 0
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24812 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                if _24578 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_24812 + 32] + _24578 < _24578:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_24812 + 32] + _24578 + s < s:
                                    revert with 0, 'SafeMath: addition overflow'
                                idx = idx + 1
                                s = mem[_24812 + 32] + _24578 + s
                                continue 
                            mem[mem[64] + 4] = address(_23598)
                            mem[mem[64] + 36] = address(cd[4])
                            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                    gas gas_remaining wei
                                   args address(_23598), address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24459 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24540 = mem[_24459]
                            if mem[_24459] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64] + 36] = _23736
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23736
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25032 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _25155 = mem[_25032 + 32]
                            mem[mem[64] + 36] = _24540
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24540
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25478 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _25155 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25478 + 32] + _25155 < _25155:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25478 + 32] + _25155 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_25478 + 32] + _25155 + s
                            continue 
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) != 3:
                            mem[mem[64] + 36] = _23736
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23736
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24222 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _24293 = mem[_24222 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24498 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _24293 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24498 + 32] + _24293 < _24293:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24498 + 32] + _24293 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_24498 + 32] + _24293 + s
                            continue 
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24107 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_24107] == mem[_24107 + 12 len 20]
                        if not mem[_24107 + 12 len 20]:
                            mem[mem[64] + 36] = _23736
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23736
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24581 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _24667 = mem[_24581 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24921 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _24667 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24921 + 32] + _24667 < _24667:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24921 + 32] + _24667 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_24921 + 32] + _24667 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24541 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24630 = mem[_24541]
                        if mem[_24541] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = _23736
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23736
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25156 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25287 = mem[_25156 + 32]
                        mem[mem[64] + 36] = _24630
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24630
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25619 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25287 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25619 + 32] + _25287 < _25287:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25619 + 32] + _25287 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_25619 + 32] + _25287 + s
                        continue 
                    if not _23736:
                        _24056 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_24056] = 26
                        mem[_24056 + 32] = 'SafeMath: division by zero'
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).minter() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24265 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24341 = mem[_24265]
                        require mem[_24265] == mem[_24265 + 12 len 20]
                        _24722 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_24722] = 26
                        mem[_24722 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = 0
                        require ext_code.size(address(_24341))
                        staticcall address(_24341).amountMaximusToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25227 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25353 = mem[_25227]
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) == 2:
                            require ext_code.size(address(_23598))
                            staticcall address(_23598).maximusChef() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25858 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_25858] == mem[_25858 + 12 len 20]
                            if not mem[_25858 + 12 len 20]:
                                mem[mem[64] + 36] = 0
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27038 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                _27257 = mem[_27038 + 32]
                                mem[mem[64] + 36] = _25353
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25353
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27838 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                if _27257 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_27838 + 32] + _27257 < _27257:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_27838 + 32] + _27257 + s < s:
                                    revert with 0, 'SafeMath: addition overflow'
                                idx = idx + 1
                                s = mem[_27838 + 32] + _27257 + s
                                continue 
                            mem[mem[64] + 4] = address(_23598)
                            mem[mem[64] + 36] = address(cd[4])
                            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                    gas gas_remaining wei
                                   args address(_23598), address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26941 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27149 = mem[_26941]
                            if mem[_26941] + _25353 < _25353:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28358 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _28625 = mem[_28358 + 32]
                            mem[mem[64] + 36] = _27149 + _25353
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27149 + _25353
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29282 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _28625 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_29282 + 32] + _28625 < _28625:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_29282 + 32] + _28625 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_29282 + 32] + _28625 + s
                            continue 
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) != 3:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26350 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _26535 = mem[_26350 + 32]
                            mem[mem[64] + 36] = _25353
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25353
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27039 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _26535 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27039 + 32] + _26535 < _26535:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27039 + 32] + _26535 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_27039 + 32] + _26535 + s
                            continue 
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26017 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26017] == mem[_26017 + 12 len 20]
                        if not mem[_26017 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27260 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _27483 = mem[_27260 + 32]
                            mem[mem[64] + 36] = _25353
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25353
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28101 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _27483 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28101 + 32] + _27483 < _27483:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28101 + 32] + _27483 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_28101 + 32] + _27483 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27150 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27376 = mem[_27150]
                        if mem[_27150] + _25353 < _25353:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28626 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28891 = mem[_28626 + 32]
                        mem[mem[64] + 36] = _27376 + _25353
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27376 + _25353
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29558 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28891 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29558 + 32] + _28891 < _28891:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29558 + 32] + _28891 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29558 + 32] + _28891 + s
                        continue 
                    if 70 * _23736 / _23736 != 70:
                        revert with 0, 'SafeMath: multiplication overflow'
                    _24073 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_24073] = 26
                    mem[_24073 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24294 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _24373 = mem[_24294]
                    require mem[_24294] == mem[_24294 + 12 len 20]
                    if not 70 * _23736 / 100:
                        _24760 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_24760] = 26
                        mem[_24760 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = 0
                        require ext_code.size(address(_24373))
                        staticcall address(_24373).amountMaximusToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25288 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25419 = mem[_25288]
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) == 2:
                            require ext_code.size(address(_23598))
                            staticcall address(_23598).maximusChef() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25929 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_25929] == mem[_25929 + 12 len 20]
                            if not mem[_25929 + 12 len 20]:
                                mem[mem[64] + 36] = 70 * _23736 / 100
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23736 / 100
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27146 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                _27371 = mem[_27146 + 32]
                                mem[mem[64] + 36] = _25419
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25419
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27968 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                if _27371 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_27968 + 32] + _27371 < _27371:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_27968 + 32] + _27371 + s < s:
                                    revert with 0, 'SafeMath: addition overflow'
                                idx = idx + 1
                                s = mem[_27968 + 32] + _27371 + s
                                continue 
                            mem[mem[64] + 4] = address(_23598)
                            mem[mem[64] + 36] = address(cd[4])
                            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                    gas gas_remaining wei
                                   args address(_23598), address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27036 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27254 = mem[_27036]
                            if mem[_27036] + _25419 < _25419:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64] + 36] = 70 * _23736 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23736 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28491 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _28751 = mem[_28491 + 32]
                            mem[mem[64] + 36] = _27254 + _25419
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27254 + _25419
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29421 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _28751 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_29421 + 32] + _28751 < _28751:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_29421 + 32] + _28751 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_29421 + 32] + _28751 + s
                            continue 
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) != 3:
                            mem[mem[64] + 36] = 70 * _23736 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23736 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26447 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _26638 = mem[_26447 + 32]
                            mem[mem[64] + 36] = _25419
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25419
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27147 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _26638 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27147 + 32] + _26638 < _26638:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27147 + 32] + _26638 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_27147 + 32] + _26638 + s
                            continue 
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26100 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26100] == mem[_26100 + 12 len 20]
                        if not mem[_26100 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _23736 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23736 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27374 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _27595 = mem[_27374 + 32]
                            mem[mem[64] + 36] = _25419
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25419
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28233 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _27595 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28233 + 32] + _27595 < _27595:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28233 + 32] + _27595 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_28233 + 32] + _27595 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27255 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27480 = mem[_27255]
                        if mem[_27255] + _25419 < _25419:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _23736 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23736 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28752 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29021 = mem[_28752 + 32]
                        mem[mem[64] + 36] = _27480 + _25419
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27480 + _25419
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29704 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29021 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29704 + 32] + _29021 < _29021:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29704 + 32] + _29021 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29704 + 32] + _29021 + s
                        continue 
                    if 30 * 70 * _23736 / 100 / 70 * _23736 / 100 != 30:
                        revert with 0, 'SafeMath: multiplication overflow'
                    _24816 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_24816] = 26
                    mem[_24816 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 30 * 70 * _23736 / 100 / 100
                    require ext_code.size(address(_24373))
                    staticcall address(_24373).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (30 * 70 * _23736 / 100 / 100)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25352 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25480 = mem[_25352]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26012 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26012] == mem[_26012 + 12 len 20]
                        if not mem[_26012 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _23736 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23736 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27251 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _27475 = mem[_27251 + 32]
                            mem[mem[64] + 36] = _25480
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25480
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28092 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _27475 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28092 + 32] + _27475 < _27475:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28092 + 32] + _27475 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_28092 + 32] + _27475 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27144 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27368 = mem[_27144]
                        if mem[_27144] + _25480 < _25480:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _23736 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23736 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28618 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28883 = mem[_28618 + 32]
                        mem[mem[64] + 36] = _27368 + _25480
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27368 + _25480
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29552 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28883 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29552 + 32] + _28883 < _28883:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29552 + 32] + _28883 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29552 + 32] + _28883 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 70 * _23736 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23736 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26532 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _26737 = mem[_26532 + 32]
                        mem[mem[64] + 36] = _25480
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25480
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27252 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _26737 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27252 + 32] + _26737 < _26737:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27252 + 32] + _26737 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_27252 + 32] + _26737 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26176 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26176] == mem[_26176 + 12 len 20]
                    if not mem[_26176 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _23736 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23736 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27478 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _27711 = mem[_27478 + 32]
                        mem[mem[64] + 36] = _25480
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25480
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28355 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _27711 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28355 + 32] + _27711 < _27711:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28355 + 32] + _27711 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_28355 + 32] + _27711 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27369 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27592 = mem[_27369]
                    if mem[_27369] + _25480 < _25480:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _23736 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23736 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28884 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29154 = mem[_28884 + 32]
                    mem[mem[64] + 36] = _27592 + _25480
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27592 + _25480
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29845 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29154 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29845 + 32] + _29154 < _29154:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29845 + 32] + _29154 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_29845 + 32] + _29154 + s
                    continue 
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 7:
                    mem[mem[64] + 4] = address(cd[4])
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).earned(address rg1) with:
                            gas gas_remaining wei
                           args address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23650 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _23662 = mem[_23650]
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).stakingToken() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23673 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_23673] == mem[_23673 + 12 len 20]
                    mem[mem[64] + 4] = mem[_23673 + 12 len 20]
                    mem[mem[64] + 36] = _23662
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], _23662
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23739 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _23758 = mem[_23739]
                    mem[0] = address(_23598)
                    mem[32] = 102
                    if stor102[address(_23598)]:
                        mem[mem[64] + 36] = _23758
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23758
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23893 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _23927 = mem[_23893 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24035 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _23927 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_24035 + 32] + _23927 < _23927:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_24035 + 32] + _23927 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_24035 + 32] + _23927 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23856 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_23856] == mem[_23856 + 12 len 20]
                    if not mem[_23856 + 12 len 20]:
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) == 2:
                            require ext_code.size(address(_23598))
                            staticcall address(_23598).maximusChef() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24110 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_24110] == mem[_24110 + 12 len 20]
                            if not mem[_24110 + 12 len 20]:
                                mem[mem[64] + 36] = _23758
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23758
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24587 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                _24676 = mem[_24587 + 32]
                                mem[mem[64] + 36] = 0
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24928 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                if _24676 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_24928 + 32] + _24676 < _24676:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_24928 + 32] + _24676 + s < s:
                                    revert with 0, 'SafeMath: addition overflow'
                                idx = idx + 1
                                s = mem[_24928 + 32] + _24676 + s
                                continue 
                            mem[mem[64] + 4] = address(_23598)
                            mem[mem[64] + 36] = address(cd[4])
                            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                    gas gas_remaining wei
                                   args address(_23598), address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24547 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24634 = mem[_24547]
                            if mem[_24547] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64] + 36] = _23758
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23758
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25164 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _25297 = mem[_25164 + 32]
                            mem[mem[64] + 36] = _24634
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24634
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25628 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _25297 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25628 + 32] + _25297 < _25297:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25628 + 32] + _25297 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_25628 + 32] + _25297 + s
                            continue 
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) != 3:
                            mem[mem[64] + 36] = _23758
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23758
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24301 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _24380 = mem[_24301 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24588 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _24380 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24588 + 32] + _24380 < _24380:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24588 + 32] + _24380 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_24588 + 32] + _24380 + s
                            continue 
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24168 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_24168] == mem[_24168 + 12 len 20]
                        if not mem[_24168 + 12 len 20]:
                            mem[mem[64] + 36] = _23758
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23758
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24679 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _24768 = mem[_24679 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25044 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _24768 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25044 + 32] + _24768 < _24768:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25044 + 32] + _24768 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_25044 + 32] + _24768 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24635 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24726 = mem[_24635]
                        if mem[_24635] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = _23758
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23758
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25298 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25427 = mem[_25298 + 32]
                        mem[mem[64] + 36] = _24726
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24726
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25787 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25427 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25787 + 32] + _25427 < _25427:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25787 + 32] + _25427 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_25787 + 32] + _25427 + s
                        continue 
                    if not _23758:
                        _24113 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_24113] = 26
                        mem[_24113 + 32] = 'SafeMath: division by zero'
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).minter() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24346 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24426 = mem[_24346]
                        require mem[_24346] == mem[_24346 + 12 len 20]
                        _24824 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_24824] = 26
                        mem[_24824 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = 0
                        require ext_code.size(address(_24426))
                        staticcall address(_24426).amountMaximusToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25362 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25490 = mem[_25362]
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) == 2:
                            require ext_code.size(address(_23598))
                            staticcall address(_23598).maximusChef() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26028 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_26028] == mem[_26028 + 12 len 20]
                            if not mem[_26028 + 12 len 20]:
                                mem[mem[64] + 36] = 0
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27275 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                _27500 = mem[_27275 + 32]
                                mem[mem[64] + 36] = _25490
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25490
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28117 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                if _27500 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_28117 + 32] + _27500 < _27500:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_28117 + 32] + _27500 + s < s:
                                    revert with 0, 'SafeMath: addition overflow'
                                idx = idx + 1
                                s = mem[_28117 + 32] + _27500 + s
                                continue 
                            mem[mem[64] + 4] = address(_23598)
                            mem[mem[64] + 36] = address(cd[4])
                            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                    gas gas_remaining wei
                                   args address(_23598), address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27166 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27389 = mem[_27166]
                            if mem[_27166] + _25490 < _25490:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28645 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _28909 = mem[_28645 + 32]
                            mem[mem[64] + 36] = _27389 + _25490
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27389 + _25490
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29574 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _28909 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_29574 + 32] + _28909 < _28909:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_29574 + 32] + _28909 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_29574 + 32] + _28909 + s
                            continue 
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) != 3:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26550 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _26755 = mem[_26550 + 32]
                            mem[mem[64] + 36] = _25490
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25490
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27276 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _26755 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27276 + 32] + _26755 < _26755:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27276 + 32] + _26755 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_27276 + 32] + _26755 + s
                            continue 
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26193 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26193] == mem[_26193 + 12 len 20]
                        if not mem[_26193 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27503 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _27737 = mem[_27503 + 32]
                            mem[mem[64] + 36] = _25490
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25490
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28382 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _27737 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28382 + 32] + _27737 < _27737:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28382 + 32] + _27737 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_28382 + 32] + _27737 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27390 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27615 = mem[_27390]
                        if mem[_27390] + _25490 < _25490:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28910 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29176 = mem[_28910 + 32]
                        mem[mem[64] + 36] = _27615 + _25490
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27615 + _25490
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29868 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29176 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29868 + 32] + _29176 < _29176:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29868 + 32] + _29176 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29868 + 32] + _29176 + s
                        continue 
                    if 70 * _23758 / _23758 != 70:
                        revert with 0, 'SafeMath: multiplication overflow'
                    _24135 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_24135] = 26
                    mem[_24135 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24381 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _24467 = mem[_24381]
                    require mem[_24381] == mem[_24381 + 12 len 20]
                    if not 70 * _23758 / 100:
                        _24873 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_24873] = 26
                        mem[_24873 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = 0
                        require ext_code.size(address(_24467))
                        staticcall address(_24467).amountMaximusToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25428 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25568 = mem[_25428]
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) == 2:
                            require ext_code.size(address(_23598))
                            staticcall address(_23598).maximusChef() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26109 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_26109] == mem[_26109 + 12 len 20]
                            if not mem[_26109 + 12 len 20]:
                                mem[mem[64] + 36] = 70 * _23758 / 100
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23758 / 100
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27386 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                _27610 = mem[_27386 + 32]
                                mem[mem[64] + 36] = _25568
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25568
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28245 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                if _27610 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_28245 + 32] + _27610 < _27610:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_28245 + 32] + _27610 + s < s:
                                    revert with 0, 'SafeMath: addition overflow'
                                idx = idx + 1
                                s = mem[_28245 + 32] + _27610 + s
                                continue 
                            mem[mem[64] + 4] = address(_23598)
                            mem[mem[64] + 36] = address(cd[4])
                            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                    gas gas_remaining wei
                                   args address(_23598), address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27273 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27497 = mem[_27273]
                            if mem[_27273] + _25568 < _25568:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64] + 36] = 70 * _23758 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23758 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28768 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _29036 = mem[_28768 + 32]
                            mem[mem[64] + 36] = _27497 + _25568
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27497 + _25568
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29719 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _29036 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_29719 + 32] + _29036 < _29036:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_29719 + 32] + _29036 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_29719 + 32] + _29036 + s
                            continue 
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) != 3:
                            mem[mem[64] + 36] = 70 * _23758 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23758 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26653 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _26850 = mem[_26653 + 32]
                            mem[mem[64] + 36] = _25568
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25568
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27387 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _26850 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27387 + 32] + _26850 < _26850:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27387 + 32] + _26850 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_27387 + 32] + _26850 + s
                            continue 
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26283 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26283] == mem[_26283 + 12 len 20]
                        if not mem[_26283 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _23758 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23758 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27613 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _27855 = mem[_27613 + 32]
                            mem[mem[64] + 36] = _25568
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25568
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28510 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _27855 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28510 + 32] + _27855 < _27855:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28510 + 32] + _27855 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_28510 + 32] + _27855 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27498 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27734 = mem[_27498]
                        if mem[_27498] + _25568 < _25568:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _23758 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23758 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29037 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29297 = mem[_29037 + 32]
                        mem[mem[64] + 36] = _27734 + _25568
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27734 + _25568
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30008 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29297 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30008 + 32] + _29297 < _29297:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30008 + 32] + _29297 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30008 + 32] + _29297 + s
                        continue 
                    if 30 * 70 * _23758 / 100 / 70 * _23758 / 100 != 30:
                        revert with 0, 'SafeMath: multiplication overflow'
                    _24932 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_24932] = 26
                    mem[_24932 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 30 * 70 * _23758 / 100 / 100
                    require ext_code.size(address(_24467))
                    staticcall address(_24467).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (30 * 70 * _23758 / 100 / 100)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25489 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25630 = mem[_25489]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26188 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26188] == mem[_26188 + 12 len 20]
                        if not mem[_26188 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _23758 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23758 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27494 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _27729 = mem[_27494 + 32]
                            mem[mem[64] + 36] = _25630
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25630
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28373 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _27729 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28373 + 32] + _27729 < _27729:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28373 + 32] + _27729 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_28373 + 32] + _27729 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27384 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27607 = mem[_27384]
                        if mem[_27384] + _25630 < _25630:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _23758 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23758 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28902 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29168 = mem[_28902 + 32]
                        mem[mem[64] + 36] = _27607 + _25630
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27607 + _25630
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29862 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29168 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29862 + 32] + _29168 < _29168:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29862 + 32] + _29168 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29862 + 32] + _29168 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 70 * _23758 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23758 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26752 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _26952 = mem[_26752 + 32]
                        mem[mem[64] + 36] = _25630
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25630
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27495 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _26952 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27495 + 32] + _26952 < _26952:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27495 + 32] + _26952 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_27495 + 32] + _26952 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26361 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26361] == mem[_26361 + 12 len 20]
                    if not mem[_26361 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _23758 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23758 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27732 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _27984 = mem[_27732 + 32]
                        mem[mem[64] + 36] = _25630
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25630
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28642 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _27984 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28642 + 32] + _27984 < _27984:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28642 + 32] + _27984 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_28642 + 32] + _27984 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27608 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27852 = mem[_27608]
                    if mem[_27608] + _25630 < _25630:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _23758 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23758 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29169 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29435 = mem[_29169 + 32]
                    mem[mem[64] + 36] = _27852 + _25630
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27852 + _25630
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30142 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29435 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30142 + 32] + _29435 < _29435:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30142 + 32] + _29435 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30142 + 32] + _29435 + s
                    continue 
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 4:
                    mem[0] = address(_23598)
                    mem[32] = 102
                    if stor102[address(_23598)]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23668 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _23679 = mem[_23668 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23704 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _23679 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_23704 + 32] + _23679 < _23679:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_23704 + 32] + _23679 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_23704 + 32] + _23679 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23660 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_23660] == mem[_23660 + 12 len 20]
                    if not mem[_23660 + 12 len 20]:
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) == 2:
                            require ext_code.size(address(_23598))
                            staticcall address(_23598).maximusChef() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23727 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_23727] == mem[_23727 + 12 len 20]
                            if not mem[_23727 + 12 len 20]:
                                mem[mem[64] + 36] = 0
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _23923 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                _23964 = mem[_23923 + 32]
                                mem[mem[64] + 36] = 0
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24075 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                if _23964 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_24075 + 32] + _23964 < _23964:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_24075 + 32] + _23964 + s < s:
                                    revert with 0, 'SafeMath: addition overflow'
                                idx = idx + 1
                                s = mem[_24075 + 32] + _23964 + s
                                continue 
                            mem[mem[64] + 4] = address(_23598)
                            mem[mem[64] + 36] = address(cd[4])
                            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                    gas gas_remaining wei
                                   args address(_23598), address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23911 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _23946 = mem[_23911]
                            if mem[_23911] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24196 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _24267 = mem[_24196 + 32]
                            mem[mem[64] + 36] = _23946
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _23946
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24461 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _24267 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24461 + 32] + _24267 < _24267:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24461 + 32] + _24267 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_24461 + 32] + _24267 + s
                            continue 
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) != 3:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23799 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _23836 = mem[_23799 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23924 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _23836 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_23924 + 32] + _23836 < _23836:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_23924 + 32] + _23836 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_23924 + 32] + _23836 + s
                            continue 
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23748 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_23748] == mem[_23748 + 12 len 20]
                        if not mem[_23748 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23967 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _24011 = mem[_23967 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24131 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _24011 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24131 + 32] + _24011 < _24011:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24131 + 32] + _24011 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_24131 + 32] + _24011 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23947 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _23989 = mem[_23947]
                        if mem[_23947] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24268 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _24344 = mem[_24268 + 32]
                        mem[mem[64] + 36] = _23989
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _23989
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24544 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _24344 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_24544 + 32] + _24344 < _24344:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_24544 + 32] + _24344 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_24544 + 32] + _24344 + s
                        continue 
                    _23730 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_23730] = 26
                    mem[_23730 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23815 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _23853 = mem[_23815]
                    require mem[_23815] == mem[_23815 + 12 len 20]
                    _24033 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_24033] = 26
                    mem[_24033 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_23853))
                    staticcall address(_23853).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24299 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _24377 = mem[_24299]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24670 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_24670] == mem[_24670 + 12 len 20]
                        if not mem[_24670 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25420 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _25560 = mem[_25420 + 32]
                            mem[mem[64] + 36] = _24377
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24377
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25932 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _25560 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25932 + 32] + _25560 < _25560:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25932 + 32] + _25560 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_25932 + 32] + _25560 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25354 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25482 = mem[_25354]
                        if mem[_25354] + _24377 < _24377:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26270 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _26449 = mem[_26270 + 32]
                        mem[mem[64] + 36] = _25482 + _24377
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25482 + _24377
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26943 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _26449 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26943 + 32] + _26449 < _26449:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26943 + 32] + _26449 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_26943 + 32] + _26449 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24981 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25107 = mem[_24981 + 32]
                        mem[mem[64] + 36] = _24377
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24377
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25421 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25107 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25421 + 32] + _25107 < _25107:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25421 + 32] + _25107 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_25421 + 32] + _25107 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24765 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_24765] == mem[_24765 + 12 len 20]
                    if not mem[_24765 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25563 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25708 = mem[_25563 + 32]
                        mem[mem[64] + 36] = _24377
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24377
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26104 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25708 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26104 + 32] + _25708 < _25708:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26104 + 32] + _25708 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_26104 + 32] + _25708 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25483 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25623 = mem[_25483]
                    if mem[_25483] + _24377 < _24377:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26450 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _26643 = mem[_26450 + 32]
                    mem[mem[64] + 36] = _25623 + _24377
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25623 + _24377
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27153 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _26643 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27153 + 32] + _26643 < _26643:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27153 + 32] + _26643 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_27153 + 32] + _26643 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).rewardsToken() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23649 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_23649] == mem[_23649 + 12 len 20]
                require ext_code.size(mem[_23649 + 12 len 20])
                staticcall mem[_23649 + 12 len 20].priceShare() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23690 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _23699 = mem[_23690]
                mem[mem[64] + 4] = address(cd[4])
                require ext_code.size(address(_23598))
                staticcall address(_23598).earned(address rg1) with:
                        gas gas_remaining wei
                       args address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23738 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _23757 = mem[_23738]
                if not mem[_23738]:
                    _23854 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_23854] = 26
                    mem[_23854 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).rewardsToken() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23990 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_23990] == mem[_23990 + 12 len 20]
                    require ext_code.size(mem[_23990 + 12 len 20])
                    staticcall mem[_23990 + 12 len 20].stakingToken() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24200 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_24200] == mem[_24200 + 12 len 20]
                    mem[mem[64] + 4] = mem[_24200 + 12 len 20]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24586 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _24673 = mem[_24586]
                    mem[0] = address(_23598)
                    mem[32] = 102
                    if stor102[address(_23598)]:
                        mem[mem[64] + 36] = _24673
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24673
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25108 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25231 = mem[_25108 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25564 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25231 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25564 + 32] + _25231 < _25231:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25564 + 32] + _25231 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_25564 + 32] + _25231 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24983 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_24983] == mem[_24983 + 12 len 20]
                    if not mem[_24983 + 12 len 20]:
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) == 2:
                            require ext_code.size(address(_23598))
                            staticcall address(_23598).maximusChef() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25781 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_25781] == mem[_25781 + 12 len 20]
                            if not mem[_25781 + 12 len 20]:
                                mem[mem[64] + 36] = _24673
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24673
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _26947 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                _27157 = mem[_26947 + 32]
                                mem[mem[64] + 36] = 0
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27722 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                if _27157 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_27722 + 32] + _27157 < _27157:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_27722 + 32] + _27157 + s < s:
                                    revert with 0, 'SafeMath: addition overflow'
                                idx = idx + 1
                                s = mem[_27722 + 32] + _27157 + s
                                continue 
                            mem[mem[64] + 4] = address(_23598)
                            mem[mem[64] + 36] = address(cd[4])
                            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                    gas gas_remaining wei
                                   args address(_23598), address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26844 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27046 = mem[_26844]
                            if mem[_26844] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64] + 36] = _24673
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24673
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28238 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _28502 = mem[_28238 + 32]
                            mem[mem[64] + 36] = _27046
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27046
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29163 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _28502 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_29163 + 32] + _28502 < _28502:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_29163 + 32] + _28502 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_29163 + 32] + _28502 + s
                            continue 
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) != 3:
                            mem[mem[64] + 36] = _24673
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24673
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26277 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _26455 = mem[_26277 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26948 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _26455 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26948 + 32] + _26455 < _26455:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26948 + 32] + _26455 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_26948 + 32] + _26455 + s
                            continue 
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25941 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_25941] == mem[_25941 + 12 len 20]
                        if not mem[_25941 + 12 len 20]:
                            mem[mem[64] + 36] = _24673
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24673
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27160 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _27383 = mem[_27160 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27980 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _27383 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27980 + 32] + _27383 < _27383:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27980 + 32] + _27383 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_27980 + 32] + _27383 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27047 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27269 = mem[_27047]
                        if mem[_27047] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = _24673
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24673
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28503 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28765 = mem[_28503 + 32]
                        mem[mem[64] + 36] = _27269
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27269
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29430 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28765 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29430 + 32] + _28765 < _28765:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29430 + 32] + _28765 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29430 + 32] + _28765 + s
                        continue 
                    if not _24673:
                        _25784 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_25784] = 26
                        mem[_25784 + 32] = 'SafeMath: division by zero'
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).minter() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26357 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26547 = mem[_26357]
                        require mem[_26357] == mem[_26357 + 12 len 20]
                        _27493 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_27493] = 26
                        mem[_27493 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = 0
                        require ext_code.size(address(_26547))
                        staticcall address(_26547).amountMaximusToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28638 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28901 = mem[_28638]
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) == 2:
                            require ext_code.size(address(_23598))
                            staticcall address(_23598).maximusChef() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29859 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29859] == mem[_29859 + 12 len 20]
                            if not mem[_29859 + 12 len 20]:
                                mem[mem[64] + 36] = 0
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31709 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                _31977 = mem[_31709 + 32]
                                mem[mem[64] + 36] = _28901
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28901
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32634 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                if _31977 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_32634 + 32] + _31977 < _31977:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_32634 + 32] + _31977 + s < s:
                                    revert with 0, 'SafeMath: addition overflow'
                                idx = idx + 1
                                s = mem[_32634 + 32] + _31977 + s
                                continue 
                            mem[mem[64] + 4] = address(_23598)
                            mem[mem[64] + 36] = address(cd[4])
                            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                    gas gas_remaining wei
                                   args address(_23598), address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31564 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _31840 = mem[_31564]
                            if mem[_31564] + _28901 < _28901:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33129 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _33351 = mem[_33129 + 32]
                            mem[mem[64] + 36] = _31840 + _28901
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31840 + _28901
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33862 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _33351 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_33862 + 32] + _33351 < _33351:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_33862 + 32] + _33351 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_33862 + 32] + _33351 + s
                            continue 
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) != 3:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30713 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _30993 = mem[_30713 + 32]
                            mem[mem[64] + 36] = _28901
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28901
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31710 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _30993 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_31710 + 32] + _30993 < _30993:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_31710 + 32] + _30993 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_31710 + 32] + _30993 + s
                            continue 
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30139 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_30139] == mem[_30139 + 12 len 20]
                        if not mem[_30139 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31980 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _32251 = mem[_31980 + 32]
                            mem[mem[64] + 36] = _28901
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28901
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32883 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _32251 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_32883 + 32] + _32251 < _32251:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_32883 + 32] + _32251 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_32883 + 32] + _32251 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31841 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _32112 = mem[_31841]
                        if mem[_31841] + _28901 < _28901:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33352 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _33559 = mem[_33352 + 32]
                        mem[mem[64] + 36] = _32112 + _28901
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32112 + _28901
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34053 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _33559 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34053 + 32] + _33559 < _33559:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34053 + 32] + _33559 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_34053 + 32] + _33559 + s
                        continue 
                    if 70 * _24673 / _24673 != 70:
                        revert with 0, 'SafeMath: multiplication overflow'
                    _25867 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_25867] = 26
                    mem[_25867 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26456 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26650 = mem[_26456]
                    require mem[_26456] == mem[_26456 + 12 len 20]
                    if not 70 * _24673 / 100:
                        _27606 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_27606] = 26
                        mem[_27606 + 32] = 'SafeMath: division by zero'
                        mem[mem[64] + 4] = 0
                        require ext_code.size(address(_26650))
                        staticcall address(_26650).amountMaximusToMint(uint256 rg1) with:
                                gas gas_remaining wei
                               args 0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28766 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29032 = mem[_28766]
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) == 2:
                            require ext_code.size(address(_23598))
                            staticcall address(_23598).maximusChef() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30001 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_30001] == mem[_30001 + 12 len 20]
                            if not mem[_30001 + 12 len 20]:
                                mem[mem[64] + 36] = 70 * _24673 / 100
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24673 / 100
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31837 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                _32107 = mem[_31837 + 32]
                                mem[mem[64] + 36] = _29032
                                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                        gas gas_remaining wei
                                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29032
                                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32753 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 64
                                if _32107 < 0:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_32753 + 32] + _32107 < _32107:
                                    revert with 0, 'SafeMath: addition overflow'
                                if mem[_32753 + 32] + _32107 + s < s:
                                    revert with 0, 'SafeMath: addition overflow'
                                idx = idx + 1
                                s = mem[_32753 + 32] + _32107 + s
                                continue 
                            mem[mem[64] + 4] = address(_23598)
                            mem[mem[64] + 36] = address(cd[4])
                            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                    gas gas_remaining wei
                                   args address(_23598), address(cd[4])
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31707 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _31974 = mem[_31707]
                            if mem[_31707] + _29032 < _29032:
                                revert with 0, 'SafeMath: addition overflow'
                            mem[mem[64] + 36] = 70 * _24673 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24673 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33236 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _33453 = mem[_33236 + 32]
                            mem[mem[64] + 36] = _31974 + _29032
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31974 + _29032
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33949 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _33453 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_33949 + 32] + _33453 < _33453:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_33949 + 32] + _33453 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_33949 + 32] + _33453 + s
                            continue 
                        mem[0] = address(_23598)
                        mem[32] = 101
                        require uint8(poolTypes[address(_23598)]) <= 7
                        if uint8(poolTypes[address(_23598)]) != 3:
                            mem[mem[64] + 36] = 70 * _24673 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24673 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30847 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _31131 = mem[_30847 + 32]
                            mem[mem[64] + 36] = _29032
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29032
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31838 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _31131 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_31838 + 32] + _31131 < _31131:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_31838 + 32] + _31131 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_31838 + 32] + _31131 + s
                            continue 
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30282 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_30282] == mem[_30282 + 12 len 20]
                        if not mem[_30282 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _24673 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24673 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32110 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _32379 = mem[_32110 + 32]
                            mem[mem[64] + 36] = _29032
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29032
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33003 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _32379 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_33003 + 32] + _32379 < _32379:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_33003 + 32] + _32379 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_33003 + 32] + _32379 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31975 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _32248 = mem[_31975]
                        if mem[_31975] + _29032 < _29032:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _24673 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24673 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33454 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _33662 = mem[_33454 + 32]
                        mem[mem[64] + 36] = _32248 + _29032
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32248 + _29032
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34145 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _33662 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34145 + 32] + _33662 < _33662:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34145 + 32] + _33662 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_34145 + 32] + _33662 + s
                        continue 
                    if 30 * 70 * _24673 / 100 / 70 * _24673 / 100 != 30:
                        revert with 0, 'SafeMath: multiplication overflow'
                    _27726 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_27726] = 26
                    mem[_27726 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 30 * 70 * _24673 / 100 / 100
                    require ext_code.size(address(_26650))
                    staticcall address(_26650).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args (30 * 70 * _24673 / 100 / 100)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28900 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _29165 = mem[_28900]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30134 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_30134] == mem[_30134 + 12 len 20]
                        if not mem[_30134 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _24673 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24673 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31971 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _32243 = mem[_31971 + 32]
                            mem[mem[64] + 36] = _29165
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29165
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32874 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _32243 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_32874 + 32] + _32243 < _32243:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_32874 + 32] + _32243 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_32874 + 32] + _32243 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31835 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _32104 = mem[_31835]
                        if mem[_31835] + _29165 < _29165:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _24673 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24673 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33344 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _33551 = mem[_33344 + 32]
                        mem[mem[64] + 36] = _32104 + _29165
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32104 + _29165
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34047 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _33551 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34047 + 32] + _33551 < _33551:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34047 + 32] + _33551 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_34047 + 32] + _33551 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 70 * _24673 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24673 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30990 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _31277 = mem[_30990 + 32]
                        mem[mem[64] + 36] = _29165
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29165
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31972 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _31277 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31972 + 32] + _31277 < _31277:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31972 + 32] + _31277 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31972 + 32] + _31277 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30425 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_30425] == mem[_30425 + 12 len 20]
                    if not mem[_30425 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _24673 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24673 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32246 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _32506 = mem[_32246 + 32]
                        mem[mem[64] + 36] = _29165
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29165
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33126 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _32506 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33126 + 32] + _32506 < _32506:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33126 + 32] + _32506 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_33126 + 32] + _32506 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32105 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _32376 = mem[_32105]
                    if mem[_32105] + _29165 < _29165:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _24673 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24673 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33552 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33756 = mem[_33552 + 32]
                    mem[mem[64] + 36] = _32376 + _29165
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32376 + _29165
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34243 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33756 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34243 + 32] + _33756 < _33756:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34243 + 32] + _33756 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34243 + 32] + _33756 + s
                    continue 
                if _23699 * mem[_23738] / mem[_23738] != _23699:
                    revert with 0, 'SafeMath: multiplication overflow'
                _23874 = mem[64]
                mem[64] = mem[64] + 64
                mem[_23874] = 26
                mem[_23874 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).rewardsToken() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24012 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24012] == mem[_24012 + 12 len 20]
                require ext_code.size(mem[_24012 + 12 len 20])
                staticcall mem[_24012 + 12 len 20].stakingToken() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24228 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24228] == mem[_24228 + 12 len 20]
                mem[mem[64] + 4] = mem[_24228 + 12 len 20]
                mem[mem[64] + 36] = _23699 * _23757 / 10^18
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], _23699 * _23757 / 10^18
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24633 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _24723 = mem[_24633]
                mem[0] = address(_23598)
                mem[32] = 102
                if stor102[address(_23598)]:
                    mem[mem[64] + 36] = _24723
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24723
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25162 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _25294 = mem[_25162 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25624 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _25294 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_25624 + 32] + _25294 < _25294:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_25624 + 32] + _25294 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_25624 + 32] + _25294 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25040 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_25040] == mem[_25040 + 12 len 20]
                if not mem[_25040 + 12 len 20]:
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25863 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_25863] == mem[_25863 + 12 len 20]
                        if not mem[_25863 + 12 len 20]:
                            mem[mem[64] + 36] = _24723
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24723
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27043 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _27264 = mem[_27043 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27843 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _27264 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27843 + 32] + _27264 < _27264:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_27843 + 32] + _27264 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_27843 + 32] + _27264 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26945 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27154 = mem[_26945]
                        if mem[_26945] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = _24723
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24723
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28364 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28630 = mem[_28364 + 32]
                        mem[mem[64] + 36] = _27154
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27154
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29284 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28630 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29284 + 32] + _28630 < _28630:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29284 + 32] + _28630 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29284 + 32] + _28630 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = _24723
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24723
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26353 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _26542 = mem[_26353 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27044 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _26542 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27044 + 32] + _26542 < _26542:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27044 + 32] + _26542 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_27044 + 32] + _26542 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26023 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26023] == mem[_26023 + 12 len 20]
                    if not mem[_26023 + 12 len 20]:
                        mem[mem[64] + 36] = _24723
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24723
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27267 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _27488 = mem[_27267 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28108 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _27488 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28108 + 32] + _27488 < _27488:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28108 + 32] + _27488 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_28108 + 32] + _27488 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27155 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27380 = mem[_27155]
                    if mem[_27155] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _24723
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24723
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28631 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _28895 = mem[_28631 + 32]
                    mem[mem[64] + 36] = _27380
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27380
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29561 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _28895 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29561 + 32] + _28895 < _28895:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29561 + 32] + _28895 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_29561 + 32] + _28895 + s
                    continue 
                if not _24723:
                    _25866 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_25866] = 26
                    mem[_25866 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26452 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26647 = mem[_26452]
                    require mem[_26452] == mem[_26452 + 12 len 20]
                    _27603 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_27603] = 26
                    mem[_27603 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_26647))
                    staticcall address(_26647).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28762 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _29029 = mem[_28762]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29998 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_29998] == mem[_29998 + 12 len 20]
                        if not mem[_29998 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31832 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _32100 = mem[_31832 + 32]
                            mem[mem[64] + 36] = _29029
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29029
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32747 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _32100 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_32747 + 32] + _32100 < _32100:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_32747 + 32] + _32100 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_32747 + 32] + _32100 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31702 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _31969 = mem[_31702]
                        if mem[_31702] + _29029 < _29029:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33231 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _33448 = mem[_33231 + 32]
                        mem[mem[64] + 36] = _31969 + _29029
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31969 + _29029
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33945 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _33448 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33945 + 32] + _33448 < _33448:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33945 + 32] + _33448 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_33945 + 32] + _33448 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30844 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _31126 = mem[_30844 + 32]
                        mem[mem[64] + 36] = _29029
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29029
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31833 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _31126 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31833 + 32] + _31126 < _31126:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31833 + 32] + _31126 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31833 + 32] + _31126 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30278 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_30278] == mem[_30278 + 12 len 20]
                    if not mem[_30278 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32103 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _32374 = mem[_32103 + 32]
                        mem[mem[64] + 36] = _29029
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29029
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32996 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _32374 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32996 + 32] + _32374 < _32374:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32996 + 32] + _32374 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_32996 + 32] + _32374 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31970 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _32241 = mem[_31970]
                    if mem[_31970] + _29029 < _29029:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33449 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33655 = mem[_33449 + 32]
                    mem[mem[64] + 36] = _32241 + _29029
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32241 + _29029
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34140 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33655 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34140 + 32] + _33655 < _33655:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34140 + 32] + _33655 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34140 + 32] + _33655 + s
                    continue 
                if 70 * _24723 / _24723 != 70:
                    revert with 0, 'SafeMath: multiplication overflow'
                _25936 = mem[64]
                mem[64] = mem[64] + 64
                mem[_25936] = 26
                mem[_25936 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26543 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26747 = mem[_26543]
                require mem[_26543] == mem[_26543 + 12 len 20]
                if not 70 * _24723 / 100:
                    _27721 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_27721] = 26
                    mem[_27721 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_26747))
                    staticcall address(_26747).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28896 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _29162 = mem[_28896]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30129 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_30129] == mem[_30129 + 12 len 20]
                        if not mem[_30129 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _24723 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24723 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31966 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _32236 = mem[_31966 + 32]
                            mem[mem[64] + 36] = _29162
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29162
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32868 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _32236 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_32868 + 32] + _32236 < _32236:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_32868 + 32] + _32236 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_32868 + 32] + _32236 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31830 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _32097 = mem[_31830]
                        if mem[_31830] + _29162 < _29162:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _24723 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24723 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33338 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _33544 = mem[_33338 + 32]
                        mem[mem[64] + 36] = _32097 + _29162
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32097 + _29162
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34043 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _33544 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34043 + 32] + _33544 < _33544:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34043 + 32] + _33544 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_34043 + 32] + _33544 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 70 * _24723 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24723 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30989 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _31272 = mem[_30989 + 32]
                        mem[mem[64] + 36] = _29162
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29162
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31967 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _31272 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31967 + 32] + _31272 < _31272:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31967 + 32] + _31272 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31967 + 32] + _31272 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30421 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_30421] == mem[_30421 + 12 len 20]
                    if not mem[_30421 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _24723 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24723 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32239 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _32500 = mem[_32239 + 32]
                        mem[mem[64] + 36] = _29162
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29162
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33120 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _32500 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33120 + 32] + _32500 < _32500:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33120 + 32] + _32500 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_33120 + 32] + _32500 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32098 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _32371 = mem[_32098]
                    if mem[_32098] + _29162 < _29162:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _24723 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24723 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33545 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33750 = mem[_33545 + 32]
                    mem[mem[64] + 36] = _32371 + _29162
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32371 + _29162
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34238 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33750 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34238 + 32] + _33750 < _33750:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34238 + 32] + _33750 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34238 + 32] + _33750 + s
                    continue 
                if 30 * 70 * _24723 / 100 / 70 * _24723 / 100 != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                _27847 = mem[64]
                mem[64] = mem[64] + 64
                mem[_27847] = 26
                mem[_27847 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 30 * 70 * _24723 / 100 / 100
                require ext_code.size(address(_26747))
                staticcall address(_26747).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * 70 * _24723 / 100 / 100)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29028 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _29286 = mem[_29028]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30273 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_30273] == mem[_30273 + 12 len 20]
                    if not mem[_30273 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _24723 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24723 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32094 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _32366 = mem[_32094 + 32]
                        mem[mem[64] + 36] = _29286
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29286
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32987 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _32366 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32987 + 32] + _32366 < _32366:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32987 + 32] + _32366 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_32987 + 32] + _32366 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31964 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _32233 = mem[_31964]
                    if mem[_31964] + _29286 < _29286:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _24723 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24723 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33441 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33647 = mem[_33441 + 32]
                    mem[mem[64] + 36] = _32233 + _29286
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32233 + _29286
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34134 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33647 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34134 + 32] + _33647 < _33647:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34134 + 32] + _33647 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34134 + 32] + _33647 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _24723 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24723 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31123 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _31415 = mem[_31123 + 32]
                    mem[mem[64] + 36] = _29286
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29286
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32095 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _31415 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32095 + 32] + _31415 < _31415:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32095 + 32] + _31415 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32095 + 32] + _31415 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30560 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_30560] == mem[_30560 + 12 len 20]
                if not mem[_30560 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _24723 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24723 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32369 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32623 = mem[_32369 + 32]
                    mem[mem[64] + 36] = _29286
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29286
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33228 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32623 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33228 + 32] + _32623 < _32623:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33228 + 32] + _32623 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_33228 + 32] + _32623 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32234 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _32497 = mem[_32234]
                if mem[_32234] + _29286 < _29286:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _24723 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24723 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33648 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _33851 = mem[_33648 + 32]
                mem[mem[64] + 36] = _32497 + _29286
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32497 + _29286
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34333 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _33851 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34333 + 32] + _33851 < _33851:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34333 + 32] + _33851 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_34333 + 32] + _33851 + s
                continue 
            mem[mem[64] + 4] = address(cd[4])
            require ext_code.size(address(_23598))
            staticcall address(_23598).earned(address rg1) with:
                    gas gas_remaining wei
                   args address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _23614 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _23618 = mem[_23614]
            require ext_code.size(address(_23598))
            staticcall address(_23598).rewardsToken() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _23627 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_23627] == mem[_23627 + 12 len 20]
            mem[mem[64] + 4] = mem[_23627 + 12 len 20]
            mem[mem[64] + 36] = _23618
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], _23618
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _23677 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _23688 = mem[_23677]
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 2:
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23741 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _23764 = mem[_23741]
                mem[mem[64] + 36] = mem[_23741]
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _23764
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23841 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _23882 = mem[_23841]
                mem[0] = address(_23598)
                mem[32] = 102
                if stor102[address(_23598)]:
                    mem[mem[64] + 36] = _23882
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23882
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24044 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _24094 = mem[_24044 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24243 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _24094 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24243 + 32] + _24094 < _24094:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24243 + 32] + _24094 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_24243 + 32] + _24094 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24001 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24001] == mem[_24001 + 12 len 20]
                if not mem[_24001 + 12 len 20]:
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24357 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_24357] == mem[_24357 + 12 len 20]
                        if not mem[_24357 + 12 len 20]:
                            mem[mem[64] + 36] = _23882
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23882
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24954 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _25066 = mem[_24954 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25381 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _25066 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25381 + 32] + _25066 < _25066:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25381 + 32] + _25066 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_25381 + 32] + _25066 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24889 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25003 = mem[_24889]
                        if mem[_24889] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = _23882
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23882
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25654 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25811 = mem[_25654 + 32]
                        mem[mem[64] + 36] = _25003
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25003
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26222 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25811 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26222 + 32] + _25811 < _25811:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26222 + 32] + _25811 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_26222 + 32] + _25811 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = _23882
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23882
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24603 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _24691 = mem[_24603 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24955 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _24691 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_24955 + 32] + _24691 < _24691:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_24955 + 32] + _24691 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_24955 + 32] + _24691 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24443 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_24443] == mem[_24443 + 12 len 20]
                    if not mem[_24443 + 12 len 20]:
                        mem[mem[64] + 36] = _23882
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23882
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25069 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25189 = mem[_25069 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25518 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25189 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25518 + 32] + _25189 < _25189:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25518 + 32] + _25189 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_25518 + 32] + _25189 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25004 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25130 = mem[_25004]
                    if mem[_25004] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _23882
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23882
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25812 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _25971 = mem[_25812 + 32]
                    mem[mem[64] + 36] = _25130
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25130
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26391 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _25971 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_26391 + 32] + _25971 < _25971:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_26391 + 32] + _25971 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_26391 + 32] + _25971 + s
                    continue 
                if not _23882:
                    _24360 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_24360] = 26
                    mem[_24360 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24645 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _24742 = mem[_24645]
                    require mem[_24645] == mem[_24645 + 12 len 20]
                    _25258 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_25258] = 26
                    mem[_25258 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_24742))
                    staticcall address(_24742).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25902 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26061 = mem[_25902]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26689 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26689] == mem[_26689 + 12 len 20]
                        if not mem[_26689 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28160 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _28421 = mem[_28160 + 32]
                            mem[mem[64] + 36] = _26061
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26061
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29076 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _28421 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_29076 + 32] + _28421 < _28421:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_29076 + 32] + _28421 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_29076 + 32] + _28421 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28032 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28294 = mem[_28032]
                        if mem[_28032] + _26061 < _26061:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29620 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29910 = mem[_29620 + 32]
                        mem[mem[64] + 36] = _28294 + _26061
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28294 + _26061
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30618 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29910 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30618 + 32] + _29910 < _29910:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30618 + 32] + _29910 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30618 + 32] + _29910 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27312 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _27534 = mem[_27312 + 32]
                        mem[mem[64] + 36] = _26061
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26061
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28161 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _27534 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28161 + 32] + _27534 < _27534:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28161 + 32] + _27534 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_28161 + 32] + _27534 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26886 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26886] == mem[_26886 + 12 len 20]
                    if not mem[_26886 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28424 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28687 = mem[_28424 + 32]
                        mem[mem[64] + 36] = _26061
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26061
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29345 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28687 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29345 + 32] + _28687 < _28687:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29345 + 32] + _28687 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29345 + 32] + _28687 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28295 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _28557 = mem[_28295]
                    if mem[_28295] + _26061 < _26061:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29911 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _30193 = mem[_29911 + 32]
                    mem[mem[64] + 36] = _28557 + _26061
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28557 + _26061
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30897 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _30193 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30897 + 32] + _30193 < _30193:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30897 + 32] + _30193 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30897 + 32] + _30193 + s
                    continue 
                if 70 * _23882 / _23882 != 70:
                    revert with 0, 'SafeMath: multiplication overflow'
                _24391 = mem[64]
                mem[64] = mem[64] + 64
                mem[_24391] = 26
                mem[_24391 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24692 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _24785 = mem[_24692]
                require mem[_24692] == mem[_24692 + 12 len 20]
                if not 70 * _23882 / 100:
                    _25316 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_25316] = 26
                    mem[_25316 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_24785))
                    staticcall address(_24785).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25972 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26139 = mem[_25972]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26779 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26779] == mem[_26779 + 12 len 20]
                        if not mem[_26779 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _23882 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23882 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28291 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _28552 = mem[_28291 + 32]
                            mem[mem[64] + 36] = _26139
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26139
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29210 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _28552 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_29210 + 32] + _28552 < _28552:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_29210 + 32] + _28552 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_29210 + 32] + _28552 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28158 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28418 = mem[_28158]
                        if mem[_28158] + _26139 < _26139:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _23882 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23882 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29762 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30051 = mem[_29762 + 32]
                        mem[mem[64] + 36] = _28418 + _26139
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28418 + _26139
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30757 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30051 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30757 + 32] + _30051 < _30051:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30757 + 32] + _30051 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30757 + 32] + _30051 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 70 * _23882 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23882 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27424 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _27649 = mem[_27424 + 32]
                        mem[mem[64] + 36] = _26139
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26139
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28292 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _27649 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28292 + 32] + _27649 < _27649:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28292 + 32] + _27649 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_28292 + 32] + _27649 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26987 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26987] == mem[_26987 + 12 len 20]
                    if not mem[_26987 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _23882 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23882 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28555 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28813 = mem[_28555 + 32]
                        mem[mem[64] + 36] = _26139
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26139
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29483 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28813 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29483 + 32] + _28813 < _28813:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29483 + 32] + _28813 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29483 + 32] + _28813 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28419 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _28684 = mem[_28419]
                    if mem[_28419] + _26139 < _26139:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _23882 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23882 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30052 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _30337 = mem[_30052 + 32]
                    mem[mem[64] + 36] = _28684 + _26139
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28684 + _26139
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31041 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _30337 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31041 + 32] + _30337 < _30337:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31041 + 32] + _30337 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_31041 + 32] + _30337 + s
                    continue 
                if 30 * 70 * _23882 / 100 / 70 * _23882 / 100 != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                _25385 = mem[64]
                mem[64] = mem[64] + 64
                mem[_25385] = 26
                mem[_25385 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 30 * 70 * _23882 / 100 / 100
                require ext_code.size(address(_24785))
                staticcall address(_24785).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * 70 * _23882 / 100 / 100)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26060 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26224 = mem[_26060]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26881 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26881] == mem[_26881 + 12 len 20]
                    if not mem[_26881 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _23882 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23882 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28415 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28679 = mem[_28415 + 32]
                        mem[mem[64] + 36] = _26224
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26224
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29336 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28679 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29336 + 32] + _28679 < _28679:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29336 + 32] + _28679 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29336 + 32] + _28679 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28289 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _28549 = mem[_28289]
                    if mem[_28289] + _26224 < _26224:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _23882 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23882 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29903 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _30185 = mem[_29903 + 32]
                    mem[mem[64] + 36] = _28549 + _26224
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28549 + _26224
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30891 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _30185 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30891 + 32] + _30185 < _30185:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30891 + 32] + _30185 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30891 + 32] + _30185 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _23882 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23882 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27531 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _27770 = mem[_27531 + 32]
                    mem[mem[64] + 36] = _26224
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26224
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28416 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _27770 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_28416 + 32] + _27770 < _27770:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_28416 + 32] + _27770 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_28416 + 32] + _27770 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27090 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_27090] == mem[_27090 + 12 len 20]
                if not mem[_27090 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _23882 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23882 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28682 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _28943 = mem[_28682 + 32]
                    mem[mem[64] + 36] = _26224
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26224
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29617 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _28943 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29617 + 32] + _28943 < _28943:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29617 + 32] + _28943 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_29617 + 32] + _28943 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28550 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _28810 = mem[_28550]
                if mem[_28550] + _26224 < _26224:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _23882 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23882 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30186 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _30470 = mem[_30186 + 32]
                mem[mem[64] + 36] = _28810 + _26224
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28810 + _26224
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31174 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _30470 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_31174 + 32] + _30470 < _30470:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_31174 + 32] + _30470 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_31174 + 32] + _30470 + s
                continue 
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 3:
                mem[mem[64] + 4] = address(cd[4])
                require ext_code.size(address(_23598))
                staticcall address(_23598).earned(address rg1) with:
                        gas gas_remaining wei
                       args address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23792 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _23823 = mem[_23792]
                require ext_code.size(address(_23598))
                staticcall address(_23598).stakingToken() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23879 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_23879] == mem[_23879 + 12 len 20]
                mem[mem[64] + 4] = mem[_23879 + 12 len 20]
                mem[mem[64] + 36] = _23823
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], _23823
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24087 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _24140 = mem[_24087]
                mem[0] = address(_23598)
                mem[32] = 102
                if stor102[address(_23598)]:
                    mem[mem[64] + 36] = _24140
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24140
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24431 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _24514 = mem[_24431 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24730 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _24514 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24730 + 32] + _24514 < _24514:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24730 + 32] + _24514 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_24730 + 32] + _24514 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24350 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24350] == mem[_24350 + 12 len 20]
                if not mem[_24350 + 12 len 20]:
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24879 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_24879] == mem[_24879 + 12 len 20]
                        if not mem[_24879 + 12 len 20]:
                            mem[mem[64] + 36] = _24140
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24140
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25724 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _25882 = mem[_25724 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26292 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _25882 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26292 + 32] + _25882 < _25882:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26292 + 32] + _25882 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_26292 + 32] + _25882 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25640 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25798 = mem[_25640]
                        if mem[_25640] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = _24140
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24140
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26662 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _26861 = mem[_26662 + 32]
                        mem[mem[64] + 36] = _25798
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25798
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27399 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _26861 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27399 + 32] + _26861 < _26861:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27399 + 32] + _26861 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_27399 + 32] + _26861 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = _24140
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24140
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25240 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25368 = mem[_25240 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25725 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25368 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25725 + 32] + _25368 < _25368:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25725 + 32] + _25368 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_25725 + 32] + _25368 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24992 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_24992] == mem[_24992 + 12 len 20]
                    if not mem[_24992 + 12 len 20]:
                        mem[mem[64] + 36] = _24140
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24140
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25885 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _26042 = mem[_25885 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26472 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _26042 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26472 + 32] + _26042 < _26042:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26472 + 32] + _26042 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_26472 + 32] + _26042 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25799 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25958 = mem[_25799]
                    if mem[_25799] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _24140
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24140
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26862 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _27067 = mem[_26862 + 32]
                    mem[mem[64] + 36] = _25958
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25958
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27624 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _27067 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27624 + 32] + _27067 < _27067:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27624 + 32] + _27067 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_27624 + 32] + _27067 + s
                    continue 
                if not _24140:
                    _24882 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_24882] = 26
                    mem[_24882 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25304 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25436 = mem[_25304]
                    require mem[_25304] == mem[_25304 + 12 len 20]
                    _26126 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_26126] = 26
                    mem[_26126 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_25436))
                    staticcall address(_25436).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26971 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27182 = mem[_26971]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28001 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_28001] == mem[_28001 + 12 len 20]
                        if not mem[_28001 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29729 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _30017 = mem[_29729 + 32]
                            mem[mem[64] + 36] = _27182
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27182
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30722 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _30017 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_30722 + 32] + _30017 < _30017:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_30722 + 32] + _30017 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_30722 + 32] + _30017 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29584 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29875 = mem[_29584]
                        if mem[_29584] + _27182 < _27182:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31292 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _31577 = mem[_31292 + 32]
                        mem[mem[64] + 36] = _29875 + _27182
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29875 + _27182
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32257 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _31577 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32257 + 32] + _31577 < _31577:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32257 + 32] + _31577 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_32257 + 32] + _31577 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28780 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29049 = mem[_28780 + 32]
                        mem[mem[64] + 36] = _27182
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27182
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29730 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29049 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29730 + 32] + _29049 < _29049:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29730 + 32] + _29049 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29730 + 32] + _29049 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28262 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28262] == mem[_28262 + 12 len 20]
                    if not mem[_28262 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30020 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30298 = mem[_30020 + 32]
                        mem[mem[64] + 36] = _27182
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27182
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31007 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30298 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31007 + 32] + _30298 < _30298:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31007 + 32] + _30298 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31007 + 32] + _30298 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29876 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30155 = mem[_29876]
                    if mem[_29876] + _27182 < _27182:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31578 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _31854 = mem[_31578 + 32]
                    mem[mem[64] + 36] = _30155 + _27182
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30155 + _27182
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32518 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _31854 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32518 + 32] + _31854 < _31854:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32518 + 32] + _31854 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32518 + 32] + _31854 + s
                    continue 
                if 70 * _24140 / _24140 != 70:
                    revert with 0, 'SafeMath: multiplication overflow'
                _24941 = mem[64]
                mem[64] = mem[64] + 64
                mem[_24941] = 26
                mem[_24941 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25369 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25500 = mem[_25369]
                require mem[_25369] == mem[_25369 + 12 len 20]
                if not 70 * _24140 / 100:
                    _26204 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_26204] = 26
                    mem[_26204 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_25500))
                    staticcall address(_25500).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27068 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27290 = mem[_27068]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28127 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_28127] == mem[_28127 + 12 len 20]
                        if not mem[_28127 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _24140 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24140 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29872 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _30150 = mem[_29872 + 32]
                            mem[mem[64] + 36] = _27290
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27290
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30854 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _30150 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_30854 + 32] + _30150 < _30150:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_30854 + 32] + _30150 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_30854 + 32] + _30150 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29727 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30014 = mem[_29727]
                        if mem[_29727] + _27290 < _27290:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _24140 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24140 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31431 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _31717 = mem[_31431 + 32]
                        mem[mem[64] + 36] = _30014 + _27290
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30014 + _27290
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32385 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _31717 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32385 + 32] + _31717 < _31717:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32385 + 32] + _31717 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_32385 + 32] + _31717 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 70 * _24140 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24140 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28916 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29183 = mem[_28916 + 32]
                        mem[mem[64] + 36] = _27290
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27290
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29873 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29183 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29873 + 32] + _29183 < _29183:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29873 + 32] + _29183 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29873 + 32] + _29183 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28391 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28391] == mem[_28391 + 12 len 20]
                    if not mem[_28391 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _24140 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24140 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30153 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30436 = mem[_30153 + 32]
                        mem[mem[64] + 36] = _27290
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27290
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31142 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30436 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31142 + 32] + _30436 < _30436:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31142 + 32] + _30436 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31142 + 32] + _30436 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30015 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30295 = mem[_30015]
                    if mem[_30015] + _27290 < _27290:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _24140 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24140 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31718 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _31988 = mem[_31718 + 32]
                    mem[mem[64] + 36] = _30295 + _27290
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30295 + _27290
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32642 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _31988 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32642 + 32] + _31988 < _31988:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32642 + 32] + _31988 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32642 + 32] + _31988 + s
                    continue 
                if 30 * 70 * _24140 / 100 / 70 * _24140 / 100 != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                _26296 = mem[64]
                mem[64] = mem[64] + 64
                mem[_26296] = 26
                mem[_26296 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 30 * 70 * _24140 / 100 / 100
                require ext_code.size(address(_25500))
                staticcall address(_25500).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * 70 * _24140 / 100 / 100)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27181 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _27401 = mem[_27181]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28257 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28257] == mem[_28257 + 12 len 20]
                    if not mem[_28257 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _24140 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24140 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30011 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30290 = mem[_30011 + 32]
                        mem[mem[64] + 36] = _27401
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27401
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30998 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30290 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30998 + 32] + _30290 < _30290:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30998 + 32] + _30290 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30998 + 32] + _30290 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29870 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30147 = mem[_29870]
                    if mem[_29870] + _27401 < _27401:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _24140 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24140 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31570 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _31846 = mem[_31570 + 32]
                    mem[mem[64] + 36] = _30147 + _27401
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30147 + _27401
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32512 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _31846 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32512 + 32] + _31846 < _31846:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32512 + 32] + _31846 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32512 + 32] + _31846 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _24140 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24140 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29046 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29307 = mem[_29046 + 32]
                    mem[mem[64] + 36] = _27401
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27401
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30012 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29307 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30012 + 32] + _29307 < _29307:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30012 + 32] + _29307 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30012 + 32] + _29307 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28519 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_28519] == mem[_28519 + 12 len 20]
                if not mem[_28519 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _24140 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24140 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30293 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _30573 = mem[_30293 + 32]
                    mem[mem[64] + 36] = _27401
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27401
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31289 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _30573 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31289 + 32] + _30573 < _30573:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31289 + 32] + _30573 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_31289 + 32] + _30573 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30148 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _30433 = mem[_30148]
                if mem[_30148] + _27401 < _27401:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _24140 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24140 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31847 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _32116 = mem[_31847 + 32]
                mem[mem[64] + 36] = _30433 + _27401
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30433 + _27401
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32761 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _32116 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32761 + 32] + _32116 < _32116:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32761 + 32] + _32116 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_32761 + 32] + _32116 + s
                continue 
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 1:
                mem[mem[64] + 4] = address(cd[4])
                require ext_code.size(address(_23598))
                staticcall address(_23598).earned(address rg1) with:
                        gas gas_remaining wei
                       args address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23824 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _23860 = mem[_23824]
                require ext_code.size(address(_23598))
                staticcall address(_23598).stakingToken() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23916 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_23916] == mem[_23916 + 12 len 20]
                mem[mem[64] + 4] = mem[_23916 + 12 len 20]
                mem[mem[64] + 36] = _23860
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], _23860
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24142 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _24204 = mem[_24142]
                mem[0] = address(_23598)
                mem[32] = 102
                if stor102[address(_23598)]:
                    mem[mem[64] + 36] = _24204
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24204
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24515 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _24596 = mem[_24515 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24833 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _24596 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24833 + 32] + _24596 < _24596:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24833 + 32] + _24596 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_24833 + 32] + _24596 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24434 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24434] == mem[_24434 + 12 len 20]
                if not mem[_24434 + 12 len 20]:
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24993 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_24993] == mem[_24993 + 12 len 20]
                        if not mem[_24993 + 12 len 20]:
                            mem[mem[64] + 36] = _24204
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24204
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25886 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _26044 = mem[_25886 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26474 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _26044 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26474 + 32] + _26044 < _26044:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26474 + 32] + _26044 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_26474 + 32] + _26044 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25800 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25959 = mem[_25800]
                        if mem[_25800] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = _24204
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24204
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26864 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _27070 = mem[_26864 + 32]
                        mem[mem[64] + 36] = _25959
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25959
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27627 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _27070 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27627 + 32] + _27070 < _27070:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27627 + 32] + _27070 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_27627 + 32] + _27070 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = _24204
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24204
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25370 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25503 = mem[_25370 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25887 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25503 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25887 + 32] + _25503 < _25503:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25887 + 32] + _25503 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_25887 + 32] + _25503 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25122 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_25122] == mem[_25122 + 12 len 20]
                    if not mem[_25122 + 12 len 20]:
                        mem[mem[64] + 36] = _24204
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24204
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26047 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _26207 = mem[_26047 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26670 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _26207 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26670 + 32] + _26207 < _26207:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26670 + 32] + _26207 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_26670 + 32] + _26207 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25960 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26128 = mem[_25960]
                    if mem[_25960] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _24204
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24204
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27071 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _27293 = mem[_27071 + 32]
                    mem[mem[64] + 36] = _26128
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26128
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27873 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _27293 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27873 + 32] + _27293 < _27293:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27873 + 32] + _27293 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_27873 + 32] + _27293 + s
                    continue 
                if not _24204:
                    _24996 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_24996] = 26
                    mem[_24996 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25438 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25583 = mem[_25438]
                    require mem[_25438] == mem[_25438 + 12 len 20]
                    _26302 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_26302] = 26
                    mem[_26302 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_25583))
                    staticcall address(_25583).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27188 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27407 = mem[_27188]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28267 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_28267] == mem[_28267 + 12 len 20]
                        if not mem[_28267 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30026 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _30305 = mem[_30026 + 32]
                            mem[mem[64] + 36] = _27407
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27407
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31014 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _30305 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_31014 + 32] + _30305 < _30305:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_31014 + 32] + _30305 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_31014 + 32] + _30305 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29882 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30161 = mem[_29882]
                        if mem[_29882] + _27407 < _27407:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31585 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _31862 = mem[_31585 + 32]
                        mem[mem[64] + 36] = _30161 + _27407
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30161 + _27407
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32524 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _31862 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32524 + 32] + _31862 < _31862:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32524 + 32] + _31862 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_32524 + 32] + _31862 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29052 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29315 = mem[_29052 + 32]
                        mem[mem[64] + 36] = _27407
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27407
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30027 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29315 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30027 + 32] + _29315 < _29315:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30027 + 32] + _29315 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30027 + 32] + _29315 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28529 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28529] == mem[_28529 + 12 len 20]
                    if not mem[_28529 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30308 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30588 = mem[_30308 + 32]
                        mem[mem[64] + 36] = _27407
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27407
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31305 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30588 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31305 + 32] + _30588 < _30588:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31305 + 32] + _30588 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31305 + 32] + _30588 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30162 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30448 = mem[_30162]
                    if mem[_30162] + _27407 < _27407:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31863 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32131 = mem[_31863 + 32]
                    mem[mem[64] + 36] = _30448 + _27407
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30448 + _27407
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32772 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32131 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32772 + 32] + _32131 < _32131:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32772 + 32] + _32131 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32772 + 32] + _32131 + s
                    continue 
                if 70 * _24204 / _24204 != 70:
                    revert with 0, 'SafeMath: multiplication overflow'
                _25054 = mem[64]
                mem[64] = mem[64] + 64
                mem[_25054] = 26
                mem[_25054 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25504 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25644 = mem[_25504]
                require mem[_25504] == mem[_25504 + 12 len 20]
                if not 70 * _24204 / 100:
                    _26377 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_26377] = 26
                    mem[_26377 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_25644))
                    staticcall address(_25644).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27294 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27516 = mem[_27294]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28392 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_28392] == mem[_28392 + 12 len 20]
                        if not mem[_28392 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _24204 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24204 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30158 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _30443 = mem[_30158 + 32]
                            mem[mem[64] + 36] = _27516
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27516
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31147 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _30443 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_31147 + 32] + _30443 < _30443:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_31147 + 32] + _30443 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_31147 + 32] + _30443 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30024 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30302 = mem[_30024]
                        if mem[_30024] + _27516 < _27516:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _24204 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24204 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31724 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _31995 = mem[_31724 + 32]
                        mem[mem[64] + 36] = _30302 + _27516
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30302 + _27516
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32647 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _31995 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32647 + 32] + _31995 < _31995:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32647 + 32] + _31995 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_32647 + 32] + _31995 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 70 * _24204 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24204 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29188 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29455 = mem[_29188 + 32]
                        mem[mem[64] + 36] = _27516
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27516
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30159 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29455 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30159 + 32] + _29455 < _29455:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30159 + 32] + _29455 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30159 + 32] + _29455 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28660 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28660] == mem[_28660 + 12 len 20]
                    if not mem[_28660 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _24204 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24204 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30446 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30730 = mem[_30446 + 32]
                        mem[mem[64] + 36] = _27516
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27516
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31442 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30730 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31442 + 32] + _30730 < _30730:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31442 + 32] + _30730 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31442 + 32] + _30730 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30303 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30585 = mem[_30303]
                    if mem[_30303] + _27516 < _27516:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _24204 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24204 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31996 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32265 = mem[_31996 + 32]
                    mem[mem[64] + 36] = _30585 + _27516
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30585 + _27516
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32895 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32265 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32895 + 32] + _32265 < _32265:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32895 + 32] + _32265 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32895 + 32] + _32265 + s
                    continue 
                if 30 * 70 * _24204 / 100 / 70 * _24204 / 100 != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                _26478 = mem[64]
                mem[64] = mem[64] + 64
                mem[_26478] = 26
                mem[_26478 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 30 * 70 * _24204 / 100 / 100
                require ext_code.size(address(_25644))
                staticcall address(_25644).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * 70 * _24204 / 100 / 100)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27406 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _27629 = mem[_27406]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28524 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28524] == mem[_28524 + 12 len 20]
                    if not mem[_28524 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _24204 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24204 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30299 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30580 = mem[_30299 + 32]
                        mem[mem[64] + 36] = _27629
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27629
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31296 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30580 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31296 + 32] + _30580 < _30580:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31296 + 32] + _30580 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31296 + 32] + _30580 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30156 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30440 = mem[_30156]
                    if mem[_30156] + _27629 < _27629:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _24204 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24204 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31855 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32123 = mem[_31855 + 32]
                    mem[mem[64] + 36] = _30440 + _27629
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30440 + _27629
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32766 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32123 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32766 + 32] + _32123 < _32123:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32766 + 32] + _32123 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32766 + 32] + _32123 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _24204 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24204 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29312 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29588 = mem[_29312 + 32]
                    mem[mem[64] + 36] = _27629
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27629
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30300 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29588 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30300 + 32] + _29588 < _29588:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30300 + 32] + _29588 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30300 + 32] + _29588 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28784 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_28784] == mem[_28784 + 12 len 20]
                if not mem[_28784 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _24204 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24204 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30583 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _30862 = mem[_30583 + 32]
                    mem[mem[64] + 36] = _27629
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27629
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31582 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _30862 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31582 + 32] + _30862 < _30862:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31582 + 32] + _30862 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_31582 + 32] + _30862 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30441 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _30727 = mem[_30441]
                if mem[_30441] + _27629 < _27629:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _24204 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24204 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32124 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _32391 = mem[_32124 + 32]
                mem[mem[64] + 36] = _30727 + _27629
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30727 + _27629
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33012 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _32391 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33012 + 32] + _32391 < _32391:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33012 + 32] + _32391 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_33012 + 32] + _32391 + s
                continue 
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 7:
                mem[mem[64] + 4] = address(cd[4])
                require ext_code.size(address(_23598))
                staticcall address(_23598).earned(address rg1) with:
                        gas gas_remaining wei
                       args address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23865 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _23901 = mem[_23865]
                require ext_code.size(address(_23598))
                staticcall address(_23598).stakingToken() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23956 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_23956] == mem[_23956 + 12 len 20]
                mem[mem[64] + 4] = mem[_23956 + 12 len 20]
                mem[mem[64] + 36] = _23901
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], _23901
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24209 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _24279 = mem[_24209]
                mem[0] = address(_23598)
                mem[32] = 102
                if stor102[address(_23598)]:
                    mem[mem[64] + 36] = _24279
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24279
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24601 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _24688 = mem[_24601 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24952 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _24688 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24952 + 32] + _24688 < _24688:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24952 + 32] + _24688 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_24952 + 32] + _24688 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24523 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24523] == mem[_24523 + 12 len 20]
                if not mem[_24523 + 12 len 20]:
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25125 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_25125] == mem[_25125 + 12 len 20]
                        if not mem[_25125 + 12 len 20]:
                            mem[mem[64] + 36] = _24279
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24279
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26054 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _26218 = mem[_26054 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26679 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _26218 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26679 + 32] + _26218 < _26218:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26679 + 32] + _26218 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_26679 + 32] + _26218 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25967 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26135 = mem[_25967]
                        if mem[_25967] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = _24279
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24279
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27082 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _27307 = mem[_27082 + 32]
                        mem[mem[64] + 36] = _26135
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26135
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27889 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _27307 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27889 + 32] + _27307 < _27307:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27889 + 32] + _27307 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_27889 + 32] + _27307 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = _24279
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24279
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25512 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25652 = mem[_25512 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26055 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25652 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26055 + 32] + _25652 < _25652:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26055 + 32] + _25652 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_26055 + 32] + _25652 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25253 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_25253] == mem[_25253 + 12 len 20]
                    if not mem[_25253 + 12 len 20]:
                        mem[mem[64] + 36] = _24279
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24279
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26221 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _26388 = mem[_26221 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26877 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _26388 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26877 + 32] + _26388 < _26388:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26877 + 32] + _26388 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_26877 + 32] + _26388 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26136 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26309 = mem[_26136]
                    if mem[_26136] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _24279
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24279
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27308 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _27529 = mem[_27308 + 32]
                    mem[mem[64] + 36] = _26309
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26309
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28152 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _27529 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_28152 + 32] + _27529 < _27529:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_28152 + 32] + _27529 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_28152 + 32] + _27529 + s
                    continue 
                if not _24279:
                    _25128 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_25128] = 26
                    mem[_25128 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25589 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25738 = mem[_25589]
                    require mem[_25589] == mem[_25589 + 12 len 20]
                    _26489 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_26489] = 26
                    mem[_26489 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_25738))
                    staticcall address(_25738).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27421 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27644 = mem[_27421]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28546 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_28546] == mem[_28546 + 12 len 20]
                        if not mem[_28546 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30328 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _30609 = mem[_30328 + 32]
                            mem[mem[64] + 36] = _27644
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27644
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31323 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _30609 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_31323 + 32] + _30609 < _30609:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_31323 + 32] + _30609 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_31323 + 32] + _30609 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30182 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30466 = mem[_30182]
                        if mem[_30182] + _27644 < _27644:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31884 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _32151 = mem[_31884 + 32]
                        mem[mem[64] + 36] = _30466 + _27644
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30466 + _27644
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32788 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _32151 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32788 + 32] + _32151 < _32151:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32788 + 32] + _32151 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_32788 + 32] + _32151 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29335 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29613 = mem[_29335 + 32]
                        mem[mem[64] + 36] = _27644
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27644
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30329 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29613 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30329 + 32] + _29613 < _29613:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30329 + 32] + _29613 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30329 + 32] + _29613 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28808 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28808] == mem[_28808 + 12 len 20]
                    if not mem[_28808 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30612 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30890 = mem[_30612 + 32]
                        mem[mem[64] + 36] = _27644
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27644
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31611 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30890 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31611 + 32] + _30890 < _30890:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31611 + 32] + _30890 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31611 + 32] + _30890 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30467 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30754 = mem[_30467]
                    if mem[_30467] + _27644 < _27644:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32152 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32414 = mem[_32152 + 32]
                    mem[mem[64] + 36] = _30754 + _27644
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30754 + _27644
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33035 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32414 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33035 + 32] + _32414 < _32414:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33035 + 32] + _32414 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_33035 + 32] + _32414 + s
                    continue 
                if 70 * _24279 / _24279 != 70:
                    revert with 0, 'SafeMath: multiplication overflow'
                _25185 = mem[64]
                mem[64] = mem[64] + 64
                mem[_25185] = 26
                mem[_25185 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25653 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25809 = mem[_25653]
                require mem[_25653] == mem[_25653 + 12 len 20]
                if not 70 * _24279 / 100:
                    _26578 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_26578] = 26
                    mem[_26578 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_25809))
                    staticcall address(_25809).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27530 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27767 = mem[_27530]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28675 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_28675] == mem[_28675 + 12 len 20]
                        if not mem[_28675 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _24279 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24279 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30463 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _30749 = mem[_30463 + 32]
                            mem[mem[64] + 36] = _27767
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27767
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31457 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _30749 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_31457 + 32] + _30749 < _30749:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_31457 + 32] + _30749 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_31457 + 32] + _30749 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30326 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30606 = mem[_30326]
                        if mem[_30326] + _27767 < _27767:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _24279 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24279 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32014 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _32281 = mem[_32014 + 32]
                        mem[mem[64] + 36] = _30606 + _27767
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30606 + _27767
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32910 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _32281 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32910 + 32] + _32281 < _32281:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32910 + 32] + _32281 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_32910 + 32] + _32281 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 70 * _24279 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24279 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29477 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29758 = mem[_29477 + 32]
                        mem[mem[64] + 36] = _27767
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27767
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30464 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29758 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30464 + 32] + _29758 < _29758:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30464 + 32] + _29758 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30464 + 32] + _29758 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28940 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28940] == mem[_28940 + 12 len 20]
                    if not mem[_28940 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _24279 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24279 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30752 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _31033 = mem[_30752 + 32]
                        mem[mem[64] + 36] = _27767
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27767
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31745 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _31033 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31745 + 32] + _31033 < _31033:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31745 + 32] + _31033 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31745 + 32] + _31033 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30607 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30887 = mem[_30607]
                    if mem[_30607] + _27767 < _27767:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _24279 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24279 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32282 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32539 = mem[_32282 + 32]
                    mem[mem[64] + 36] = _30887 + _27767
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30887 + _27767
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33157 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32539 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33157 + 32] + _32539 < _32539:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33157 + 32] + _32539 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_33157 + 32] + _32539 + s
                    continue 
                if 30 * 70 * _24279 / 100 / 70 * _24279 / 100 != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                _26683 = mem[64]
                mem[64] = mem[64] + 64
                mem[_26683] = 26
                mem[_26683 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 30 * 70 * _24279 / 100 / 100
                require ext_code.size(address(_25809))
                staticcall address(_25809).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * 70 * _24279 / 100 / 100)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27643 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _27891 = mem[_27643]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28803 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28803] == mem[_28803 + 12 len 20]
                    if not mem[_28803 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _24279 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24279 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30603 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30882 = mem[_30603 + 32]
                        mem[mem[64] + 36] = _27891
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27891
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31602 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30882 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31602 + 32] + _30882 < _30882:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31602 + 32] + _30882 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31602 + 32] + _30882 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30461 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30746 = mem[_30461]
                    if mem[_30461] + _27891 < _27891:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _24279 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24279 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32144 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32406 = mem[_32144 + 32]
                    mem[mem[64] + 36] = _30746 + _27891
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30746 + _27891
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33029 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32406 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33029 + 32] + _32406 < _32406:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33029 + 32] + _32406 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_33029 + 32] + _32406 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _24279 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24279 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29610 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29898 = mem[_29610 + 32]
                    mem[mem[64] + 36] = _27891
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27891
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30604 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29898 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30604 + 32] + _29898 < _29898:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30604 + 32] + _29898 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30604 + 32] + _29898 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29068 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_29068] == mem[_29068 + 12 len 20]
                if not mem[_29068 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _24279 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24279 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30885 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _31166 = mem[_30885 + 32]
                    mem[mem[64] + 36] = _27891
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27891
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31881 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _31166 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31881 + 32] + _31166 < _31166:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31881 + 32] + _31166 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_31881 + 32] + _31166 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30747 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _31030 = mem[_30747]
                if mem[_30747] + _27891 < _27891:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _24279 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24279 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32407 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _32661 = mem[_32407 + 32]
                mem[mem[64] + 36] = _31030 + _27891
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31030 + _27891
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33262 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _32661 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33262 + 32] + _32661 < _32661:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33262 + 32] + _32661 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_33262 + 32] + _32661 + s
                continue 
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) != 4:
                mem[0] = address(_23598)
                mem[32] = 102
                if stor102[address(_23598)]:
                    mem[mem[64] + 36] = _23688
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23688
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23932 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _23974 = mem[_23932 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24089 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _23974 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24089 + 32] + _23974 < _23974:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24089 + 32] + _23974 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_24089 + 32] + _23974 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23899 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_23899] == mem[_23899 + 12 len 20]
                if not mem[_23899 + 12 len 20]:
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24174 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_24174] == mem[_24174 + 12 len 20]
                        if not mem[_24174 + 12 len 20]:
                            mem[mem[64] + 36] = _23688
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23688
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24684 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _24777 = mem[_24684 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25056 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _24777 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25056 + 32] + _24777 < _24777:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25056 + 32] + _24777 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_25056 + 32] + _24777 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24642 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24734 = mem[_24642]
                        if mem[_24642] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = _23688
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23688
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25308 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25440 = mem[_25308 + 32]
                        mem[mem[64] + 36] = _24734
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24734
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25802 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25440 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25802 + 32] + _25440 < _25440:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25802 + 32] + _25440 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_25802 + 32] + _25440 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = _23688
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23688
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24387 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _24474 = mem[_24387 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24685 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _24474 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_24685 + 32] + _24474 < _24474:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_24685 + 32] + _24474 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_24685 + 32] + _24474 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24242 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_24242] == mem[_24242 + 12 len 20]
                    if not mem[_24242 + 12 len 20]:
                        mem[mem[64] + 36] = _23688
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23688
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24780 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _24887 = mem[_24780 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25181 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _24887 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25181 + 32] + _24887 < _24887:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25181 + 32] + _24887 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_25181 + 32] + _24887 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24735 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _24836 = mem[_24735]
                    if mem[_24735] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _23688
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23688
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25441 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _25586 = mem[_25441 + 32]
                    mem[mem[64] + 36] = _24836
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24836
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25963 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _25586 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_25963 + 32] + _25586 < _25586:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_25963 + 32] + _25586 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_25963 + 32] + _25586 + s
                    continue 
                if not _23688:
                    _24177 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_24177] = 26
                    mem[_24177 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24436 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _24520 = mem[_24436]
                    require mem[_24436] == mem[_24436 + 12 len 20]
                    _24950 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_24950] = 26
                    mem[_24950 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_24520))
                    staticcall address(_24520).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25510 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25649 = mem[_25510]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26212 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26212] == mem[_26212 + 12 len 20]
                        if not mem[_26212 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27522 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _27759 = mem[_27522 + 32]
                            mem[mem[64] + 36] = _25649
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25649
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28400 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _27759 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28400 + 32] + _27759 < _27759:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28400 + 32] + _27759 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_28400 + 32] + _27759 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27413 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27636 = mem[_27413]
                        if mem[_27413] + _25649 < _25649:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28927 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29196 = mem[_28927 + 32]
                        mem[mem[64] + 36] = _27636 + _25649
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27636 + _25649
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29889 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29196 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29889 + 32] + _29196 < _29196:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29889 + 32] + _29196 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29889 + 32] + _29196 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26774 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _26979 = mem[_26774 + 32]
                        mem[mem[64] + 36] = _25649
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25649
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27523 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _26979 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27523 + 32] + _26979 < _26979:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27523 + 32] + _26979 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_27523 + 32] + _26979 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26385 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26385] == mem[_26385 + 12 len 20]
                    if not mem[_26385 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27762 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28018 = mem[_27762 + 32]
                        mem[mem[64] + 36] = _25649
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25649
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28670 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28018 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28670 + 32] + _28018 < _28018:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28670 + 32] + _28018 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_28670 + 32] + _28018 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27637 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27884 = mem[_27637]
                    if mem[_27637] + _25649 < _25649:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29197 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29467 = mem[_29197 + 32]
                    mem[mem[64] + 36] = _27884 + _25649
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27884 + _25649
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30169 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29467 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30169 + 32] + _29467 < _29467:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30169 + 32] + _29467 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30169 + 32] + _29467 + s
                    continue 
                if 70 * _23688 / _23688 != 70:
                    revert with 0, 'SafeMath: multiplication overflow'
                _24206 = mem[64]
                mem[64] = mem[64] + 64
                mem[_24206] = 26
                mem[_24206 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24475 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _24556 = mem[_24475]
                require mem[_24475] == mem[_24475 + 12 len 20]
                if not 70 * _23688 / 100:
                    _24999 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_24999] = 26
                    mem[_24999 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_24556))
                    staticcall address(_24556).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25587 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25733 = mem[_25587]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26303 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26303] == mem[_26303 + 12 len 20]
                        if not mem[_26303 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _23688 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23688 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27633 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _27879 = mem[_27633 + 32]
                            mem[mem[64] + 36] = _25733
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25733
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28532 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _27879 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28532 + 32] + _27879 < _27879:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28532 + 32] + _27879 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_28532 + 32] + _27879 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27520 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27756 = mem[_27520]
                        if mem[_27520] + _25733 < _25733:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _23688 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23688 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29054 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29319 = mem[_29054 + 32]
                        mem[mem[64] + 36] = _27756 + _25733
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27756 + _25733
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30031 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29319 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30031 + 32] + _29319 < _29319:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30031 + 32] + _29319 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30031 + 32] + _29319 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 70 * _23688 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23688 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26871 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _27077 = mem[_26871 + 32]
                        mem[mem[64] + 36] = _25733
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25733
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27634 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _27077 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27634 + 32] + _27077 < _27077:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27634 + 32] + _27077 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_27634 + 32] + _27077 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26483 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26483] == mem[_26483 + 12 len 20]
                    if not mem[_26483 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _23688 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23688 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27882 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28139 = mem[_27882 + 32]
                        mem[mem[64] + 36] = _25733
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25733
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28792 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28139 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28792 + 32] + _28139 < _28139:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28792 + 32] + _28139 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_28792 + 32] + _28139 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27757 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _28015 = mem[_27757]
                    if mem[_27757] + _25733 < _25733:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _23688 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23688 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29320 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29599 = mem[_29320 + 32]
                    mem[mem[64] + 36] = _28015 + _25733
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28015 + _25733
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30313 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29599 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30313 + 32] + _29599 < _29599:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30313 + 32] + _29599 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30313 + 32] + _29599 + s
                    continue 
                if 30 * 70 * _23688 / 100 / 70 * _23688 / 100 != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                _25060 = mem[64]
                mem[64] = mem[64] + 64
                mem[_25060] = 26
                mem[_25060 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 30 * 70 * _23688 / 100 / 100
                require ext_code.size(address(_24556))
                staticcall address(_24556).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * 70 * _23688 / 100 / 100)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25648 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25804 = mem[_25648]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26380 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26380] == mem[_26380 + 12 len 20]
                    if not mem[_26380 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _23688 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23688 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27753 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28010 = mem[_27753 + 32]
                        mem[mem[64] + 36] = _25804
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25804
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28661 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28010 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28661 + 32] + _28010 < _28010:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28661 + 32] + _28010 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_28661 + 32] + _28010 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27631 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27876 = mem[_27631]
                    if mem[_27631] + _25804 < _25804:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _23688 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23688 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29189 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29459 = mem[_29189 + 32]
                    mem[mem[64] + 36] = _27876 + _25804
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27876 + _25804
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30163 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29459 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30163 + 32] + _29459 < _29459:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30163 + 32] + _29459 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30163 + 32] + _29459 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _23688 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23688 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26976 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _27191 = mem[_26976 + 32]
                    mem[mem[64] + 36] = _25804
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25804
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27754 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _27191 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27754 + 32] + _27191 < _27191:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27754 + 32] + _27191 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_27754 + 32] + _27191 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26569 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_26569] == mem[_26569 + 12 len 20]
                if not mem[_26569 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _23688 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23688 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28013 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _28272 = mem[_28013 + 32]
                    mem[mem[64] + 36] = _25804
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25804
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28924 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _28272 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_28924 + 32] + _28272 < _28272:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_28924 + 32] + _28272 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_28924 + 32] + _28272 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27877 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _28136 = mem[_27877]
                if mem[_27877] + _25804 < _25804:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _23688 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23688 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29460 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _29742 = mem[_29460 + 32]
                mem[mem[64] + 36] = _28136 + _25804
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28136 + _25804
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30451 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _29742 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_30451 + 32] + _29742 < _29742:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_30451 + 32] + _29742 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_30451 + 32] + _29742 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).rewardsToken() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _23864 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_23864] == mem[_23864 + 12 len 20]
            require ext_code.size(mem[_23864 + 12 len 20])
            staticcall mem[_23864 + 12 len 20].priceShare() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _24015 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _24064 = mem[_24015]
            mem[mem[64] + 4] = address(cd[4])
            require ext_code.size(address(_23598))
            staticcall address(_23598).earned(address rg1) with:
                    gas gas_remaining wei
                   args address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _24208 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _24278 = mem[_24208]
            if not mem[_24208]:
                _24521 = mem[64]
                mem[64] = mem[64] + 64
                mem[_24521] = 26
                mem[_24521 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).rewardsToken() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24837 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24837] == mem[_24837 + 12 len 20]
                require ext_code.size(mem[_24837 + 12 len 20])
                staticcall mem[_24837 + 12 len 20].stakingToken() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25313 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_25313] == mem[_25313 + 12 len 20]
                mem[mem[64] + 4] = mem[_25313 + 12 len 20]
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26053 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _26215 = mem[_26053]
                mem[0] = address(_23598)
                mem[32] = 102
                if stor102[address(_23598)]:
                    mem[mem[64] + 36] = _26215
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _26215
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26980 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _27197 = mem[_26980 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27763 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _27197 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27763 + 32] + _27197 < _27197:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27763 + 32] + _27197 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_27763 + 32] + _27197 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26776 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_26776] == mem[_26776 + 12 len 20]
                if not mem[_26776 + 12 len 20]:
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28146 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_28146] == mem[_28146 + 12 len 20]
                        if not mem[_28146 + 12 len 20]:
                            mem[mem[64] + 36] = _26215
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _26215
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29893 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _30173 = mem[_29893 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30875 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _30173 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_30875 + 32] + _30173 < _30173:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_30875 + 32] + _30173 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_30875 + 32] + _30173 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29752 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30038 = mem[_29752]
                        if mem[_29752] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = _26215
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _26215
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31450 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _31737 = mem[_31450 + 32]
                        mem[mem[64] + 36] = _30038
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30038
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32401 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _31737 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32401 + 32] + _31737 < _31737:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32401 + 32] + _31737 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_32401 + 32] + _31737 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = _26215
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _26215
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28934 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29202 = mem[_28934 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29894 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29202 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29894 + 32] + _29202 < _29202:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29894 + 32] + _29202 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29894 + 32] + _29202 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28409 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28409] == mem[_28409 + 12 len 20]
                    if not mem[_28409 + 12 len 20]:
                        mem[mem[64] + 36] = _26215
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _26215
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30176 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30460 = mem[_30176 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31162 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30460 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31162 + 32] + _30460 < _30460:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31162 + 32] + _30460 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31162 + 32] + _30460 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30039 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30322 = mem[_30039]
                    if mem[_30039] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _26215
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _26215
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31738 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32011 = mem[_31738 + 32]
                    mem[mem[64] + 36] = _30322
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30322
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32656 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32011 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32656 + 32] + _32011 < _32011:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32656 + 32] + _32011 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32656 + 32] + _32011 + s
                    continue 
                if not _26215:
                    _28149 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_28149] = 26
                    mem[_28149 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29064 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _29332 = mem[_29064]
                    require mem[_29064] == mem[_29064 + 12 len 20]
                    _30602 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_30602] = 26
                    mem[_30602 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_29332))
                    staticcall address(_29332).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31877 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _32143 = mem[_31877]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33026 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_33026] == mem[_33026 + 12 len 20]
                        if not mem[_33026 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _34357 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _34532 = mem[_34357 + 32]
                            mem[mem[64] + 36] = _32143
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32143
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _34910 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _34532 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_34910 + 32] + _34532 < _34532:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_34910 + 32] + _34532 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_34910 + 32] + _34532 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34265 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _34448 = mem[_34265]
                        if mem[_34265] + _32143 < _32143:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _35185 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _35305 = mem[_35185 + 32]
                        mem[mem[64] + 36] = _34448 + _32143
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34448 + _32143
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _35570 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _35305 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35570 + 32] + _35305 < _35305:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35570 + 32] + _35305 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_35570 + 32] + _35305 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33680 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _33878 = mem[_33680 + 32]
                        mem[mem[64] + 36] = _32143
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32143
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34358 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _33878 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34358 + 32] + _33878 < _33878:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34358 + 32] + _33878 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_34358 + 32] + _33878 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33259 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_33259] == mem[_33259 + 12 len 20]
                    if not mem[_33259 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34535 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _34692 = mem[_34535 + 32]
                        mem[mem[64] + 36] = _32143
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32143
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _35055 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _34692 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35055 + 32] + _34692 < _34692:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35055 + 32] + _34692 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_35055 + 32] + _34692 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34449 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _34614 = mem[_34449]
                    if mem[_34449] + _32143 < _32143:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35306 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _35415 = mem[_35306 + 32]
                    mem[mem[64] + 36] = _34614 + _32143
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34614 + _32143
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35668 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _35415 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35668 + 32] + _35415 < _35415:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35668 + 32] + _35415 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_35668 + 32] + _35415 + s
                    continue 
                if 70 * _26215 / _26215 != 70:
                    revert with 0, 'SafeMath: multiplication overflow'
                _28282 = mem[64]
                mem[64] = mem[64] + 64
                mem[_28282] = 26
                mem[_28282 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29203 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _29474 = mem[_29203]
                require mem[_29203] == mem[_29203 + 12 len 20]
                if not 70 * _26215 / 100:
                    _30745 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_30745] = 26
                    mem[_30745 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_29474))
                    staticcall address(_29474).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32012 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _32277 = mem[_32012]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33150 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_33150] == mem[_33150 + 12 len 20]
                        if not mem[_33150 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _26215 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26215 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _34445 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _34609 = mem[_34445 + 32]
                            mem[mem[64] + 36] = _32277
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32277
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _34981 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _34609 < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_34981 + 32] + _34609 < _34609:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_34981 + 32] + _34609 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_34981 + 32] + _34609 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34355 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _34529 = mem[_34355]
                        if mem[_34355] + _32277 < _32277:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _26215 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26215 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _35243 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _35358 = mem[_35243 + 32]
                        mem[mem[64] + 36] = _34529 + _32277
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34529 + _32277
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _35615 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _35358 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35615 + 32] + _35358 < _35358:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35615 + 32] + _35358 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_35615 + 32] + _35358 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 70 * _26215 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26215 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33772 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _33965 = mem[_33772 + 32]
                        mem[mem[64] + 36] = _32277
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32277
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34446 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _33965 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34446 + 32] + _33965 < _33965:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34446 + 32] + _33965 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_34446 + 32] + _33965 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33372 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_33372] == mem[_33372 + 12 len 20]
                    if not mem[_33372 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _26215 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26215 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34612 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _34763 = mem[_34612 + 32]
                        mem[mem[64] + 36] = _32277
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32277
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _35121 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _34763 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35121 + 32] + _34763 < _34763:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35121 + 32] + _34763 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_35121 + 32] + _34763 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34530 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _34689 = mem[_34530]
                    if mem[_34530] + _32277 < _32277:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _26215 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26215 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35359 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _35466 = mem[_35359 + 32]
                    mem[mem[64] + 36] = _34689 + _32277
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34689 + _32277
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35711 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _35466 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35711 + 32] + _35466 < _35466:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35711 + 32] + _35466 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_35711 + 32] + _35466 + s
                    continue 
                if 30 * 70 * _26215 / 100 / 70 * _26215 / 100 != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                _30879 = mem[64]
                mem[64] = mem[64] + 64
                mem[_30879] = 26
                mem[_30879 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 30 * 70 * _26215 / 100 / 100
                require ext_code.size(address(_29474))
                staticcall address(_29474).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * 70 * _26215 / 100 / 100)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32142 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _32403 = mem[_32142]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33254 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_33254] == mem[_33254 + 12 len 20]
                    if not mem[_33254 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _26215 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26215 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34526 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _34684 = mem[_34526 + 32]
                        mem[mem[64] + 36] = _32403
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32403
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _35046 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _34684 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35046 + 32] + _34684 < _34684:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35046 + 32] + _34684 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_35046 + 32] + _34684 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34443 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _34606 = mem[_34443]
                    if mem[_34443] + _32403 < _32403:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _26215 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26215 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35298 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _35407 = mem[_35298 + 32]
                    mem[mem[64] + 36] = _34606 + _32403
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34606 + _32403
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35662 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _35407 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35662 + 32] + _35407 < _35407:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35662 + 32] + _35407 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_35662 + 32] + _35407 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _26215 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26215 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33875 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _34070 = mem[_33875 + 32]
                    mem[mem[64] + 36] = _32403
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32403
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34527 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _34070 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34527 + 32] + _34070 < _34070:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34527 + 32] + _34070 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34527 + 32] + _34070 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33473 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_33473] == mem[_33473 + 12 len 20]
                if not mem[_33473 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _26215 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26215 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34687 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _34835 = mem[_34687 + 32]
                    mem[mem[64] + 36] = _32403
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32403
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35182 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _34835 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35182 + 32] + _34835 < _34835:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35182 + 32] + _34835 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_35182 + 32] + _34835 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34607 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _34760 = mem[_34607]
                if mem[_34607] + _32403 < _32403:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _26215 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26215 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35408 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _35513 = mem[_35408 + 32]
                mem[mem[64] + 36] = _34760 + _32403
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34760 + _32403
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35752 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _35513 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35752 + 32] + _35513 < _35513:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35752 + 32] + _35513 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_35752 + 32] + _35513 + s
                continue 
            if _24064 * mem[_24208] / mem[_24208] != _24064:
                revert with 0, 'SafeMath: multiplication overflow'
            _24557 = mem[64]
            mem[64] = mem[64] + 64
            mem[_24557] = 26
            mem[_24557 + 32] = 'SafeMath: division by zero'
            require ext_code.size(address(_23598))
            staticcall address(_23598).rewardsToken() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _24888 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_24888] == mem[_24888 + 12 len 20]
            require ext_code.size(mem[_24888 + 12 len 20])
            staticcall mem[_24888 + 12 len 20].stakingToken() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25377 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_25377] == mem[_25377 + 12 len 20]
            mem[mem[64] + 4] = mem[_25377 + 12 len 20]
            mem[mem[64] + 36] = _24064 * _24278 / 10^18
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], _24064 * _24278 / 10^18
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _26134 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _26306 = mem[_26134]
            mem[0] = address(_23598)
            mem[32] = 102
            if stor102[address(_23598)]:
                mem[mem[64] + 36] = _26306
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _26306
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27080 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _27304 = mem[_27080 + 32]
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27885 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _27304 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_27885 + 32] + _27304 < _27304:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_27885 + 32] + _27304 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_27885 + 32] + _27304 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).minter() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _26873 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_26873] == mem[_26873 + 12 len 20]
            if not mem[_26873 + 12 len 20]:
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28278 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28278] == mem[_28278 + 12 len 20]
                    if not mem[_28278 + 12 len 20]:
                        mem[mem[64] + 36] = _26306
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _26306
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30035 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30317 = mem[_30035 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31021 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30317 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31021 + 32] + _30317 < _30317:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31021 + 32] + _30317 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31021 + 32] + _30317 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29891 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30170 = mem[_29891]
                    if mem[_29891] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _26306
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _26306
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31593 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _31869 = mem[_31593 + 32]
                    mem[mem[64] + 36] = _30170
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30170
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32526 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _31869 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32526 + 32] + _31869 < _31869:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32526 + 32] + _31869 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32526 + 32] + _31869 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = _26306
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _26306
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29060 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29327 = mem[_29060 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30036 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29327 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30036 + 32] + _29327 < _29327:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30036 + 32] + _29327 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30036 + 32] + _29327 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28541 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_28541] == mem[_28541 + 12 len 20]
                if not mem[_28541 + 12 len 20]:
                    mem[mem[64] + 36] = _26306
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _26306
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30320 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _30597 = mem[_30320 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31314 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _30597 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31314 + 32] + _30597 < _30597:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31314 + 32] + _30597 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_31314 + 32] + _30597 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30171 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _30457 = mem[_30171]
                if mem[_30171] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = _26306
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _26306
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31870 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _32137 = mem[_31870 + 32]
                mem[mem[64] + 36] = _30457
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30457
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32775 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _32137 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32775 + 32] + _32137 < _32137:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32775 + 32] + _32137 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_32775 + 32] + _32137 + s
                continue 
            if not _26306:
                _28281 = mem[64]
                mem[64] = mem[64] + 64
                mem[_28281] = 26
                mem[_28281 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29199 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _29471 = mem[_29199]
                require mem[_29199] == mem[_29199 + 12 len 20]
                _30742 = mem[64]
                mem[64] = mem[64] + 64
                mem[_30742] = 26
                mem[_30742 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(address(_29471))
                staticcall address(_29471).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32008 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _32274 = mem[_32008]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33147 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_33147] == mem[_33147 + 12 len 20]
                    if not mem[_33147 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34440 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _34602 = mem[_34440 + 32]
                        mem[mem[64] + 36] = _32274
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32274
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34975 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _34602 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34975 + 32] + _34602 < _34602:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34975 + 32] + _34602 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_34975 + 32] + _34602 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34350 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _34524 = mem[_34350]
                    if mem[_34350] + _32274 < _32274:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35238 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _35353 = mem[_35238 + 32]
                    mem[mem[64] + 36] = _34524 + _32274
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34524 + _32274
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35611 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _35353 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35611 + 32] + _35353 < _35353:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35611 + 32] + _35353 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_35611 + 32] + _35353 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33769 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33960 = mem[_33769 + 32]
                    mem[mem[64] + 36] = _32274
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32274
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34441 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33960 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34441 + 32] + _33960 < _33960:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34441 + 32] + _33960 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34441 + 32] + _33960 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33368 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_33368] == mem[_33368 + 12 len 20]
                if not mem[_33368 + 12 len 20]:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34605 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _34758 = mem[_34605 + 32]
                    mem[mem[64] + 36] = _32274
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32274
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35114 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _34758 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35114 + 32] + _34758 < _34758:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35114 + 32] + _34758 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_35114 + 32] + _34758 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34525 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _34682 = mem[_34525]
                if mem[_34525] + _32274 < _32274:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35354 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _35459 = mem[_35354 + 32]
                mem[mem[64] + 36] = _34682 + _32274
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34682 + _32274
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35706 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _35459 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35706 + 32] + _35459 < _35459:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35706 + 32] + _35459 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_35706 + 32] + _35459 + s
                continue 
            if 70 * _26306 / _26306 != 70:
                revert with 0, 'SafeMath: multiplication overflow'
            _28404 = mem[64]
            mem[64] = mem[64] + 64
            mem[_28404] = 26
            mem[_28404 + 32] = 'SafeMath: division by zero'
            require ext_code.size(address(_23598))
            staticcall address(_23598).minter() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _29328 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _29605 = mem[_29328]
            require mem[_29328] == mem[_29328 + 12 len 20]
            if not 70 * _26306 / 100:
                _30874 = mem[64]
                mem[64] = mem[64] + 64
                mem[_30874] = 26
                mem[_30874 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(address(_29605))
                staticcall address(_29605).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32138 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _32400 = mem[_32138]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33249 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_33249] == mem[_33249 + 12 len 20]
                    if not mem[_33249 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _26306 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26306 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34521 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _34677 = mem[_34521 + 32]
                        mem[mem[64] + 36] = _32400
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32400
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _35040 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _34677 < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35040 + 32] + _34677 < _34677:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35040 + 32] + _34677 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_35040 + 32] + _34677 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34438 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _34599 = mem[_34438]
                    if mem[_34438] + _32400 < _32400:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _26306 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26306 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35292 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _35400 = mem[_35292 + 32]
                    mem[mem[64] + 36] = _34599 + _32400
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34599 + _32400
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35658 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _35400 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35658 + 32] + _35400 < _35400:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35658 + 32] + _35400 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_35658 + 32] + _35400 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _26306 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26306 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33874 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _34065 = mem[_33874 + 32]
                    mem[mem[64] + 36] = _32400
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32400
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34522 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _34065 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34522 + 32] + _34065 < _34065:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34522 + 32] + _34065 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34522 + 32] + _34065 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33469 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_33469] == mem[_33469 + 12 len 20]
                if not mem[_33469 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _26306 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26306 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34680 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _34829 = mem[_34680 + 32]
                    mem[mem[64] + 36] = _32400
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32400
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35176 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _34829 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35176 + 32] + _34829 < _34829:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35176 + 32] + _34829 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_35176 + 32] + _34829 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34600 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _34755 = mem[_34600]
                if mem[_34600] + _32400 < _32400:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _26306 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26306 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35401 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _35507 = mem[_35401 + 32]
                mem[mem[64] + 36] = _34755 + _32400
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34755 + _32400
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35747 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _35507 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35747 + 32] + _35507 < _35507:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35747 + 32] + _35507 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_35747 + 32] + _35507 + s
                continue 
            if 30 * 70 * _26306 / 100 / 70 * _26306 / 100 != 30:
                revert with 0, 'SafeMath: multiplication overflow'
            _31025 = mem[64]
            mem[64] = mem[64] + 64
            mem[_31025] = 26
            mem[_31025 + 32] = 'SafeMath: division by zero'
            mem[mem[64] + 4] = 30 * 70 * _26306 / 100 / 100
            require ext_code.size(address(_29605))
            staticcall address(_29605).amountMaximusToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args (30 * 70 * _26306 / 100 / 100)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _32273 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _32528 = mem[_32273]
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 2:
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33363 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_33363] == mem[_33363 + 12 len 20]
                if not mem[_33363 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _26306 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26306 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34596 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _34750 = mem[_34596 + 32]
                    mem[mem[64] + 36] = _32528
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32528
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35105 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _34750 < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35105 + 32] + _34750 < _34750:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35105 + 32] + _34750 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_35105 + 32] + _34750 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34519 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _34674 = mem[_34519]
                if mem[_34519] + _32528 < _32528:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _26306 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26306 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35346 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _35451 = mem[_35346 + 32]
                mem[mem[64] + 36] = _34674 + _32528
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34674 + _32528
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35700 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _35451 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35700 + 32] + _35451 < _35451:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35700 + 32] + _35451 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_35700 + 32] + _35451 + s
                continue 
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) != 3:
                mem[mem[64] + 36] = 70 * _26306 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26306 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33957 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _34153 = mem[_33957 + 32]
                mem[mem[64] + 36] = _32528
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32528
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34597 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _34153 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34597 + 32] + _34153 < _34153:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34597 + 32] + _34153 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_34597 + 32] + _34153 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).maximusChef() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _33570 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_33570] == mem[_33570 + 12 len 20]
            if not mem[_33570 + 12 len 20]:
                mem[mem[64] + 36] = 70 * _26306 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26306 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34753 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _34899 = mem[_34753 + 32]
                mem[mem[64] + 36] = _32528
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32528
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35235 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _34899 < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35235 + 32] + _34899 < _34899:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35235 + 32] + _34899 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_35235 + 32] + _34899 + s
                continue 
            mem[mem[64] + 4] = address(_23598)
            mem[mem[64] + 36] = address(cd[4])
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(_23598), address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _34675 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _34826 = mem[_34675]
            if mem[_34675] + _32528 < _32528:
                revert with 0, 'SafeMath: addition overflow'
            mem[mem[64] + 36] = 70 * _26306 / 100
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26306 / 100
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _35452 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _35559 = mem[_35452 + 32]
            mem[mem[64] + 36] = _34826 + _32528
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34826 + _32528
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _35785 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if _35559 < 0:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_35785 + 32] + _35559 < _35559:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_35785 + 32] + _35559 + s < s:
                revert with 0, 'SafeMath: addition overflow'
            idx = idx + 1
            s = mem[_35785 + 32] + _35559 + s
            continue 
        require ext_code.size(address(_23598))
        staticcall address(_23598).stakingToken() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _23606 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _23608 = mem[_23606]
        require mem[_23606] == mem[_23606 + 12 len 20]
        mem[mem[64] + 4] = address(cd[4])
        require ext_code.size(address(_23598))
        staticcall address(_23598).principalOf(address rg1) with:
                gas gas_remaining wei
               args address(cd[4])
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _23619 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _23625 = mem[_23619]
        mem[mem[64] + 36] = mem[_23619]
        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                gas gas_remaining wei
               args address(_23608), _23625
        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _23644 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 64
        _23658 = mem[_23644 + 32]
        mem[0] = address(_23598)
        mem[32] = 101
        require uint8(poolTypes[address(_23598)]) <= 7
        if uint8(poolTypes[address(_23598)]):
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 2:
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23715 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _23735 = mem[_23715]
                mem[mem[64] + 36] = mem[_23715]
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _23735
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23798 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _23831 = mem[_23798]
                mem[0] = address(_23598)
                mem[32] = 102
                if stor102[address(_23598)]:
                    mem[mem[64] + 36] = _23831
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23831
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23981 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _24023 = mem[_23981 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24153 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _24023 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24153 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24153 + 32] + _24023 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_24153 + 32] + _24023 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23939 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_23939] == mem[_23939 + 12 len 20]
                if not mem[_23939 + 12 len 20]:
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24253 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_24253] == mem[_24253 + 12 len 20]
                        if not mem[_24253 + 12 len 20]:
                            mem[mem[64] + 36] = _23831
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23831
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24798 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _24901 = mem[_24798 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25204 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _24901 + _23658 < _23658:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25204 + 32] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_25204 + 32] + _24901 + _23658 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_25204 + 32] + _24901 + _23658 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24753 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24857 = mem[_24753]
                        if mem[_24753] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = _23831
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23831
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25462 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25604 = mem[_25462 + 32]
                        mem[mem[64] + 36] = _24857
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24857
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25991 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25604 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25991 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25991 + 32] + _25604 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_25991 + 32] + _25604 + _23658 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = _23831
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23831
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24485 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _24569 = mem[_24485 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24799 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _24569 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_24799 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_24799 + 32] + _24569 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_24799 + 32] + _24569 + _23658 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24328 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_24328] == mem[_24328 + 12 len 20]
                    if not mem[_24328 + 12 len 20]:
                        mem[mem[64] + 36] = _23831
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23831
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24904 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25019 = mem[_24904 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25336 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25019 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25336 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25336 + 32] + _25019 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_25336 + 32] + _25019 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24858 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _24971 = mem[_24858]
                    if mem[_24858] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _23831
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23831
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25605 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _25756 = mem[_25605 + 32]
                    mem[mem[64] + 36] = _24971
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24971
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26155 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _25756 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_26155 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_26155 + 32] + _25756 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_26155 + 32] + _25756 + _23658 + s
                    continue 
                if not _23831:
                    _24256 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_24256] = 26
                    mem[_24256 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24533 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _24618 = mem[_24533]
                    require mem[_24533] == mem[_24533 + 12 len 20]
                    _25088 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_25088] = 26
                    mem[_25088 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_24618))
                    staticcall address(_24618).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25679 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25834 = mem[_25679]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26419 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26419] == mem[_26419 + 12 len 20]
                        if not mem[_26419 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27803 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _28062 = mem[_27803 + 32]
                            mem[mem[64] + 36] = _25834
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25834
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28713 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _28062 + _23658 < _23658:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28713 + 32] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28713 + 32] + _28062 + _23658 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_28713 + 32] + _28062 + _23658 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27680 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27934 = mem[_27680]
                        if mem[_27680] + _25834 < _25834:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29250 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29521 = mem[_29250 + 32]
                        mem[mem[64] + 36] = _27934 + _25834
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27934 + _25834
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30237 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29521 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30237 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30237 + 32] + _29521 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30237 + 32] + _29521 + _23658 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27008 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _27224 = mem[_27008 + 32]
                        mem[mem[64] + 36] = _25834
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25834
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27804 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _27224 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27804 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27804 + 32] + _27224 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_27804 + 32] + _27224 + _23658 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26609 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26609] == mem[_26609 + 12 len 20]
                    if not mem[_26609 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28065 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28324 = mem[_28065 + 32]
                        mem[mem[64] + 36] = _25834
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25834
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28984 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28324 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28984 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28984 + 32] + _28324 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_28984 + 32] + _28324 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27935 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _28198 = mem[_27935]
                    if mem[_27935] + _25834 < _25834:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29522 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29810 = mem[_29522 + 32]
                    mem[mem[64] + 36] = _28198 + _25834
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28198 + _25834
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30519 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29810 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30519 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30519 + 32] + _29810 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30519 + 32] + _29810 + _23658 + s
                    continue 
                if 70 * _23831 / _23831 != 70:
                    revert with 0, 'SafeMath: multiplication overflow'
                _24285 = mem[64]
                mem[64] = mem[64] + 64
                mem[_24285] = 26
                mem[_24285 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24570 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _24657 = mem[_24570]
                require mem[_24570] == mem[_24570 + 12 len 20]
                if not 70 * _23831 / 100:
                    _25143 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_25143] = 26
                    mem[_25143 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_24657))
                    staticcall address(_24657).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25757 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25917 = mem[_25757]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26506 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_26506] == mem[_26506 + 12 len 20]
                        if not mem[_26506 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _23831 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23831 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27931 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _28193 = mem[_27931 + 32]
                            mem[mem[64] + 36] = _25917
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25917
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28842 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _28193 + _23658 < _23658:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28842 + 32] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_28842 + 32] + _28193 + _23658 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_28842 + 32] + _28193 + _23658 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27801 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28059 = mem[_27801]
                        if mem[_27801] + _25917 < _25917:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _23831 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23831 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29379 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29660 = mem[_29379 + 32]
                        mem[mem[64] + 36] = _28059 + _25917
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28059 + _25917
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30377 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29660 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30377 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30377 + 32] + _29660 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30377 + 32] + _29660 + _23658 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 70 * _23831 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23831 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27113 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _27335 = mem[_27113 + 32]
                        mem[mem[64] + 36] = _25917
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25917
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27932 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _27335 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27932 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27932 + 32] + _27335 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_27932 + 32] + _27335 + _23658 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26712 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26712] == mem[_26712 + 12 len 20]
                    if not mem[_26712 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _23831 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23831 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28196 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28453 = mem[_28196 + 32]
                        mem[mem[64] + 36] = _25917
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25917
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29113 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28453 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29113 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29113 + 32] + _28453 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29113 + 32] + _28453 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28060 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _28321 = mem[_28060]
                    if mem[_28060] + _25917 < _25917:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _23831 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23831 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29661 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29955 = mem[_29661 + 32]
                    mem[mem[64] + 36] = _28321 + _25917
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28321 + _25917
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30661 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29955 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30661 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30661 + 32] + _29955 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30661 + 32] + _29955 + _23658 + s
                    continue 
                if 30 * 70 * _23831 / 100 / 70 * _23831 / 100 != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                _25208 = mem[64]
                mem[64] = mem[64] + 64
                mem[_25208] = 26
                mem[_25208 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 30 * 70 * _23831 / 100 / 100
                require ext_code.size(address(_24657))
                staticcall address(_24657).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * 70 * _23831 / 100 / 100)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25833 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25993 = mem[_25833]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26604 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26604] == mem[_26604 + 12 len 20]
                    if not mem[_26604 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _23831 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23831 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28056 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28316 = mem[_28056 + 32]
                        mem[mem[64] + 36] = _25993
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25993
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28975 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28316 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28975 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28975 + 32] + _28316 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_28975 + 32] + _28316 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27929 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _28190 = mem[_27929]
                    if mem[_27929] + _25993 < _25993:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _23831 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23831 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29514 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29802 = mem[_29514 + 32]
                    mem[mem[64] + 36] = _28190 + _25993
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28190 + _25993
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30513 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29802 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30513 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30513 + 32] + _29802 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30513 + 32] + _29802 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _23831 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23831 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27221 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _27445 = mem[_27221 + 32]
                    mem[mem[64] + 36] = _25993
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25993
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28057 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _27445 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_28057 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_28057 + 32] + _27445 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_28057 + 32] + _27445 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26804 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_26804] == mem[_26804 + 12 len 20]
                if not mem[_26804 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _23831 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23831 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28319 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _28581 = mem[_28319 + 32]
                    mem[mem[64] + 36] = _25993
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25993
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29247 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _28581 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29247 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29247 + 32] + _28581 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_29247 + 32] + _28581 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28191 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _28450 = mem[_28191]
                if mem[_28191] + _25993 < _25993:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _23831 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23831 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29803 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _30090 = mem[_29803 + 32]
                mem[mem[64] + 36] = _28450 + _25993
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28450 + _25993
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30795 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _30090 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_30795 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_30795 + 32] + _30090 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_30795 + 32] + _30090 + _23658 + s
                continue 
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 3:
                mem[mem[64] + 4] = address(cd[4])
                require ext_code.size(address(_23598))
                staticcall address(_23598).earned(address rg1) with:
                        gas gas_remaining wei
                       args address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23751 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _23775 = mem[_23751]
                require ext_code.size(address(_23598))
                staticcall address(_23598).stakingToken() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23828 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_23828] == mem[_23828 + 12 len 20]
                mem[mem[64] + 4] = mem[_23828 + 12 len 20]
                mem[mem[64] + 36] = _23775
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], _23775
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24016 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _24065 = mem[_24016]
                mem[0] = address(_23598)
                mem[32] = 102
                if stor102[address(_23598)]:
                    mem[mem[64] + 36] = _24065
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24065
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24316 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _24394 = mem[_24316 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24606 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _24394 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24606 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24606 + 32] + _24394 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_24606 + 32] + _24394 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24246 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24246] == mem[_24246 + 12 len 20]
                if not mem[_24246 + 12 len 20]:
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24743 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_24743] == mem[_24743 + 12 len 20]
                        if not mem[_24743 + 12 len 20]:
                            mem[mem[64] + 36] = _24065
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24065
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25520 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _25660 = mem[_25520 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26062 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _25660 + _23658 < _23658:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26062 + 32] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26062 + 32] + _25660 + _23658 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_26062 + 32] + _25660 + _23658 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25449 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25592 = mem[_25449]
                        if mem[_25449] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = _24065
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24065
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26394 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _26585 = mem[_26394 + 32]
                        mem[mem[64] + 36] = _25592
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25592
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27093 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _26585 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27093 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27093 + 32] + _26585 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_27093 + 32] + _26585 + _23658 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = _24065
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24065
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25070 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25192 = mem[_25070 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25521 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25192 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25521 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25521 + 32] + _25192 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_25521 + 32] + _25192 + _23658 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24847 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_24847] == mem[_24847 + 12 len 20]
                    if not mem[_24847 + 12 len 20]:
                        mem[mem[64] + 36] = _24065
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24065
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25663 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25816 = mem[_25663 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26229 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25816 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26229 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26229 + 32] + _25816 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_26229 + 32] + _25816 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25593 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25744 = mem[_25593]
                    if mem[_25593] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _24065
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24065
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26586 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _26784 = mem[_26586 + 32]
                    mem[mem[64] + 36] = _25744
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25744
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27315 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _26784 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27315 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27315 + 32] + _26784 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_27315 + 32] + _26784 + _23658 + s
                    continue 
                if not _24065:
                    _24746 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_24746] = 26
                    mem[_24746 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25132 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25262 = mem[_25132]
                    require mem[_25132] == mem[_25132 + 12 len 20]
                    _25907 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_25907] = 26
                    mem[_25907 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_25262))
                    staticcall address(_25262).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26697 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26891 = mem[_26697]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27656 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27656] == mem[_27656 + 12 len 20]
                        if not mem[_27656 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29352 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _29630 = mem[_29352 + 32]
                            mem[mem[64] + 36] = _26891
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26891
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30346 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _29630 + _23658 < _23658:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_30346 + 32] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_30346 + 32] + _29630 + _23658 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_30346 + 32] + _29630 + _23658 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29221 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29491 = mem[_29221]
                        if mem[_29221] + _26891 < _26891:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30904 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _31186 = mem[_30904 + 32]
                        mem[mem[64] + 36] = _29491 + _26891
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29491 + _26891
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31897 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _31186 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31897 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31897 + 32] + _31186 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31897 + 32] + _31186 + _23658 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28427 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28691 = mem[_28427 + 32]
                        mem[mem[64] + 36] = _26891
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26891
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29353 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28691 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29353 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29353 + 32] + _28691 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29353 + 32] + _28691 + _23658 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27908 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_27908] == mem[_27908 + 12 len 20]
                    if not mem[_27908 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29633 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29921 = mem[_29633 + 32]
                        mem[mem[64] + 36] = _26891
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26891
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30629 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29921 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30629 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30629 + 32] + _29921 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30629 + 32] + _29921 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29492 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _29776 = mem[_29492]
                    if mem[_29492] + _26891 < _26891:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31187 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _31476 = mem[_31187 + 32]
                    mem[mem[64] + 36] = _29776 + _26891
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29776 + _26891
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32162 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _31476 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32162 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32162 + 32] + _31476 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32162 + 32] + _31476 + _23658 + s
                    continue 
                if 70 * _24065 / _24065 != 70:
                    revert with 0, 'SafeMath: multiplication overflow'
                _24786 = mem[64]
                mem[64] = mem[64] + 64
                mem[_24786] = 26
                mem[_24786 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25193 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25319 = mem[_25193]
                require mem[_25193] == mem[_25193 + 12 len 20]
                if not 70 * _24065 / 100:
                    _25975 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_25975] = 26
                    mem[_25975 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_25319))
                    staticcall address(_25319).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26785 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26990 = mem[_26785]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27775 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27775] == mem[_27775 + 12 len 20]
                        if not mem[_27775 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _24065 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24065 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29488 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _29771 = mem[_29488 + 32]
                            mem[mem[64] + 36] = _26990
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26990
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30478 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _29771 + _23658 < _23658:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_30478 + 32] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_30478 + 32] + _29771 + _23658 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_30478 + 32] + _29771 + _23658 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29350 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29627 = mem[_29350]
                        if mem[_29350] + _26990 < _26990:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _24065 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24065 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31045 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _31336 = mem[_31045 + 32]
                        mem[mem[64] + 36] = _29627 + _26990
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29627 + _26990
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32026 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _31336 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32026 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32026 + 32] + _31336 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_32026 + 32] + _31336 + _23658 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 70 * _24065 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24065 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28560 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28821 = mem[_28560 + 32]
                        mem[mem[64] + 36] = _26990
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26990
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29489 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28821 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29489 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29489 + 32] + _28821 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29489 + 32] + _28821 + _23658 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28037 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28037] == mem[_28037 + 12 len 20]
                    if not mem[_28037 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _24065 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24065 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29774 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30061 = mem[_29774 + 32]
                        mem[mem[64] + 36] = _26990
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26990
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30766 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30061 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30766 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30766 + 32] + _30061 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30766 + 32] + _30061 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29628 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _29918 = mem[_29628]
                    if mem[_29628] + _26990 < _26990:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _24065 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24065 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31337 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _31623 = mem[_31337 + 32]
                    mem[mem[64] + 36] = _29918 + _26990
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29918 + _26990
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32295 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _31623 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32295 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32295 + 32] + _31623 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32295 + 32] + _31623 + _23658 + s
                    continue 
                if 30 * 70 * _24065 / 100 / 70 * _24065 / 100 != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                _26066 = mem[64]
                mem[64] = mem[64] + 64
                mem[_26066] = 26
                mem[_26066 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 30 * 70 * _24065 / 100 / 100
                require ext_code.size(address(_25319))
                staticcall address(_25319).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * 70 * _24065 / 100 / 100)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26890 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _27095 = mem[_26890]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27903 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_27903] == mem[_27903 + 12 len 20]
                    if not mem[_27903 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _24065 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24065 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29624 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29913 = mem[_29624 + 32]
                        mem[mem[64] + 36] = _27095
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27095
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30620 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29913 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30620 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30620 + 32] + _29913 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30620 + 32] + _29913 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29486 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _29768 = mem[_29486]
                    if mem[_29486] + _27095 < _27095:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _24065 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24065 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31179 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _31468 = mem[_31179 + 32]
                    mem[mem[64] + 36] = _29768 + _27095
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29768 + _27095
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32156 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _31468 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32156 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32156 + 32] + _31468 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32156 + 32] + _31468 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _24065 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24065 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28688 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _28951 = mem[_28688 + 32]
                    mem[mem[64] + 36] = _27095
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27095
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29625 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _28951 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29625 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29625 + 32] + _28951 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_29625 + 32] + _28951 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28166 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_28166] == mem[_28166 + 12 len 20]
                if not mem[_28166 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _24065 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24065 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29916 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _30196 = mem[_29916 + 32]
                    mem[mem[64] + 36] = _27095
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27095
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30901 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _30196 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30901 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30901 + 32] + _30196 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30901 + 32] + _30196 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29769 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _30058 = mem[_29769]
                if mem[_29769] + _27095 < _27095:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _24065 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24065 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31469 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _31753 = mem[_31469 + 32]
                mem[mem[64] + 36] = _30058 + _27095
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30058 + _27095
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32419 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _31753 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32419 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32419 + 32] + _31753 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_32419 + 32] + _31753 + _23658 + s
                continue 
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 1:
                mem[mem[64] + 4] = address(cd[4])
                require ext_code.size(address(_23598))
                staticcall address(_23598).earned(address rg1) with:
                        gas gas_remaining wei
                       args address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23776 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _23804 = mem[_23776]
                require ext_code.size(address(_23598))
                staticcall address(_23598).stakingToken() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23867 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_23867] == mem[_23867 + 12 len 20]
                mem[mem[64] + 4] = mem[_23867 + 12 len 20]
                mem[mem[64] + 36] = _23804
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], _23804
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24067 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _24119 = mem[_24067]
                mem[0] = address(_23598)
                mem[32] = 102
                if stor102[address(_23598)]:
                    mem[mem[64] + 36] = _24119
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24119
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24395 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _24478 = mem[_24395 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24696 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _24478 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24696 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24696 + 32] + _24478 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_24696 + 32] + _24478 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24319 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24319] == mem[_24319 + 12 len 20]
                if not mem[_24319 + 12 len 20]:
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24848 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_24848] == mem[_24848 + 12 len 20]
                        if not mem[_24848 + 12 len 20]:
                            mem[mem[64] + 36] = _24119
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24119
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25664 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _25818 = mem[_25664 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26231 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _25818 + _23658 < _23658:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26231 + 32] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26231 + 32] + _25818 + _23658 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_26231 + 32] + _25818 + _23658 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25594 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25745 = mem[_25594]
                        if mem[_25594] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = _24119
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24119
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26588 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _26787 = mem[_26588 + 32]
                        mem[mem[64] + 36] = _25745
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25745
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27318 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _26787 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27318 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27318 + 32] + _26787 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_27318 + 32] + _26787 + _23658 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = _24119
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24119
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25194 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25322 = mem[_25194 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25665 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25322 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25665 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25665 + 32] + _25322 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_25665 + 32] + _25322 + _23658 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24963 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_24963] == mem[_24963 + 12 len 20]
                    if not mem[_24963 + 12 len 20]:
                        mem[mem[64] + 36] = _24119
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24119
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25821 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25978 = mem[_25821 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26402 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25978 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26402 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26402 + 32] + _25978 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_26402 + 32] + _25978 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25746 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25909 = mem[_25746]
                    if mem[_25746] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _24119
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24119
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26788 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _26993 = mem[_26788 + 32]
                    mem[mem[64] + 36] = _25909
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25909
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27542 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _26993 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27542 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27542 + 32] + _26993 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_27542 + 32] + _26993 + _23658 + s
                    continue 
                if not _24119:
                    _24851 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_24851] = 26
                    mem[_24851 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25264 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25394 = mem[_25264]
                    require mem[_25264] == mem[_25264 + 12 len 20]
                    _26072 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_26072] = 26
                    mem[_26072 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_25394))
                    staticcall address(_25394).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26897 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27101 = mem[_26897]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27913 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27913] == mem[_27913 + 12 len 20]
                        if not mem[_27913 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29639 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _29928 = mem[_29639 + 32]
                            mem[mem[64] + 36] = _27101
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27101
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30636 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _29928 + _23658 < _23658:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_30636 + 32] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_30636 + 32] + _29928 + _23658 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_30636 + 32] + _29928 + _23658 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29498 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29782 = mem[_29498]
                        if mem[_29498] + _27101 < _27101:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31194 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _31484 = mem[_31194 + 32]
                        mem[mem[64] + 36] = _29782 + _27101
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29782 + _27101
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32168 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _31484 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32168 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32168 + 32] + _31484 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_32168 + 32] + _31484 + _23658 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28694 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28959 = mem[_28694 + 32]
                        mem[mem[64] + 36] = _27101
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27101
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29640 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28959 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29640 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29640 + 32] + _28959 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29640 + 32] + _28959 + _23658 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28176 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28176] == mem[_28176 + 12 len 20]
                    if not mem[_28176 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29931 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30211 = mem[_29931 + 32]
                        mem[mem[64] + 36] = _27101
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27101
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30917 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30211 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30917 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30917 + 32] + _30211 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30917 + 32] + _30211 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29783 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30073 = mem[_29783]
                    if mem[_29783] + _27101 < _27101:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31485 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _31768 = mem[_31485 + 32]
                    mem[mem[64] + 36] = _30073 + _27101
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30073 + _27101
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32430 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _31768 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32430 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32430 + 32] + _31768 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32430 + 32] + _31768 + _23658 + s
                    continue 
                if 70 * _24119 / _24119 != 70:
                    revert with 0, 'SafeMath: multiplication overflow'
                _24891 = mem[64]
                mem[64] = mem[64] + 64
                mem[_24891] = 26
                mem[_24891 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25323 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25453 = mem[_25323]
                require mem[_25323] == mem[_25323 + 12 len 20]
                if not 70 * _24119 / 100:
                    _26144 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_26144] = 26
                    mem[_26144 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_25453))
                    staticcall address(_25453).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26994 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27211 = mem[_26994]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28038 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_28038] == mem[_28038 + 12 len 20]
                        if not mem[_28038 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _24119 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24119 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29779 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _30068 = mem[_29779 + 32]
                            mem[mem[64] + 36] = _27211
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27211
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30771 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _30068 + _23658 < _23658:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_30771 + 32] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_30771 + 32] + _30068 + _23658 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_30771 + 32] + _30068 + _23658 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29637 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29925 = mem[_29637]
                        if mem[_29637] + _27211 < _27211:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _24119 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24119 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31343 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _31630 = mem[_31343 + 32]
                        mem[mem[64] + 36] = _29925 + _27211
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29925 + _27211
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32300 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _31630 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32300 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32300 + 32] + _31630 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_32300 + 32] + _31630 + _23658 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 70 * _24119 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24119 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28826 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29092 = mem[_28826 + 32]
                        mem[mem[64] + 36] = _27211
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27211
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29780 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29092 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29780 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29780 + 32] + _29092 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29780 + 32] + _29092 + _23658 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28303 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28303] == mem[_28303 + 12 len 20]
                    if not mem[_28303 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _24119 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24119 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30071 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30354 = mem[_30071 + 32]
                        mem[mem[64] + 36] = _27211
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27211
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31056 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30354 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31056 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31056 + 32] + _30354 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31056 + 32] + _30354 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29926 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30208 = mem[_29926]
                    if mem[_29926] + _27211 < _27211:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _24119 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24119 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31631 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _31905 = mem[_31631 + 32]
                    mem[mem[64] + 36] = _30208 + _27211
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30208 + _27211
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32557 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _31905 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32557 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32557 + 32] + _31905 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32557 + 32] + _31905 + _23658 + s
                    continue 
                if 30 * 70 * _24119 / 100 / 70 * _24119 / 100 != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                _26235 = mem[64]
                mem[64] = mem[64] + 64
                mem[_26235] = 26
                mem[_26235 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 30 * 70 * _24119 / 100 / 100
                require ext_code.size(address(_25453))
                staticcall address(_25453).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * 70 * _24119 / 100 / 100)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27100 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _27320 = mem[_27100]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28171 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28171] == mem[_28171 + 12 len 20]
                    if not mem[_28171 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _24119 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24119 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29922 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30203 = mem[_29922 + 32]
                        mem[mem[64] + 36] = _27320
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27320
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30908 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30203 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30908 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30908 + 32] + _30203 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30908 + 32] + _30203 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29777 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30065 = mem[_29777]
                    if mem[_29777] + _27320 < _27320:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _24119 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24119 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31477 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _31760 = mem[_31477 + 32]
                    mem[mem[64] + 36] = _30065 + _27320
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30065 + _27320
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32424 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _31760 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32424 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32424 + 32] + _31760 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32424 + 32] + _31760 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _24119 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24119 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28956 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29225 = mem[_28956 + 32]
                    mem[mem[64] + 36] = _27320
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27320
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29923 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29225 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29923 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29923 + 32] + _29225 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_29923 + 32] + _29225 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28431 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_28431] == mem[_28431 + 12 len 20]
                if not mem[_28431 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _24119 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24119 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30206 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _30486 = mem[_30206 + 32]
                    mem[mem[64] + 36] = _27320
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27320
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31191 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _30486 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31191 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31191 + 32] + _30486 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_31191 + 32] + _30486 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30066 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _30351 = mem[_30066]
                if mem[_30066] + _27320 < _27320:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _24119 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24119 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31761 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _32032 = mem[_31761 + 32]
                mem[mem[64] + 36] = _30351 + _27320
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30351 + _27320
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32675 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _32032 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32675 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32675 + 32] + _32032 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_32675 + 32] + _32032 + _23658 + s
                continue 
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 7:
                mem[mem[64] + 4] = address(cd[4])
                require ext_code.size(address(_23598))
                staticcall address(_23598).earned(address rg1) with:
                        gas gas_remaining wei
                       args address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23809 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _23845 = mem[_23809]
                require ext_code.size(address(_23598))
                staticcall address(_23598).stakingToken() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23903 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_23903] == mem[_23903 + 12 len 20]
                mem[mem[64] + 4] = mem[_23903 + 12 len 20]
                mem[mem[64] + 36] = _23845
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], _23845
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24122 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _24184 = mem[_24122]
                mem[0] = address(_23598)
                mem[32] = 102
                if stor102[address(_23598)]:
                    mem[mem[64] + 36] = _24184
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24184
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24483 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _24566 = mem[_24483 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24796 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _24566 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24796 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24796 + 32] + _24566 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_24796 + 32] + _24566 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24403 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24403] == mem[_24403 + 12 len 20]
                if not mem[_24403 + 12 len 20]:
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24966 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_24966] == mem[_24966 + 12 len 20]
                        if not mem[_24966 + 12 len 20]:
                            mem[mem[64] + 36] = _24184
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24184
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25827 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _25987 = mem[_25827 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _26409 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _25987 + _23658 < _23658:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26409 + 32] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_26409 + 32] + _25987 + _23658 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_26409 + 32] + _25987 + _23658 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25752 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25913 = mem[_25752]
                        if mem[_25752] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = _24184
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24184
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26796 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _27003 = mem[_26796 + 32]
                        mem[mem[64] + 36] = _25913
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25913
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27551 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _27003 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27551 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27551 + 32] + _27003 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_27551 + 32] + _27003 + _23658 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = _24184
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24184
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25330 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25460 = mem[_25330 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25828 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25460 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25828 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25828 + 32] + _25460 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_25828 + 32] + _25460 + _23658 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25083 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_25083] == mem[_25083 + 12 len 20]
                    if not mem[_25083 + 12 len 20]:
                        mem[mem[64] + 36] = _24184
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24184
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25990 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _26152 = mem[_25990 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26600 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _26152 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26600 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26600 + 32] + _26152 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_26600 + 32] + _26152 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25914 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26076 = mem[_25914]
                    if mem[_25914] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _24184
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24184
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27004 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _27219 = mem[_27004 + 32]
                    mem[mem[64] + 36] = _26076
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26076
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27795 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _27219 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27795 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27795 + 32] + _27219 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_27795 + 32] + _27219 + _23658 + s
                    continue 
                if not _24184:
                    _24969 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_24969] = 26
                    mem[_24969 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25399 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25533 = mem[_25399]
                    require mem[_25399] == mem[_25399 + 12 len 20]
                    _26243 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_26243] = 26
                    mem[_26243 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_25533))
                    staticcall address(_25533).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27110 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27330 = mem[_27110]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28187 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_28187] == mem[_28187 + 12 len 20]
                        if not mem[_28187 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29946 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _30228 = mem[_29946 + 32]
                            mem[mem[64] + 36] = _27330
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27330
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30933 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _30228 + _23658 < _23658:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_30933 + 32] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_30933 + 32] + _30228 + _23658 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_30933 + 32] + _30228 + _23658 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29799 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30086 = mem[_29799]
                        if mem[_29799] + _27330 < _27330:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31504 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _31786 = mem[_31504 + 32]
                        mem[mem[64] + 36] = _30086 + _27330
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30086 + _27330
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32446 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _31786 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32446 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32446 + 32] + _31786 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_32446 + 32] + _31786 + _23658 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28974 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29243 = mem[_28974 + 32]
                        mem[mem[64] + 36] = _27330
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27330
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29947 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29243 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29947 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29947 + 32] + _29243 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29947 + 32] + _29243 + _23658 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28448 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28448] == mem[_28448 + 12 len 20]
                    if not mem[_28448 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30231 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30512 = mem[_30231 + 32]
                        mem[mem[64] + 36] = _27330
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27330
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31218 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30512 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31218 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31218 + 32] + _30512 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31218 + 32] + _30512 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30087 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30374 = mem[_30087]
                    if mem[_30087] + _27330 < _27330:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31787 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32054 = mem[_31787 + 32]
                    mem[mem[64] + 36] = _30374 + _27330
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30374 + _27330
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32698 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32054 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32698 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32698 + 32] + _32054 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32698 + 32] + _32054 + _23658 + s
                    continue 
                if 70 * _24184 / _24184 != 70:
                    revert with 0, 'SafeMath: multiplication overflow'
                _25015 = mem[64]
                mem[64] = mem[64] + 64
                mem[_25015] = 26
                mem[_25015 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25461 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25602 = mem[_25461]
                require mem[_25461] == mem[_25461 + 12 len 20]
                if not 70 * _24184 / 100:
                    _26326 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_26326] = 26
                    mem[_26326 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_25602))
                    staticcall address(_25602).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27220 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27442 = mem[_27220]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28312 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_28312] == mem[_28312 + 12 len 20]
                        if not mem[_28312 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _24184 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24184 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30083 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _30369 = mem[_30083 + 32]
                            mem[mem[64] + 36] = _27442
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27442
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31068 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _30369 + _23658 < _23658:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_31068 + 32] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_31068 + 32] + _30369 + _23658 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_31068 + 32] + _30369 + _23658 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29944 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _30225 = mem[_29944]
                        if mem[_29944] + _27442 < _27442:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _24184 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24184 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31647 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _31920 = mem[_31647 + 32]
                        mem[mem[64] + 36] = _30225 + _27442
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30225 + _27442
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32572 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _31920 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32572 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32572 + 32] + _31920 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_32572 + 32] + _31920 + _23658 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 70 * _24184 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24184 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29107 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29375 = mem[_29107 + 32]
                        mem[mem[64] + 36] = _27442
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27442
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30084 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29375 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30084 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30084 + 32] + _29375 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30084 + 32] + _29375 + _23658 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28578 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28578] == mem[_28578 + 12 len 20]
                    if not mem[_28578 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _24184 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24184 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30372 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30653 = mem[_30372 + 32]
                        mem[mem[64] + 36] = _27442
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27442
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31362 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30653 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31362 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31362 + 32] + _30653 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31362 + 32] + _30653 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30226 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30509 = mem[_30226]
                    if mem[_30226] + _27442 < _27442:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _24184 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24184 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31921 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32183 = mem[_31921 + 32]
                    mem[mem[64] + 36] = _30509 + _27442
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30509 + _27442
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32817 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32183 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32817 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32817 + 32] + _32183 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32817 + 32] + _32183 + _23658 + s
                    continue 
                if 30 * 70 * _24184 / 100 / 70 * _24184 / 100 != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                _26413 = mem[64]
                mem[64] = mem[64] + 64
                mem[_26413] = 26
                mem[_26413 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 30 * 70 * _24184 / 100 / 100
                require ext_code.size(address(_25602))
                staticcall address(_25602).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * 70 * _24184 / 100 / 100)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27329 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _27553 = mem[_27329]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28443 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28443] == mem[_28443 + 12 len 20]
                    if not mem[_28443 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _24184 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24184 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30222 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30504 = mem[_30222 + 32]
                        mem[mem[64] + 36] = _27553
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27553
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31209 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30504 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31209 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31209 + 32] + _30504 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31209 + 32] + _30504 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30081 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30366 = mem[_30081]
                    if mem[_30081] + _27553 < _27553:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _24184 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24184 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31779 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32046 = mem[_31779 + 32]
                    mem[mem[64] + 36] = _30366 + _27553
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30366 + _27553
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32692 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32046 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32692 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32692 + 32] + _32046 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32692 + 32] + _32046 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _24184 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24184 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29240 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29509 = mem[_29240 + 32]
                    mem[mem[64] + 36] = _27553
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27553
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30223 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29509 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30223 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30223 + 32] + _29509 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30223 + 32] + _29509 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28705 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_28705] == mem[_28705 + 12 len 20]
                if not mem[_28705 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _24184 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24184 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30507 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _30787 = mem[_30507 + 32]
                    mem[mem[64] + 36] = _27553
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27553
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31501 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _30787 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31501 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31501 + 32] + _30787 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_31501 + 32] + _30787 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30367 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _30650 = mem[_30367]
                if mem[_30367] + _27553 < _27553:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _24184 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24184 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32047 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _32314 = mem[_32047 + 32]
                mem[mem[64] + 36] = _30650 + _27553
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30650 + _27553
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32935 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _32314 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32935 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32935 + 32] + _32314 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_32935 + 32] + _32314 + _23658 + s
                continue 
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) != 4:
                mem[0] = address(_23598)
                mem[32] = 102
                if stor102[address(_23598)]:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23884 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _23920 = mem[_23884 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24018 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _23920 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24018 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_24018 + 32] + _23920 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_24018 + 32] + _23920 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _23843 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_23843] == mem[_23843 + 12 len 20]
                if not mem[_23843 + 12 len 20]:
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24095 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_24095] == mem[_24095 + 12 len 20]
                        if not mem[_24095 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24562 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _24649 = mem[_24562 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24893 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _24649 + _23658 < _23658:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24893 + 32] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_24893 + 32] + _24649 + _23658 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_24893 + 32] + _24649 + _23658 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24530 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24610 = mem[_24530]
                        if mem[_24530] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25136 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _25266 = mem[_25136 + 32]
                        mem[mem[64] + 36] = _24610
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24610
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25596 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _25266 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25596 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25596 + 32] + _25266 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_25596 + 32] + _25266 + _23658 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24283 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _24363 = mem[_24283 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24563 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _24363 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_24563 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_24563 + 32] + _24363 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_24563 + 32] + _24363 + _23658 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24152 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_24152] == mem[_24152 + 12 len 20]
                    if not mem[_24152 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24652 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _24751 = mem[_24652 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25011 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _24751 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25011 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_25011 + 32] + _24751 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_25011 + 32] + _24751 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _24611 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _24699 = mem[_24611]
                    if mem[_24611] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25267 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _25397 = mem[_25267 + 32]
                    mem[mem[64] + 36] = _24699
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24699
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25749 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _25397 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_25749 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_25749 + 32] + _25397 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_25749 + 32] + _25397 + _23658 + s
                    continue 
                _24098 = mem[64]
                mem[64] = mem[64] + 64
                mem[_24098] = 26
                mem[_24098 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24321 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _24400 = mem[_24321]
                require mem[_24321] == mem[_24321 + 12 len 20]
                _24794 = mem[64]
                mem[64] = mem[64] + 64
                mem[_24794] = 26
                mem[_24794 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(address(_24400))
                staticcall address(_24400).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25328 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25457 = mem[_25328]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25981 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_25981] == mem[_25981 + 12 len 20]
                    if not mem[_25981 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27212 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _27434 = mem[_27212 + 32]
                        mem[mem[64] + 36] = _25457
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25457
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28041 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _27434 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28041 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28041 + 32] + _27434 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_28041 + 32] + _27434 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27102 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27322 = mem[_27102]
                    if mem[_27102] + _25457 < _25457:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28565 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _28828 = mem[_28565 + 32]
                    mem[mem[64] + 36] = _27322 + _25457
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27322 + _25457
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29500 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _28828 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29500 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29500 + 32] + _28828 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_29500 + 32] + _28828 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26501 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _26704 = mem[_26501 + 32]
                    mem[mem[64] + 36] = _25457
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25457
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27213 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _26704 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27213 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27213 + 32] + _26704 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_27213 + 32] + _26704 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26149 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_26149] == mem[_26149 + 12 len 20]
                if not mem[_26149 + 12 len 20]:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27437 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _27666 = mem[_27437 + 32]
                    mem[mem[64] + 36] = _25457
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _25457
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28307 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _27666 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_28307 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_28307 + 32] + _27666 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_28307 + 32] + _27666 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27323 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _27546 = mem[_27323]
                if mem[_27323] + _25457 < _25457:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28829 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _29097 = mem[_28829 + 32]
                mem[mem[64] + 36] = _27546 + _25457
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27546 + _25457
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29786 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _29097 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_29786 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_29786 + 32] + _29097 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_29786 + 32] + _29097 + _23658 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).rewardsToken() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _23808 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_23808] == mem[_23808 + 12 len 20]
            require ext_code.size(mem[_23808 + 12 len 20])
            staticcall mem[_23808 + 12 len 20].priceShare() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _23960 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _24002 = mem[_23960]
            mem[mem[64] + 4] = address(cd[4])
            require ext_code.size(address(_23598))
            staticcall address(_23598).earned(address rg1) with:
                    gas gas_remaining wei
                   args address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _24121 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _24183 = mem[_24121]
            if not mem[_24121]:
                _24401 = mem[64]
                mem[64] = mem[64] + 64
                mem[_24401] = 26
                mem[_24401 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).rewardsToken() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24700 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_24700] == mem[_24700 + 12 len 20]
                require ext_code.size(mem[_24700 + 12 len 20])
                staticcall mem[_24700 + 12 len 20].stakingToken() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25140 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_25140] == mem[_25140 + 12 len 20]
                mem[mem[64] + 4] = mem[_25140 + 12 len 20]
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25826 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _25984 = mem[_25826]
                mem[0] = address(_23598)
                mem[32] = 102
                if stor102[address(_23598)]:
                    mem[mem[64] + 36] = _25984
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25984
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26705 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _26901 = mem[_26705 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27438 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _26901 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27438 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27438 + 32] + _26901 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_27438 + 32] + _26901 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26503 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_26503] == mem[_26503 + 12 len 20]
                if not mem[_26503 + 12 len 20]:
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27789 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27789] == mem[_27789 + 12 len 20]
                        if not mem[_27789 + 12 len 20]:
                            mem[mem[64] + 36] = _25984
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25984
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29504 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _29790 = mem[_29504 + 32]
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30497 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _29790 + _23658 < _23658:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_30497 + 32] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_30497 + 32] + _29790 + _23658 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_30497 + 32] + _29790 + _23658 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29369 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _29647 = mem[_29369]
                        if mem[_29369] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = _25984
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25984
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31061 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _31354 = mem[_31061 + 32]
                        mem[mem[64] + 36] = _29647
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29647
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32041 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _31354 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32041 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32041 + 32] + _31354 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_32041 + 32] + _31354 + _23658 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = _25984
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25984
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28572 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28834 = mem[_28572 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29505 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28834 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29505 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29505 + 32] + _28834 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29505 + 32] + _28834 + _23658 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28050 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28050] == mem[_28050 + 12 len 20]
                    if not mem[_28050 + 12 len 20]:
                        mem[mem[64] + 36] = _25984
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25984
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29793 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30080 = mem[_29793 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30783 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30080 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30783 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30783 + 32] + _30080 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30783 + 32] + _30080 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29648 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _29940 = mem[_29648]
                    if mem[_29648] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _25984
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25984
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31355 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _31644 = mem[_31355 + 32]
                    mem[mem[64] + 36] = _29940
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29940
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32309 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _31644 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32309 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32309 + 32] + _31644 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32309 + 32] + _31644 + _23658 + s
                    continue 
                if not _25984:
                    _27792 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_27792] = 26
                    mem[_27792 + 32] = 'SafeMath: division by zero'
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).minter() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28701 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _28971 = mem[_28701]
                    require mem[_28701] == mem[_28701 + 12 len 20]
                    _30221 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_30221] = 26
                    mem[_30221 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_28971))
                    staticcall address(_28971).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31497 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _31778 = mem[_31497]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32689 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_32689] == mem[_32689 + 12 len 20]
                        if not mem[_32689 + 12 len 20]:
                            mem[mem[64] + 36] = 0
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _34092 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _34284 = mem[_34092 + 32]
                            mem[mem[64] + 36] = _31778
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31778
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _34706 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _34284 + _23658 < _23658:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_34706 + 32] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_34706 + 32] + _34284 + _23658 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_34706 + 32] + _34284 + _23658 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33988 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _34182 = mem[_33988]
                        if mem[_33988] + _31778 < _31778:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _35001 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _35138 = mem[_35001 + 32]
                        mem[mem[64] + 36] = _34182 + _31778
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34182 + _31778
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _35429 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _35138 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35429 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35429 + 32] + _35138 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_35429 + 32] + _35138 + _23658 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33393 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _33595 = mem[_33393 + 32]
                        mem[mem[64] + 36] = _31778
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31778
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34093 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _33595 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34093 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34093 + 32] + _33595 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_34093 + 32] + _33595 + _23658 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32932 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_32932] == mem[_32932 + 12 len 20]
                    if not mem[_32932 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34287 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _34471 = mem[_34287 + 32]
                        mem[mem[64] + 36] = _31778
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31778
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34858 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _34471 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34858 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34858 + 32] + _34471 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_34858 + 32] + _34471 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34183 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _34380 = mem[_34183]
                    if mem[_34183] + _31778 < _31778:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35139 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _35267 = mem[_35139 + 32]
                    mem[mem[64] + 36] = _34380 + _31778
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34380 + _31778
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35531 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _35267 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35531 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35531 + 32] + _35267 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_35531 + 32] + _35267 + _23658 + s
                    continue 
                if 70 * _25984 / _25984 != 70:
                    revert with 0, 'SafeMath: multiplication overflow'
                _27922 = mem[64]
                mem[64] = mem[64] + 64
                mem[_27922] = 26
                mem[_27922 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28835 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _29104 = mem[_28835]
                require mem[_28835] == mem[_28835 + 12 len 20]
                if not 70 * _25984 / 100:
                    _30365 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_30365] = 26
                    mem[_30365 + 32] = 'SafeMath: division by zero'
                    mem[mem[64] + 4] = 0
                    require ext_code.size(address(_29104))
                    staticcall address(_29104).amountMaximusToMint(uint256 rg1) with:
                            gas gas_remaining wei
                           args 0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31645 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _31916 = mem[_31645]
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) == 2:
                        require ext_code.size(address(_23598))
                        staticcall address(_23598).maximusChef() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32810 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_32810] == mem[_32810 + 12 len 20]
                        if not mem[_32810 + 12 len 20]:
                            mem[mem[64] + 36] = 70 * _25984 / 100
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25984 / 100
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _34179 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _34375 = mem[_34179 + 32]
                            mem[mem[64] + 36] = _31916
                            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                    gas gas_remaining wei
                                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31916
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _34778 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            if _34375 + _23658 < _23658:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_34778 + 32] < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            if mem[_34778 + 32] + _34375 + _23658 + s < s:
                                revert with 0, 'SafeMath: addition overflow'
                            idx = idx + 1
                            s = mem[_34778 + 32] + _34375 + _23658 + s
                            continue 
                        mem[mem[64] + 4] = address(_23598)
                        mem[mem[64] + 36] = address(cd[4])
                        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                                gas gas_remaining wei
                               args address(_23598), address(cd[4])
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34090 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _34281 = mem[_34090]
                        if mem[_34090] + _31916 < _31916:
                            revert with 0, 'SafeMath: addition overflow'
                        mem[mem[64] + 36] = 70 * _25984 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25984 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _35068 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _35201 = mem[_35068 + 32]
                        mem[mem[64] + 36] = _34281 + _31916
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34281 + _31916
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _35479 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _35201 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35479 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35479 + 32] + _35201 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_35479 + 32] + _35201 + _23658 + s
                        continue 
                    mem[0] = address(_23598)
                    mem[32] = 101
                    require uint8(poolTypes[address(_23598)]) <= 7
                    if uint8(poolTypes[address(_23598)]) != 3:
                        mem[mem[64] + 36] = 70 * _25984 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25984 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33490 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _33696 = mem[_33490 + 32]
                        mem[mem[64] + 36] = _31916
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31916
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34180 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _33696 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34180 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34180 + 32] + _33696 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_34180 + 32] + _33696 + _23658 + s
                        continue 
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33056 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_33056] == mem[_33056 + 12 len 20]
                    if not mem[_33056 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _25984 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25984 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34378 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _34551 = mem[_34378 + 32]
                        mem[mem[64] + 36] = _31916
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31916
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34930 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _34551 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34930 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34930 + 32] + _34551 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_34930 + 32] + _34551 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34282 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _34468 = mem[_34282]
                    if mem[_34282] + _31916 < _31916:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _25984 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25984 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35202 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _35323 = mem[_35202 + 32]
                    mem[mem[64] + 36] = _34468 + _31916
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34468 + _31916
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35583 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _35323 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35583 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35583 + 32] + _35323 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_35583 + 32] + _35323 + _23658 + s
                    continue 
                if 30 * 70 * _25984 / 100 / 70 * _25984 / 100 != 30:
                    revert with 0, 'SafeMath: multiplication overflow'
                _30501 = mem[64]
                mem[64] = mem[64] + 64
                mem[_30501] = 26
                mem[_30501 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 30 * 70 * _25984 / 100 / 100
                require ext_code.size(address(_29104))
                staticcall address(_29104).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args (30 * 70 * _25984 / 100 / 100)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31777 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _32043 = mem[_31777]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32927 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_32927] == mem[_32927 + 12 len 20]
                    if not mem[_32927 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _25984 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25984 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34278 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _34463 = mem[_34278 + 32]
                        mem[mem[64] + 36] = _32043
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32043
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34849 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _34463 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34849 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34849 + 32] + _34463 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_34849 + 32] + _34463 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34177 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _34372 = mem[_34177]
                    if mem[_34177] + _32043 < _32043:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _25984 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25984 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35131 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _35259 = mem[_35131 + 32]
                    mem[mem[64] + 36] = _34372 + _32043
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34372 + _32043
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35525 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _35259 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35525 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35525 + 32] + _35259 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_35525 + 32] + _35259 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _25984 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25984 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33592 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33793 = mem[_33592 + 32]
                    mem[mem[64] + 36] = _32043
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32043
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34279 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33793 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34279 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34279 + 32] + _33793 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34279 + 32] + _33793 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33174 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_33174] == mem[_33174 + 12 len 20]
                if not mem[_33174 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _25984 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25984 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34466 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _34626 = mem[_34466 + 32]
                    mem[mem[64] + 36] = _32043
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32043
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34998 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _34626 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34998 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34998 + 32] + _34626 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34998 + 32] + _34626 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34373 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _34548 = mem[_34373]
                if mem[_34373] + _32043 < _32043:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _25984 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25984 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35260 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _35376 = mem[_35260 + 32]
                mem[mem[64] + 36] = _34548 + _32043
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34548 + _32043
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35628 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _35376 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35628 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35628 + 32] + _35376 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_35628 + 32] + _35376 + _23658 + s
                continue 
            if _24002 * mem[_24121] / mem[_24121] != _24002:
                revert with 0, 'SafeMath: multiplication overflow'
            _24447 = mem[64]
            mem[64] = mem[64] + 64
            mem[_24447] = 26
            mem[_24447 + 32] = 'SafeMath: division by zero'
            require ext_code.size(address(_23598))
            staticcall address(_23598).rewardsToken() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _24752 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_24752] == mem[_24752 + 12 len 20]
            require ext_code.size(mem[_24752 + 12 len 20])
            staticcall mem[_24752 + 12 len 20].stakingToken() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25200 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_25200] == mem[_25200 + 12 len 20]
            mem[mem[64] + 4] = mem[_25200 + 12 len 20]
            mem[mem[64] + 36] = _24002 * _24183 / 10^18
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], _24002 * _24183 / 10^18
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25912 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _26073 = mem[_25912]
            mem[0] = address(_23598)
            mem[32] = 102
            if stor102[address(_23598)]:
                mem[mem[64] + 36] = _26073
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _26073
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26794 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _27000 = mem[_26794 + 32]
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27547 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _27000 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_27547 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_27547 + 32] + _27000 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_27547 + 32] + _27000 + _23658 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).minter() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _26596 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_26596] == mem[_26596 + 12 len 20]
            if not mem[_26596 + 12 len 20]:
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27918 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_27918] == mem[_27918 + 12 len 20]
                    if not mem[_27918 + 12 len 20]:
                        mem[mem[64] + 36] = _26073
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _26073
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29644 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _29935 = mem[_29644 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30641 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _29935 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30641 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_30641 + 32] + _29935 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_30641 + 32] + _29935 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29502 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _29787 = mem[_29502]
                    if mem[_29502] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _26073
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _26073
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31200 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _31489 = mem[_31200 + 32]
                    mem[mem[64] + 36] = _29787
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29787
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32170 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _31489 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32170 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32170 + 32] + _31489 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32170 + 32] + _31489 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = _26073
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _26073
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28697 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _28966 = mem[_28697 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29645 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _28966 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29645 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29645 + 32] + _28966 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_29645 + 32] + _28966 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28182 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_28182] == mem[_28182 + 12 len 20]
                if not mem[_28182 + 12 len 20]:
                    mem[mem[64] + 36] = _26073
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _26073
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29938 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _30216 = mem[_29938 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30924 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _30216 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30924 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30924 + 32] + _30216 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30924 + 32] + _30216 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29788 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _30077 = mem[_29788]
                if mem[_29788] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = _26073
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _26073
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31490 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _31772 = mem[_31490 + 32]
                mem[mem[64] + 36] = _30077
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30077
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32433 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _31772 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32433 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32433 + 32] + _31772 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_32433 + 32] + _31772 + _23658 + s
                continue 
            if not _26073:
                _27921 = mem[64]
                mem[64] = mem[64] + 64
                mem[_27921] = 26
                mem[_27921 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28831 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _29101 = mem[_28831]
                require mem[_28831] == mem[_28831 + 12 len 20]
                _30362 = mem[64]
                mem[64] = mem[64] + 64
                mem[_30362] = 26
                mem[_30362 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(address(_29101))
                staticcall address(_29101).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31641 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _31913 = mem[_31641]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32807 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_32807] == mem[_32807 + 12 len 20]
                    if not mem[_32807 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34174 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _34368 = mem[_34174 + 32]
                        mem[mem[64] + 36] = _31913
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31913
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34772 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _34368 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34772 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34772 + 32] + _34368 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_34772 + 32] + _34368 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34085 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _34276 = mem[_34085]
                    if mem[_34085] + _31913 < _31913:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35063 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _35196 = mem[_35063 + 32]
                    mem[mem[64] + 36] = _34276 + _31913
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34276 + _31913
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35475 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _35196 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35475 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35475 + 32] + _35196 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_35475 + 32] + _35196 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33487 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33691 = mem[_33487 + 32]
                    mem[mem[64] + 36] = _31913
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31913
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34175 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33691 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34175 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34175 + 32] + _33691 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34175 + 32] + _33691 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33052 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_33052] == mem[_33052 + 12 len 20]
                if not mem[_33052 + 12 len 20]:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34371 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _34546 = mem[_34371 + 32]
                    mem[mem[64] + 36] = _31913
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31913
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34923 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _34546 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34923 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34923 + 32] + _34546 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34923 + 32] + _34546 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34277 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _34461 = mem[_34277]
                if mem[_34277] + _31913 < _31913:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35197 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _35316 = mem[_35197 + 32]
                mem[mem[64] + 36] = _34461 + _31913
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34461 + _31913
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35578 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _35316 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35578 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35578 + 32] + _35316 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_35578 + 32] + _35316 + _23658 + s
                continue 
            if 70 * _26073 / _26073 != 70:
                revert with 0, 'SafeMath: multiplication overflow'
            _28045 = mem[64]
            mem[64] = mem[64] + 64
            mem[_28045] = 26
            mem[_28045 + 32] = 'SafeMath: division by zero'
            require ext_code.size(address(_23598))
            staticcall address(_23598).minter() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _28967 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _29235 = mem[_28967]
            require mem[_28967] == mem[_28967 + 12 len 20]
            if not 70 * _26073 / 100:
                _30496 = mem[64]
                mem[64] = mem[64] + 64
                mem[_30496] = 26
                mem[_30496 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(address(_29235))
                staticcall address(_29235).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31773 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _32040 = mem[_31773]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32922 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_32922] == mem[_32922 + 12 len 20]
                    if not mem[_32922 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _26073 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26073 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34273 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _34456 = mem[_34273 + 32]
                        mem[mem[64] + 36] = _32040
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32040
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _34843 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _34456 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34843 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_34843 + 32] + _34456 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_34843 + 32] + _34456 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34172 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _34365 = mem[_34172]
                    if mem[_34172] + _32040 < _32040:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _26073 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26073 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35125 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _35252 = mem[_35125 + 32]
                    mem[mem[64] + 36] = _34365 + _32040
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34365 + _32040
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35521 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _35252 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35521 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35521 + 32] + _35252 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_35521 + 32] + _35252 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _26073 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26073 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33591 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33788 = mem[_33591 + 32]
                    mem[mem[64] + 36] = _32040
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32040
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34274 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33788 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34274 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34274 + 32] + _33788 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34274 + 32] + _33788 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33170 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_33170] == mem[_33170 + 12 len 20]
                if not mem[_33170 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _26073 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26073 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34459 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _34620 = mem[_34459 + 32]
                    mem[mem[64] + 36] = _32040
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32040
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34992 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _34620 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34992 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34992 + 32] + _34620 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34992 + 32] + _34620 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34366 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _34543 = mem[_34366]
                if mem[_34366] + _32040 < _32040:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _26073 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26073 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35253 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _35370 = mem[_35253 + 32]
                mem[mem[64] + 36] = _34543 + _32040
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34543 + _32040
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35623 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _35370 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35623 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35623 + 32] + _35370 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_35623 + 32] + _35370 + _23658 + s
                continue 
            if 30 * 70 * _26073 / 100 / 70 * _26073 / 100 != 30:
                revert with 0, 'SafeMath: multiplication overflow'
            _30645 = mem[64]
            mem[64] = mem[64] + 64
            mem[_30645] = 26
            mem[_30645 + 32] = 'SafeMath: division by zero'
            mem[mem[64] + 4] = 30 * 70 * _26073 / 100 / 100
            require ext_code.size(address(_29235))
            staticcall address(_29235).amountMaximusToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args (30 * 70 * _26073 / 100 / 100)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _31912 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _32172 = mem[_31912]
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 2:
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33047 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_33047] == mem[_33047 + 12 len 20]
                if not mem[_33047 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _26073 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26073 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34362 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _34538 = mem[_34362 + 32]
                    mem[mem[64] + 36] = _32172
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32172
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34914 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _34538 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34914 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34914 + 32] + _34538 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34914 + 32] + _34538 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34271 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _34453 = mem[_34271]
                if mem[_34271] + _32172 < _32172:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _26073 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26073 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35189 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _35308 = mem[_35189 + 32]
                mem[mem[64] + 36] = _34453 + _32172
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34453 + _32172
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35572 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _35308 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35572 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35572 + 32] + _35308 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_35572 + 32] + _35308 + _23658 + s
                continue 
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) != 3:
                mem[mem[64] + 36] = 70 * _26073 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26073 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33688 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _33888 = mem[_33688 + 32]
                mem[mem[64] + 36] = _32172
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32172
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34363 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _33888 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34363 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34363 + 32] + _33888 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_34363 + 32] + _33888 + _23658 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).maximusChef() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _33277 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_33277] == mem[_33277 + 12 len 20]
            if not mem[_33277 + 12 len 20]:
                mem[mem[64] + 36] = 70 * _26073 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26073 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34541 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _34695 = mem[_34541 + 32]
                mem[mem[64] + 36] = _32172
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32172
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35060 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _34695 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35060 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35060 + 32] + _34695 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_35060 + 32] + _34695 + _23658 + s
                continue 
            mem[mem[64] + 4] = address(_23598)
            mem[mem[64] + 36] = address(cd[4])
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(_23598), address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _34454 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _34617 = mem[_34454]
            if mem[_34454] + _32172 < _32172:
                revert with 0, 'SafeMath: addition overflow'
            mem[mem[64] + 36] = 70 * _26073 / 100
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _26073 / 100
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _35309 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _35418 = mem[_35309 + 32]
            mem[mem[64] + 36] = _34617 + _32172
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34617 + _32172
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _35671 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if _35418 + _23658 < _23658:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_35671 + 32] < 0:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_35671 + 32] + _35418 + _23658 + s < s:
                revert with 0, 'SafeMath: addition overflow'
            idx = idx + 1
            s = mem[_35671 + 32] + _35418 + _23658 + s
            continue 
        mem[mem[64] + 4] = address(cd[4])
        require ext_code.size(address(_23598))
        staticcall address(_23598).earned(address rg1) with:
                gas gas_remaining wei
               args address(cd[4])
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _23701 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _23716 = mem[_23701]
        require ext_code.size(address(_23598))
        staticcall address(_23598).rewardsToken() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _23743 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_23743] == mem[_23743 + 12 len 20]
        mem[mem[64] + 4] = mem[_23743 + 12 len 20]
        mem[mem[64] + 36] = _23716
        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                gas gas_remaining wei
               args mem[mem[64] + 4], _23716
        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _23907 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 64
        _23940 = mem[_23907]
        require uint8(poolTypes[address(_23598)]) <= 7
        if uint8(poolTypes[address(_23598)]) == 2:
            mem[mem[64] + 4] = address(_23598)
            mem[mem[64] + 36] = address(cd[4])
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(_23598), address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _24124 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _24190 = mem[_24124]
            mem[mem[64] + 36] = mem[_24124]
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _24190
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _24368 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _24455 = mem[_24368]
            mem[0] = address(_23598)
            mem[32] = 102
            if stor102[address(_23598)]:
                mem[mem[64] + 36] = _24455
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24455
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24805 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _24912 = mem[_24805 + 32]
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25215 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _24912 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_25215 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_25215 + 32] + _24912 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_25215 + 32] + _24912 + _23658 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).minter() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _24711 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_24711] == mem[_24711 + 12 len 20]
            if not mem[_24711 + 12 len 20]:
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25410 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_25410] == mem[_25410 + 12 len 20]
                    if not mem[_25410 + 12 len 20]:
                        mem[mem[64] + 36] = _24455
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24455
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26435 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _26622 = mem[_26435 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27129 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _26622 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27129 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_27129 + 32] + _26622 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_27129 + 32] + _26622 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26342 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26523 = mem[_26342]
                    if mem[_26342] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _24455
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24455
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27577 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _27819 = mem[_27577 + 32]
                    mem[mem[64] + 36] = _26523
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26523
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28477 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _27819 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_28477 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_28477 + 32] + _27819 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_28477 + 32] + _27819 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = _24455
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24455
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25843 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _26002 = mem[_25843 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26436 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _26002 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_26436 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_26436 + 32] + _26002 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_26436 + 32] + _26002 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25550 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_25550] == mem[_25550 + 12 len 20]
                if not mem[_25550 + 12 len 20]:
                    mem[mem[64] + 36] = _24455
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24455
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26625 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _26821 = mem[_26625 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27358 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _26821 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27358 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27358 + 32] + _26821 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_27358 + 32] + _26821 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26524 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26727 = mem[_26524]
                if mem[_26524] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = _24455
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _24455
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27820 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _28080 = mem[_27820 + 32]
                mem[mem[64] + 36] = _26727
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26727
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28735 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _28080 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_28735 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_28735 + 32] + _28080 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_28735 + 32] + _28080 + _23658 + s
                continue 
            if not _24455:
                _25413 = mem[64]
                mem[64] = mem[64] + 64
                mem[_25413] = 26
                mem[_25413 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25924 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26092 = mem[_25924]
                require mem[_25924] == mem[_25924 + 12 len 20]
                _26928 = mem[64]
                mem[64] = mem[64] + 64
                mem[_26928] = 26
                mem[_26928 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(address(_26092))
                staticcall address(_26092).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27957 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _28220 = mem[_27957]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29143 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_29143] == mem[_29143 + 12 len 20]
                    if not mem[_29143 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30976 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _31257 = mem[_30976 + 32]
                        mem[mem[64] + 36] = _28220
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28220
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31960 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _31257 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31960 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31960 + 32] + _31257 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31960 + 32] + _31257 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30835 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _31117 = mem[_30835]
                    if mem[_30835] + _28220 < _28220:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32492 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32740 = mem[_32492 + 32]
                    mem[mem[64] + 36] = _31117 + _28220
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31117 + _28220
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33335 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32740 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33335 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33335 + 32] + _32740 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_33335 + 32] + _32740 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29983 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _30262 = mem[_29983 + 32]
                    mem[mem[64] + 36] = _28220
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28220
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30977 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _30262 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30977 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30977 + 32] + _30262 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30977 + 32] + _30262 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29411 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_29411] == mem[_29411 + 12 len 20]
                if not mem[_29411 + 12 len 20]:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31260 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _31546 = mem[_31260 + 32]
                    mem[mem[64] + 36] = _28220
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28220
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32231 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _31546 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32231 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32231 + 32] + _31546 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32231 + 32] + _31546 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31118 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _31409 = mem[_31118]
                if mem[_31118] + _28220 < _28220:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32741 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _32986 = mem[_32741 + 32]
                mem[mem[64] + 36] = _31409 + _28220
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31409 + _28220
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33540 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _32986 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33540 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33540 + 32] + _32986 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_33540 + 32] + _32986 + _23658 + s
                continue 
            if 70 * _24455 / _24455 != 70:
                revert with 0, 'SafeMath: multiplication overflow'
            _25471 = mem[64]
            mem[64] = mem[64] + 64
            mem[_25471] = 26
            mem[_25471 + 32] = 'SafeMath: division by zero'
            require ext_code.size(address(_23598))
            staticcall address(_23598).minter() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _26003 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _26169 = mem[_26003]
            require mem[_26003] == mem[_26003 + 12 len 20]
            if not 70 * _24455 / 100:
                _27022 = mem[64]
                mem[64] = mem[64] + 64
                mem[_27022] = 26
                mem[_27022 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(address(_26169))
                staticcall address(_26169).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28081 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _28342 = mem[_28081]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29267 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_29267] == mem[_29267 + 12 len 20]
                    if not mem[_29267 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _24455 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24455 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31114 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _31404 = mem[_31114 + 32]
                        mem[mem[64] + 36] = _28342
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28342
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32088 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _31404 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32088 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_32088 + 32] + _31404 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_32088 + 32] + _31404 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30974 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _31254 = mem[_30974]
                    if mem[_30974] + _28342 < _28342:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _24455 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24455 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32615 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32860 = mem[_32615 + 32]
                    mem[mem[64] + 36] = _31254 + _28342
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31254 + _28342
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33437 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32860 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33437 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33437 + 32] + _32860 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_33437 + 32] + _32860 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _24455 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24455 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30121 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _30408 = mem[_30121 + 32]
                    mem[mem[64] + 36] = _28342
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28342
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31115 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _30408 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31115 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31115 + 32] + _30408 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_31115 + 32] + _30408 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29544 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_29544] == mem[_29544 + 12 len 20]
                if not mem[_29544 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _24455 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24455 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31407 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _31692 = mem[_31407 + 32]
                    mem[mem[64] + 36] = _28342
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28342
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32362 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _31692 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32362 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32362 + 32] + _31692 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32362 + 32] + _31692 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31255 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _31543 = mem[_31255]
                if mem[_31255] + _28342 < _28342:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _24455 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24455 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32861 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _33111 = mem[_32861 + 32]
                mem[mem[64] + 36] = _31543 + _28342
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31543 + _28342
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33643 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _33111 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33643 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33643 + 32] + _33111 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_33643 + 32] + _33111 + _23658 + s
                continue 
            if 30 * 70 * _24455 / 100 / 70 * _24455 / 100 != 30:
                revert with 0, 'SafeMath: multiplication overflow'
            _27133 = mem[64]
            mem[64] = mem[64] + 64
            mem[_27133] = 26
            mem[_27133 + 32] = 'SafeMath: division by zero'
            mem[mem[64] + 4] = 30 * 70 * _24455 / 100 / 100
            require ext_code.size(address(_26169))
            staticcall address(_26169).amountMaximusToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args (30 * 70 * _24455 / 100 / 100)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _28219 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _28479 = mem[_28219]
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 2:
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29406 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_29406] == mem[_29406 + 12 len 20]
                if not mem[_29406 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _24455 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24455 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31251 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _31538 = mem[_31251 + 32]
                    mem[mem[64] + 36] = _28479
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28479
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32222 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _31538 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32222 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32222 + 32] + _31538 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32222 + 32] + _31538 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31112 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _31401 = mem[_31112]
                if mem[_31112] + _28479 < _28479:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _24455 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24455 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32733 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _32978 = mem[_32733 + 32]
                mem[mem[64] + 36] = _31401 + _28479
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31401 + _28479
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33534 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _32978 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33534 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33534 + 32] + _32978 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_33534 + 32] + _32978 + _23658 + s
                continue 
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) != 3:
                mem[mem[64] + 36] = 70 * _24455 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24455 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30259 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _30545 = mem[_30259 + 32]
                mem[mem[64] + 36] = _28479
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28479
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31252 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _30545 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_31252 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_31252 + 32] + _30545 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_31252 + 32] + _30545 + _23658 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).maximusChef() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _29691 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_29691] == mem[_29691 + 12 len 20]
            if not mem[_29691 + 12 len 20]:
                mem[mem[64] + 36] = 70 * _24455 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24455 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31541 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _31820 = mem[_31541 + 32]
                mem[mem[64] + 36] = _28479
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28479
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32489 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _31820 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32489 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32489 + 32] + _31820 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_32489 + 32] + _31820 + _23658 + s
                continue 
            mem[mem[64] + 4] = address(_23598)
            mem[mem[64] + 36] = address(cd[4])
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(_23598), address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _31402 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _31689 = mem[_31402]
            if mem[_31402] + _28479 < _28479:
                revert with 0, 'SafeMath: addition overflow'
            mem[mem[64] + 36] = 70 * _24455 / 100
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _24455 / 100
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _32979 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _33219 = mem[_32979 + 32]
            mem[mem[64] + 36] = _31689 + _28479
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _31689 + _28479
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _33739 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if _33219 + _23658 < _23658:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_33739 + 32] < 0:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_33739 + 32] + _33219 + _23658 + s < s:
                revert with 0, 'SafeMath: addition overflow'
            idx = idx + 1
            s = mem[_33739 + 32] + _33219 + _23658 + s
            continue 
        require uint8(poolTypes[address(_23598)]) <= 7
        if uint8(poolTypes[address(_23598)]) == 3:
            mem[mem[64] + 4] = address(cd[4])
            require ext_code.size(address(_23598))
            staticcall address(_23598).earned(address rg1) with:
                    gas gas_remaining wei
                   args address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _24257 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _24329 = mem[_24257]
            require ext_code.size(address(_23598))
            staticcall address(_23598).stakingToken() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _24452 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_24452] == mem[_24452 + 12 len 20]
            mem[mem[64] + 4] = mem[_24452 + 12 len 20]
            mem[mem[64] + 36] = _24329
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], _24329
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _24905 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _25020 = mem[_24905]
            mem[0] = address(_23598)
            mem[32] = 102
            if stor102[address(_23598)]:
                mem[mem[64] + 36] = _25020
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25020
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25538 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _25681 = mem[_25538 + 32]
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26080 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _25681 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_26080 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_26080 + 32] + _25681 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_26080 + 32] + _25681 + _23658 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).minter() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25403 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_25403] == mem[_25403 + 12 len 20]
            if not mem[_25403 + 12 len 20]:
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26332 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26332] == mem[_26332 + 12 len 20]
                    if not mem[_26332 + 12 len 20]:
                        mem[mem[64] + 36] = _25020
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25020
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27682 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _27937 = mem[_27682 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28587 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _27937 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28587 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28587 + 32] + _27937 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_28587 + 32] + _27937 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27563 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27806 = mem[_27563]
                    if mem[_27563] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _25020
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25020
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29116 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29386 = mem[_29116 + 32]
                    mem[mem[64] + 36] = _27806
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27806
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30096 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29386 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30096 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30096 + 32] + _29386 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30096 + 32] + _29386 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = _25020
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25020
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26910 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _27116 = mem[_26910 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27683 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _27116 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27683 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27683 + 32] + _27116 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_27683 + 32] + _27116 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26512 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_26512] == mem[_26512 + 12 len 20]
                if not mem[_26512 + 12 len 20]:
                    mem[mem[64] + 36] = _25020
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25020
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27940 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _28201 = mem[_27940 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28851 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _28201 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_28851 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_28851 + 32] + _28201 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_28851 + 32] + _28201 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27807 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _28067 = mem[_27807]
                if mem[_27807] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = _25020
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25020
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29387 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _29668 = mem[_29387 + 32]
                mem[mem[64] + 36] = _28067
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28067
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30383 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _29668 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_30383 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_30383 + 32] + _29668 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_30383 + 32] + _29668 + _23658 + s
                continue 
            if not _25020:
                _26335 = mem[64]
                mem[64] = mem[64] + 64
                mem[_26335] = 26
                mem[_26335 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27010 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _27228 = mem[_27010]
                require mem[_27010] == mem[_27010 + 12 len 20]
                _28329 = mem[64]
                mem[64] = mem[64] + 64
                mem[_28329] = 26
                mem[_28329 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(address(_27228))
                staticcall address(_27228).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29528 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _29815 = mem[_29528]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30804 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_30804] == mem[_30804 + 12 len 20]
                    if not mem[_30804 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32582 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _32826 = mem[_32582 + 32]
                        mem[mem[64] + 36] = _29815
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29815
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33402 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _32826 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33402 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33402 + 32] + _32826 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_33402 + 32] + _32826 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32456 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _32705 = mem[_32456]
                    if mem[_32456] + _29815 < _29815:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33808 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _34001 = mem[_33808 + 32]
                    mem[mem[64] + 36] = _32705 + _29815
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32705 + _29815
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34477 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _34001 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34477 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34477 + 32] + _34001 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34477 + 32] + _34001 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31659 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _31933 = mem[_31659 + 32]
                    mem[mem[64] + 36] = _29815
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29815
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32583 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _31933 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32583 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32583 + 32] + _31933 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32583 + 32] + _31933 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31085 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_31085] == mem[_31085 + 12 len 20]
                if not mem[_31085 + 12 len 20]:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32829 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33072 = mem[_32829 + 32]
                    mem[mem[64] + 36] = _29815
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29815
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33609 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33072 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33609 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33609 + 32] + _33072 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_33609 + 32] + _33072 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32706 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _32948 = mem[_32706]
                if mem[_32706] + _29815 < _29815:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34002 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _34196 = mem[_34002 + 32]
                mem[mem[64] + 36] = _32948 + _29815
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32948 + _29815
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34638 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _34196 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34638 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34638 + 32] + _34196 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_34638 + 32] + _34196 + _23658 + s
                continue 
            if 70 * _25020 / _25020 != 70:
                revert with 0, 'SafeMath: multiplication overflow'
            _26422 = mem[64]
            mem[64] = mem[64] + 64
            mem[_26422] = 26
            mem[_26422 + 32] = 'SafeMath: division by zero'
            require ext_code.size(address(_23598))
            staticcall address(_23598).minter() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _27117 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _27340 = mem[_27117]
            require mem[_27117] == mem[_27117 + 12 len 20]
            if not 70 * _25020 / 100:
                _28459 = mem[64]
                mem[64] = mem[64] + 64
                mem[_28459] = 26
                mem[_28459 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(address(_27340))
                staticcall address(_27340).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29669 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _29961 = mem[_29669]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30943 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_30943] == mem[_30943 + 12 len 20]
                    if not mem[_30943 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _25020 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25020 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32702 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _32943 = mem[_32702 + 32]
                        mem[mem[64] + 36] = _29961
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29961
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33497 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _32943 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33497 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33497 + 32] + _32943 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_33497 + 32] + _32943 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32580 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _32823 = mem[_32580]
                    if mem[_32580] + _29961 < _29961:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _25020 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25020 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33904 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _34100 = mem[_33904 + 32]
                    mem[mem[64] + 36] = _32823 + _29961
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32823 + _29961
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34557 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _34100 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34557 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34557 + 32] + _34100 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34557 + 32] + _34100 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _25020 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25020 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31793 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32061 = mem[_31793 + 32]
                    mem[mem[64] + 36] = _29961
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29961
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32703 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32061 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32703 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32703 + 32] + _32061 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32703 + 32] + _32061 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31227 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_31227] == mem[_31227 + 12 len 20]
                if not mem[_31227 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _25020 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25020 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32946 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33185 = mem[_32946 + 32]
                    mem[mem[64] + 36] = _29961
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _29961
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33707 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33185 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33707 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33707 + 32] + _33185 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_33707 + 32] + _33185 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32824 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _33069 = mem[_32824]
                if mem[_32824] + _29961 < _29961:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _25020 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25020 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34101 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _34295 = mem[_34101 + 32]
                mem[mem[64] + 36] = _33069 + _29961
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _33069 + _29961
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34714 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _34295 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34714 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34714 + 32] + _34295 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_34714 + 32] + _34295 + _23658 + s
                continue 
            if 30 * 70 * _25020 / 100 / 70 * _25020 / 100 != 30:
                revert with 0, 'SafeMath: multiplication overflow'
            _28591 = mem[64]
            mem[64] = mem[64] + 64
            mem[_28591] = 26
            mem[_28591 + 32] = 'SafeMath: division by zero'
            mem[mem[64] + 4] = 30 * 70 * _25020 / 100 / 100
            require ext_code.size(address(_27340))
            staticcall address(_27340).amountMaximusToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args (30 * 70 * _25020 / 100 / 100)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _29814 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _30098 = mem[_29814]
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 2:
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31080 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_31080] == mem[_31080 + 12 len 20]
                if not mem[_31080 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _25020 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25020 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32820 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33064 = mem[_32820 + 32]
                    mem[mem[64] + 36] = _30098
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30098
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33600 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33064 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33600 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33600 + 32] + _33064 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_33600 + 32] + _33064 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32700 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _32940 = mem[_32700]
                if mem[_32700] + _30098 < _30098:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _25020 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25020 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33994 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _34188 = mem[_33994 + 32]
                mem[mem[64] + 36] = _32940 + _30098
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32940 + _30098
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34632 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _34188 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34632 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34632 + 32] + _34188 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_34632 + 32] + _34188 + _23658 + s
                continue 
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) != 3:
                mem[mem[64] + 36] = 70 * _25020 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25020 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31930 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _32193 = mem[_31930 + 32]
                mem[mem[64] + 36] = _30098
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30098
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32821 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _32193 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32821 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32821 + 32] + _32193 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_32821 + 32] + _32193 + _23658 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).maximusChef() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _31371 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_31371] == mem[_31371 + 12 len 20]
            if not mem[_31371 + 12 len 20]:
                mem[mem[64] + 36] = 70 * _25020 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25020 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33067 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _33290 = mem[_33067 + 32]
                mem[mem[64] + 36] = _30098
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30098
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33805 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _33290 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33805 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33805 + 32] + _33290 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_33805 + 32] + _33290 + _23658 + s
                continue 
            mem[mem[64] + 4] = address(_23598)
            mem[mem[64] + 36] = address(cd[4])
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(_23598), address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _32941 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _33182 = mem[_32941]
            if mem[_32941] + _30098 < _30098:
                revert with 0, 'SafeMath: addition overflow'
            mem[mem[64] + 36] = 70 * _25020 / 100
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25020 / 100
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _34189 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _34384 = mem[_34189 + 32]
            mem[mem[64] + 36] = _33182 + _30098
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _33182 + _30098
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _34786 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if _34384 + _23658 < _23658:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_34786 + 32] < 0:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_34786 + 32] + _34384 + _23658 + s < s:
                revert with 0, 'SafeMath: addition overflow'
            idx = idx + 1
            s = mem[_34786 + 32] + _34384 + _23658 + s
            continue 
        require uint8(poolTypes[address(_23598)]) <= 7
        if uint8(poolTypes[address(_23598)]) == 1:
            mem[mem[64] + 4] = address(cd[4])
            require ext_code.size(address(_23598))
            staticcall address(_23598).earned(address rg1) with:
                    gas gas_remaining wei
                   args address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _24330 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _24407 = mem[_24330]
            require ext_code.size(address(_23598))
            staticcall address(_23598).stakingToken() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _24535 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_24535] == mem[_24535 + 12 len 20]
            mem[mem[64] + 4] = mem[_24535 + 12 len 20]
            mem[mem[64] + 36] = _24407
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], _24407
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25022 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _25144 = mem[_25022]
            mem[0] = address(_23598)
            mem[32] = 102
            if stor102[address(_23598)]:
                mem[mem[64] + 36] = _25144
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25144
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25682 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _25836 = mem[_25682 + 32]
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26252 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _25836 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_26252 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_26252 + 32] + _25836 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_26252 + 32] + _25836 + _23658 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).minter() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25541 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_25541] == mem[_25541 + 12 len 20]
            if not mem[_25541 + 12 len 20]:
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26513 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26513] == mem[_26513 + 12 len 20]
                    if not mem[_26513 + 12 len 20]:
                        mem[mem[64] + 36] = _25144
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25144
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27941 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28203 = mem[_27941 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28853 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28203 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28853 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_28853 + 32] + _28203 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_28853 + 32] + _28203 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27808 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _28068 = mem[_27808]
                    if mem[_27808] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _25144
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25144
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29389 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29671 = mem[_29389 + 32]
                    mem[mem[64] + 36] = _28068
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28068
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30386 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29671 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30386 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30386 + 32] + _29671 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30386 + 32] + _29671 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = _25144
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25144
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27118 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _27343 = mem[_27118 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27942 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _27343 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27942 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27942 + 32] + _27343 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_27942 + 32] + _27343 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26719 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_26719] == mem[_26719 + 12 len 20]
                if not mem[_26719 + 12 len 20]:
                    mem[mem[64] + 36] = _25144
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25144
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28206 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _28462 = mem[_28206 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29124 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _28462 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29124 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29124 + 32] + _28462 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_29124 + 32] + _28462 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28069 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _28331 = mem[_28069]
                if mem[_28069] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = _25144
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25144
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29672 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _29964 = mem[_29672 + 32]
                mem[mem[64] + 36] = _28331
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28331
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30671 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _29964 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_30671 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_30671 + 32] + _29964 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_30671 + 32] + _29964 + _23658 + s
                continue 
            if not _25144:
                _26516 = mem[64]
                mem[64] = mem[64] + 64
                mem[_26516] = 26
                mem[_26516 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27230 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _27457 = mem[_27230]
                require mem[_27230] == mem[_27230 + 12 len 20]
                _28597 = mem[64]
                mem[64] = mem[64] + 64
                mem[_28597] = 26
                mem[_28597 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(address(_27457))
                staticcall address(_27457).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29821 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _30104 = mem[_29821]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31090 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_31090] == mem[_31090 + 12 len 20]
                    if not mem[_31090 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32835 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _33079 = mem[_32835 + 32]
                        mem[mem[64] + 36] = _30104
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30104
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33616 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _33079 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33616 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33616 + 32] + _33079 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_33616 + 32] + _33079 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32712 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _32954 = mem[_32712]
                    if mem[_32712] + _30104 < _30104:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34009 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _34204 = mem[_34009 + 32]
                    mem[mem[64] + 36] = _32954 + _30104
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32954 + _30104
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34644 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _34204 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34644 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34644 + 32] + _34204 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34644 + 32] + _34204 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31936 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32201 = mem[_31936 + 32]
                    mem[mem[64] + 36] = _30104
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30104
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32836 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32201 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32836 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32836 + 32] + _32201 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32836 + 32] + _32201 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31381 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_31381] == mem[_31381 + 12 len 20]
                if not mem[_31381 + 12 len 20]:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33082 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33305 = mem[_33082 + 32]
                    mem[mem[64] + 36] = _30104
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30104
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33821 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33305 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33821 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33821 + 32] + _33305 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_33821 + 32] + _33305 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32955 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _33197 = mem[_32955]
                if mem[_32955] + _30104 < _30104:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34205 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _34399 = mem[_34205 + 32]
                mem[mem[64] + 36] = _33197 + _30104
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _33197 + _30104
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34797 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _34399 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34797 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34797 + 32] + _34399 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_34797 + 32] + _34399 + _23658 + s
                continue 
            if 70 * _25144 / _25144 != 70:
                revert with 0, 'SafeMath: multiplication overflow'
            _26610 = mem[64]
            mem[64] = mem[64] + 64
            mem[_26610] = 26
            mem[_26610 + 32] = 'SafeMath: division by zero'
            require ext_code.size(address(_23598))
            staticcall address(_23598).minter() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _27344 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _27567 = mem[_27344]
            require mem[_27344] == mem[_27344 + 12 len 20]
            if not 70 * _25144 / 100:
                _28721 = mem[64]
                mem[64] = mem[64] + 64
                mem[_28721] = 26
                mem[_28721 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(address(_27567))
                staticcall address(_27567).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29965 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _30244 = mem[_29965]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31228 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_31228] == mem[_31228 + 12 len 20]
                    if not mem[_31228 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _25144 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25144 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32951 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _33192 = mem[_32951 + 32]
                        mem[mem[64] + 36] = _30244
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30244
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33712 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _33192 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33712 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33712 + 32] + _33192 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_33712 + 32] + _33192 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32833 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _33076 = mem[_32833]
                    if mem[_32833] + _30244 < _30244:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _25144 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25144 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34107 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _34302 = mem[_34107 + 32]
                    mem[mem[64] + 36] = _33076 + _30244
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _33076 + _30244
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34719 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _34302 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34719 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34719 + 32] + _34302 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34719 + 32] + _34302 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _25144 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25144 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32066 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32334 = mem[_32066 + 32]
                    mem[mem[64] + 36] = _30244
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30244
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32952 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32334 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32952 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32952 + 32] + _32334 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32952 + 32] + _32334 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31519 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_31519] == mem[_31519 + 12 len 20]
                if not mem[_31519 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _25144 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25144 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33195 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33410 = mem[_33195 + 32]
                    mem[mem[64] + 36] = _30244
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30244
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33915 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33410 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33915 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33915 + 32] + _33410 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_33915 + 32] + _33410 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33077 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _33302 = mem[_33077]
                if mem[_33077] + _30244 < _30244:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _25144 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25144 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34303 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _34485 = mem[_34303 + 32]
                mem[mem[64] + 36] = _33302 + _30244
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _33302 + _30244
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34870 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _34485 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34870 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34870 + 32] + _34485 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_34870 + 32] + _34485 + _23658 + s
                continue 
            if 30 * 70 * _25144 / 100 / 70 * _25144 / 100 != 30:
                revert with 0, 'SafeMath: multiplication overflow'
            _28857 = mem[64]
            mem[64] = mem[64] + 64
            mem[_28857] = 26
            mem[_28857 + 32] = 'SafeMath: division by zero'
            mem[mem[64] + 4] = 30 * 70 * _25144 / 100 / 100
            require ext_code.size(address(_27567))
            staticcall address(_27567).amountMaximusToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args (30 * 70 * _25144 / 100 / 100)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _30103 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _30388 = mem[_30103]
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 2:
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31376 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_31376] == mem[_31376 + 12 len 20]
                if not mem[_31376 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _25144 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25144 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33073 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33297 = mem[_33073 + 32]
                    mem[mem[64] + 36] = _30388
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30388
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33812 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33297 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33812 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33812 + 32] + _33297 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_33812 + 32] + _33297 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32949 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _33189 = mem[_32949]
                if mem[_32949] + _30388 < _30388:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _25144 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25144 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34197 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _34391 = mem[_34197 + 32]
                mem[mem[64] + 36] = _33189 + _30388
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _33189 + _30388
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34791 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _34391 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34791 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34791 + 32] + _34391 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_34791 + 32] + _34391 + _23658 + s
                continue 
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) != 3:
                mem[mem[64] + 36] = 70 * _25144 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25144 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32198 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _32460 = mem[_32198 + 32]
                mem[mem[64] + 36] = _30388
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30388
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33074 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _32460 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33074 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33074 + 32] + _32460 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_33074 + 32] + _32460 + _23658 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).maximusChef() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _31663 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_31663] == mem[_31663 + 12 len 20]
            if not mem[_31663 + 12 len 20]:
                mem[mem[64] + 36] = 70 * _25144 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25144 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33300 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _33505 = mem[_33300 + 32]
                mem[mem[64] + 36] = _30388
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30388
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34006 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _33505 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34006 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34006 + 32] + _33505 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_34006 + 32] + _33505 + _23658 + s
                continue 
            mem[mem[64] + 4] = address(_23598)
            mem[mem[64] + 36] = address(cd[4])
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(_23598), address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _33190 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _33407 = mem[_33190]
            if mem[_33190] + _30388 < _30388:
                revert with 0, 'SafeMath: addition overflow'
            mem[mem[64] + 36] = 70 * _25144 / 100
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25144 / 100
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _34392 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _34563 = mem[_34392 + 32]
            mem[mem[64] + 36] = _33407 + _30388
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _33407 + _30388
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _34939 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if _34563 + _23658 < _23658:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_34939 + 32] < 0:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_34939 + 32] + _34563 + _23658 + s < s:
                revert with 0, 'SafeMath: addition overflow'
            idx = idx + 1
            s = mem[_34939 + 32] + _34563 + _23658 + s
            continue 
        require uint8(poolTypes[address(_23598)]) <= 7
        if uint8(poolTypes[address(_23598)]) == 7:
            mem[mem[64] + 4] = address(cd[4])
            require ext_code.size(address(_23598))
            staticcall address(_23598).earned(address rg1) with:
                    gas gas_remaining wei
                   args address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _24412 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _24491 = mem[_24412]
            require ext_code.size(address(_23598))
            staticcall address(_23598).stakingToken() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _24620 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_24620] == mem[_24620 + 12 len 20]
            mem[mem[64] + 4] = mem[_24620 + 12 len 20]
            mem[mem[64] + 36] = _24491
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], _24491
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25149 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _25278 = mem[_25149]
            mem[0] = address(_23598)
            mem[32] = 102
            if stor102[address(_23598)]:
                mem[mem[64] + 36] = _25278
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25278
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25841 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _25999 = mem[_25841 + 32]
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26433 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _25999 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_26433 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_26433 + 32] + _25999 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_26433 + 32] + _25999 + _23658 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).minter() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25690 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_25690] == mem[_25690 + 12 len 20]
            if not mem[_25690 + 12 len 20]:
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26722 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_26722] == mem[_26722 + 12 len 20]
                    if not mem[_26722 + 12 len 20]:
                        mem[mem[64] + 36] = _25278
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25278
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28213 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _28473 = mem[_28213 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29133 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _28473 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29133 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_29133 + 32] + _28473 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_29133 + 32] + _28473 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28076 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _28338 = mem[_28076]
                    if mem[_28076] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _25278
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25278
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29683 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29978 = mem[_29683 + 32]
                    mem[mem[64] + 36] = _28338
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28338
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30687 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29978 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30687 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30687 + 32] + _29978 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30687 + 32] + _29978 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = _25278
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25278
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27352 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _27575 = mem[_27352 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28214 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _27575 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_28214 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_28214 + 32] + _27575 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_28214 + 32] + _27575 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26923 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_26923] == mem[_26923 + 12 len 20]
                if not mem[_26923 + 12 len 20]:
                    mem[mem[64] + 36] = _25278
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25278
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28476 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _28732 = mem[_28476 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29402 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _28732 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29402 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_29402 + 32] + _28732 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_29402 + 32] + _28732 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28339 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _28604 = mem[_28339]
                if mem[_28339] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = _25278
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _25278
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29979 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _30257 = mem[_29979 + 32]
                mem[mem[64] + 36] = _28604
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _28604
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30968 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _30257 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_30968 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_30968 + 32] + _30257 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_30968 + 32] + _30257 + _23658 + s
                continue 
            if not _25278:
                _26725 = mem[64]
                mem[64] = mem[64] + 64
                mem[_26725] = 26
                mem[_26725 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27463 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _27696 = mem[_27463]
                require mem[_27463] == mem[_27463 + 12 len 20]
                _28868 = mem[64]
                mem[64] = mem[64] + 64
                mem[_28868] = 26
                mem[_28868 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(address(_27696))
                staticcall address(_27696).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30118 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _30403 = mem[_30118]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31398 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_31398] == mem[_31398 + 12 len 20]
                    if not mem[_31398 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33102 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _33326 = mem[_33102 + 32]
                        mem[mem[64] + 36] = _30403
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30403
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33839 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _33326 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33839 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33839 + 32] + _33326 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_33839 + 32] + _33326 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32975 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _33215 = mem[_32975]
                    if mem[_32975] + _30403 < _30403:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34226 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _34419 = mem[_34226 + 32]
                    mem[mem[64] + 36] = _33215 + _30403
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _33215 + _30403
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34813 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _34419 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34813 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34813 + 32] + _34419 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34813 + 32] + _34419 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32221 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32485 = mem[_32221 + 32]
                    mem[mem[64] + 36] = _30403
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30403
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33103 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32485 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33103 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33103 + 32] + _32485 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_33103 + 32] + _32485 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31687 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_31687] == mem[_31687 + 12 len 20]
                if not mem[_31687 + 12 len 20]:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33329 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33533 = mem[_33329 + 32]
                    mem[mem[64] + 36] = _30403
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30403
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34035 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33533 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34035 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34035 + 32] + _33533 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34035 + 32] + _33533 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33216 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _33434 = mem[_33216]
                if mem[_33216] + _30403 < _30403:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34420 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _34586 = mem[_34420 + 32]
                mem[mem[64] + 36] = _33434 + _30403
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _33434 + _30403
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34962 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _34586 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34962 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34962 + 32] + _34586 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_34962 + 32] + _34586 + _23658 + s
                continue 
            if 70 * _25278 / _25278 != 70:
                revert with 0, 'SafeMath: multiplication overflow'
            _26817 = mem[64]
            mem[64] = mem[64] + 64
            mem[_26817] = 26
            mem[_26817 + 32] = 'SafeMath: division by zero'
            require ext_code.size(address(_23598))
            staticcall address(_23598).minter() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _27576 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _27817 = mem[_27576]
            require mem[_27576] == mem[_27576 + 12 len 20]
            if not 70 * _25278 / 100:
                _29002 = mem[64]
                mem[64] = mem[64] + 64
                mem[_29002] = 26
                mem[_29002 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(address(_27817))
                staticcall address(_27817).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30258 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _30542 = mem[_30258]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31534 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_31534] == mem[_31534 + 12 len 20]
                    if not mem[_31534 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _25278 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25278 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33212 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _33429 = mem[_33212 + 32]
                        mem[mem[64] + 36] = _30542
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30542
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33930 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _33429 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33930 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33930 + 32] + _33429 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_33930 + 32] + _33429 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33100 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _33323 = mem[_33100]
                    if mem[_33100] + _30542 < _30542:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _25278 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25278 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34321 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _34501 = mem[_34321 + 32]
                    mem[mem[64] + 36] = _33323 + _30542
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _33323 + _30542
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34885 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _34501 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34885 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34885 + 32] + _34501 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34885 + 32] + _34501 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _25278 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25278 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32356 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32611 = mem[_32356 + 32]
                    mem[mem[64] + 36] = _30542
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30542
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33213 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32611 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33213 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33213 + 32] + _32611 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_33213 + 32] + _32611 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31817 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_31817] == mem[_31817 + 12 len 20]
                if not mem[_31817 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _25278 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25278 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33432 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33635 = mem[_33432 + 32]
                    mem[mem[64] + 36] = _30542
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30542
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34128 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33635 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34128 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34128 + 32] + _33635 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34128 + 32] + _33635 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33324 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _33530 = mem[_33324]
                if mem[_33324] + _30542 < _30542:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _25278 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25278 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34502 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _34659 = mem[_34502 + 32]
                mem[mem[64] + 36] = _33530 + _30542
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _33530 + _30542
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35029 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _34659 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35029 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35029 + 32] + _34659 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_35029 + 32] + _34659 + _23658 + s
                continue 
            if 30 * 70 * _25278 / 100 / 70 * _25278 / 100 != 30:
                revert with 0, 'SafeMath: multiplication overflow'
            _29137 = mem[64]
            mem[64] = mem[64] + 64
            mem[_29137] = 26
            mem[_29137 + 32] = 'SafeMath: division by zero'
            mem[mem[64] + 4] = 30 * 70 * _25278 / 100 / 100
            require ext_code.size(address(_27817))
            staticcall address(_27817).amountMaximusToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args (30 * 70 * _25278 / 100 / 100)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _30402 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _30689 = mem[_30402]
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 2:
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31682 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_31682] == mem[_31682 + 12 len 20]
                if not mem[_31682 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _25278 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25278 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33320 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33525 = mem[_33320 + 32]
                    mem[mem[64] + 36] = _30689
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30689
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34026 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33525 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34026 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34026 + 32] + _33525 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34026 + 32] + _33525 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33210 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _33426 = mem[_33210]
                if mem[_33210] + _30689 < _30689:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _25278 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25278 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34412 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _34578 = mem[_34412 + 32]
                mem[mem[64] + 36] = _33426 + _30689
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _33426 + _30689
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34956 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _34578 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34956 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34956 + 32] + _34578 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_34956 + 32] + _34578 + _23658 + s
                continue 
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) != 3:
                mem[mem[64] + 36] = 70 * _25278 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25278 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32482 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _32728 = mem[_32482 + 32]
                mem[mem[64] + 36] = _30689
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30689
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33321 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _32728 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33321 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33321 + 32] + _32728 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_33321 + 32] + _32728 + _23658 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).maximusChef() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _31952 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_31952] == mem[_31952 + 12 len 20]
            if not mem[_31952 + 12 len 20]:
                mem[mem[64] + 36] = 70 * _25278 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25278 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33528 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _33731 = mem[_33528 + 32]
                mem[mem[64] + 36] = _30689
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30689
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34223 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _33731 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34223 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34223 + 32] + _33731 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_34223 + 32] + _33731 + _23658 + s
                continue 
            mem[mem[64] + 4] = address(_23598)
            mem[mem[64] + 36] = address(cd[4])
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(_23598), address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _33427 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _33632 = mem[_33427]
            if mem[_33427] + _30689 < _30689:
                revert with 0, 'SafeMath: addition overflow'
            mem[mem[64] + 36] = 70 * _25278 / 100
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _25278 / 100
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _34579 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _34733 = mem[_34579 + 32]
            mem[mem[64] + 36] = _33632 + _30689
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _33632 + _30689
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _35094 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if _34733 + _23658 < _23658:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_35094 + 32] < 0:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_35094 + 32] + _34733 + _23658 + s < s:
                revert with 0, 'SafeMath: addition overflow'
            idx = idx + 1
            s = mem[_35094 + 32] + _34733 + _23658 + s
            continue 
        require uint8(poolTypes[address(_23598)]) <= 7
        if uint8(poolTypes[address(_23598)]) != 4:
            mem[0] = address(_23598)
            mem[32] = 102
            if stor102[address(_23598)]:
                mem[mem[64] + 36] = _23940
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23940
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24571 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _24659 = mem[_24571 + 32]
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _24907 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _24659 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_24907 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_24907 + 32] + _24659 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_24907 + 32] + _24659 + _23658 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).minter() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _24489 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_24489] == mem[_24489 + 12 len 20]
            if not mem[_24489 + 12 len 20]:
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25089 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_25089] == mem[_25089 + 12 len 20]
                    if not mem[_25089 + 12 len 20]:
                        mem[mem[64] + 36] = _23940
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23940
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25995 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _26161 = mem[_25995 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26612 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _26161 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26612 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_26612 + 32] + _26161 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_26612 + 32] + _26161 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25921 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _26084 = mem[_25921]
                    if mem[_25921] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _23940
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23940
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27014 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _27232 = mem[_27014 + 32]
                    mem[mem[64] + 36] = _26084
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26084
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27810 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _27232 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27810 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_27810 + 32] + _27232 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_27810 + 32] + _27232 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = _23940
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23940
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25467 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _25609 = mem[_25467 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25996 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _25609 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_25996 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_25996 + 32] + _25609 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_25996 + 32] + _25609 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25214 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_25214] == mem[_25214 + 12 len 20]
                if not mem[_25214 + 12 len 20]:
                    mem[mem[64] + 36] = _23940
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23940
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26164 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _26340 = mem[_26164 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _26813 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _26340 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_26813 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_26813 + 32] + _26340 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_26813 + 32] + _26340 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26085 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26255 = mem[_26085]
                if mem[_26085] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = _23940
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _23940
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27233 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _27460 = mem[_27233 + 32]
                mem[mem[64] + 36] = _26255
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _26255
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28072 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _27460 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_28072 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_28072 + 32] + _27460 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_28072 + 32] + _27460 + _23658 + s
                continue 
            if not _23940:
                _25092 = mem[64]
                mem[64] = mem[64] + 64
                mem[_25092] = 26
                mem[_25092 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25543 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25687 = mem[_25543]
                require mem[_25543] == mem[_25543 + 12 len 20]
                _26431 = mem[64]
                mem[64] = mem[64] + 64
                mem[_26431] = 26
                mem[_26431 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(address(_25687))
                staticcall address(_25687).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27350 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _27572 = mem[_27350]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28467 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28467] == mem[_28467 + 12 len 20]
                    if not mem[_28467 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30250 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30534 = mem[_30250 + 32]
                        mem[mem[64] + 36] = _27572
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27572
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31236 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30534 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31236 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31236 + 32] + _30534 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31236 + 32] + _30534 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30110 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30395 = mem[_30110]
                    if mem[_30110] + _27572 < _27572:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31804 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32074 = mem[_31804 + 32]
                    mem[mem[64] + 36] = _30395 + _27572
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30395 + _27572
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32719 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32074 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32719 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32719 + 32] + _32074 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32719 + 32] + _32074 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29262 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29536 = mem[_29262 + 32]
                    mem[mem[64] + 36] = _27572
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27572
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30251 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29536 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30251 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30251 + 32] + _29536 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30251 + 32] + _29536 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28729 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_28729] == mem[_28729 + 12 len 20]
                if not mem[_28729 + 12 len 20]:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30537 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _30821 = mem[_30537 + 32]
                    mem[mem[64] + 36] = _27572
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27572
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31529 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _30821 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31529 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31529 + 32] + _30821 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_31529 + 32] + _30821 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30396 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _30682 = mem[_30396]
                if mem[_30396] + _27572 < _27572:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32075 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _32346 = mem[_32075 + 32]
                mem[mem[64] + 36] = _30682 + _27572
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30682 + _27572
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32962 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _32346 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32962 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32962 + 32] + _32346 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_32962 + 32] + _32346 + _23658 + s
                continue 
            if 70 * _23940 / _23940 != 70:
                revert with 0, 'SafeMath: multiplication overflow'
            _25146 = mem[64]
            mem[64] = mem[64] + 64
            mem[_25146] = 26
            mem[_25146 + 32] = 'SafeMath: division by zero'
            require ext_code.size(address(_23598))
            staticcall address(_23598).minter() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _25610 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _25761 = mem[_25610]
            require mem[_25610] == mem[_25610 + 12 len 20]
            if not 70 * _23940 / 100:
                _26519 = mem[64]
                mem[64] = mem[64] + 64
                mem[_26519] = 26
                mem[_26519 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(address(_25761))
                staticcall address(_25761).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _27461 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _27691 = mem[_27461]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _28598 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_28598] == mem[_28598 + 12 len 20]
                    if not mem[_28598 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _23940 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23940 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30392 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _30677 = mem[_30392 + 32]
                        mem[mem[64] + 36] = _27691
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27691
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31384 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _30677 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31384 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_31384 + 32] + _30677 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_31384 + 32] + _30677 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30248 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _30531 = mem[_30248]
                    if mem[_30248] + _27691 < _27691:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _23940 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23940 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31938 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32205 = mem[_31938 + 32]
                    mem[mem[64] + 36] = _30531 + _27691
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30531 + _27691
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32840 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32205 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32840 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32840 + 32] + _32205 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32840 + 32] + _32205 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _23940 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23940 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29396 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _29678 = mem[_29396 + 32]
                    mem[mem[64] + 36] = _27691
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27691
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30393 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _29678 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30393 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_30393 + 32] + _29678 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_30393 + 32] + _29678 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28862 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_28862] == mem[_28862 + 12 len 20]
                if not mem[_28862 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _23940 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23940 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30680 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _30955 = mem[_30680 + 32]
                    mem[mem[64] + 36] = _27691
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27691
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31671 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _30955 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31671 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31671 + 32] + _30955 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_31671 + 32] + _30955 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30532 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _30818 = mem[_30532]
                if mem[_30532] + _27691 < _27691:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _23940 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23940 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32206 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _32471 = mem[_32206 + 32]
                mem[mem[64] + 36] = _30818 + _27691
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30818 + _27691
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33087 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _32471 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33087 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33087 + 32] + _32471 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_33087 + 32] + _32471 + _23658 + s
                continue 
            if 30 * 70 * _23940 / 100 / 70 * _23940 / 100 != 30:
                revert with 0, 'SafeMath: multiplication overflow'
            _26616 = mem[64]
            mem[64] = mem[64] + 64
            mem[_26616] = 26
            mem[_26616 + 32] = 'SafeMath: division by zero'
            mem[mem[64] + 4] = 30 * 70 * _23940 / 100 / 100
            require ext_code.size(address(_25761))
            staticcall address(_25761).amountMaximusToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args (30 * 70 * _23940 / 100 / 100)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _27571 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _27812 = mem[_27571]
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 2:
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _28724 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_28724] == mem[_28724 + 12 len 20]
                if not mem[_28724 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _23940 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23940 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30528 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _30813 = mem[_30528 + 32]
                    mem[mem[64] + 36] = _27812
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27812
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31520 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _30813 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31520 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_31520 + 32] + _30813 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_31520 + 32] + _30813 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30390 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _30674 = mem[_30390]
                if mem[_30390] + _27812 < _27812:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _23940 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23940 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32067 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _32338 = mem[_32067 + 32]
                mem[mem[64] + 36] = _30674 + _27812
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30674 + _27812
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32956 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _32338 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32956 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32956 + 32] + _32338 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_32956 + 32] + _32338 + _23658 + s
                continue 
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) != 3:
                mem[mem[64] + 36] = 70 * _23940 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23940 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29533 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _29824 = mem[_29533 + 32]
                mem[mem[64] + 36] = _27812
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27812
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30529 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _29824 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_30529 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_30529 + 32] + _29824 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_30529 + 32] + _29824 + _23658 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).maximusChef() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _28993 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_28993] == mem[_28993 + 12 len 20]
            if not mem[_28993 + 12 len 20]:
                mem[mem[64] + 36] = 70 * _23940 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23940 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30816 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _31095 = mem[_30816 + 32]
                mem[mem[64] + 36] = _27812
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _27812
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31801 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _31095 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_31801 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_31801 + 32] + _31095 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_31801 + 32] + _31095 + _23658 + s
                continue 
            mem[mem[64] + 4] = address(_23598)
            mem[mem[64] + 36] = address(cd[4])
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(_23598), address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _30675 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _30952 = mem[_30675]
            if mem[_30675] + _27812 < _27812:
                revert with 0, 'SafeMath: addition overflow'
            mem[mem[64] + 36] = 70 * _23940 / 100
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _23940 / 100
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _32339 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _32595 = mem[_32339 + 32]
            mem[mem[64] + 36] = _30952 + _27812
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _30952 + _27812
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _33200 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if _32595 + _23658 < _23658:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_33200 + 32] < 0:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_33200 + 32] + _32595 + _23658 + s < s:
                revert with 0, 'SafeMath: addition overflow'
            idx = idx + 1
            s = mem[_33200 + 32] + _32595 + _23658 + s
            continue 
        require ext_code.size(address(_23598))
        staticcall address(_23598).rewardsToken() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _24411 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_24411] == mem[_24411 + 12 len 20]
        require ext_code.size(mem[_24411 + 12 len 20])
        staticcall mem[_24411 + 12 len 20].priceShare() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _24755 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _24859 = mem[_24755]
        mem[mem[64] + 4] = address(cd[4])
        require ext_code.size(address(_23598))
        staticcall address(_23598).earned(address rg1) with:
                gas gas_remaining wei
               args address(cd[4])
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _25148 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _25277 = mem[_25148]
        if not mem[_25148]:
            _25688 = mem[64]
            mem[64] = mem[64] + 64
            mem[_25688] = 26
            mem[_25688 + 32] = 'SafeMath: division by zero'
            require ext_code.size(address(_23598))
            staticcall address(_23598).rewardsToken() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _26256 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_26256] == mem[_26256 + 12 len 20]
            require ext_code.size(mem[_26256 + 12 len 20])
            staticcall mem[_26256 + 12 len 20].stakingToken() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _27019 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_27019] == mem[_27019 + 12 len 20]
            mem[mem[64] + 4] = mem[_27019 + 12 len 20]
            mem[mem[64] + 36] = 0
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], 0
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _28212 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _28470 = mem[_28212]
            mem[0] = address(_23598)
            mem[32] = 102
            if stor102[address(_23598)]:
                mem[mem[64] + 36] = _28470
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _28470
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _29537 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _29830 = mem[_29537 + 32]
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _30538 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _29830 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_30538 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_30538 + 32] + _29830 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_30538 + 32] + _29830 + _23658 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).minter() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _29264 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_29264] == mem[_29264 + 12 len 20]
            if not mem[_29264 + 12 len 20]:
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30962 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_30962] == mem[_30962 + 12 len 20]
                    if not mem[_30962 + 12 len 20]:
                        mem[mem[64] + 36] = _28470
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _28470
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32723 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _32966 = mem[_32723 + 32]
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33518 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _32966 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33518 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_33518 + 32] + _32966 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_33518 + 32] + _32966 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32605 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _32847 = mem[_32605]
                    if mem[_32605] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = _28470
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _28470
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33923 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _34120 = mem[_33923 + 32]
                    mem[mem[64] + 36] = _32847
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32847
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34573 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _34120 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34573 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_34573 + 32] + _34120 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_34573 + 32] + _34120 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = _28470
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _28470
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31811 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _32080 = mem[_31811 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32724 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _32080 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32724 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_32724 + 32] + _32080 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_32724 + 32] + _32080 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31245 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_31245] == mem[_31245 + 12 len 20]
                if not mem[_31245 + 12 len 20]:
                    mem[mem[64] + 36] = _28470
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _28470
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32969 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33209 = mem[_32969 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33727 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33209 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33727 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33727 + 32] + _33209 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_33727 + 32] + _33209 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32848 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _33096 = mem[_32848]
                if mem[_32848] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = _28470
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _28470
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34121 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _34318 = mem[_34121 + 32]
                mem[mem[64] + 36] = _33096
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _33096
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34728 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _34318 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34728 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34728 + 32] + _34318 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_34728 + 32] + _34318 + _23658 + s
                continue 
            if not _28470:
                _30965 = mem[64]
                mem[64] = mem[64] + 64
                mem[_30965] = 26
                mem[_30965 + 32] = 'SafeMath: division by zero'
                require ext_code.size(address(_23598))
                staticcall address(_23598).minter() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31948 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _32218 = mem[_31948]
                require mem[_31948] == mem[_31948 + 12 len 20]
                _33319 = mem[64]
                mem[64] = mem[64] + 64
                mem[_33319] = 26
                mem[_33319 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(address(_32218))
                staticcall address(_32218).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34219 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _34411 = mem[_34219]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _34953 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_34953] == mem[_34953 + 12 len 20]
                    if not mem[_34953 + 12 len 20]:
                        mem[mem[64] + 36] = 0
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _35695 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _35778 = mem[_35695 + 32]
                        mem[mem[64] + 36] = _34411
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34411
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _35950 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _35778 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35950 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35950 + 32] + _35778 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_35950 + 32] + _35778 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35650 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _35738 = mem[_35650]
                    if mem[_35650] + _34411 < _34411:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36074 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _36127 = mem[_36074 + 32]
                    mem[mem[64] + 36] = _35738 + _34411
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _35738 + _34411
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36230 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _36127 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_36230 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_36230 + 32] + _36127 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_36230 + 32] + _36127 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35341 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _35445 = mem[_35341 + 32]
                    mem[mem[64] + 36] = _34411
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34411
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35696 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _35445 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35696 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35696 + 32] + _35445 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_35696 + 32] + _35445 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35091 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_35091] == mem[_35091 + 12 len 20]
                if not mem[_35091 + 12 len 20]:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35781 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _35858 = mem[_35781 + 32]
                    mem[mem[64] + 36] = _34411
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34411
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36015 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _35858 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_36015 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_36015 + 32] + _35858 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_36015 + 32] + _35858 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35739 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _35821 = mem[_35739]
                if mem[_35739] + _34411 < _34411:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _36128 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _36175 = mem[_36128 + 32]
                mem[mem[64] + 36] = _35821 + _34411
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _35821 + _34411
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _36257 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _36175 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_36257 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_36257 + 32] + _36175 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_36257 + 32] + _36175 + _23658 + s
                continue 
            if 70 * _28470 / _28470 != 70:
                revert with 0, 'SafeMath: multiplication overflow'
            _31105 = mem[64]
            mem[64] = mem[64] + 64
            mem[_31105] = 26
            mem[_31105 + 32] = 'SafeMath: division by zero'
            require ext_code.size(address(_23598))
            staticcall address(_23598).minter() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _32081 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _32353 = mem[_32081]
            require mem[_32081] == mem[_32081 + 12 len 20]
            if not 70 * _28470 / 100:
                _33425 = mem[64]
                mem[64] = mem[64] + 64
                mem[_33425] = 26
                mem[_33425 + 32] = 'SafeMath: division by zero'
                mem[mem[64] + 4] = 0
                require ext_code.size(address(_32353))
                staticcall address(_32353).amountMaximusToMint(uint256 rg1) with:
                        gas gas_remaining wei
                       args 0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34319 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _34497 = mem[_34319]
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) == 2:
                    require ext_code.size(address(_23598))
                    staticcall address(_23598).maximusChef() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35022 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_35022] == mem[_35022 + 12 len 20]
                    if not mem[_35022 + 12 len 20]:
                        mem[mem[64] + 36] = 70 * _28470 / 100
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28470 / 100
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _35735 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _35816 = mem[_35735 + 32]
                        mem[mem[64] + 36] = _34497
                        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                                gas gas_remaining wei
                               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34497
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _35979 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        if _35816 + _23658 < _23658:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35979 + 32] < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        if mem[_35979 + 32] + _35816 + _23658 + s < s:
                            revert with 0, 'SafeMath: addition overflow'
                        idx = idx + 1
                        s = mem[_35979 + 32] + _35816 + _23658 + s
                        continue 
                    mem[mem[64] + 4] = address(_23598)
                    mem[mem[64] + 36] = address(cd[4])
                    require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                    staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                            gas gas_remaining wei
                           args address(_23598), address(cd[4])
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35693 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _35775 = mem[_35693]
                    if mem[_35693] + _34497 < _34497:
                        revert with 0, 'SafeMath: addition overflow'
                    mem[mem[64] + 36] = 70 * _28470 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28470 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36099 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _36147 = mem[_36099 + 32]
                    mem[mem[64] + 36] = _35775 + _34497
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _35775 + _34497
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36241 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _36147 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_36241 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_36241 + 32] + _36147 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_36241 + 32] + _36147 + _23658 + s
                    continue 
                mem[0] = address(_23598)
                mem[32] = 101
                require uint8(poolTypes[address(_23598)]) <= 7
                if uint8(poolTypes[address(_23598)]) != 3:
                    mem[mem[64] + 36] = 70 * _28470 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28470 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35392 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _35495 = mem[_35392 + 32]
                    mem[mem[64] + 36] = _34497
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34497
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35736 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _35495 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35736 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35736 + 32] + _35495 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_35736 + 32] + _35495 + _23658 + s
                    continue 
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35159 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_35159] == mem[_35159 + 12 len 20]
                if not mem[_35159 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _28470 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28470 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35819 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _35889 = mem[_35819 + 32]
                    mem[mem[64] + 36] = _34497
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34497
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36046 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _35889 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_36046 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_36046 + 32] + _35889 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_36046 + 32] + _35889 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35776 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _35855 = mem[_35776]
                if mem[_35776] + _34497 < _34497:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _28470 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28470 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _36148 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _36194 = mem[_36148 + 32]
                mem[mem[64] + 36] = _35855 + _34497
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _35855 + _34497
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _36269 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _36194 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_36269 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_36269 + 32] + _36194 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_36269 + 32] + _36194 + _23658 + s
                continue 
            if 30 * 70 * _28470 / 100 / 70 * _28470 / 100 != 30:
                revert with 0, 'SafeMath: multiplication overflow'
            _33522 = mem[64]
            mem[64] = mem[64] + 64
            mem[_33522] = 26
            mem[_33522 + 32] = 'SafeMath: division by zero'
            mem[mem[64] + 4] = 30 * 70 * _28470 / 100 / 100
            require ext_code.size(address(_32353))
            staticcall address(_32353).amountMaximusToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args (30 * 70 * _28470 / 100 / 100)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _34410 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _34575 = mem[_34410]
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 2:
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35086 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_35086] == mem[_35086 + 12 len 20]
                if not mem[_35086 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _28470 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28470 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35772 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _35850 = mem[_35772 + 32]
                    mem[mem[64] + 36] = _34575
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34575
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36006 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _35850 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_36006 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_36006 + 32] + _35850 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_36006 + 32] + _35850 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35733 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _35813 = mem[_35733]
                if mem[_35733] + _34575 < _34575:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _28470 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28470 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _36120 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _36167 = mem[_36120 + 32]
                mem[mem[64] + 36] = _35813 + _34575
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _35813 + _34575
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _36251 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _36167 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_36251 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_36251 + 32] + _36167 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_36251 + 32] + _36167 + _23658 + s
                continue 
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) != 3:
                mem[mem[64] + 36] = 70 * _28470 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28470 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35442 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _35548 = mem[_35442 + 32]
                mem[mem[64] + 36] = _34575
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34575
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35773 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _35548 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35773 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35773 + 32] + _35548 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_35773 + 32] + _35548 + _23658 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).maximusChef() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _35221 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_35221] == mem[_35221 + 12 len 20]
            if not mem[_35221 + 12 len 20]:
                mem[mem[64] + 36] = 70 * _28470 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28470 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35853 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _35917 = mem[_35853 + 32]
                mem[mem[64] + 36] = _34575
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34575
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _36071 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _35917 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_36071 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_36071 + 32] + _35917 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_36071 + 32] + _35917 + _23658 + s
                continue 
            mem[mem[64] + 4] = address(_23598)
            mem[mem[64] + 36] = address(cd[4])
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(_23598), address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _35814 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _35886 = mem[_35814]
            if mem[_35814] + _34575 < _34575:
                revert with 0, 'SafeMath: addition overflow'
            mem[mem[64] + 36] = 70 * _28470 / 100
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28470 / 100
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _36168 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _36211 = mem[_36168 + 32]
            mem[mem[64] + 36] = _35886 + _34575
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _35886 + _34575
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _36281 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if _36211 + _23658 < _23658:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_36281 + 32] < 0:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_36281 + 32] + _36211 + _23658 + s < s:
                revert with 0, 'SafeMath: addition overflow'
            idx = idx + 1
            s = mem[_36281 + 32] + _36211 + _23658 + s
            continue 
        if _24859 * mem[_25148] / mem[_25148] != _24859:
            revert with 0, 'SafeMath: multiplication overflow'
        _25762 = mem[64]
        mem[64] = mem[64] + 64
        mem[_25762] = 26
        mem[_25762 + 32] = 'SafeMath: division by zero'
        require ext_code.size(address(_23598))
        staticcall address(_23598).rewardsToken() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _26341 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_26341] == mem[_26341 + 12 len 20]
        require ext_code.size(mem[_26341 + 12 len 20])
        staticcall mem[_26341 + 12 len 20].stakingToken() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _27125 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_27125] == mem[_27125 + 12 len 20]
        mem[mem[64] + 4] = mem[_27125 + 12 len 20]
        mem[mem[64] + 36] = _24859 * _25277 / 10^18
        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                gas gas_remaining wei
               args mem[mem[64] + 4], _24859 * _25277 / 10^18
        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _28337 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 64
        _28601 = mem[_28337]
        mem[0] = address(_23598)
        mem[32] = 102
        if stor102[address(_23598)]:
            mem[mem[64] + 36] = _28601
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _28601
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _29681 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _29975 = mem[_29681 + 32]
            mem[mem[64] + 36] = 0
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _30683 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if _29975 + _23658 < _23658:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_30683 + 32] < 0:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_30683 + 32] + _29975 + _23658 + s < s:
                revert with 0, 'SafeMath: addition overflow'
            idx = idx + 1
            s = mem[_30683 + 32] + _29975 + _23658 + s
            continue 
        require ext_code.size(address(_23598))
        staticcall address(_23598).minter() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _29398 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_29398] == mem[_29398 + 12 len 20]
        if not mem[_29398 + 12 len 20]:
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 2:
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31101 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_31101] == mem[_31101 + 12 len 20]
                if not mem[_31101 + 12 len 20]:
                    mem[mem[64] + 36] = _28601
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _28601
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32844 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _33091 = mem[_32844 + 32]
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33623 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _33091 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33623 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_33623 + 32] + _33091 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_33623 + 32] + _33091 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32721 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _32963 = mem[_32721]
                if mem[_32721] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = _28601
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _28601
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34017 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _34211 = mem[_34017 + 32]
                mem[mem[64] + 36] = _32963
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _32963
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _34646 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _34211 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34646 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_34646 + 32] + _34211 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_34646 + 32] + _34211 + _23658 + s
                continue 
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) != 3:
                mem[mem[64] + 36] = _28601
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _28601
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _31944 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _32213 = mem[_31944 + 32]
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _32845 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _32213 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32845 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_32845 + 32] + _32213 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_32845 + 32] + _32213 + _23658 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).maximusChef() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _31393 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_31393] == mem[_31393 + 12 len 20]
            if not mem[_31393 + 12 len 20]:
                mem[mem[64] + 36] = _28601
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _28601
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33094 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _33314 = mem[_33094 + 32]
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _33830 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _33314 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33830 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_33830 + 32] + _33314 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_33830 + 32] + _33314 + _23658 + s
                continue 
            mem[mem[64] + 4] = address(_23598)
            mem[mem[64] + 36] = address(cd[4])
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(_23598), address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _32964 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _33206 = mem[_32964]
            if mem[_32964] < 0:
                revert with 0, 'SafeMath: addition overflow'
            mem[mem[64] + 36] = _28601
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, _28601
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _34212 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _34405 = mem[_34212 + 32]
            mem[mem[64] + 36] = _33206
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _33206
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _34800 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if _34405 + _23658 < _23658:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_34800 + 32] < 0:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_34800 + 32] + _34405 + _23658 + s < s:
                revert with 0, 'SafeMath: addition overflow'
            idx = idx + 1
            s = mem[_34800 + 32] + _34405 + _23658 + s
            continue 
        if not _28601:
            _31104 = mem[64]
            mem[64] = mem[64] + 64
            mem[_31104] = 26
            mem[_31104 + 32] = 'SafeMath: division by zero'
            require ext_code.size(address(_23598))
            staticcall address(_23598).minter() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _32077 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _32350 = mem[_32077]
            require mem[_32077] == mem[_32077 + 12 len 20]
            _33422 = mem[64]
            mem[64] = mem[64] + 64
            mem[_33422] = 26
            mem[_33422 + 32] = 'SafeMath: division by zero'
            mem[mem[64] + 4] = 0
            require ext_code.size(address(_32350))
            staticcall address(_32350).amountMaximusToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args 0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _34315 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _34494 = mem[_34315]
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 2:
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35019 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_35019] == mem[_35019 + 12 len 20]
                if not mem[_35019 + 12 len 20]:
                    mem[mem[64] + 36] = 0
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35730 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _35809 = mem[_35730 + 32]
                    mem[mem[64] + 36] = _34494
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34494
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35973 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _35809 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35973 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_35973 + 32] + _35809 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_35973 + 32] + _35809 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35688 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _35770 = mem[_35688]
                if mem[_35688] + _34494 < _34494:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _36094 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _36142 = mem[_36094 + 32]
                mem[mem[64] + 36] = _35770 + _34494
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _35770 + _34494
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _36237 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _36142 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_36237 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_36237 + 32] + _36142 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_36237 + 32] + _36142 + _23658 + s
                continue 
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) != 3:
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35389 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _35490 = mem[_35389 + 32]
                mem[mem[64] + 36] = _34494
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34494
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35731 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _35490 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35731 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35731 + 32] + _35490 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_35731 + 32] + _35490 + _23658 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).maximusChef() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _35155 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_35155] == mem[_35155 + 12 len 20]
            if not mem[_35155 + 12 len 20]:
                mem[mem[64] + 36] = 0
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35812 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _35884 = mem[_35812 + 32]
                mem[mem[64] + 36] = _34494
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34494
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _36039 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _35884 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_36039 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_36039 + 32] + _35884 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_36039 + 32] + _35884 + _23658 + s
                continue 
            mem[mem[64] + 4] = address(_23598)
            mem[mem[64] + 36] = address(cd[4])
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(_23598), address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _35771 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _35848 = mem[_35771]
            if mem[_35771] + _34494 < _34494:
                revert with 0, 'SafeMath: addition overflow'
            mem[mem[64] + 36] = 0
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 0
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _36143 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _36187 = mem[_36143 + 32]
            mem[mem[64] + 36] = _35848 + _34494
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _35848 + _34494
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _36264 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if _36187 + _23658 < _23658:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_36264 + 32] < 0:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_36264 + 32] + _36187 + _23658 + s < s:
                revert with 0, 'SafeMath: addition overflow'
            idx = idx + 1
            s = mem[_36264 + 32] + _36187 + _23658 + s
            continue 
        if 70 * _28601 / _28601 != 70:
            revert with 0, 'SafeMath: multiplication overflow'
        _31240 = mem[64]
        mem[64] = mem[64] + 64
        mem[_31240] = 26
        mem[_31240 + 32] = 'SafeMath: division by zero'
        require ext_code.size(address(_23598))
        staticcall address(_23598).minter() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _32214 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _32477 = mem[_32214]
        require mem[_32214] == mem[_32214 + 12 len 20]
        if not 70 * _28601 / 100:
            _33517 = mem[64]
            mem[64] = mem[64] + 64
            mem[_33517] = 26
            mem[_33517 + 32] = 'SafeMath: division by zero'
            mem[mem[64] + 4] = 0
            require ext_code.size(address(_32477))
            staticcall address(_32477).amountMaximusToMint(uint256 rg1) with:
                    gas gas_remaining wei
                   args 0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _34406 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _34572 = mem[_34406]
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) == 2:
                require ext_code.size(address(_23598))
                staticcall address(_23598).maximusChef() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35081 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_35081] == mem[_35081 + 12 len 20]
                if not mem[_35081 + 12 len 20]:
                    mem[mem[64] + 36] = 70 * _28601 / 100
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28601 / 100
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _35767 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _35843 = mem[_35767 + 32]
                    mem[mem[64] + 36] = _34572
                    require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                    staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                            gas gas_remaining wei
                           args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34572
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36000 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    if _35843 + _23658 < _23658:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_36000 + 32] < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    if mem[_36000 + 32] + _35843 + _23658 + s < s:
                        revert with 0, 'SafeMath: addition overflow'
                    idx = idx + 1
                    s = mem[_36000 + 32] + _35843 + _23658 + s
                    continue 
                mem[mem[64] + 4] = address(_23598)
                mem[mem[64] + 36] = address(cd[4])
                require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
                staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                        gas gas_remaining wei
                       args address(_23598), address(cd[4])
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35728 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _35806 = mem[_35728]
                if mem[_35728] + _34572 < _34572:
                    revert with 0, 'SafeMath: addition overflow'
                mem[mem[64] + 36] = 70 * _28601 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28601 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _36114 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _36160 = mem[_36114 + 32]
                mem[mem[64] + 36] = _35806 + _34572
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _35806 + _34572
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _36247 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _36160 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_36247 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_36247 + 32] + _36160 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_36247 + 32] + _36160 + _23658 + s
                continue 
            mem[0] = address(_23598)
            mem[32] = 101
            require uint8(poolTypes[address(_23598)]) <= 7
            if uint8(poolTypes[address(_23598)]) != 3:
                mem[mem[64] + 36] = 70 * _28601 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28601 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35441 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _35543 = mem[_35441 + 32]
                mem[mem[64] + 36] = _34572
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34572
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35768 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _35543 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35768 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_35768 + 32] + _35543 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_35768 + 32] + _35543 + _23658 + s
                continue 
            require ext_code.size(address(_23598))
            staticcall address(_23598).maximusChef() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _35217 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_35217] == mem[_35217 + 12 len 20]
            if not mem[_35217 + 12 len 20]:
                mem[mem[64] + 36] = 70 * _28601 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28601 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35846 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _35911 = mem[_35846 + 32]
                mem[mem[64] + 36] = _34572
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34572
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _36065 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _35911 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_36065 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_36065 + 32] + _35911 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_36065 + 32] + _35911 + _23658 + s
                continue 
            mem[mem[64] + 4] = address(_23598)
            mem[mem[64] + 36] = address(cd[4])
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(_23598), address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _35807 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _35881 = mem[_35807]
            if mem[_35807] + _34572 < _34572:
                revert with 0, 'SafeMath: addition overflow'
            mem[mem[64] + 36] = 70 * _28601 / 100
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28601 / 100
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _36161 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _36205 = mem[_36161 + 32]
            mem[mem[64] + 36] = _35881 + _34572
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _35881 + _34572
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _36276 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if _36205 + _23658 < _23658:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_36276 + 32] < 0:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_36276 + 32] + _36205 + _23658 + s < s:
                revert with 0, 'SafeMath: addition overflow'
            idx = idx + 1
            s = mem[_36276 + 32] + _36205 + _23658 + s
            continue 
        if 30 * 70 * _28601 / 100 / 70 * _28601 / 100 != 30:
            revert with 0, 'SafeMath: multiplication overflow'
        _33627 = mem[64]
        mem[64] = mem[64] + 64
        mem[_33627] = 26
        mem[_33627 + 32] = 'SafeMath: division by zero'
        mem[mem[64] + 4] = 30 * 70 * _28601 / 100 / 100
        require ext_code.size(address(_32477))
        staticcall address(_32477).amountMaximusToMint(uint256 rg1) with:
                gas gas_remaining wei
               args (30 * 70 * _28601 / 100 / 100)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _34493 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _34648 = mem[_34493]
        mem[0] = address(_23598)
        mem[32] = 101
        require uint8(poolTypes[address(_23598)]) <= 7
        if uint8(poolTypes[address(_23598)]) == 2:
            require ext_code.size(address(_23598))
            staticcall address(_23598).maximusChef() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _35150 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_35150] == mem[_35150 + 12 len 20]
            if not mem[_35150 + 12 len 20]:
                mem[mem[64] + 36] = 70 * _28601 / 100
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28601 / 100
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _35803 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _35876 = mem[_35803 + 32]
                mem[mem[64] + 36] = _34648
                require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
                staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                        gas gas_remaining wei
                       args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34648
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _36030 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if _35876 + _23658 < _23658:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_36030 + 32] < 0:
                    revert with 0, 'SafeMath: addition overflow'
                if mem[_36030 + 32] + _35876 + _23658 + s < s:
                    revert with 0, 'SafeMath: addition overflow'
                idx = idx + 1
                s = mem[_36030 + 32] + _35876 + _23658 + s
                continue 
            mem[mem[64] + 4] = address(_23598)
            mem[mem[64] + 36] = address(cd[4])
            require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
            staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                    gas gas_remaining wei
                   args address(_23598), address(cd[4])
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _35765 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _35840 = mem[_35765]
            if mem[_35765] + _34648 < _34648:
                revert with 0, 'SafeMath: addition overflow'
            mem[mem[64] + 36] = 70 * _28601 / 100
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28601 / 100
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _36135 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _36179 = mem[_36135 + 32]
            mem[mem[64] + 36] = _35840 + _34648
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _35840 + _34648
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _36258 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if _36179 + _23658 < _23658:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_36258 + 32] < 0:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_36258 + 32] + _36179 + _23658 + s < s:
                revert with 0, 'SafeMath: addition overflow'
            idx = idx + 1
            s = mem[_36258 + 32] + _36179 + _23658 + s
            continue 
        mem[0] = address(_23598)
        mem[32] = 101
        require uint8(poolTypes[address(_23598)]) <= 7
        if uint8(poolTypes[address(_23598)]) != 3:
            mem[mem[64] + 36] = 70 * _28601 / 100
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28601 / 100
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _35487 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _35591 = mem[_35487 + 32]
            mem[mem[64] + 36] = _34648
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34648
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _35804 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if _35591 + _23658 < _23658:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_35804 + 32] < 0:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_35804 + 32] + _35591 + _23658 + s < s:
                revert with 0, 'SafeMath: addition overflow'
            idx = idx + 1
            s = mem[_35804 + 32] + _35591 + _23658 + s
            continue 
        require ext_code.size(address(_23598))
        staticcall address(_23598).maximusChef() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _35278 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_35278] == mem[_35278 + 12 len 20]
        if not mem[_35278 + 12 len 20]:
            mem[mem[64] + 36] = 70 * _28601 / 100
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28601 / 100
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _35879 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _35939 = mem[_35879 + 32]
            mem[mem[64] + 36] = _34648
            require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
            staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                    gas gas_remaining wei
                   args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _34648
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _36091 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if _35939 + _23658 < _23658:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_36091 + 32] < 0:
                revert with 0, 'SafeMath: addition overflow'
            if mem[_36091 + 32] + _35939 + _23658 + s < s:
                revert with 0, 'SafeMath: addition overflow'
            idx = idx + 1
            s = mem[_36091 + 32] + _35939 + _23658 + s
            continue 
        mem[mem[64] + 4] = address(_23598)
        mem[mem[64] + 36] = address(cd[4])
        require ext_code.size(0x15a2f2b16bc028338b166a698d7e15e2613d5906)
        staticcall 0x15a2f2b16bc028338b166a698d7e15e2613d5906.0x4fabe169 with:
                gas gas_remaining wei
               args address(_23598), address(cd[4])
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _35841 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _35908 = mem[_35841]
        if mem[_35841] + _34648 < _34648:
            revert with 0, 'SafeMath: addition overflow'
        mem[mem[64] + 36] = 70 * _28601 / 100
        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                gas gas_remaining wei
               args 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7, 70 * _28601 / 100
        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _36180 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 64
        _36219 = mem[_36180 + 32]
        mem[mem[64] + 36] = _35908 + _34648
        require ext_code.size(0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e)
        staticcall 0x3a78d8b375e5df255eb27abceecf42ebfe6bc73e.valueOfAsset(address rg1, uint256 rg2) with:
                gas gas_remaining wei
               args 0x964ddc3f274e425c6f257c046161f956d8fa2652, _35908 + _34648
        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _36288 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 64
        if _36219 + _23658 < _23658:
            revert with 0, 'SafeMath: addition overflow'
        if mem[_36288 + 32] < 0:
            revert with 0, 'SafeMath: addition overflow'
        if mem[_36288 + 32] + _36219 + _23658 + s < s:
            revert with 0, 'SafeMath: addition overflow'
        idx = idx + 1
        s = mem[_36288 + 32] + _36219 + _23658 + s
        continue 
    return s
}



}
